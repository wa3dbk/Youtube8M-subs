WEBVTT
Kind: captions
Language: en

00:00:03.380 --> 00:00:06.330
okay this is the first test

00:00:06.330 --> 00:00:08.439
of open orienteering control

00:00:08.439 --> 00:00:12.209
what you see is 4 controls

00:00:12.209 --> 00:00:14.089
the LED blinking

00:00:14.089 --> 00:00:15.220
it means that

00:00:15.220 --> 00:00:19.219
they are working LED blinks every 16
seconds

00:00:19.219 --> 00:00:21.029
if you can see

00:00:21.029 --> 00:00:22.419
they're all blinking

00:00:22.419 --> 00:00:24.999
at different times

00:00:24.999 --> 00:00:28.249
to a synchronized them all I use a 

00:00:28.249 --> 00:00:29.699
iButton

00:00:29.699 --> 00:00:30.909
1904 

00:00:30.909 --> 00:00:33.430
which is a time button

00:00:33.430 --> 00:00:37.070
I will synchronize it on my computer. 

00:00:37.070 --> 00:00:38.989
I'm using standard oneViewer

00:00:38.989 --> 00:00:41.460
from Maxim for

00:00:41.460 --> 00:00:43.810
just for the iButtons

00:00:43.810 --> 00:00:46.980
This is a reader. I made it myself

00:00:46.980 --> 00:00:50.990
There are a lot of schematics on the Net

00:00:50.990 --> 00:00:53.360
If I put

00:00:53.360 --> 00:00:56.120
the chip in the reader

00:00:56.120 --> 00:00:59.250
It'll show on the list

00:00:59.250 --> 00:01:02.700
Just a sec

00:01:02.700 --> 00:01:04.440
you can see that there is 

00:01:04.440 --> 00:01:07.170
Another

00:01:07.170 --> 00:01:10.130
a new line

00:01:10.130 --> 00:01:17.130
I will synchronize the clock with my PC
 so the clock

00:01:17.280 --> 00:01:22.200
in the chip is at current time

00:01:22.200 --> 00:01:24.479
And now it's synchronized

00:01:24.479 --> 00:01:27.880
Now I will use that same chip

00:01:27.880 --> 00:01:30.040
and I will synchronize

00:01:30.040 --> 00:01:34.020
the controls

00:01:34.020 --> 00:01:39.060
I put a chip at the control you can see that LED is blinking a lot

00:01:39.060 --> 00:01:41.500
that's one

00:01:41.500 --> 00:01:44.330
that's two

00:01:44.330 --> 00:01:47.900
that's three

00:01:47.900 --> 00:01:49.580
and that's four

00:01:49.580 --> 00:01:54.630
Now we have controls which are synchronized

00:01:54.630 --> 00:01:59.800
the LED blinks every sixteen seconds so
we need to wait a little

00:01:59.800 --> 00:02:01.880
okay you see they are

00:02:01.880 --> 00:02:05.350
not completely synchronized
they are 

00:02:05.350 --> 00:02:08.389
inside one second limit because

00:02:08.389 --> 00:02:12.900
the time it needs to read the chip and put it in it's memory

00:02:12.900 --> 00:02:14.060
it's not completely accurate

00:02:14.060 --> 00:02:16.879
 %uh

00:02:16.879 --> 00:02:23.879
the controls themselves are accurate for only
one second in an hour

00:02:23.999 --> 00:02:27.169
but, this is just a prototype and

00:02:27.169 --> 00:02:33.339
if you don't have money for sportIdent and
this is good enough

00:02:33.339 --> 00:02:41.400
Standard chips for reading and writing are
 DS1992 and DS1993

00:02:41.429 --> 00:02:44.970
they are 1 kilobit or 4 kilobit

00:02:44.970 --> 00:02:51.719
chips DS1992 is one kilobit
DS1993 is four kilobits

00:02:51.719 --> 00:02:56.379
The data which we store 
we store it in the chip

00:02:56.379 --> 00:02:58.469
is 4 bytes in UNIX timestamp format

00:02:58.469 --> 00:03:04.000
so we're OK till

00:03:04.109 --> 00:03:11.109
2038 when the whole
system collapses but I don't care this won't

00:03:11.590 --> 00:03:14.489
last more than 10 or 15 years so

00:03:14.489 --> 00:03:16.169
I'm good enough

00:03:16.169 --> 00:03:20.069
So, I'll take the chip and I will put it

00:03:20.069 --> 00:03:21.569
in the

00:03:21.569 --> 00:03:24.329
receiving part

00:03:24.329 --> 00:03:29.969
When I contact the groud and the main part 
which sends the data 

00:03:29.969 --> 00:03:31.400
the LED blinks

00:03:33.629 --> 00:03:37.909
It will blink until I remove it
Now I removed it

00:03:37.909 --> 00:03:41.839
it takes around 50 miliseconds to write it on the chip

00:03:42.989 --> 00:03:44.969
in reality it's just

00:03:44.969 --> 00:03:50.349
4 or 3 miliseconds but to be sure I'm trying
to read it and then again write it 

00:03:50.349 --> 00:03:51.629
till 

00:03:51.629 --> 00:03:53.639
it is safe on the chip

00:03:53.639 --> 00:03:57.949
%uh this is not the proper %uh

00:03:57.949 --> 00:04:00.369
carriage for the chip there is

00:04:00.369 --> 00:04:01.849
a nice

00:04:01.849 --> 00:04:04.129
piece of plastic

00:04:04.129 --> 00:04:10.119
but it cost something like a few dollars
and for testing I don't need

00:04:10.119 --> 00:04:14.789
I don't have too much money because the whole system is
pretty cheap

00:04:14.789 --> 00:04:18.919
 I put in the second, the the third and the end

00:04:18.919 --> 00:04:22.479
I can put it the fourth

00:04:22.479 --> 00:04:23.580
if I

00:04:23.580 --> 00:04:27.689
go back to my PC

00:04:27.689 --> 00:04:31.170
I put the chip
%uh

00:04:31.279 --> 00:04:35.129
unfortunately I have two hands,err three  hands so I will give

00:04:35.129 --> 00:04:36.969
okay I have a friend here

00:04:36.969 --> 00:04:39.610
he'll put the chip in the reader

00:04:39.610 --> 00:04:43.010
Soooooo

00:04:43.010 --> 00:04:45.690
there is a new chip

00:04:45.690 --> 00:04:47.629
and in its memory

00:04:47.629 --> 00:04:50.250
I don't know if you will see it

00:04:50.250 --> 00:04:53.459
there is a lot of FF's and that's 

00:04:53.459 --> 00:04:59.520
the clear part and the rest

00:04:59.520 --> 00:05:02.259
those numbers are

00:05:02.259 --> 00:05:03.449
the time

00:05:03.449 --> 00:05:05.669
it starts with 4B

00:05:05.669 --> 00:05:09.189
today it's

00:05:09.189 --> 00:05:10.990
20th of April

00:05:10.990 --> 00:05:13.460
2010 so

00:05:13.460 --> 00:05:16.159
I presume it's  the correct time

00:05:16.159 --> 00:05:18.550
okay

00:05:18.550 --> 00:05:19.659
%um

00:05:19.659 --> 00:05:26.659
if I... the chip is moved so 
if want to read it ...I made a software 

00:05:26.799 --> 00:05:28.710
which works with

00:05:28.710 --> 00:05:32.349
some orienteering software ... something from Ireland

00:05:32.349 --> 00:05:36.909
i'll put it on my web page so you can
see it over there

00:05:36.909 --> 00:05:38.830
the whole system

00:05:38.830 --> 00:05:43.830
I will open one box, 
OK, I'm opening a box

00:05:43.830 --> 00:05:46.729
the whole system consists off

00:05:46.729 --> 00:05:49.479
9 volt battery

00:05:49.479 --> 00:05:54.019
it's pretty standard

00:05:54.039 --> 00:05:57.430
it has one

00:05:57.430 --> 00:05:59.960
%um

00:05:59.960 --> 00:06:03.270
controller, microcontroller it's PIC

00:06:03.270 --> 00:06:06.860
16F248

00:06:06.860 --> 00:06:09.309
if I'm not mistaken

00:06:09.309 --> 00:06:14.689
%uh the schematics will be on my webpage so you don't need to worry

00:06:14.689 --> 00:06:18.240
it uses only one LED, a few capacitors

00:06:18.240 --> 00:06:20.519
resistors

00:06:20.519 --> 00:06:22.860
a crystal and that's it

00:06:22.860 --> 00:06:25.609
it's pretty much standard

00:06:25.609 --> 00:06:28.509
the connector for the chip

00:06:28.509 --> 00:06:31.429
that original  will cost something like ten
bucks

00:06:31.429 --> 00:06:34.449
I made this for five bucks

00:06:34.449 --> 00:06:38.949
it's made of a connector for a garden
hose

00:06:38.949 --> 00:06:41.639
%um
one screw

00:06:41.639 --> 00:06:43.809
and some rubber

00:06:43.809 --> 00:06:47.010
so it's pretty cheap and pretty standard

00:06:47.010 --> 00:06:48.779
the whole

00:06:48.779 --> 00:06:53.869
control costs less than ten US dollars

00:06:53.869 --> 00:06:55.449
and I think that's it

00:06:55.449 --> 00:06:59.520
for everything else there will be pictures

00:06:59.520 --> 00:07:05.109
and schematics on a web page so you can
see it for yourselves

00:07:05.109 --> 00:07:06.969
and if  you're

00:07:06.969 --> 00:07:08.639
questioning about my accent

00:07:08.639 --> 00:07:14.750
I'm croatian and I'm lousy at english 
Good bye!

