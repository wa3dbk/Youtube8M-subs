WEBVTT
Kind: captions
Language: en

00:00:00.250 --> 00:00:05.740
Hi, it's HandyAndy Tech Tips here. So Windows
10 will soon be released, and, while

00:00:05.740 --> 00:00:10.760
Microsoft's OS has always dominated the traditional
PC market, it's been less successful

00:00:10.760 --> 00:00:16.930
in the phone world. According to IDC, Windows
Phone only had 2.8% market share in

00:00:16.930 --> 00:00:25.830
the fourth quarter of 2014, which is considerably
less than iOS at 19.7% and Android at 76.6%.

00:00:26.220 --> 00:00:31.029
A major factor to blame for this lack of success
might be the indifference shown from developers

00:00:31.029 --> 00:00:35.329
towards the platform. Traditionally,
big-name app makers have released the Windows

00:00:35.329 --> 00:00:39.579
Phone versions of their software months, even
years, after the Android

00:00:39.579 --> 00:00:44.850
and iOS versions. But now that might be about
to change, with Microsoft announcing at their

00:00:44.850 --> 00:00:48.180
Build 2015 conference that they will allow
apps written for

00:00:48.180 --> 00:00:55.180
both Android and iOS to be sold in the Windows
10 Store. Let that sink in for a minute, it's

00:00:55.360 --> 00:00:56.879
a massive announcement.

00:00:56.879 --> 00:01:00.129
Now for the Android apps, here's how it will
work.

00:01:00.129 --> 00:01:04.530
Microsoft will be adding a subsystem to Windows
10 that will host software called the Android

00:01:04.530 --> 00:01:08.740
Open Source Project. This
is traditionally used to let developers create

00:01:08.740 --> 00:01:13.210
custom versions of Android, but
Microsoft will use it in Windows 10 to support

00:01:13.210 --> 00:01:18.860
Android apps written in both
Java and C++. This subsystem, called Project

00:01:18.860 --> 00:01:23.229
Astoria, will allow developers to
publish any Android-compatible app in the

00:01:23.229 --> 00:01:27.939
Windows store without any
modifications - as long as it only uses the

00:01:27.939 --> 00:01:29.540
APIs that Microsoft provides.

00:01:29.540 --> 00:01:34.270
Now, in terms of iOS apps, Microsoft will
be adding to Visual Studio the

00:01:34.270 --> 00:01:39.939
ability to compile Objective C code, and create
a native Windows 10 app.

00:01:39.939 --> 00:01:44.479
This compiler will support some of the most
common APIs that iOS apps use,

00:01:44.479 --> 00:01:48.689
and developers will only have to modify their
code slightly to make native Windows

00:01:48.689 --> 00:01:53.369
10 apps out of their existing iOS codebases.

00:01:53.369 --> 00:01:59.430
Now, as I'm sure you'll agree, these two announcements
are HUGE. I can't think of

00:01:59.430 --> 00:02:03.250
any other time in tech history where a software
company has elected to support

00:02:03.250 --> 00:02:08.009
applications written for not one but two of
its competitors. And the level of

00:02:08.009 --> 00:02:12.620
support Microsoft is providing is impressive
in itself. Adding an Objective C

00:02:12.620 --> 00:02:16.790
compiler to Visual Studio would have been
unthinkable for the company just several

00:02:16.790 --> 00:02:21.030
years ago, but now, in an attempt to boost
their market share, I suppose they have to

00:02:21.030 --> 00:02:22.830
do
what's necessary.

00:02:22.830 --> 00:02:26.640
So what do you think of running Android and
iOS apps on Windows 10? Let me know

00:02:26.640 --> 00:02:28.030
in the comments below.

00:02:28.030 --> 00:02:33.319
Please subscribe if you liked this video.
I'm HandyAndy and thanks for watching.

