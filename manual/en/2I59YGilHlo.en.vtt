WEBVTT
Kind: captions
Language: en

00:00:03.840 --> 00:00:08.720
Here, we have a fantastically drawn red rubber
ball. (You can tell, right?) Now, we want

00:00:08.720 --> 00:00:14.390
to move this ball across the screen from here
to here. But before traveling the full distance,

00:00:14.390 --> 00:00:19.860
it has to travel half way. And before traveling
those half-distances, it has to travel quarter

00:00:19.860 --> 00:00:24.930
distances in between. Notice that if we continue
this process, the motion looks smoother and

00:00:24.930 --> 00:00:29.539
smoother. The more in-between pictures we
add to the ball's motion, it looks more and

00:00:29.539 --> 00:00:35.800
more like real, well, motion!
This is animation: sequencing similar images

00:00:35.800 --> 00:00:40.840
together to create the illusion of motion.
Every video you see here on YouTube is constructed

00:00:40.840 --> 00:00:46.130
of slightly different images played in succession.
These images are called "frames". Now, how

00:00:46.130 --> 00:00:51.129
many frames do you see every second when you
watch an arbitrary YouTube video? After all,

00:00:51.129 --> 00:00:55.079
there are several different standards to choose
from. We have just seen several different

00:00:55.079 --> 00:00:58.969
versions of the same animation at different
frame rates, and we could potentially slow

00:00:58.969 --> 00:01:03.930
it down as much as we like. So, what I'm really
asking is: "What is the upper limit of the

00:01:03.930 --> 00:01:08.060
YouTube player frame rate?"
Given that I couldn't find many reliable answers

00:01:08.060 --> 00:01:13.329
on the "interwebz", I decided to experiment
myself. I created a simple video consisting

00:01:13.329 --> 00:01:17.899
of just 2 frames: one with a blue circle,
and one with a yellow circle. I then made

00:01:17.899 --> 00:01:21.649
several copies of the video while varying
the frame rate in each one.

00:01:21.649 --> 00:01:26.709
Now, how is this exactly going to help us
figure out YouTube's frame rate? Well, if

00:01:26.709 --> 00:01:32.609
we displayed the video as it truly is, we'd
see a rapid alternation between the two frames.

00:01:32.609 --> 00:01:36.479
But if there are too many frames for the YouTube
player's refresh rate, there will need to

00:01:36.479 --> 00:01:41.950
be some cuts. YouTube won't be able to display
the frames fast enough. To obtain concrete

00:01:41.950 --> 00:01:46.459
results, we should be looking for this case:
when the video's true frame rate is twice

00:01:46.459 --> 00:01:52.359
that of YouTube's. Why? Well, because we should
get a still image of course! Each YouTube

00:01:52.359 --> 00:01:57.219
frame will be determined from equivalent pairs
of actual video frames. Looking for a still

00:01:57.219 --> 00:02:01.630
image is relatively easy, so this experiment
should be a good indicator.

00:02:01.630 --> 00:02:06.130
Notice that I haven't been showing the raw
copy of the alternating circles in this video.

00:02:06.130 --> 00:02:11.150
I'm only showing the 1 fps version here, since
I do not want to cause any seizures. You can

00:02:11.150 --> 00:02:15.459
click here or the link in the description
to see the raw footage, but WATCH AT YOUR

00:02:15.459 --> 00:02:19.180
OWN RISK! I do not wish for anyone to come
to harm.

00:02:19.180 --> 00:02:23.959
Now the results weren't perfect because converting
the videos to a compatible file format and

00:02:23.959 --> 00:02:28.969
uploading them varied the exact frame rate
slightly throughout some parts of the videos.

00:02:28.969 --> 00:02:33.870
But we can say with confidence that (for the
most part) there were 3 videos that displayed

00:02:33.870 --> 00:02:38.739
a still image of a yellow circle. This means
that the YouTube player was displaying exactly

00:02:38.739 --> 00:02:43.620
half of all frames in these clip each second.
Therefore, we can conclude with reasonable

00:02:43.620 --> 00:02:50.620
confidence that as of December 2013, the YouTube
video player displays videos at 24, 25, or

00:02:51.049 --> 00:02:55.219
30 fps.
As with any experiment, the results weren't

00:02:55.219 --> 00:03:00.420
perfect, but we could infer an answer based
on the experimental outcome. Experimentation

00:03:00.420 --> 00:03:01.400
is fun!

