WEBVTT
Kind: captions
Language: en-GB

00:00:00.810 --> 00:00:06.129
Hi this is Mark Brown with Game Maker's Toolkit:
a series on video game design.

00:00:06.129 --> 00:00:13.000
This is an iPhone game called Random Heroes.
It's a run and gun platformer and it's fine.

00:00:13.000 --> 00:00:17.929
It exists. But it feels kind of limp and lifeless,
like the video game equivalent of a cabbage.

00:00:17.929 --> 00:00:20.730
It doesn't even really look much fun, right?

00:00:20.730 --> 00:00:25.329
Now compare it to a game like Super Time Force
and it's a completely different experience.

00:00:25.329 --> 00:00:29.659
It feels alive and responsive. It pops and
crackles, like electricity is surging through

00:00:29.659 --> 00:00:32.020
your Xbox. It's just much more fun.

00:00:32.020 --> 00:00:36.980
I think this is a good example of how one
developer, Capy in this instance, has maximised

00:00:36.980 --> 00:00:41.230
an elusive quantity in games that some call
"game feel".

00:00:41.230 --> 00:00:46.150
This is a mostly abstract, largely invisible
art, but getting it right is essential when

00:00:46.150 --> 00:00:50.420
making a great action or platforming game
and it's something that players can immediately

00:00:50.420 --> 00:00:54.330
detect as soon as they start waggling analogue
sticks and jabbing at buttons.

00:00:54.330 --> 00:00:59.110
It mostly occurs in the fundamental action
of the game. It governs the second to second

00:00:59.110 --> 00:01:01.940
play, and is felt in the very undercurrent
of the game.

00:01:01.940 --> 00:01:06.689
A good way to test for this is to think how
does the game feel even when you strip out

00:01:06.689 --> 00:01:11.710
the points, the story, the graphics, the music,
and the clever level design. Even without

00:01:11.710 --> 00:01:15.479
all those trapping, is your game still fun
to interact with?

00:01:15.479 --> 00:01:21.159
The Super Mario games are. In Mario 64, the
plumber is such a fun avatar to control, with

00:01:21.159 --> 00:01:25.939
his bouncy jump, his wall kicks, his triple
leaps, his long jumps, and his stomach dives,

00:01:25.939 --> 00:01:31.039
that you could lose hours just hopping around
a blank room. And it's said that for the first

00:01:31.039 --> 00:01:36.249
few months, that's exactly what Mario 64 was
like as Shigeru Miyamoto fine tuned every

00:01:36.249 --> 00:01:39.700
aspect of Mario's movement before making anything
else.

00:01:39.700 --> 00:01:43.899
The "game feel" here is about the friction
and momentum and weight of Mario, and it's

00:01:43.899 --> 00:01:48.729
the most important thing. In fact, the level
design and enemies in Mario 64 exist simply

00:01:48.729 --> 00:01:53.319
to facilitate Mario. The levels let players
express his movement, and challenge them to

00:01:53.319 --> 00:01:55.709
master his underlying move set.

00:01:55.709 --> 00:01:59.689
Other developers have clocked this. Super
Meat Boy, for example, feels fun at a primal,

00:01:59.689 --> 00:02:04.719
kinetic level. But plenty of platformers are
hampered by loose controls and stodgy movement.

00:02:04.719 --> 00:02:09.090
Likewise, the best action games would still
be fun even if you're just blasting enemies

00:02:09.090 --> 00:02:13.090
in a blank room forever. But many others lack
that vital energy.

00:02:13.090 --> 00:02:17.069
When it comes to the fundamentals, there's
not much I can do to help right here. It's

00:02:17.069 --> 00:02:21.180
going to be completely different for every
type of game, and I'm not sure that "be Shigeru

00:02:21.180 --> 00:02:23.310
Miyamoto" is particularly useful advice.

00:02:23.310 --> 00:02:27.180
But there are lots of little tricks, often
used in the polishing stages, that you can

00:02:27.180 --> 00:02:31.909
crib from great games to make yours feel 100
times better. And in the spirit of brazen

00:02:31.909 --> 00:02:36.959
theft, I stole most of these from talks by
Vlambeer, Cactus, and Grapefrukt. I've linked

00:02:36.959 --> 00:02:40.010
to the full talks in the description below
if you want more.

00:02:40.010 --> 00:02:45.290
So. First up, is screen shake and Vlambeer
is the king of this stuff. All its games wobble

00:02:45.290 --> 00:02:50.780
uncontrollably when you fire a gun or hit
an enemy or saw through a fish. It feels satisfying,

00:02:50.780 --> 00:02:54.730
and provides instantaneous feedback that the
player is touching the world.

00:02:54.730 --> 00:02:59.510
Vlambeer also likes to pause the game for
a split second when you hit or kill an enemy,

00:02:59.510 --> 00:03:03.019
just to make those impacts more impactful.
You see this in fighting games too - watch

00:03:03.019 --> 00:03:07.170
how the action judders in Street Fighter,
to really make those kicks hit home. God of

00:03:07.170 --> 00:03:10.569
War does this also and most Zelda games do
it as well.

00:03:10.569 --> 00:03:14.189
To be honest, anything you can add to make
it really clear that you're damaging an enemy

00:03:14.189 --> 00:03:19.079
is worth it. I'm talking about making them
flash white, get knocked back, spray blood,

00:03:19.079 --> 00:03:23.939
change animation, or make a satisfying sound.
It all provides useful feedback, and it improves

00:03:23.939 --> 00:03:24.989
the game's feel .

00:03:24.989 --> 00:03:28.719
Similar effects can make playable characters
feel like they're really part of the world.

00:03:28.719 --> 00:03:32.549
Like tiny dust particles when you hit the
ground and recoil when you fire a gun.

00:03:32.549 --> 00:03:37.569
And sound effects are key. Make them bassy
and loud. A gun shouldn't sound like thisâ€¦

00:03:37.569 --> 00:03:41.370
It should sound like this.

00:03:41.370 --> 00:03:45.790
You can use randomised sounds effects to avoid
repetition, or steal the rising pitch idea

00:03:45.790 --> 00:03:50.150
from Mario and Peggle to sell the tenuous
joy of nursing a combo.

00:03:54.380 --> 00:03:59.100
Next, be creative with your camera. In Luftrausers,
the camera doesn't follow your plane - it

00:03:59.189 --> 00:04:04.439
intelligently moves to frame the action and
reveal nearby threats. And in Hotline Miami,

00:04:04.439 --> 00:04:08.290
the camera juts out far in front of where
you're looking to help know how your hero

00:04:08.290 --> 00:04:10.230
is orientated.

00:04:10.230 --> 00:04:14.980
And make stuff big. Really big. Make the bullets
as big as your face like in Nuclear Throne,

00:04:14.980 --> 00:04:19.160
make the explosions mini atom bombs like in
Super Time Force, and make the blood spatters

00:04:19.160 --> 00:04:21.590
into geysers of red goop like in Hotline Miami.

00:04:21.590 --> 00:04:26.000
And Hotline Miami has a permanence that many
other games lack. Bodies and blood sprays

00:04:26.000 --> 00:04:30.280
stick around when you walk back to your car
to give you a little short-term nostalgia

00:04:30.280 --> 00:04:34.509
of the chaos you've caused, and make battles
feel really hard won.

00:04:34.509 --> 00:04:40.190
Ultimately, this stuff, which some call juice,
is all about doubling down on whatever your

00:04:40.190 --> 00:04:44.270
game is about. If it's about shooting, then
make the guns kick and make the fire rate

00:04:44.270 --> 00:04:47.789
fast and have the camera shudder with each
shot. But if it's about jumping, give your

00:04:47.789 --> 00:04:52.430
character friction and keep the camera stay
still so you can land each jump.

00:04:52.430 --> 00:04:56.130
Game feel is something that developers can
spend months, if not years working on, so

00:04:56.130 --> 00:04:59.750
I doubt you're going to find the secret to
making your game feel fun and satisfying in

00:04:59.750 --> 00:05:03.520
a five minute YouTube video. But hopefully
there's something to take away here, about

00:05:03.520 --> 00:05:08.009
making the fundamental action feel good, and
making every lick of polish speak to what

00:05:08.009 --> 00:05:12.370
the game is really about. Follow that advice,
and maybe, just maybe, I won't have to play

00:05:12.370 --> 00:05:17.490
so many limp and lifeless iOS games for my
job.

