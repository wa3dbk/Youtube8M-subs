WEBVTT
Kind: captions
Language: en

00:00:08.430 --> 00:00:11.730
You can take some robots,
take some smart people

00:00:11.730 --> 00:00:14.820
and engineers, and make
something really nice

00:00:14.820 --> 00:00:18.150
and work quickly and
efficiently, especially

00:00:18.150 --> 00:00:20.170
in the multirobot space.

00:00:20.170 --> 00:00:23.650
The problem is that
doesn't generalize well.

00:00:23.650 --> 00:00:27.060
So suppose you got two robots
to coordinate very well

00:00:27.060 --> 00:00:29.730
and do this whole
thing very nicely.

00:00:29.730 --> 00:00:32.750
Maybe you add another robot,
the whole plan will break.

00:00:32.750 --> 00:00:36.030
And this work tries
to pose the problem

00:00:36.030 --> 00:00:38.880
in a more general
framework, that given

00:00:38.880 --> 00:00:41.370
what we call
macroactions, you could

00:00:41.370 --> 00:00:45.190
use the planner that we have
to go out and solve a problem.

00:00:45.190 --> 00:00:48.420
So this was an instance
of a multi-agent planning

00:00:48.420 --> 00:00:51.690
problem that
involved a PR2 robot,

00:00:51.690 --> 00:00:55.680
and then we also had two turtle
bots, and they're our waiters.

00:00:55.680 --> 00:00:58.930
The turtle bots cannot
communicate with one another

00:00:58.930 --> 00:01:03.150
unless they're nearby, and
the turtle bots don't know

00:01:03.150 --> 00:01:05.790
if someone's going to want to
place an order when they go

00:01:05.790 --> 00:01:07.290
to their room or not.

00:01:07.290 --> 00:01:10.290
The turtle bots also don't
know what the other turtle

00:01:10.290 --> 00:01:11.280
bot''s doing.

00:01:11.280 --> 00:01:14.490
One way you can try
to reduce the problem

00:01:14.490 --> 00:01:17.010
is using what are
called macroactions.

00:01:17.010 --> 00:01:19.380
And the macroactions,
they can be

00:01:19.380 --> 00:01:21.720
described in a
general way of just

00:01:21.720 --> 00:01:23.500
like what their effects are.

00:01:23.500 --> 00:01:27.660
And so when you do that, you
can cover up a lot of details

00:01:27.660 --> 00:01:30.830
and trying to coordinate the
behavior between the robots.

00:01:30.830 --> 00:01:33.950
And you would like to just say,
OK, that one go, to Room 1.

00:01:33.950 --> 00:01:35.700
And that one, get a drink.

00:01:35.700 --> 00:01:38.190
You don't want to actually be
thinking about the navigation

00:01:38.190 --> 00:01:39.060
problem.

00:01:39.060 --> 00:01:42.000
The turtle bots started
out in a location,

00:01:42.000 --> 00:01:45.100
and they immediately looked at
what they should do from there,

00:01:45.100 --> 00:01:46.590
like what's the macro action?

00:01:46.590 --> 00:01:48.752
So it would go inside
a room and ask, like,

00:01:48.752 --> 00:01:49.960
do you want to order a drink?

00:01:49.960 --> 00:01:52.650
Do you want to order a drink?

00:01:52.650 --> 00:01:57.990
The student had to say yes
by toggling the button.

00:01:57.990 --> 00:02:00.270
if they didn't,
the turtle assumed

00:02:00.270 --> 00:02:01.440
they did not want a drink.

00:02:01.440 --> 00:02:03.750
So the observation they
would get inside a room

00:02:03.750 --> 00:02:08.400
would be I'm in this room,
and there's a drink order

00:02:08.400 --> 00:02:09.840
or there's not a drink order.

00:02:09.840 --> 00:02:13.810
If the turtle bot went to
the PR2 and got a drink,

00:02:13.810 --> 00:02:17.130
its new observation would be
that it's holding a drink.

00:02:17.130 --> 00:02:20.100
If both of the robots were
in the bar, that's one

00:02:20.100 --> 00:02:22.260
they had that
limited communication

00:02:22.260 --> 00:02:25.860
where they could detect
if one of the turtle bots

00:02:25.860 --> 00:02:27.750
was being served by the PR2.

00:02:27.750 --> 00:02:29.670
And so if that
was the case, they

00:02:29.670 --> 00:02:32.670
would go and do it
different macroaction.

00:02:32.670 --> 00:02:35.020
There's two phases
in this process.

00:02:35.020 --> 00:02:36.930
The first part is offline.

00:02:36.930 --> 00:02:41.250
And in the offline process,
you are thinking about all

00:02:41.250 --> 00:02:43.800
of these problems
of how are you going

00:02:43.800 --> 00:02:47.040
to get the robots to
coordinate their actions,

00:02:47.040 --> 00:02:49.440
given that you know they won't
be able to communicate all

00:02:49.440 --> 00:02:51.810
the time, given
that you know they

00:02:51.810 --> 00:02:55.400
will have knowledge
about the whole world,

00:02:55.400 --> 00:02:56.910
where other robots are so.

00:02:56.910 --> 00:03:00.240
When you're creating a plan
for each of the robots running

00:03:00.240 --> 00:03:03.930
individually, that's when you
reason about these things.

00:03:03.930 --> 00:03:07.770
And then when you're actually
executing these controllers

00:03:07.770 --> 00:03:11.240
you don't think about any
of those sort of things.

