WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
[I] can show you an algorithm called Quicksort

00:00:04.600 --> 00:00:10.889
[hopefully] this bit of paper here will be sufficient to do that okay, so again. We start with unsorted list

00:00:14.049 --> 00:00:15.910
this time we

00:00:15.910 --> 00:00:19.289
Partition the list into two bits so rather than just fitting into two bits of equal size

00:00:19.289 --> 00:00:23.999
[we] take one element which we call the pivot. It doesn't really matter which one you pick I mean

00:00:24.699 --> 00:00:28.499
Actually, it does matter a little bit. I which I'll get into in a minute okay, so we pick one call the pivot

00:00:28.500 --> 00:00:30.060
We'll take the Rightmost one okay

00:00:30.060 --> 00:00:32.669
So we've got five so put that there [so]

00:00:33.130 --> 00:00:38.429
Every element in this list that is less than or equal to five goes [in] this side and every element that's greater than it goes

00:00:38.430 --> 00:00:43.649
On this side so seven goes on the right eight goes on the right seven goes on the right

00:00:44.469 --> 00:00:48.329
Four goes on the left three goes on the left [10] goes on the right

00:00:48.520 --> 00:00:53.969
so then we do the same again for these two sub lists we've got so we take three as the pivot for this one and

00:00:54.550 --> 00:00:57.000
Four is greater than x or goes on the right?

00:00:57.670 --> 00:01:05.610
so with this one we take take 10 as the pivot so everything less goes on the left so it's actually all the elements and

00:01:08.320 --> 00:01:14.760
Then we keep breaking these down [so] we've got either one element or no elements in each list so we know they're sorted okay

00:01:14.760 --> 00:01:18.119
So we take seven as the pivot eight goes on the right and seven?

00:01:18.850 --> 00:01:20.500
Less or equal goes on the left

00:01:20.500 --> 00:01:24.150
so then we rejoin these lists back together so start at the bottom we

00:01:24.460 --> 00:01:28.680
Take the pivot everything on the [left] goes behind it everything on the right goes on top of it, okay?

00:01:30.579 --> 00:01:36.209
So we've got the pivot here put four on top of it got 10 here everything [we] left goes behind it

00:01:36.850 --> 00:01:40.979
and then here we've got the pivot so these go on that's left and

00:01:42.159 --> 00:01:44.159
These go on it's right

00:01:44.590 --> 00:01:47.280
Okay, so now we've got one sorted list

00:01:48.280 --> 00:01:53.939
Now you do have to be careful about what you choose ask the pivots usually what they'll do is

00:01:53.939 --> 00:01:56.968
You'll either pick the first element or the last element because it's just easier

00:01:57.100 --> 00:02:02.309
ideally you want to be able split the lessons about to even part so really want the pivot to be the

00:02:03.040 --> 00:02:06.239
Middle most number, but you don't know what that is at the start so in the average case

00:02:06.240 --> 00:02:08.339
It's the same as merge, Sort we've got end times

00:02:09.710 --> 00:02:16.939
And in the best case it's still a login, but in the worst case well, let me show you okay?

00:02:16.940 --> 00:02:19.969
So let's say we've got a list that's already Sorted

00:02:20.670 --> 00:02:25.639
So I just take the cars without before if we always choose a pivot from the Rightmost element

00:02:25.640 --> 00:02:31.160
We've got ten so it ends the pivot so all the elements [left] on it. Go on the left. We've got all the elements [basically]

00:02:33.030 --> 00:02:37.160
Okay, so then we pick eight as the next pivot all the elements go on its left

00:02:37.740 --> 00:02:39.240
when you pick seven as the next

00:02:39.240 --> 00:02:43.730
then all the rest go on the left and pick the next seven and what you see is we end up with cars all the

00:02:43.730 --> 00:02:46.129
Way down here, and then [we've] got to merge them back together

00:02:49.620 --> 00:02:52.939
Okay, and actually that works out in the worst case

00:02:53.520 --> 00:03:00.559
As N squared so again, it's the square of the [input] size, so we've got the worst case bubble, Sort is still n. Squared and

00:03:01.710 --> 00:03:04.849
The worst Cater Merge, Sort is it's still n. Log N

00:03:08.790 --> 00:03:11.450
The highest card will definitely have been swapped all the way to the end

00:03:11.450 --> 00:03:16.939
So actually you don't need to check [that] one anymore. You can move that off and you [just] get these third-party cookies

00:03:17.250 --> 00:03:22.130
Hello the advertisers to figure out have you seen this advert before?

