WEBVTT
Kind: captions
Language: en

00:00:08.473 --> 00:00:11.193
Should I learn Lisp before Clojure?

00:00:11.193 --> 00:00:14.233
There are people who think Clojure is replacing
Lisp.

00:00:14.233 --> 00:00:18.042
Clojure is often condemned as slow, though.

00:00:18.042 --> 00:00:19.783
Lisp is efficient.

00:00:19.783 --> 00:00:23.023
It is also heaven for those who love ellipses
and parenthesis.

00:00:23.023 --> 00:00:25.413
And Lisp has been around forever.

00:00:25.413 --> 00:00:28.622
I thought that was about 50 years.

00:00:28.622 --> 00:00:33.092
Ten years is forever on the internet, and
Lisp predates the internet.

00:00:33.092 --> 00:00:36.313
I read that Clojure was an update of Lisp.

00:00:36.313 --> 00:00:38.713
Its disadvantage is its newness.

00:00:38.713 --> 00:00:41.223
It needs to mature a little.

00:00:41.223 --> 00:00:42.223
What?

00:00:42.223 --> 00:00:44.982
Another year until it is taken seriously?

00:00:44.982 --> 00:00:51.453
Common Lisp is embedded in IT because of things
like ANSI Common Lisp as an IT standard.

00:00:51.453 --> 00:00:56.892
Lisp in some ways is more flexible than Clojure,
treating data and functions the same, while

00:00:56.892 --> 00:00:59.852
letting you build your own programming language.

00:00:59.852 --> 00:01:04.072
In some ways, learning Clojure would be better
than learning Lisp.

00:01:04.072 --> 00:01:09.473
Clojure is a lot more disciplined than Lisp,
maybe picking that up from Haskell.

00:01:09.473 --> 00:01:11.893
Is Clojure more practical than Haskell?

00:01:11.893 --> 00:01:14.453
Oh, very much so.

00:01:14.453 --> 00:01:18.173
Clojure is an active language that runs on
JVM.

00:01:18.173 --> 00:01:22.803
JVM is golden, assuming you can use it to
access their libraries.

00:01:22.803 --> 00:01:26.253
Yes, which is where Clojure is better than
Lisp.

00:01:26.253 --> 00:01:31.553
And then there is the fact that you can extend
the code as data system beyond lists to vectors

00:01:31.553 --> 00:01:32.553
and maps.

00:01:32.553 --> 00:01:35.923
That’s a map to heaven for true IT nerds.

00:01:35.923 --> 00:01:40.613
Whereas Common Lisp doesn’t officially agree
to get along with Java or JVM.

00:01:40.613 --> 00:01:43.803
Do you think Clojure would replace Common
Lisp?

00:01:43.803 --> 00:01:47.062
They are rivals, to be sure.

00:01:47.062 --> 00:01:51.463
But I don’t think Clojure will become the
official Common Lisp replacement.

00:01:51.463 --> 00:01:52.603
Why not?

00:01:52.603 --> 00:01:55.893
I thought Clojure made programmers more efficient.

00:01:55.893 --> 00:02:00.653
So does Ruby on Rails, but that doesn’t
mean it makes good code.

00:02:00.653 --> 00:02:05.183
You can make good time on the highway because
you’re going the wrong direction.

00:02:05.183 --> 00:02:07.393
Which language should I learn?

00:02:07.393 --> 00:02:09.242
Learn Clojure first.

00:02:09.242 --> 00:02:13.843
You can study Lisp later, whether to upgrade
someone’s code to Clojure or as a history

00:02:13.843 --> 00:02:13.992
lesson.

