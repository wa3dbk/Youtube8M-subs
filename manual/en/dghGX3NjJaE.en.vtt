WEBVTT
Kind: captions
Language: en

00:00:01.270 --> 00:00:07.569
Let's try to install Nvflash on an Asus Transformer
pad. Nvflash is a special

00:00:07.569 --> 00:00:12.160
bootloader, which protects that very bootloader
from firmware flash accidents,

00:00:12.160 --> 00:00:16.600
which may turn you tablet to a brick. A brick
is a situation when you can't

00:00:16.600 --> 00:00:21.440
restore you device anymore, essentially turning
your pad to an expensive piece

00:00:21.440 --> 00:00:24.930
of silicon.
A common trait of all hacker solutions, the

00:00:24.930 --> 00:00:29.710
instructions are minimal and
require the user to know a lot. If you don't,

00:00:29.710 --> 00:00:33.110
you'll have to spend many
hours online trying to gather information

00:00:33.110 --> 00:00:36.000
piece by piece.
So, what will you need?

00:00:36.000 --> 00:00:41.980
First, enable USB debugging on your tablet.
Next, use the official Asus utility to unlock

00:00:41.980 --> 00:00:46.360
your bootloader, which I described
in another video. It's worth mentioning, that

00:00:46.360 --> 00:00:51.200
even this is official utility,
it voids your warranty. It is considered that

00:00:51.200 --> 00:00:55.450
you can't lock your bootloader
again, however, some forum posts say it's

00:00:55.450 --> 00:01:00.430
tricky but possible.
You also need special USB drivers, download

00:01:00.430 --> 00:01:03.379
them.
Get Nvflash on the same page.

00:01:03.379 --> 00:01:07.969
You will also require a mysterious fastboot.
It turns out this is a part of

00:01:07.969 --> 00:01:12.299
Android SDK, but if you don't want to download
the whole package, just get

00:01:12.299 --> 00:01:17.609
fastboot separately.
So you have four folders: drivers, fastboot,

00:01:17.609 --> 00:01:20.909
nvflash and wheelie.
For convenience, put files from the latter

00:01:20.909 --> 00:01:25.609
free into a single location.
Now turn off your tablet, then power it on

00:01:25.609 --> 00:01:30.490
again, holding volume down button.
In the left upper corner Checking for RCK

00:01:30.490 --> 00:01:36.549
image will appear, and then 3 icons in the
middle of the screen. Using volume down, select

00:01:36.549 --> 00:01:41.249
the USB icon, and then press
volume up to confirm. You're now in fastboot

00:01:41.249 --> 00:01:44.499
mode.
Windows doesn't have drivers for this mode

00:01:44.499 --> 00:01:49.509
of course, so go to Device manager
and manually point it to the path where you

00:01:49.509 --> 00:01:54.319
extracted the downloaded drivers.
Now a fastboot device should appear in the

00:01:54.319 --> 00:01:58.349
Device manager.
So, now open command prompt in the folder

00:01:58.349 --> 00:02:01.799
where we merged three folders together,
and enter the following command:

00:02:01.799 --> 00:02:06.029
fastboot -i 0x0b05 flash staging ebtblob.bin
only to get Signature mistmatch error.

00:02:06.029 --> 00:02:11.560
It turns out there was an update from Asus,
which did not install Jelly Bean,

00:02:11.560 --> 00:02:18.560
while adding signature check to the bootloader.
That 4.0.3 firmware version

00:02:18.570 --> 00:02:24.400
9.4.5.30 . In other words, this version introduced
signature check: from now

00:02:24.400 --> 00:02:29.340
on, to update you bootloader the update file
must be signed by Asus. That's

00:02:29.340 --> 00:02:33.950
exactly the same way game console manufacturers
prevent users from running

00:02:33.950 --> 00:02:38.590
unsigned, homebrew applications. Needless
to say, the custom bootloader

00:02:38.590 --> 00:02:43.780
we're trying to flash is not signed by Asus.
Neither are previous official

00:02:43.780 --> 00:02:48.130
firmwares prior to version .30 , since signature
check was introduced in

00:02:48.130 --> 00:02:52.790
this version only. That's why you can't downgrade
to an earlier bootloader.

00:02:52.790 --> 00:02:57.230
Deadend.
So, on one hand, Asus officialy issues a way

00:02:57.230 --> 00:03:01.760
to unlock your bootloader,
like, guys do whatever you want, but this

00:03:01.760 --> 00:03:06.790
void you waranty, which is somewhat
fair. On the other hand, Asus releases a software

00:03:06.790 --> 00:03:10.960
update effectivly blocking
all non-Asus bootloaders from installation.

00:03:10.960 --> 00:03:16.120
So, by unlocking your device,
you've lost you warranty and gained nothing,

00:03:16.120 --> 00:03:21.260
since it is still locked to
Asus-only software. So basically Asus is heading

00:03:21.260 --> 00:03:27.020
full speed the way already
pioneered by Apple, Sony and other copyrasts.

00:03:27.020 --> 00:03:32.770
That's sad and indescent.
So, what to do now? Well, let's at least install

00:03:32.770 --> 00:03:38.350
Jelly Bean. Since we unlocked
our device and OTA updates are not available

00:03:38.350 --> 00:03:43.560
for us anymore, we'll have to flash
complete image, which is even better in the

00:03:43.560 --> 00:03:46.850
long run.
You may flash it with fastboot, but's its

00:03:46.850 --> 00:03:50.100
much easier to flash from a microSD
memory card.

00:03:50.100 --> 00:03:54.959
First, download the update from Asus website.
It's a archive, which has

00:03:54.959 --> 00:03:59.140
another archive inside, which has blob and
metadata.

00:03:59.140 --> 00:04:04.980
Unpack it only once, leaving the second archive
inside untouched. Copy it

00:04:04.980 --> 00:04:10.580
as a zip to the root of the memory card, power
off the tablet, insert the card

00:04:10.580 --> 00:04:15.290
and power on the device. Now select update
from the notifications list and

00:04:15.290 --> 00:04:21.599
confirm it. Updating will take about 5 minutes.
A quick check - the update was a success.

00:04:21.599 --> 00:04:26.099
If you got problems with keeping root, add
ClockworkMod recovery to

00:04:26.099 --> 00:04:31.800
the fastboot folder, copy SuperSU to you device,
flash ClockWorkMod recovery

00:04:31.800 --> 00:04:37.279
and use it to install SuperSU.
If you've lost flash, just get it from Adobe

00:04:37.279 --> 00:04:39.229
website and install as a package.

