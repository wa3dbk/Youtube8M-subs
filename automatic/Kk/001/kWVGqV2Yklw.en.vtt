WEBVTT
Kind: captions
Language: en

00:00:00.250 --> 00:00:09.620 

[Music]

00:00:09.620 --> 00:00:09.630 
[Music]

00:00:09.630 --> 00:00:13.560 
[Music]
lesson<00:00:10.630> two<00:00:10.810> the<00:00:11.320> message<00:00:11.740> loop<00:00:12.330> to<00:00:13.330> follow

00:00:13.560 --> 00:00:13.570 
lesson two the message loop to follow

00:00:13.570 --> 00:00:15.240 
lesson two the message loop to follow
along<00:00:13.930> with<00:00:13.990> this<00:00:14.290> lesson<00:00:14.530> you<00:00:14.830> will<00:00:14.860> need<00:00:15.100> the

00:00:15.240 --> 00:00:15.250 
along with this lesson you will need the

00:00:15.250 --> 00:00:17.330 
along with this lesson you will need the
code<00:00:15.460> from<00:00:15.670> win32<00:00:16.420> lesson<00:00:16.900> 1

00:00:17.330 --> 00:00:17.340 
code from win32 lesson 1

00:00:17.340 --> 00:00:20.820 
code from win32 lesson 1
unlike<00:00:18.340> console<00:00:18.939> programs<00:00:19.480> 1:32<00:00:20.320> programs

00:00:20.820 --> 00:00:20.830 
unlike console programs 1:32 programs

00:00:20.830 --> 00:00:23.429 
unlike console programs 1:32 programs
are<00:00:21.099> event<00:00:21.400> based<00:00:21.760> the<00:00:22.450> central<00:00:22.869> element<00:00:23.290> for

00:00:23.429 --> 00:00:23.439 
are event based the central element for

00:00:23.439 --> 00:00:26.120 
are event based the central element for
processing<00:00:24.099> events<00:00:24.430> is<00:00:24.760> the<00:00:25.119> message<00:00:25.480> loop

00:00:26.120 --> 00:00:26.130 
processing events is the message loop

00:00:26.130 --> 00:00:29.010 
processing events is the message loop
looking<00:00:27.130> at<00:00:27.250> our<00:00:27.400> code<00:00:27.610> from<00:00:27.820> lesson<00:00:28.239> 1<00:00:28.419> we<00:00:28.660> see

00:00:29.010 --> 00:00:29.020 
looking at our code from lesson 1 we see

00:00:29.020 --> 00:00:31.440 
looking at our code from lesson 1 we see
the<00:00:29.140> main<00:00:29.320> message<00:00:29.770> loop<00:00:30.040> in<00:00:30.310> the<00:00:30.430> lines<00:00:30.669> 46

00:00:31.440 --> 00:00:31.450 
the main message loop in the lines 46

00:00:31.450 --> 00:00:34.260 
the main message loop in the lines 46
through<00:00:31.720> 53<00:00:32.470> this<00:00:33.160> while<00:00:33.430> loop<00:00:33.700> sits<00:00:34.060> inside

00:00:34.260 --> 00:00:34.270 
through 53 this while loop sits inside

00:00:34.270 --> 00:00:37.410 
through 53 this while loop sits inside
of<00:00:34.600> our<00:00:34.720> wind<00:00:34.960> main<00:00:35.170> function<00:00:36.000> when<00:00:37.000> main<00:00:37.239> is

00:00:37.410 --> 00:00:37.420 
of our wind main function when main is

00:00:37.420 --> 00:00:39.180 
of our wind main function when main is
the<00:00:37.600> entry<00:00:37.870> point<00:00:37.899> for<00:00:38.410> the<00:00:38.470> execution<00:00:39.130> of

00:00:39.180 --> 00:00:39.190 
the entry point for the execution of

00:00:39.190 --> 00:00:42.180 
the entry point for the execution of
win32<00:00:39.940> programs<00:00:40.480> just<00:00:41.170> like<00:00:41.320> main<00:00:41.710> is<00:00:41.950> for

00:00:42.180 --> 00:00:42.190 
win32 programs just like main is for

00:00:42.190 --> 00:00:44.520 
win32 programs just like main is for
console<00:00:42.640> programs<00:00:43.180> there's<00:00:43.960> quite<00:00:44.290> a<00:00:44.320> bit

00:00:44.520 --> 00:00:44.530 
console programs there's quite a bit

00:00:44.530 --> 00:00:46.170 
console programs there's quite a bit
going<00:00:44.560> on<00:00:44.980> in<00:00:45.190> this<00:00:45.310> program<00:00:45.730> but<00:00:45.970> we're<00:00:46.150> just

00:00:46.170 --> 00:00:46.180 
going on in this program but we're just

00:00:46.180 --> 00:00:48.390 
going on in this program but we're just
going<00:00:46.570> to<00:00:46.720> focus<00:00:46.930> on<00:00:47.320> message<00:00:47.800> loop<00:00:48.010> for<00:00:48.280> now

00:00:48.390 --> 00:00:48.400 
going to focus on message loop for now

00:00:48.400 --> 00:00:51.690 
going to focus on message loop for now
at<00:00:48.870> the<00:00:49.870> heart<00:00:50.080> of<00:00:50.170> a<00:00:50.260> win32<00:00:50.980> program<00:00:51.460> is<00:00:51.670> a

00:00:51.690 --> 00:00:51.700 
at the heart of a win32 program is a

00:00:51.700 --> 00:00:54.150 
at the heart of a win32 program is a
thread<00:00:52.090> the<00:00:52.660> thread<00:00:52.690> creates<00:00:53.320> Windows<00:00:53.800> none

00:00:54.150 --> 00:00:54.160 
thread the thread creates Windows none

00:00:54.160 --> 00:00:55.950 
thread the thread creates Windows none
spends<00:00:54.520> its<00:00:54.730> time<00:00:55.000> in<00:00:55.210> the<00:00:55.330> message<00:00:55.690> loop

00:00:55.950 --> 00:00:55.960 
spends its time in the message loop

00:00:55.960 --> 00:00:58.950 
spends its time in the message loop
processing<00:00:56.710> messages<00:00:57.480> the<00:00:58.480> thread<00:00:58.780> has<00:00:58.930> a

00:00:58.950 --> 00:00:58.960 
processing messages the thread has a

00:00:58.960 --> 00:01:00.810 
processing messages the thread has a
message<00:00:59.410> queue<00:00:59.620> associated<00:01:00.310> with<00:01:00.460> it<00:01:00.670> and

00:01:00.810 --> 00:01:00.820 
message queue associated with it and

00:01:00.820 --> 00:01:02.310 
message queue associated with it and
each<00:01:01.000> window<00:01:01.450> that<00:01:01.660> it<00:01:01.780> creates<00:01:02.079> has<00:01:02.290> a

00:01:02.310 --> 00:01:02.320 
each window that it creates has a

00:01:02.320 --> 00:01:03.840 
each window that it creates has a
callback<00:01:02.650> attached<00:01:03.220> to<00:01:03.550> it

00:01:03.840 --> 00:01:03.850 
callback attached to it

00:01:03.850 --> 00:01:06.179 
callback attached to it
the<00:01:04.360> callback<00:01:04.780> for<00:01:05.019> our<00:01:05.110> lesson<00:01:05.530> one<00:01:05.680> program

00:01:06.179 --> 00:01:06.189 
the callback for our lesson one program

00:01:06.189 --> 00:01:08.160 
the callback for our lesson one program
is<00:01:06.430> the<00:01:06.610> wind<00:01:06.790> proc<00:01:07.090> function<00:01:07.630> which<00:01:07.780> starts

00:01:08.160 --> 00:01:08.170 
is the wind proc function which starts

00:01:08.170 --> 00:01:11.969 
is the wind proc function which starts
at<00:01:08.350> line<00:01:08.530> 134<00:01:09.400> as<00:01:09.930> events<00:01:10.930> occur<00:01:11.259> like<00:01:11.650> a<00:01:11.710> key

00:01:11.969 --> 00:01:11.979 
at line 134 as events occur like a key

00:01:11.979 --> 00:01:14.279 
at line 134 as events occur like a key
press<00:01:12.220> or<00:01:12.460> mouse<00:01:12.700> click<00:01:13.030> messages<00:01:13.840> get<00:01:14.020> post

00:01:14.279 --> 00:01:14.289 
press or mouse click messages get post

00:01:14.289 --> 00:01:16.319 
press or mouse click messages get post
to<00:01:14.649> the<00:01:14.770> message<00:01:15.130> queue<00:01:15.429> the<00:01:16.060> thread

00:01:16.319 --> 00:01:16.329 
to the message queue the thread

00:01:16.329 --> 00:01:18.270 
to the message queue the thread
continues<00:01:16.869> checking<00:01:17.289> the<00:01:17.409> message<00:01:17.770> queue<00:01:18.039> for

00:01:18.270 --> 00:01:18.280 
continues checking the message queue for

00:01:18.280 --> 00:01:20.969 
continues checking the message queue for
messages<00:01:18.990> when<00:01:19.990> the<00:01:20.109> thread<00:01:20.380> finds<00:01:20.740> a<00:01:20.829> message

00:01:20.969 --> 00:01:20.979 
messages when the thread finds a message

00:01:20.979 --> 00:01:22.889 
messages when the thread finds a message
it<00:01:21.340> takes<00:01:21.549> it<00:01:21.759> and<00:01:21.850> dispatches<00:01:22.450> it<00:01:22.630> to<00:01:22.780> the

00:01:22.889 --> 00:01:22.899 
it takes it and dispatches it to the

00:01:22.899 --> 00:01:25.020 
it takes it and dispatches it to the
callback<00:01:23.289> function<00:01:23.319> for<00:01:23.950> that<00:01:24.069> window<00:01:24.460> where

00:01:25.020 --> 00:01:25.030 
callback function for that window where

00:01:25.030 --> 00:01:27.660 
callback function for that window where
it<00:01:25.119> is<00:01:25.179> processed<00:01:25.920> here's<00:01:26.920> how<00:01:27.100> it<00:01:27.219> works<00:01:27.429> in

00:01:27.660 --> 00:01:27.670 
it is processed here's how it works in

00:01:27.670 --> 00:01:30.029 
it is processed here's how it works in
our<00:01:27.759> lesson<00:01:28.149> one<00:01:28.299> program<00:01:28.810> when<00:01:29.530> the<00:01:29.649> program

00:01:30.029 --> 00:01:30.039 
our lesson one program when the program

00:01:30.039 --> 00:01:32.279 
our lesson one program when the program
begins<00:01:30.369> running<00:01:30.609> one<00:01:31.149> window<00:01:31.450> is<00:01:31.600> created<00:01:31.869> and

00:01:32.279 --> 00:01:32.289 
begins running one window is created and

00:01:32.289 --> 00:01:34.020 
begins running one window is created and
the<00:01:32.439> thread<00:01:32.679> goes<00:01:32.920> into<00:01:33.310> our<00:01:33.399> message<00:01:33.789> loop

00:01:34.020 --> 00:01:34.030 
the thread goes into our message loop

00:01:34.030 --> 00:01:36.569 
the thread goes into our message loop
the<00:01:35.020> message<00:01:35.380> loop<00:01:35.619> is<00:01:35.799> a<00:01:35.829> while<00:01:36.100> loop<00:01:36.340> that

00:01:36.569 --> 00:01:36.579 
the message loop is a while loop that

00:01:36.579 --> 00:01:39.449 
the message loop is a while loop that
calls<00:01:36.850> get<00:01:37.179> message<00:01:37.659> get<00:01:38.380> message<00:01:38.799> checks<00:01:39.189> the

00:01:39.449 --> 00:01:39.459 
calls get message get message checks the

00:01:39.459 --> 00:01:41.819 
calls get message get message checks the
queue<00:01:39.700> for<00:01:39.939> messages<00:01:40.450> which<00:01:41.020> are<00:01:41.200> put<00:01:41.380> into<00:01:41.560> an

00:01:41.819 --> 00:01:41.829 
queue for messages which are put into an

00:01:41.829 --> 00:01:45.149 
queue for messages which are put into an
msg<00:01:42.459> structure<00:01:43.170> once<00:01:44.170> a<00:01:44.319> message<00:01:44.649> appears<00:01:44.799> in

00:01:45.149 --> 00:01:45.159 
msg structure once a message appears in

00:01:45.159 --> 00:01:46.949 
msg structure once a message appears in
the<00:01:45.249> queue<00:01:45.520> it<00:01:45.789> is<00:01:46.060> sent<00:01:46.329> to<00:01:46.420> the<00:01:46.569> callback

00:01:46.949 --> 00:01:46.959 
the queue it is sent to the callback

00:01:46.959 --> 00:01:48.929 
the queue it is sent to the callback
function<00:01:46.990> wind<00:01:47.679> proc<00:01:47.950> via<00:01:48.549> The<00:01:48.759> Dispatch

00:01:48.929 --> 00:01:48.939 
function wind proc via The Dispatch

00:01:48.939 --> 00:01:51.989 
function wind proc via The Dispatch
message<00:01:49.749> function<00:01:50.399> looking<00:01:51.399> at<00:01:51.520> the<00:01:51.609> callback

00:01:51.989 --> 00:01:51.999 
message function looking at the callback

00:01:51.999 --> 00:01:54.239 
message function looking at the callback
function<00:01:52.029> wind<00:01:52.719> proc<00:01:53.020> we<00:01:53.350> see<00:01:53.529> that<00:01:53.709> does<00:01:54.039> not

00:01:54.239 --> 00:01:54.249 
function wind proc we see that does not

00:01:54.249 --> 00:01:57.359 
function wind proc we see that does not
take<00:01:54.520> an<00:01:54.729> msg<00:01:55.380> instead<00:01:56.380> it<00:01:56.590> takes<00:01:56.770> the<00:01:57.009> members

00:01:57.359 --> 00:01:57.369 
take an msg instead it takes the members

00:01:57.369 --> 00:02:00.209 
take an msg instead it takes the members
of<00:01:57.399> an<00:01:57.670> msg<00:01:58.229> we're<00:01:59.229> going<00:01:59.469> to<00:01:59.590> focus<00:01:59.950> on<00:02:00.100> the

00:02:00.209 --> 00:02:00.219 
of an msg we're going to focus on the

00:02:00.219 --> 00:02:02.340 
of an msg we're going to focus on the
second<00:02:00.609> argument<00:02:00.789> which<00:02:01.329> is<00:02:01.539> named<00:02:01.810> message

00:02:02.340 --> 00:02:02.350 
second argument which is named message

00:02:02.350 --> 00:02:04.889 
second argument which is named message
this<00:02:02.979> argument<00:02:03.399> is<00:02:03.700> an<00:02:03.819> unsigned<00:02:04.209> int<00:02:04.539> that

00:02:04.889 --> 00:02:04.899 
this argument is an unsigned int that

00:02:04.899 --> 00:02:07.050 
this argument is an unsigned int that
can<00:02:05.109> take<00:02:05.319> on<00:02:05.529> various<00:02:05.889> predefined<00:02:06.579> values

00:02:07.050 --> 00:02:07.060 
can take on various predefined values

00:02:07.060 --> 00:02:09.449 
can take on various predefined values
that<00:02:07.569> specify<00:02:08.200> the<00:02:08.259> type<00:02:08.619> of<00:02:08.649> message<00:02:09.250> that

00:02:09.449 --> 00:02:09.459 
that specify the type of message that

00:02:09.459 --> 00:02:10.950 
that specify the type of message that
was<00:02:09.640> received

00:02:10.950 --> 00:02:10.960 
was received

00:02:10.960 --> 00:02:13.170 
was received
inside<00:02:11.710> of<00:02:11.860> wind<00:02:12.070> proc<00:02:12.400> we<00:02:12.760> have<00:02:12.850> a<00:02:12.880> switch

00:02:13.170 --> 00:02:13.180 
inside of wind proc we have a switch

00:02:13.180 --> 00:02:15.210 
inside of wind proc we have a switch
statement<00:02:13.360> to<00:02:13.840> handle<00:02:14.140> the<00:02:14.260> message<00:02:14.650> the

00:02:15.210 --> 00:02:15.220 
statement to handle the message the

00:02:15.220 --> 00:02:18.510 
statement to handle the message the
switch<00:02:15.580> only<00:02:15.940> handles<00:02:16.330> WM<00:02:16.840> command<00:02:17.290> WM<00:02:18.220> paint

00:02:18.510 --> 00:02:18.520 
switch only handles WM command WM paint

00:02:18.520 --> 00:02:21.090 
switch only handles WM command WM paint
and<00:02:18.760> WM<00:02:19.330> destroy<00:02:19.840> there<00:02:20.680> are<00:02:20.770> many<00:02:20.920> other

00:02:21.090 --> 00:02:21.100 
and WM destroy there are many other

00:02:21.100 --> 00:02:23.280 
and WM destroy there are many other
possible<00:02:21.670> messages<00:02:22.210> and<00:02:22.480> the<00:02:22.900> rest<00:02:23.110> are

00:02:23.280 --> 00:02:23.290 
possible messages and the rest are

00:02:23.290 --> 00:02:25.380 
possible messages and the rest are
handled<00:02:23.680> by<00:02:23.740> the<00:02:23.860> default<00:02:24.160> branch<00:02:24.700> which

00:02:25.380 --> 00:02:25.390 
handled by the default branch which

00:02:25.390 --> 00:02:28.560 
handled by the default branch which
calls<00:02:25.660> the<00:02:25.780> default<00:02:26.290> message<00:02:26.560> handler<00:02:27.570> let's

00:02:28.560 --> 00:02:28.570 
calls the default message handler let's

00:02:28.570 --> 00:02:29.760 
calls the default message handler let's
look<00:02:28.810> back<00:02:28.960> at<00:02:29.020> our<00:02:29.200> window

00:02:29.760 --> 00:02:29.770 
look back at our window

00:02:29.770 --> 00:02:31.770 
look back at our window
if<00:02:29.830> we<00:02:30.130> click<00:02:30.340> inside<00:02:30.670> the<00:02:30.850> window<00:02:31.210> or<00:02:31.390> press<00:02:31.750> a

00:02:31.770 --> 00:02:31.780 
if we click inside the window or press a

00:02:31.780 --> 00:02:34.170 
if we click inside the window or press a
key<00:02:32.080> we<00:02:32.740> send<00:02:33.010> a<00:02:33.100> message<00:02:33.460> to<00:02:33.640> the<00:02:33.760> call<00:02:33.970> Beck

00:02:34.170 --> 00:02:34.180 
key we send a message to the call Beck

00:02:34.180 --> 00:02:36.690 
key we send a message to the call Beck
wind<00:02:34.570> proc<00:02:34.840> however<00:02:35.800> these<00:02:35.950> messages<00:02:36.520> are

00:02:36.690 --> 00:02:36.700 
wind proc however these messages are

00:02:36.700 --> 00:02:38.520 
wind proc however these messages are
basically<00:02:37.210> ignored<00:02:37.630> and<00:02:37.900> sent<00:02:38.230> to<00:02:38.410> the

00:02:38.520 --> 00:02:38.530 
basically ignored and sent to the

00:02:38.530 --> 00:02:41.550 
basically ignored and sent to the
default<00:02:38.980> handler<00:02:39.690> the<00:02:40.690> messages<00:02:41.200> that<00:02:41.230> are

00:02:41.550 --> 00:02:41.560 
default handler the messages that are

00:02:41.560 --> 00:02:43.920 
default handler the messages that are
handled<00:02:41.980> are<00:02:42.220> in<00:02:42.310> the<00:02:42.430> WM<00:02:42.850> command<00:02:43.270> branch<00:02:43.660> of

00:02:43.920 --> 00:02:43.930 
handled are in the WM command branch of

00:02:43.930 --> 00:02:45.810 
handled are in the WM command branch of
wind<00:02:44.170> proc<00:02:44.470> and<00:02:44.500> correspond<00:02:45.340> to<00:02:45.460> menu

00:02:45.810 --> 00:02:45.820 
wind proc and correspond to menu

00:02:45.820 --> 00:02:48.210 
wind proc and correspond to menu
selections<00:02:46.420> if<00:02:46.990> we<00:02:47.200> select<00:02:47.410> help<00:02:47.830> and<00:02:48.100> about

00:02:48.210 --> 00:02:48.220 
selections if we select help and about

00:02:48.220 --> 00:02:51.030 
selections if we select help and about
in<00:02:48.520> the<00:02:48.610> menu<00:02:48.880> bar<00:02:48.910> we<00:02:49.630> generate<00:02:50.080> a<00:02:50.110> WM<00:02:50.650> command

00:02:51.030 --> 00:02:51.040 
in the menu bar we generate a WM command

00:02:51.040 --> 00:02:54.120 
in the menu bar we generate a WM command
message<00:02:51.580> with<00:02:52.090> the<00:02:52.270> ID<00:02:52.420> value<00:02:53.110> IDM<00:02:53.740> about

00:02:54.120 --> 00:02:54.130 
message with the ID value IDM about

00:02:54.130 --> 00:02:56.610 
message with the ID value IDM about
which<00:02:54.760> pops<00:02:55.090> up<00:02:55.360> a<00:02:55.450> dialog<00:02:55.870> box<00:02:55.930> when<00:02:56.500> the

00:02:56.610 --> 00:02:56.620 
which pops up a dialog box when the

00:02:56.620 --> 00:02:59.420 
which pops up a dialog box when the
message<00:02:56.980> is<00:02:57.160> processed

00:02:59.420 --> 00:02:59.430 
message is processed

00:02:59.430 --> 00:03:04.110 
message is processed
if<00:03:01.230> we<00:03:02.230> select<00:03:02.410> File<00:03:02.890> and<00:03:03.160> exit<00:03:03.610> in<00:03:03.730> the<00:03:03.850> menu

00:03:04.110 --> 00:03:04.120 
if we select File and exit in the menu

00:03:04.120 --> 00:03:06.450 
if we select File and exit in the menu
bar<00:03:04.150> we<00:03:04.600> generate<00:03:05.020> a<00:03:05.050> WM<00:03:05.590> command<00:03:05.980> message

00:03:06.450 --> 00:03:06.460 
bar we generate a WM command message

00:03:06.460 --> 00:03:09.720 
bar we generate a WM command message
with<00:03:06.850> the<00:03:07.030> ID<00:03:07.180> value<00:03:07.780> IDM<00:03:08.350> exit<00:03:08.800> which<00:03:09.430> calls

00:03:09.720 --> 00:03:09.730 
with the ID value IDM exit which calls

00:03:09.730 --> 00:03:12.780 
with the ID value IDM exit which calls
the<00:03:09.850> destroy<00:03:10.330> window<00:03:10.750> function<00:03:11.430> the<00:03:12.430> destroy

00:03:12.780 --> 00:03:12.790 
the destroy window function the destroy

00:03:12.790 --> 00:03:14.820 
the destroy window function the destroy
window<00:03:13.180> function<00:03:13.690> does<00:03:13.930> some<00:03:14.170> work<00:03:14.380> and<00:03:14.590> post

00:03:14.820 --> 00:03:14.830 
window function does some work and post

00:03:14.830 --> 00:03:17.430 
window function does some work and post
the<00:03:15.040> WM<00:03:15.640> destroy<00:03:16.120> message<00:03:16.600> which<00:03:16.870> eventually

00:03:17.430 --> 00:03:17.440 
the WM destroy message which eventually

00:03:17.440 --> 00:03:18.810 
the WM destroy message which eventually
makes<00:03:17.680> it<00:03:17.830> back<00:03:18.040> to<00:03:18.070> the<00:03:18.280> callback<00:03:18.790> function

00:03:18.810 --> 00:03:18.820 
makes it back to the callback function

00:03:18.820 --> 00:03:21.320 
makes it back to the callback function
and<00:03:19.510> this<00:03:20.140> branch<00:03:20.470> of<00:03:20.650> the<00:03:20.770> switch<00:03:21.040> statement

00:03:21.320 --> 00:03:21.330 
and this branch of the switch statement

00:03:21.330 --> 00:03:24.120 
and this branch of the switch statement
here<00:03:22.330> the<00:03:22.510> post<00:03:22.750> quit<00:03:23.080> message<00:03:23.500> function<00:03:23.800> is

00:03:24.120 --> 00:03:24.130 
here the post quit message function is

00:03:24.130 --> 00:03:26.250 
here the post quit message function is
called<00:03:24.340> and<00:03:24.670> the<00:03:25.210> thread<00:03:25.450> eventually<00:03:25.960> stops

00:03:26.250 --> 00:03:26.260 
called and the thread eventually stops

00:03:26.260 --> 00:03:28.080 
called and the thread eventually stops
running<00:03:26.620> the<00:03:26.830> message<00:03:27.220> loop<00:03:27.490> and<00:03:27.700> the

00:03:28.080 --> 00:03:28.090 
running the message loop and the

00:03:28.090 --> 00:03:31.470 
running the message loop and the
application<00:03:28.750> exits<00:03:29.640> this<00:03:30.640> concludes<00:03:31.210> the

00:03:31.470 --> 00:03:31.480 
application exits this concludes the

00:03:31.480 --> 00:03:33.900 
application exits this concludes the
lesson

