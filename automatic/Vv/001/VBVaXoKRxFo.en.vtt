WEBVTT
Kind: captions
Language: en

00:00:00.560 --> 00:00:04.700 

again<00:00:01.560> we're<00:00:01.770> going<00:00:01.949> to<00:00:02.010> do<00:00:02.220> lab<00:00:02.929> 3.5<00:00:03.929> performs

00:00:04.700 --> 00:00:04.710 
again we're going to do lab 3.5 performs

00:00:04.710 --> 00:00:07.760 
again we're going to do lab 3.5 performs
12<00:00:05.390> and<00:00:06.390> install<00:00:06.810> some<00:00:07.080> memory<00:00:07.410> we<00:00:07.560> have<00:00:07.649> to

00:00:07.760 --> 00:00:07.770 
12 and install some memory we have to

00:00:07.770 --> 00:00:10.100 
12 and install some memory we have to
choose<00:00:08.040> the<00:00:08.340> correct<00:00:08.519> memory<00:00:09.179> for<00:00:09.540> the<00:00:09.750> given

00:00:10.100 --> 00:00:10.110 
choose the correct memory for the given

00:00:10.110 --> 00:00:12.820 
choose the correct memory for the given
motherboard<00:00:10.849> let's<00:00:11.849> go<00:00:11.969> ahead<00:00:12.059> and<00:00:12.240> start<00:00:12.480> the

00:00:12.820 --> 00:00:12.830 
motherboard let's go ahead and start the

00:00:12.830 --> 00:00:18.620 
motherboard let's go ahead and start the
lab<00:00:13.830> up<00:00:15.440> now<00:00:16.640> one<00:00:17.640> of<00:00:17.730> the<00:00:17.820> things<00:00:18.060> they<00:00:18.359> tell

00:00:18.620 --> 00:00:18.630 
lab up now one of the things they tell

00:00:18.630 --> 00:00:21.679 
lab up now one of the things they tell
you<00:00:18.810> to<00:00:18.960> do<00:00:19.109> is<00:00:19.350> get<00:00:20.220> a<00:00:20.250> good<00:00:20.460> look<00:00:20.730> at<00:00:21.090> the

00:00:21.679 --> 00:00:21.689 
you to do is get a good look at the

00:00:21.689 --> 00:00:24.710 
you to do is get a good look at the
motherboard<00:00:22.439> and<00:00:22.650> the<00:00:22.859> memory<00:00:23.250> slots<00:00:23.609> now<00:00:24.449> we

00:00:24.710 --> 00:00:24.720 
motherboard and the memory slots now we

00:00:24.720 --> 00:00:30.050 
motherboard and the memory slots now we
can<00:00:24.900> zoom<00:00:25.199> in<00:00:26.210> using<00:00:27.210> this<00:00:27.330> slide<00:00:27.630> bar<00:00:28.880> you<00:00:29.880> can

00:00:30.050 --> 00:00:30.060 
can zoom in using this slide bar you can

00:00:30.060 --> 00:00:35.030 
can zoom in using this slide bar you can
move<00:00:30.240> over<00:00:30.449> and<00:00:30.689> we<00:00:30.840> can<00:00:30.990> see<00:00:32.630> now<00:00:34.040> there's

00:00:35.030 --> 00:00:35.040 
move over and we can see now there's

00:00:35.040 --> 00:00:39.530 
move over and we can see now there's
some<00:00:35.219> slightly<00:00:35.700> offset<00:00:35.880> there's<00:00:36.510> only<00:00:38.540> one

00:00:39.530 --> 00:00:39.540 
some slightly offset there's only one

00:00:39.540 --> 00:00:46.130 
some slightly offset there's only one
break<00:00:41.719> this<00:00:42.719> one<00:00:42.930> has<00:00:43.170> two<00:00:44.600> and<00:00:45.600> that<00:00:45.690> helps<00:00:46.020> us

00:00:46.130 --> 00:00:46.140 
break this one has two and that helps us

00:00:46.140 --> 00:00:49.639 
break this one has two and that helps us
decide<00:00:46.590> which<00:00:47.840> memory<00:00:48.840> sticks<00:00:49.170> we're<00:00:49.410> going

00:00:49.639 --> 00:00:49.649 
decide which memory sticks we're going

00:00:49.649 --> 00:00:54.920 
decide which memory sticks we're going
to<00:00:49.829> install<00:00:51.199> ok<00:00:52.610> now<00:00:53.610> let's<00:00:53.910> expand<00:00:54.719> the

00:00:54.920 --> 00:00:54.930 
to install ok now let's expand the

00:00:54.930 --> 00:00:57.529 
to install ok now let's expand the
memory<00:00:55.110> modules<00:00:55.649> on<00:00:55.770> the<00:00:55.800> left<00:00:56.129> and<00:00:56.460> when<00:00:57.449> it

00:00:57.529 --> 00:00:57.539 
memory modules on the left and when it

00:00:57.539 --> 00:00:59.979 
memory modules on the left and when it
comes<00:00:57.809> to<00:00:58.109> this<00:00:58.289> motherboard<00:00:58.739> on<00:00:59.039> the<00:00:59.129> left

00:00:59.979 --> 00:00:59.989 
comes to this motherboard on the left

00:00:59.989 --> 00:01:04.130 
comes to this motherboard on the left
there's<00:01:00.989> only<00:01:01.230> one<00:01:01.969> stick<00:01:02.969> of<00:01:03.149> RAM<00:01:03.390> that<00:01:03.930> will

00:01:04.130 --> 00:01:04.140 
there's only one stick of RAM that will

00:01:04.140 --> 00:01:10.810 
there's only one stick of RAM that will
apply<00:01:04.760> that's<00:01:05.760> the<00:01:05.939> second<00:01:06.360> one

00:01:10.810 --> 00:01:10.820 

00:01:10.820 --> 00:01:15.820 

site<00:01:11.330> requires<00:01:12.729> error-correction<00:01:14.620> and<00:01:15.620> we

00:01:15.820 --> 00:01:15.830 
site requires error-correction and we

00:01:15.830 --> 00:01:17.800 
site requires error-correction and we
have<00:01:16.010> to<00:01:16.130> have<00:01:16.340> the<00:01:16.610> most<00:01:16.880> memory<00:01:17.479> associated

00:01:17.800 --> 00:01:17.810 
have to have the most memory associated

00:01:17.810 --> 00:01:20.110 
have to have the most memory associated
with<00:01:18.320> it<00:01:18.440> so<00:01:18.680> you<00:01:19.400> have<00:01:19.520> to<00:01:19.580> choose<00:01:19.850> between

00:01:20.110 --> 00:01:20.120 
with it so you have to choose between

00:01:20.120 --> 00:01:23.490 
with it so you have to choose between
these<00:01:20.600> two<00:01:21.080> the<00:01:21.860> second<00:01:22.310> and<00:01:22.490> the<00:01:22.729> fourth<00:01:22.940> one

00:01:23.490 --> 00:01:23.500 
these two the second and the fourth one

00:01:23.500 --> 00:01:26.440 
these two the second and the fourth one
given<00:01:24.500> the<00:01:24.590> two<00:01:24.770> the<00:01:25.550> fourth<00:01:25.880> one's<00:01:26.090> going<00:01:26.360> to

00:01:26.440 --> 00:01:26.450 
given the two the fourth one's going to

00:01:26.450 --> 00:01:29.320 
given the two the fourth one's going to
have<00:01:26.570> more<00:01:26.810> memory<00:01:27.229> and<00:01:27.550> we'll<00:01:28.550> drop<00:01:28.850> that<00:01:29.180> one

00:01:29.320 --> 00:01:29.330 
have more memory and we'll drop that one

00:01:29.330 --> 00:01:35.499 
have more memory and we'll drop that one
right<00:01:29.570> in<00:01:29.600> there<00:01:32.560> now<00:01:33.560> if<00:01:34.040> you<00:01:34.970> chose<00:01:35.240> the

00:01:35.499 --> 00:01:35.509 
right in there now if you chose the

00:01:35.509 --> 00:01:36.660 
right in there now if you chose the
wrong<00:01:35.660> one

00:01:36.660 --> 00:01:36.670 
wrong one

00:01:36.670 --> 00:01:40.150 
wrong one
reset<00:01:37.670> start<00:01:38.300> again<00:01:38.540> one<00:01:39.380> of<00:01:39.410> the<00:01:39.530> caches<00:01:39.979> on

00:01:40.150 --> 00:01:40.160 
reset start again one of the caches on

00:01:40.160 --> 00:01:44.529 
reset start again one of the caches on
this<00:01:41.080> lab<00:01:42.080> is<00:01:42.380> that<00:01:42.410> you<00:01:42.770> do<00:01:42.979> not<00:01:43.160> install<00:01:43.670> the

00:01:44.529 --> 00:01:44.539 
this lab is that you do not install the

00:01:44.539 --> 00:01:47.529 
this lab is that you do not install the
wrong<00:01:44.780> memory<00:01:45.200> I<00:01:45.380> always<00:01:45.860> have<00:01:46.039> to<00:01:46.250> go<00:01:46.539> closest

00:01:47.529 --> 00:01:47.539 
wrong memory I always have to go closest

00:01:47.539 --> 00:01:49.840 
wrong memory I always have to go closest
to<00:01:47.690> the<00:01:47.780> processor<00:01:48.440> and<00:01:49.160> we<00:01:49.250> did<00:01:49.399> that<00:01:49.520> on<00:01:49.670> both

00:01:49.840 --> 00:01:49.850 
to the processor and we did that on both

00:01:49.850 --> 00:01:54.540 
to the processor and we did that on both
of<00:01:50.090> them<00:01:50.590> let's<00:01:51.590> go<00:01:51.710> ahead<00:01:51.800> and<00:01:51.950> click<00:01:52.100> done

00:01:54.540 --> 00:01:54.550 

00:01:54.550 --> 00:01:57.670 

and<00:01:55.550> both<00:01:56.390> tasks<00:01:56.720> are<00:01:56.930> completed<00:01:57.320> hundred

00:01:57.670 --> 00:01:57.680 
and both tasks are completed hundred

00:01:57.680 --> 00:02:02.410 
and both tasks are completed hundred
percent<00:01:58.630> we'll<00:01:59.630> see<00:01:59.840> you<00:01:59.930> in<00:02:00.020> the<00:02:00.080> next<00:02:00.289> clip

