WEBVTT
Kind: captions
Language: en

00:00:00.860 --> 00:00:03.850 

let<00:00:01.610> me<00:00:01.700> now<00:00:01.819> explain<00:00:01.849> the<00:00:02.570> practical<00:00:03.260> part<00:00:03.590> of

00:00:03.850 --> 00:00:03.860 
let me now explain the practical part of

00:00:03.860 --> 00:00:05.830 
let me now explain the practical part of
the<00:00:04.310> course<00:00:04.520> paradigms<00:00:05.090> of<00:00:05.300> computer

00:00:05.830 --> 00:00:05.840 
the course paradigms of computer

00:00:05.840 --> 00:00:08.830 
the course paradigms of computer
programming<00:00:06.230> in<00:00:06.650> fact<00:00:07.190> it<00:00:07.670> consists<00:00:08.210> of<00:00:08.269> two

00:00:08.830 --> 00:00:08.840 
programming in fact it consists of two

00:00:08.840 --> 00:00:12.549 
programming in fact it consists of two
courses<00:00:09.260> given<00:00:09.950> in<00:00:10.100> sequence<00:00:10.580> levain<00:00:11.510> 1.1<00:00:12.380> X

00:00:12.549 --> 00:00:12.559 
courses given in sequence levain 1.1 X

00:00:12.559 --> 00:00:15.549 
courses given in sequence levain 1.1 X
which<00:00:13.400> is<00:00:13.580> fundamentals<00:00:14.480> of<00:00:14.630> programming<00:00:14.809> in

00:00:15.549 --> 00:00:15.559 
which is fundamentals of programming in

00:00:15.559 --> 00:00:18.730 
which is fundamentals of programming in
a<00:00:15.889> vein<00:00:16.099> 1<00:00:16.279> point<00:00:16.580> to<00:00:16.849> X<00:00:17.060> which<00:00:17.630> is<00:00:17.740> abstraction

00:00:18.730 --> 00:00:18.740 
a vein 1 point to X which is abstraction

00:00:18.740 --> 00:00:21.999 
a vein 1 point to X which is abstraction
and<00:00:18.949> concurrency<00:00:19.839> the<00:00:20.839> prerequisites<00:00:21.560> Lubin

00:00:21.999 --> 00:00:22.009 
and concurrency the prerequisites Lubin

00:00:22.009 --> 00:00:26.229 
and concurrency the prerequisites Lubin
1.1<00:00:22.759> X<00:00:22.939> are<00:00:23.380> basic<00:00:24.380> programming<00:00:25.009> skills<00:00:25.609> it

00:00:26.229 --> 00:00:26.239 
1.1 X are basic programming skills it

00:00:26.239 --> 00:00:27.729 
1.1 X are basic programming skills it
doesn't<00:00:26.509> have<00:00:26.630> to<00:00:26.720> be<00:00:26.810> very<00:00:26.960> much<00:00:27.230> you<00:00:27.439> have<00:00:27.619> to

00:00:27.729 --> 00:00:27.739 
doesn't have to be very much you have to

00:00:27.739 --> 00:00:29.769 
doesn't have to be very much you have to
have<00:00:27.859> programmed<00:00:28.730> in<00:00:28.880> at<00:00:28.999> least<00:00:29.210> one<00:00:29.539> language

00:00:29.769 --> 00:00:29.779 
have programmed in at least one language

00:00:29.779 --> 00:00:31.569 
have programmed in at least one language
and<00:00:30.169> written<00:00:30.289> at<00:00:30.529> least<00:00:30.649> a<00:00:30.919> few<00:00:31.279> small

00:00:31.569 --> 00:00:31.579 
and written at least a few small

00:00:31.579 --> 00:00:34.360 
and written at least a few small
programs<00:00:32.119> at<00:00:32.840> the<00:00:32.960> very<00:00:33.140> least<00:00:33.350> and<00:00:33.710> also<00:00:34.219> some

00:00:34.360 --> 00:00:34.370 
programs at the very least and also some

00:00:34.370 --> 00:00:36.490 
programs at the very least and also some
elementary<00:00:34.940> mathematics<00:00:35.570> this<00:00:36.050> doesn't<00:00:36.379> have

00:00:36.490 --> 00:00:36.500 
elementary mathematics this doesn't have

00:00:36.500 --> 00:00:38.529 
elementary mathematics this doesn't have
to<00:00:36.530> vary<00:00:36.829> much<00:00:36.980> either<00:00:37.250> knowledge<00:00:38.090> of<00:00:38.210> sets

00:00:38.529 --> 00:00:38.539 
to vary much either knowledge of sets

00:00:38.539 --> 00:00:40.810 
to vary much either knowledge of sets
lists<00:00:39.140> and<00:00:39.350> functions<00:00:39.859> doesn't<00:00:40.460> have<00:00:40.579> to<00:00:40.699> go

00:00:40.810 --> 00:00:40.820 
lists and functions doesn't have to go

00:00:40.820 --> 00:00:43.959 
lists and functions doesn't have to go
much<00:00:40.940> farther<00:00:41.210> and<00:00:41.539> for<00:00:42.410> Levin<00:00:42.620> 1.2<00:00:43.250> X<00:00:43.460> the

00:00:43.959 --> 00:00:43.969 
much farther and for Levin 1.2 X the

00:00:43.969 --> 00:00:46.000 
much farther and for Levin 1.2 X the
prerequisites<00:00:44.570> are<00:00:44.750> basically<00:00:45.199> the<00:00:45.589> contents

00:00:46.000 --> 00:00:46.010 
prerequisites are basically the contents

00:00:46.010 --> 00:00:48.549 
prerequisites are basically the contents
of<00:00:46.129> Louvain<00:00:46.399> 1.1<00:00:47.149> X<00:00:47.390> it<00:00:47.929> doesn't<00:00:48.109> have<00:00:48.350> to<00:00:48.469> be

00:00:48.549 --> 00:00:48.559 
of Louvain 1.1 X it doesn't have to be

00:00:48.559 --> 00:00:50.770 
of Louvain 1.1 X it doesn't have to be
the<00:00:48.739> full<00:00:48.920> contents<00:00:49.460> but<00:00:50.000> in<00:00:50.179> some<00:00:50.390> sense<00:00:50.629> we

00:00:50.770 --> 00:00:50.780 
the full contents but in some sense we

00:00:50.780 --> 00:00:52.900 
the full contents but in some sense we
do<00:00:50.929> assume<00:00:51.289> that<00:00:51.500> you<00:00:51.589> understand<00:00:52.219> what<00:00:52.789> was

00:00:52.900 --> 00:00:52.910 
do assume that you understand what was

00:00:52.910 --> 00:00:55.779 
do assume that you understand what was
given<00:00:53.089> in<00:00:53.359> the<00:00:53.480> vein<00:00:53.629> 1.1<00:00:54.260> X<00:00:54.410> there<00:00:55.309> are<00:00:55.399> 6

00:00:55.779 --> 00:00:55.789 
given in the vein 1.1 X there are 6

00:00:55.789 --> 00:00:58.419 
given in the vein 1.1 X there are 6
lessons<00:00:56.149> for<00:00:56.570> each<00:00:56.719> of<00:00:56.899> the<00:00:57.019> courses<00:00:57.410> we<00:00:58.280> will

00:00:58.419 --> 00:00:58.429 
lessons for each of the courses we will

00:00:58.429 --> 00:01:01.779 
lessons for each of the courses we will
give<00:00:58.579> one<00:00:59.030> lesson<00:00:59.359> per<00:00:59.539> week<00:00:59.989> and<00:01:00.289> in<00:01:01.249> Lorain

00:01:01.779 --> 00:01:01.789 
give one lesson per week and in Lorain

00:01:01.789 --> 00:01:05.770 
give one lesson per week and in Lorain
1.2<00:01:02.420> we<00:01:02.870> have<00:01:03.079> a<00:01:03.109> seventh<00:01:03.920> bonus<00:01:04.820> lesson<00:01:05.120> so

00:01:05.770 --> 00:01:05.780 
1.2 we have a seventh bonus lesson so

00:01:05.780 --> 00:01:08.050 
1.2 we have a seventh bonus lesson so
compared<00:01:06.320> to<00:01:06.380> the<00:01:06.530> previous<00:01:06.950> course<00:01:07.280> to<00:01:07.820> vein

00:01:08.050 --> 00:01:08.060 
compared to the previous course to vein

00:01:08.060 --> 00:01:11.230 
compared to the previous course to vein
1.0<00:01:09.020> 1x<00:01:09.620> we<00:01:10.220> have<00:01:10.310> made<00:01:10.460> some<00:01:10.610> changes<00:01:10.640> first

00:01:11.230 --> 00:01:11.240 
1.0 1x we have made some changes first

00:01:11.240 --> 00:01:12.790 
1.0 1x we have made some changes first
of<00:01:11.390> all<00:01:11.510> of<00:01:11.720> course<00:01:11.750> there's<00:01:12.230> the<00:01:12.410> split<00:01:12.650> into

00:01:12.790 --> 00:01:12.800 
of all of course there's the split into

00:01:12.800 --> 00:01:15.760 
of all of course there's the split into
two<00:01:13.460> courses<00:01:13.910> each<00:01:14.180> of<00:01:14.390> which<00:01:14.600> has<00:01:14.840> half<00:01:15.440> of

00:01:15.760 --> 00:01:15.770 
two courses each of which has half of

00:01:15.770 --> 00:01:18.790 
two courses each of which has half of
the<00:01:15.950> material<00:01:16.520> then<00:01:17.470> there<00:01:18.470> is<00:01:18.620> no

00:01:18.790 --> 00:01:18.800 
the material then there is no

00:01:18.800 --> 00:01:20.950 
the material then there is no
possibility<00:01:19.610> of<00:01:19.820> having<00:01:20.090> a<00:01:20.330> verified

00:01:20.950 --> 00:01:20.960 
possibility of having a verified

00:01:20.960 --> 00:01:24.100 
possibility of having a verified
certificate<00:01:21.770> for<00:01:22.310> each<00:01:22.400> course<00:01:22.820> there<00:01:23.720> is<00:01:23.870> in

00:01:24.100 --> 00:01:24.110 
certificate for each course there is in

00:01:24.110 --> 00:01:26.110 
certificate for each course there is in
Lorain<00:01:24.380> 1.1<00:01:25.070> X<00:01:25.250> some<00:01:25.460> new<00:01:25.610> material<00:01:26.030> on

00:01:26.110 --> 00:01:26.120 
Lorain 1.1 X some new material on

00:01:26.120 --> 00:01:28.990 
Lorain 1.1 X some new material on
computational<00:01:26.990> complexity<00:01:27.710> there<00:01:28.580> is<00:01:28.670> also<00:01:28.850> a

00:01:28.990 --> 00:01:29.000 
computational complexity there is also a

00:01:29.000 --> 00:01:31.660 
computational complexity there is also a
new<00:01:29.300> improved<00:01:29.750> grader<00:01:30.290> called<00:01:30.830> ingenious

00:01:31.660 --> 00:01:31.670 
new improved grader called ingenious

00:01:31.670 --> 00:01:34.360 
new improved grader called ingenious
which<00:01:32.420> replaces<00:01:32.840> the<00:01:33.110> Pythia<00:01:33.620> grader<00:01:33.950> that<00:01:34.280> we

00:01:34.360 --> 00:01:34.370 
which replaces the Pythia grader that we

00:01:34.370 --> 00:01:38.140 
which replaces the Pythia grader that we
used<00:01:34.550> in<00:01:34.730> Luverne<00:01:34.940> 1.0<00:01:35.810> 1x<00:01:36.520> the<00:01:37.520> Pythia<00:01:37.910> grader

00:01:38.140 --> 00:01:38.150 
used in Luverne 1.0 1x the Pythia grader

00:01:38.150 --> 00:01:40.570 
used in Luverne 1.0 1x the Pythia grader
had<00:01:38.480> some<00:01:38.750> problems<00:01:39.710> and<00:01:39.950> we<00:01:40.010> hope<00:01:40.310> that<00:01:40.460> the

00:01:40.570 --> 00:01:40.580 
had some problems and we hope that the

00:01:40.580 --> 00:01:42.850 
had some problems and we hope that the
ingenious<00:01:40.850> grader<00:01:41.780> will<00:01:42.050> do<00:01:42.170> much<00:01:42.320> better

00:01:42.850 --> 00:01:42.860 
ingenious grader will do much better

00:01:42.860 --> 00:01:45.430 
ingenious grader will do much better
we<00:01:43.400> also<00:01:43.610> simplify<00:01:44.540> the<00:01:44.600> installation<00:01:44.930> of

00:01:45.430 --> 00:01:45.440 
we also simplify the installation of

00:01:45.440 --> 00:01:47.950 
we also simplify the installation of
Mozart<00:01:45.920> using<00:01:46.640> VirtualBox<00:01:47.270> so<00:01:47.510> this<00:01:47.630> lets<00:01:47.840> you

00:01:47.950 --> 00:01:47.960 
Mozart using VirtualBox so this lets you

00:01:47.960 --> 00:01:50.380 
Mozart using VirtualBox so this lets you
create<00:01:48.140> images<00:01:48.710> and<00:01:48.980> basically<00:01:49.670> that<00:01:50.210> you

00:01:50.380 --> 00:01:50.390 
create images and basically that you

00:01:50.390 --> 00:01:53.230 
create images and basically that you
install<00:01:50.780> on<00:01:51.050> almost<00:01:51.860> any<00:01:52.220> operating<00:01:52.820> system

00:01:53.230 --> 00:01:53.240 
install on almost any operating system

00:01:53.240 --> 00:01:56.470 
install on almost any operating system
so<00:01:53.960> in<00:01:54.260> terms<00:01:54.530> of<00:01:54.710> exercises<00:01:55.550> the<00:01:55.940> exercises

00:01:56.470 --> 00:01:56.480 
so in terms of exercises the exercises

00:01:56.480 --> 00:01:58.510 
so in terms of exercises the exercises
are<00:01:56.660> very<00:01:57.170> similar<00:01:57.380> to<00:01:57.590> the<00:01:57.680> previous<00:01:58.040> Edition

00:01:58.510 --> 00:01:58.520 
are very similar to the previous Edition

00:01:58.520 --> 00:02:00.640 
are very similar to the previous Edition
there<00:01:58.970> are<00:01:59.090> conceptual<00:01:59.780> exercises<00:02:00.500> and

00:02:00.640 --> 00:02:00.650 
there are conceptual exercises and

00:02:00.650 --> 00:02:03.160 
there are conceptual exercises and
programming<00:02:01.490> exercises<00:02:01.970> the<00:02:02.630> programming

00:02:03.160 --> 00:02:03.170 
programming exercises the programming

00:02:03.170 --> 00:02:06.220 
programming exercises the programming
exercises<00:02:03.740> use<00:02:04.070> the<00:02:04.250> ingenious<00:02:04.580> grader<00:02:05.230> the

00:02:06.220 --> 00:02:06.230 
exercises use the ingenious grader the

00:02:06.230 --> 00:02:09.010 
exercises use the ingenious grader the
programming<00:02:06.710> exercises<00:02:07.220> are<00:02:07.810> programmed<00:02:08.810> in

00:02:09.010 --> 00:02:09.020 
programming exercises are programmed in

00:02:09.020 --> 00:02:11.680 
programming exercises are programmed in
the<00:02:09.140> mozart<00:02:09.740> programming<00:02:10.429> system<00:02:10.820> so<00:02:11.480> this

00:02:11.680 --> 00:02:11.690 
the mozart programming system so this

00:02:11.690 --> 00:02:13.970 
the mozart programming system so this
you<00:02:12.020> have<00:02:12.170> to<00:02:12.320> install<00:02:12.530> locally<00:02:13.160> and<00:02:13.310> as

00:02:13.970 --> 00:02:13.980 
you have to install locally and as

00:02:13.980 --> 00:02:15.559 
you have to install locally and as
I<00:02:14.010> mentioned<00:02:14.459> you<00:02:14.879> can<00:02:14.909> do<00:02:15.209> this<00:02:15.390> using

00:02:15.559 --> 00:02:15.569 
I mentioned you can do this using

00:02:15.569 --> 00:02:18.649 
I mentioned you can do this using
virtualbox<00:02:16.319> and<00:02:16.620> there<00:02:17.550> is<00:02:17.730> at<00:02:18.209> the<00:02:18.330> end<00:02:18.360> of

00:02:18.649 --> 00:02:18.659 
virtualbox and there is at the end of

00:02:18.659 --> 00:02:21.229 
virtualbox and there is at the end of
each<00:02:18.810> course<00:02:19.200> a<00:02:19.440> final<00:02:20.099> exam<00:02:20.489> so<00:02:20.819> in<00:02:20.940> terms<00:02:21.120> of

00:02:21.229 --> 00:02:21.239 
each course a final exam so in terms of

00:02:21.239 --> 00:02:23.270 
each course a final exam so in terms of
the<00:02:21.330> lesson<00:02:21.599> plan<00:02:21.840> there<00:02:22.049> are<00:02:22.170> four<00:02:22.560> main

00:02:23.270 --> 00:02:23.280 
the lesson plan there are four main

00:02:23.280 --> 00:02:26.809 
the lesson plan there are four main
themes<00:02:23.640> so<00:02:24.360> levain<00:02:24.690> 1.1<00:02:25.440> X<00:02:25.620> covers<00:02:26.430> the<00:02:26.549> first

00:02:26.809 --> 00:02:26.819 
themes so levain 1.1 X covers the first

00:02:26.819 --> 00:02:28.729 
themes so levain 1.1 X covers the first
two<00:02:27.030> themes<00:02:27.299> which<00:02:27.510> are<00:02:27.739> functional

00:02:28.729 --> 00:02:28.739 
two themes which are functional

00:02:28.739 --> 00:02:31.940 
two themes which are functional
programming<00:02:29.280> and<00:02:30.080> semantics<00:02:31.080> in<00:02:31.319> the<00:02:31.769> vein

00:02:31.940 --> 00:02:31.950 
programming and semantics in the vein

00:02:31.950 --> 00:02:36.110 
programming and semantics in the vein
1.2<00:02:32.760> X<00:02:33.000> covers<00:02:34.190> abstraction<00:02:35.190> and<00:02:35.340> concurrency

00:02:36.110 --> 00:02:36.120 
1.2 X covers abstraction and concurrency

00:02:36.120 --> 00:02:38.660 
1.2 X covers abstraction and concurrency
and<00:02:36.360> we<00:02:37.080> have<00:02:37.230> here<00:02:37.379> first<00:02:37.650> abstraction<00:02:38.519> and

00:02:38.660 --> 00:02:38.670 
and we have here first abstraction and

00:02:38.670 --> 00:02:43.460 
and we have here first abstraction and
then<00:02:39.290> concurrency<00:02:40.290> so<00:02:40.980> in<00:02:41.340> Leuven<00:02:41.940> 1.1<00:02:42.660> X<00:02:42.900> we

00:02:43.460 --> 00:02:43.470 
then concurrency so in Leuven 1.1 X we

00:02:43.470 --> 00:02:45.289 
then concurrency so in Leuven 1.1 X we
talk<00:02:43.680> first<00:02:43.860> about<00:02:44.040> recursion<00:02:44.610> in<00:02:44.909> variant

00:02:45.289 --> 00:02:45.299 
talk first about recursion in variant

00:02:45.299 --> 00:02:47.509 
talk first about recursion in variant
programming<00:02:45.870> basic<00:02:46.290> techniques<00:02:46.709> of<00:02:46.950> how<00:02:47.489> to

00:02:47.509 --> 00:02:47.519 
programming basic techniques of how to

00:02:47.519 --> 00:02:50.119 
programming basic techniques of how to
loop<00:02:48.420> and<00:02:48.690> how<00:02:48.750> to<00:02:48.810> structure<00:02:49.410> your<00:02:49.590> program

00:02:50.119 --> 00:02:50.129 
loop and how to structure your program

00:02:50.129 --> 00:02:53.259 
loop and how to structure your program
then<00:02:50.670> we<00:02:50.700> talk<00:02:50.970> about<00:02:51.150> data<00:02:52.019> structures<00:02:52.620> lists

00:02:53.259 --> 00:02:53.269 
then we talk about data structures lists

00:02:53.269 --> 00:02:56.270 
then we talk about data structures lists
trees<00:02:54.269> and<00:02:54.690> records<00:02:55.379> which<00:02:55.620> are<00:02:55.799> the<00:02:55.980> most

00:02:56.270 --> 00:02:56.280 
trees and records which are the most

00:02:56.280 --> 00:03:00.020 
trees and records which are the most
useful<00:02:57.180> and<00:02:57.629> powerful<00:02:57.900> data<00:02:58.680> structures<00:02:59.310> we

00:03:00.020 --> 00:03:00.030 
useful and powerful data structures we

00:03:00.030 --> 00:03:01.430 
useful and powerful data structures we
will<00:03:00.150> also<00:03:00.299> talk<00:03:00.540> about<00:03:00.599> computational

00:03:01.430 --> 00:03:01.440 
will also talk about computational

00:03:01.440 --> 00:03:03.920 
will also talk about computational
complexity<00:03:02.040> and<00:03:02.250> as<00:03:02.640> a<00:03:02.670> final<00:03:03.030> crowning

00:03:03.920 --> 00:03:03.930 
complexity and as a final crowning

00:03:03.930 --> 00:03:05.690 
complexity and as a final crowning
moment<00:03:04.260> in<00:03:04.379> this<00:03:04.530> course<00:03:04.829> we're<00:03:05.370> going<00:03:05.519> to

00:03:05.690 --> 00:03:05.700 
moment in this course we're going to

00:03:05.700 --> 00:03:08.089 
moment in this course we're going to
give<00:03:05.910> the<00:03:06.120> correctness<00:03:06.540> and<00:03:06.840> semantics<00:03:07.560> the

00:03:08.089 --> 00:03:08.099 
give the correctness and semantics the

00:03:08.099 --> 00:03:10.130 
give the correctness and semantics the
formal<00:03:08.519> semantics<00:03:08.940> of<00:03:09.090> a<00:03:09.180> program<00:03:09.569> so<00:03:10.079> you

00:03:10.130 --> 00:03:10.140 
formal semantics of a program so you

00:03:10.140 --> 00:03:12.979 
formal semantics of a program so you
will<00:03:10.319> know<00:03:10.470> exactly<00:03:10.819> how<00:03:11.819> programs<00:03:12.329> execute

00:03:12.979 --> 00:03:12.989 
will know exactly how programs execute

00:03:12.989 --> 00:03:16.610 
will know exactly how programs execute
when<00:03:13.530> you<00:03:13.650> finish<00:03:14.010> hoovering<00:03:14.340> 1.1<00:03:15.349> x4<00:03:16.349> Louvain

00:03:16.610 --> 00:03:16.620 
when you finish hoovering 1.1 x4 Louvain

00:03:16.620 --> 00:03:19.220 
when you finish hoovering 1.1 x4 Louvain
1.2<00:03:17.160> x<00:03:17.340> we<00:03:17.790> go<00:03:17.970> further<00:03:18.209> and<00:03:18.510> we<00:03:18.660> cover<00:03:18.930> first

00:03:19.220 --> 00:03:19.230 
1.2 x we go further and we cover first

00:03:19.230 --> 00:03:22.789 
1.2 x we go further and we cover first
abstraction<00:03:20.220> so<00:03:20.790> abstraction<00:03:21.599> is<00:03:21.750> the<00:03:21.930> idea

00:03:22.789 --> 00:03:22.799 
abstraction so abstraction is the idea

00:03:22.799 --> 00:03:24.890 
abstraction so abstraction is the idea
that<00:03:22.919> underlies<00:03:23.900> object-oriented

00:03:24.890 --> 00:03:24.900 
that underlies object-oriented

00:03:24.900 --> 00:03:27.199 
that underlies object-oriented
programming<00:03:25.410> which<00:03:25.709> is<00:03:25.889> an<00:03:26.280> elaboration<00:03:26.849> of

00:03:27.199 --> 00:03:27.209 
programming which is an elaboration of

00:03:27.209 --> 00:03:30.110 
programming which is an elaboration of
it<00:03:27.389> and<00:03:27.630> a<00:03:28.380> practical<00:03:28.980> language<00:03:29.160> Java<00:03:29.849> which

00:03:30.110 --> 00:03:30.120 
it and a practical language Java which

00:03:30.120 --> 00:03:32.720 
it and a practical language Java which
implements<00:03:30.900> it<00:03:31.019> including<00:03:31.950> other<00:03:32.160> ideas<00:03:32.549> such

00:03:32.720 --> 00:03:32.730 
implements it including other ideas such

00:03:32.730 --> 00:03:35.240 
implements it including other ideas such
as<00:03:32.760> multiple<00:03:33.299> inheritance<00:03:33.959> and<00:03:34.250> exceptions

00:03:35.240 --> 00:03:35.250 
as multiple inheritance and exceptions

00:03:35.250 --> 00:03:37.159 
as multiple inheritance and exceptions
which<00:03:35.700> are<00:03:35.910> a<00:03:35.970> way<00:03:36.000> of<00:03:36.150> handling<00:03:36.450> rare<00:03:36.989> or

00:03:37.159 --> 00:03:37.169 
which are a way of handling rare or

00:03:37.169 --> 00:03:39.920 
which are a way of handling rare or
erroneous<00:03:37.680> conditions<00:03:38.400> and<00:03:38.639> the<00:03:39.329> final<00:03:39.690> theme

00:03:39.920 --> 00:03:39.930 
erroneous conditions and the final theme

00:03:39.930 --> 00:03:43.250 
erroneous conditions and the final theme
is<00:03:40.139> deterministic<00:03:41.069> dataflow<00:03:41.790> concurrency<00:03:42.690> so

00:03:43.250 --> 00:03:43.260 
is deterministic dataflow concurrency so

00:03:43.260 --> 00:03:45.319 
is deterministic dataflow concurrency so
concurrent<00:03:43.769> programming<00:03:44.160> is<00:03:44.370> very<00:03:44.700> important

00:03:45.319 --> 00:03:45.329 
concurrent programming is very important

00:03:45.329 --> 00:03:47.240 
concurrent programming is very important
so<00:03:45.870> we<00:03:46.049> could<00:03:46.260> not<00:03:46.470> leave<00:03:46.709> it<00:03:46.829> out<00:03:46.980> and

00:03:47.240 --> 00:03:47.250 
so we could not leave it out and

00:03:47.250 --> 00:03:49.400 
so we could not leave it out and
deterministic<00:03:48.060> dataflow<00:03:48.450> concurrency<00:03:49.079> is<00:03:49.200> by

00:03:49.400 --> 00:03:49.410 
deterministic dataflow concurrency is by

00:03:49.410 --> 00:03:51.890 
deterministic dataflow concurrency is by
far<00:03:49.769> the<00:03:49.799> simplest<00:03:50.370> but<00:03:50.760> still<00:03:51.389> an<00:03:51.510> extremely

00:03:51.890 --> 00:03:51.900 
far the simplest but still an extremely

00:03:51.900 --> 00:03:53.509 
far the simplest but still an extremely
powerful<00:03:52.260> way<00:03:52.590> of<00:03:52.829> doing<00:03:53.040> concurrent

00:03:53.509 --> 00:03:53.519 
powerful way of doing concurrent

00:03:53.519 --> 00:03:55.789 
powerful way of doing concurrent
programming<00:03:53.940> and<00:03:54.389> we<00:03:54.989> will<00:03:55.230> use<00:03:55.410> it<00:03:55.440> to<00:03:55.620> do

00:03:55.789 --> 00:03:55.799 
programming and we will use it to do

00:03:55.799 --> 00:03:58.420 
programming and we will use it to do
multi<00:03:56.280> agent<00:03:56.730> program<00:03:57.120> with<00:03:57.329> some<00:03:57.510> very<00:03:57.870> nice

00:03:58.420 --> 00:03:58.430 
multi agent program with some very nice

00:03:58.430 --> 00:04:00.949 
multi agent program with some very nice
examples<00:03:59.430> for<00:03:59.579> example<00:03:59.780> digital<00:04:00.780> logic

00:04:00.949 --> 00:04:00.959 
examples for example digital logic

00:04:00.959 --> 00:04:03.860 
examples for example digital logic
simulation<00:04:01.349> and<00:04:01.950> in<00:04:02.700> the<00:04:02.819> final<00:04:03.209> lesson<00:04:03.329> we

00:04:03.860 --> 00:04:03.870 
simulation and in the final lesson we

00:04:03.870 --> 00:04:06.619 
simulation and in the final lesson we
will<00:04:04.079> take<00:04:04.620> a<00:04:04.650> step<00:04:04.950> back<00:04:05.220> look<00:04:05.549> at<00:04:06.269> all<00:04:06.389> of<00:04:06.540> the

00:04:06.619 --> 00:04:06.629 
will take a step back look at all of the

00:04:06.629 --> 00:04:08.599 
will take a step back look at all of the
paradigms<00:04:06.930> look<00:04:07.500> at<00:04:07.620> how<00:04:07.709> everything<00:04:08.190> fits

00:04:08.599 --> 00:04:08.609 
paradigms look at how everything fits

00:04:08.609 --> 00:04:11.360 
paradigms look at how everything fits
together<00:04:08.879> so<00:04:09.629> you<00:04:09.720> can<00:04:09.870> see<00:04:10.109> the<00:04:10.650> uniformity

00:04:11.360 --> 00:04:11.370 
together so you can see the uniformity

00:04:11.370 --> 00:04:13.250 
together so you can see the uniformity
how<00:04:11.489> everything<00:04:11.970> is<00:04:12.090> structured<00:04:12.389> and<00:04:12.720> also

00:04:13.250 --> 00:04:13.260 
how everything is structured and also

00:04:13.260 --> 00:04:16.310 
how everything is structured and also
give<00:04:13.470> some<00:04:13.799> hints<00:04:14.609> and<00:04:14.760> links<00:04:15.150> for<00:04:15.810> people<00:04:16.229> who

00:04:16.310 --> 00:04:16.320 
give some hints and links for people who

00:04:16.320 --> 00:04:18.319 
give some hints and links for people who
want<00:04:16.530> to<00:04:16.560> further<00:04:16.889> the<00:04:17.130> studies<00:04:17.489> and<00:04:17.849> then

00:04:18.319 --> 00:04:18.329 
want to further the studies and then

00:04:18.329 --> 00:04:20.810 
want to further the studies and then
there<00:04:18.630> is<00:04:18.720> the<00:04:18.840> bonus<00:04:19.019> lesson<00:04:19.500> on<00:04:19.650> multi<00:04:20.430> agent

00:04:20.810 --> 00:04:20.820 
there is the bonus lesson on multi agent

00:04:20.820 --> 00:04:23.300 
there is the bonus lesson on multi agent
dataflow<00:04:21.269> this<00:04:21.810> is<00:04:22.019> the<00:04:22.229> nicest<00:04:22.440> general

00:04:23.300 --> 00:04:23.310 
dataflow this is the nicest general

00:04:23.310 --> 00:04:26.510 
dataflow this is the nicest general
concurrent<00:04:23.940> programming<00:04:24.300> paradigm<00:04:24.870> so<00:04:25.740> it

00:04:26.510 --> 00:04:26.520 
concurrent programming paradigm so it

00:04:26.520 --> 00:04:27.680 
concurrent programming paradigm so it
was<00:04:26.700> very<00:04:26.909> hard<00:04:27.090> for<00:04:27.300> us<00:04:27.360> to<00:04:27.419> the

00:04:27.680 --> 00:04:27.690 
was very hard for us to the

00:04:27.690 --> 00:04:30.350 
was very hard for us to the
without<00:04:27.900> so<00:04:28.260> we<00:04:28.380> had<00:04:28.880> software<00:04:29.880> that<00:04:30.210> we<00:04:30.330> use

00:04:30.350 --> 00:04:30.360 
without so we had software that we use

00:04:30.360 --> 00:04:32.120 
without so we had software that we use
so<00:04:30.960> first<00:04:31.170> of<00:04:31.260> all<00:04:31.350> is<00:04:31.440> the<00:04:31.560> EDX<00:04:31.890> platform

00:04:32.120 --> 00:04:32.130 
so first of all is the EDX platform

00:04:32.130 --> 00:04:34.640 
so first of all is the EDX platform
which<00:04:32.640> integrates<00:04:33.120> ingenious<00:04:33.750> with<00:04:34.530> the

00:04:34.640 --> 00:04:34.650 
which integrates ingenious with the

00:04:34.650 --> 00:04:37.010 
which integrates ingenious with the
documentation<00:04:35.460> so<00:04:35.940> the<00:04:36.030> textbook<00:04:36.390> and<00:04:36.720> slides

00:04:37.010 --> 00:04:37.020 
documentation so the textbook and slides

00:04:37.020 --> 00:04:39.620 
documentation so the textbook and slides
and<00:04:37.380> of<00:04:38.100> course<00:04:38.310> their<00:04:38.490> discussion<00:04:39.030> forms<00:04:39.390> and

00:04:39.620 --> 00:04:39.630 
and of course their discussion forms and

00:04:39.630 --> 00:04:41.180 
and of course their discussion forms and
I<00:04:39.780> will<00:04:39.960> participate<00:04:40.560> in<00:04:40.770> these<00:04:40.860> forums

00:04:41.180 --> 00:04:41.190 
I will participate in these forums

00:04:41.190 --> 00:04:43.730 
I will participate in these forums
either<00:04:41.610> with<00:04:41.760> the<00:04:42.210> teaching<00:04:42.570> assistants<00:04:43.080> then

00:04:43.730 --> 00:04:43.740 
either with the teaching assistants then

00:04:43.740 --> 00:04:46.010 
either with the teaching assistants then
there's<00:04:43.950> the<00:04:44.100> ingenious<00:04:44.220> grader<00:04:45.000> which<00:04:45.840> will

00:04:46.010 --> 00:04:46.020 
there's the ingenious grader which will

00:04:46.020 --> 00:04:47.720 
there's the ingenious grader which will
give<00:04:46.170> you<00:04:46.260> feedback<00:04:46.530> on<00:04:47.070> your<00:04:47.100> programming

00:04:47.720 --> 00:04:47.730 
give you feedback on your programming

00:04:47.730 --> 00:04:50.180 
give you feedback on your programming
errors<00:04:48.060> and<00:04:48.300> it<00:04:48.780> runs<00:04:49.020> with<00:04:49.230> its<00:04:49.380> own<00:04:49.530> version

00:04:50.180 --> 00:04:50.190 
errors and it runs with its own version

00:04:50.190 --> 00:04:52.220 
errors and it runs with its own version
of<00:04:50.310> Mozart<00:04:50.790> internally<00:04:51.390> and<00:04:51.600> then<00:04:52.020> there's

00:04:52.220 --> 00:04:52.230 
of Mozart internally and then there's

00:04:52.230 --> 00:04:54.950 
of Mozart internally and then there's
the<00:04:52.380> mozart<00:04:52.710> system<00:04:53.130> so<00:04:53.850> basically<00:04:54.300> mozart

00:04:54.950 --> 00:04:54.960 
the mozart system so basically mozart

00:04:54.960 --> 00:04:56.690 
the mozart system so basically mozart
implements<00:04:55.470> the<00:04:55.590> odds<00:04:55.740> language<00:04:56.340> which<00:04:56.550> is

00:04:56.690 --> 00:04:56.700 
implements the odds language which is

00:04:56.700 --> 00:04:59.390 
implements the odds language which is
the<00:04:56.730> language<00:04:56.880> that<00:04:57.720> lets<00:04:57.930> us<00:04:58.170> express<00:04:59.070> all<00:04:59.340> of

00:04:59.390 --> 00:04:59.400 
the language that lets us express all of

00:04:59.400 --> 00:05:01.790 
the language that lets us express all of
the<00:04:59.670> different<00:05:00.030> paradigms<00:05:00.540> you<00:05:01.170> do<00:05:01.440> need<00:05:01.650> to

00:05:01.790 --> 00:05:01.800 
the different paradigms you do need to

00:05:01.800 --> 00:05:03.800 
the different paradigms you do need to
install<00:05:02.100> it<00:05:02.310> locally<00:05:02.490> you<00:05:03.210> can<00:05:03.390> either<00:05:03.540> use<00:05:03.780> a

00:05:03.800 --> 00:05:03.810 
install it locally you can either use a

00:05:03.810 --> 00:05:06.200 
install it locally you can either use a
simplified<00:05:04.440> installation<00:05:05.100> or<00:05:05.340> for<00:05:06.120> the

00:05:06.200 --> 00:05:06.210 
simplified installation or for the

00:05:06.210 --> 00:05:08.360 
simplified installation or for the
courageous<00:05:06.630> ones<00:05:06.900> a<00:05:07.170> complete<00:05:07.830> full

00:05:08.360 --> 00:05:08.370 
courageous ones a complete full

00:05:08.370 --> 00:05:11.320 
courageous ones a complete full
installation<00:05:09.120> so<00:05:09.930> the<00:05:10.050> course<00:05:10.290> textbook<00:05:10.830> is

00:05:11.320 --> 00:05:11.330 
installation so the course textbook is

00:05:11.330 --> 00:05:13.970 
installation so the course textbook is
concepts<00:05:12.330> techniques<00:05:13.080> and<00:05:13.350> models<00:05:13.860> of

00:05:13.970 --> 00:05:13.980 
concepts techniques and models of

00:05:13.980 --> 00:05:15.800 
concepts techniques and models of
computer<00:05:14.400> programming<00:05:14.790> published<00:05:15.570> by<00:05:15.660> MIT

00:05:15.800 --> 00:05:15.810 
computer programming published by MIT

00:05:15.810 --> 00:05:18.710 
computer programming published by MIT
press<00:05:16.080> in<00:05:16.470> 2004<00:05:17.220> it's<00:05:17.730> still<00:05:18.030> popular<00:05:18.240> now

00:05:18.710 --> 00:05:18.720 
press in 2004 it's still popular now

00:05:18.720 --> 00:05:20.900 
press in 2004 it's still popular now
which<00:05:19.290> is<00:05:19.500> quite<00:05:19.890> unusual<00:05:20.310> for<00:05:20.340> a<00:05:20.520> programming

00:05:20.900 --> 00:05:20.910 
which is quite unusual for a programming

00:05:20.910 --> 00:05:23.180 
which is quite unusual for a programming
textbook<00:05:21.420> in<00:05:21.900> fact<00:05:22.110> it<00:05:22.260> has<00:05:22.380> garnered<00:05:22.800> quite<00:05:23.160> a

00:05:23.180 --> 00:05:23.190 
textbook in fact it has garnered quite a

00:05:23.190 --> 00:05:25.940 
textbook in fact it has garnered quite a
reputation<00:05:23.490> so<00:05:24.390> part<00:05:24.780> of<00:05:24.900> this<00:05:25.050> book<00:05:25.290> will<00:05:25.830> be

00:05:25.940 --> 00:05:25.950 
reputation so part of this book will be

00:05:25.950 --> 00:05:28.460 
reputation so part of this book will be
made<00:05:26.190> available<00:05:26.370> for<00:05:27.330> free<00:05:27.570> for<00:05:28.110> people

00:05:28.460 --> 00:05:28.470 
made available for free for people

00:05:28.470 --> 00:05:31.700 
made available for free for people
following<00:05:29.190> the<00:05:29.400> course

