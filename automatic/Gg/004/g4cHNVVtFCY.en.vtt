WEBVTT
Kind: captions
Language: en

00:00:06.740 --> 00:00:10.790 

is<00:00:07.740> Ruby<00:00:08.189> on<00:00:08.370> Rails<00:00:08.400> hard<00:00:09.059> to<00:00:09.210> learn<00:00:09.679> Ruby<00:00:10.679> on

00:00:10.790 --> 00:00:10.800 
is Ruby on Rails hard to learn Ruby on

00:00:10.800 --> 00:00:12.950 
is Ruby on Rails hard to learn Ruby on
Rails<00:00:10.830> is<00:00:11.340> evolving<00:00:11.790> so<00:00:12.120> fast<00:00:12.480> that<00:00:12.630> it<00:00:12.840> is

00:00:12.950 --> 00:00:12.960 
Rails is evolving so fast that it is

00:00:12.960 --> 00:00:14.810 
Rails is evolving so fast that it is
hard<00:00:13.170> to<00:00:13.290> sort<00:00:13.679> out<00:00:13.799> the<00:00:13.950> latest<00:00:14.160> and<00:00:14.490> greatest

00:00:14.810 --> 00:00:14.820 
hard to sort out the latest and greatest

00:00:14.820 --> 00:00:16.660 
hard to sort out the latest and greatest
from<00:00:15.059> the<00:00:15.240> addition<00:00:15.750> you<00:00:15.900> are<00:00:16.049> working<00:00:16.500> with

00:00:16.660 --> 00:00:16.670 
from the addition you are working with

00:00:16.670 --> 00:00:20.179 
from the addition you are working with
that<00:00:17.670> makes<00:00:18.000> it<00:00:18.210> harder<00:00:18.630> to<00:00:18.660> learn<00:00:18.920> then<00:00:19.920> again

00:00:20.179 --> 00:00:20.189 
that makes it harder to learn then again

00:00:20.189 --> 00:00:22.400 
that makes it harder to learn then again
i<00:00:20.699> should<00:00:21.150> get<00:00:21.330> good<00:00:21.570> money<00:00:21.720> if<00:00:21.990> i'm<00:00:22.170> on<00:00:22.320> the

00:00:22.400 --> 00:00:22.410 
i should get good money if i'm on the

00:00:22.410 --> 00:00:25.009 
i should get good money if i'm on the
bleeding<00:00:22.590> edge<00:00:23.029> you'll<00:00:24.029> learn<00:00:24.210> it<00:00:24.420> faster<00:00:24.869> if

00:00:25.009 --> 00:00:25.019 
bleeding edge you'll learn it faster if

00:00:25.019 --> 00:00:28.040 
bleeding edge you'll learn it faster if
you<00:00:25.140> know<00:00:25.320> the<00:00:25.529> MVC<00:00:26.070> model<00:00:26.420> can<00:00:27.420> i<00:00:27.539> learn<00:00:27.689> ruby

00:00:28.040 --> 00:00:28.050 
you know the MVC model can i learn ruby

00:00:28.050 --> 00:00:31.009 
you know the MVC model can i learn ruby
from<00:00:28.230> the<00:00:28.289> documentation<00:00:29.250> or<00:00:29.429> books<00:00:29.900> Ruby<00:00:30.900> on

00:00:31.009 --> 00:00:31.019 
from the documentation or books Ruby on

00:00:31.019 --> 00:00:33.260 
from the documentation or books Ruby on
Rails<00:00:31.050> is<00:00:31.560> the<00:00:31.679> biggest<00:00:32.090> inconsistent<00:00:33.090> mess

00:00:33.260 --> 00:00:33.270 
Rails is the biggest inconsistent mess

00:00:33.270 --> 00:00:36.049 
Rails is the biggest inconsistent mess
of<00:00:33.480> documentation<00:00:34.140> on<00:00:34.500> the<00:00:34.739> web<00:00:34.890> and<00:00:35.190> its

00:00:36.049 --> 00:00:36.059 
of documentation on the web and its

00:00:36.059 --> 00:00:38.119 
of documentation on the web and its
rapid<00:00:36.540> evolution<00:00:37.170> means<00:00:37.380> most<00:00:37.710> books<00:00:37.950> are

00:00:38.119 --> 00:00:38.129 
rapid evolution means most books are

00:00:38.129 --> 00:00:40.119 
rapid evolution means most books are
outdated<00:00:38.550> by<00:00:38.879> the<00:00:38.940> time<00:00:39.329> they<00:00:39.540> hit<00:00:39.750> stores

00:00:40.119 --> 00:00:40.129 
outdated by the time they hit stores

00:00:40.129 --> 00:00:42.830 
outdated by the time they hit stores
it's<00:00:41.129> all<00:00:41.399> object-oriented<00:00:42.390> programming

00:00:42.830 --> 00:00:42.840 
it's all object-oriented programming

00:00:42.840 --> 00:00:45.410 
it's all object-oriented programming
this<00:00:43.079> art<00:00:43.320> if<00:00:44.219> you<00:00:44.460> have<00:00:44.640> experience<00:00:45.239> with

00:00:45.410 --> 00:00:45.420 
this art if you have experience with

00:00:45.420 --> 00:00:47.500 
this art if you have experience with
other<00:00:45.690> languages<00:00:46.350> that<00:00:46.559> use<00:00:46.620> data<00:00:47.129> types

00:00:47.500 --> 00:00:47.510 
other languages that use data types

00:00:47.510 --> 00:00:49.970 
other languages that use data types
conditionals<00:00:48.510> and<00:00:48.660> variables<00:00:49.260> ruby<00:00:49.950> is

00:00:49.970 --> 00:00:49.980 
conditionals and variables ruby is

00:00:49.980 --> 00:00:52.939 
conditionals and variables ruby is
easier<00:00:50.670> if<00:00:51.510> you<00:00:51.780> only<00:00:52.020> know<00:00:52.320> functional

00:00:52.939 --> 00:00:52.949 
easier if you only know functional

00:00:52.949 --> 00:00:55.850 
easier if you only know functional
programming<00:00:53.430> it<00:00:53.670> is<00:00:54.059> harder<00:00:54.510> I<00:00:54.690> could<00:00:55.590> skip

00:00:55.850 --> 00:00:55.860 
programming it is harder I could skip

00:00:55.860 --> 00:00:58.369 
programming it is harder I could skip
learning<00:00:56.250> rails<00:00:56.629> you<00:00:57.629> can<00:00:57.809> learn<00:00:57.960> Ruby

00:00:58.369 --> 00:00:58.379 
learning rails you can learn Ruby

00:00:58.379 --> 00:01:00.650 
learning rails you can learn Ruby
without<00:00:58.710> rails<00:00:59.039> but<00:00:59.670> the<00:00:59.789> code<00:01:00.030> will<00:01:00.300> be<00:01:00.329> more

00:01:00.650 --> 00:01:00.660 
without rails but the code will be more

00:01:00.660 --> 00:01:03.650 
without rails but the code will be more
complex<00:01:01.109> and<00:01:01.379> verbose<00:01:01.739> and<00:01:02.180> Ruby<00:01:03.180> is<00:01:03.300> hardly

00:01:03.650 --> 00:01:03.660 
complex and verbose and Ruby is hardly

00:01:03.660 --> 00:01:06.590 
complex and verbose and Ruby is hardly
used<00:01:04.049> without<00:01:04.260> rails<00:01:04.739> I<00:01:05.100> can<00:01:06.060> speed<00:01:06.330> up<00:01:06.360> the

00:01:06.590 --> 00:01:06.600 
used without rails I can speed up the

00:01:06.600 --> 00:01:08.390 
used without rails I can speed up the
learning<00:01:06.900> process<00:01:07.049> with<00:01:07.500> a<00:01:07.530> lot<00:01:07.770> of<00:01:07.799> practice

00:01:08.390 --> 00:01:08.400 
learning process with a lot of practice

00:01:08.400 --> 00:01:11.359 
learning process with a lot of practice
on<00:01:08.610> my<00:01:08.790> own<00:01:08.970> machine<00:01:09.710> windows<00:01:10.710> development

00:01:11.359 --> 00:01:11.369 
on my own machine windows development

00:01:11.369 --> 00:01:13.420 
on my own machine windows development
will<00:01:11.549> knock<00:01:11.760> Ruby<00:01:12.150> off<00:01:12.360> the<00:01:12.600> rails<00:01:12.840> and<00:01:13.229> the

00:01:13.420 --> 00:01:13.430 
will knock Ruby off the rails and the

00:01:13.430 --> 00:01:16.070 
will knock Ruby off the rails and the
Ruby<00:01:14.430> community<00:01:14.580> has<00:01:15.119> little<00:01:15.479> out<00:01:15.630> there<00:01:15.900> to

00:01:16.070 --> 00:01:16.080 
Ruby community has little out there to

00:01:16.080 --> 00:01:18.649 
Ruby community has little out there to
help<00:01:16.259> you<00:01:16.470> I<00:01:16.680> might<00:01:17.549> as<00:01:17.700> well<00:01:17.729> start<00:01:18.240> studying

00:01:18.649 --> 00:01:18.659 
help you I might as well start studying

00:01:18.659 --> 00:01:22.789 
help you I might as well start studying
Objective<00:01:19.259> C<00:01:19.490> that's<00:01:20.490> IO<00:01:20.790> is<00:01:21.030> specific<00:01:21.630> to<00:01:21.799> if

00:01:22.789 --> 00:01:22.799 
Objective C that's IO is specific to if

00:01:22.799 --> 00:01:25.370 
Objective C that's IO is specific to if
you<00:01:23.009> want<00:01:23.250> to<00:01:23.369> learn<00:01:23.520> Ruby<00:01:23.939> get<00:01:24.150> a<00:01:24.180> Mac<00:01:24.420> that's

00:01:25.370 --> 00:01:25.380 
you want to learn Ruby get a Mac that's

00:01:25.380 --> 00:01:28.100 
you want to learn Ruby get a Mac that's
quite<00:01:25.799> an<00:01:25.950> investment<00:01:26.360> it<00:01:27.360> takes<00:01:27.720> months<00:01:28.020> to

00:01:28.100 --> 00:01:28.110 
quite an investment it takes months to

00:01:28.110 --> 00:01:30.310 
quite an investment it takes months to
years<00:01:28.439> to<00:01:28.710> get<00:01:28.890> good<00:01:29.070> at<00:01:29.130> ruby<00:01:29.490> on<00:01:29.670> rails

00:01:30.310 --> 00:01:30.320 
years to get good at ruby on rails

00:01:30.320 --> 00:01:33.590 
years to get good at ruby on rails
that's<00:01:31.320> a<00:01:31.530> major<00:01:31.740> time<00:01:32.100> investment<00:01:32.600> but

00:01:33.590 --> 00:01:33.600 
that's a major time investment but

00:01:33.600 --> 00:01:35.690 
that's a major time investment but
developers<00:01:34.110> who<00:01:34.290> learn<00:01:34.500> Ruby<00:01:34.829> on<00:01:35.009> Rails<00:01:35.040> tend

00:01:35.690 --> 00:01:35.700 
developers who learn Ruby on Rails tend

00:01:35.700 --> 00:01:37.910 
developers who learn Ruby on Rails tend
to<00:01:35.820> about<00:01:36.119> new<00:01:36.329> applications<00:01:37.049> as<00:01:37.259> fast<00:01:37.500> as<00:01:37.770> the

00:01:37.910 --> 00:01:37.920 
to about new applications as fast as the

00:01:37.920 --> 00:01:40.190 
to about new applications as fast as the
internet<00:01:38.340> demands<00:01:38.670> them<00:01:38.970> the<00:01:39.930> rails

00:01:40.190 --> 00:01:40.200 
internet demands them the rails

00:01:40.200 --> 00:01:42.560 
internet demands them the rails
framework<00:01:40.560> makes<00:01:40.979> working<00:01:41.340> with<00:01:41.640> Ruby<00:01:42.030> faster

00:01:42.560 --> 00:01:42.570 
framework makes working with Ruby faster

00:01:42.570 --> 00:01:44.480 
framework makes working with Ruby faster
but<00:01:42.990> learning<00:01:43.229> the<00:01:43.380> framework<00:01:43.920> slows<00:01:44.250> down

00:01:44.480 --> 00:01:44.490 
but learning the framework slows down

00:01:44.490 --> 00:01:47.120 
but learning the framework slows down
your<00:01:44.549> learning<00:01:45.060> learn<00:01:45.960> the<00:01:46.200> framework<00:01:46.799> along

00:01:47.120 --> 00:01:47.130 
your learning learn the framework along

00:01:47.130 --> 00:01:48.920 
your learning learn the framework along
with<00:01:47.340> the<00:01:47.430> code<00:01:47.670> and<00:01:47.939> you'll<00:01:48.360> get<00:01:48.630> up<00:01:48.780> the

00:01:48.920 --> 00:01:48.930 
with the code and you'll get up the

00:01:48.930 --> 00:01:51.679 
with the code and you'll get up the
productivity<00:01:49.710> curve<00:01:49.950> faster<00:01:50.540> build<00:01:51.540> a

00:01:51.679 --> 00:01:51.689 
productivity curve faster build a

00:01:51.689 --> 00:01:53.660 
productivity curve faster build a
framework<00:01:51.990> and<00:01:52.350> you<00:01:52.560> can<00:01:52.770> learn<00:01:52.920> code<00:01:53.280> fast

00:01:53.660 --> 00:01:53.670 
framework and you can learn code fast

00:01:53.670 --> 00:02:00.580 
framework and you can learn code fast
enough<00:01:54.000> to<00:01:54.149> hang<00:01:54.329> yourself<00:01:54.890> only<00:01:55.890> technically

00:02:00.580 --> 00:02:00.590 

00:02:00.590 --> 00:02:02.649 

you

