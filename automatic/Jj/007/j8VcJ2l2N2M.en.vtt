WEBVTT
Kind: captions
Language: en

00:00:04.069 --> 00:00:06.469 

hello<00:00:05.069> everyone<00:00:05.430> this<00:00:05.460> is<00:00:05.640> a<00:00:05.850> quick<00:00:06.120> video<00:00:06.300> I

00:00:06.469 --> 00:00:06.479 
hello everyone this is a quick video I

00:00:06.479 --> 00:00:08.480 
hello everyone this is a quick video I
wanted<00:00:06.779> to<00:00:06.840> make<00:00:06.930> covering<00:00:07.529> this<00:00:07.710> project<00:00:08.370> I'm

00:00:08.480 --> 00:00:08.490 
wanted to make covering this project I'm

00:00:08.490 --> 00:00:12.320 
wanted to make covering this project I'm
working<00:00:08.519> on<00:00:09.260> the<00:00:10.260> goal<00:00:10.470> is<00:00:10.590> to<00:00:10.620> build<00:00:10.830> a<00:00:11.330> full

00:00:12.320 --> 00:00:12.330 
working on the goal is to build a full

00:00:12.330 --> 00:00:14.720 
working on the goal is to build a full
computer<00:00:12.929> system<00:00:13.259> based<00:00:13.740> on<00:00:13.980> the<00:00:14.129> motorola

00:00:14.720 --> 00:00:14.730 
computer system based on the motorola

00:00:14.730 --> 00:00:18.710 
computer system based on the motorola
68000<00:00:15.599> processor<00:00:17.119> haven't<00:00:18.119> decided<00:00:18.390> on<00:00:18.570> this

00:00:18.710 --> 00:00:18.720 
68000 processor haven't decided on this

00:00:18.720 --> 00:00:21.140 
68000 processor haven't decided on this
specific<00:00:19.230> specifics<00:00:20.130> yet<00:00:20.400> I<00:00:20.430> will<00:00:20.940> probably

00:00:21.140 --> 00:00:21.150 
specific specifics yet I will probably

00:00:21.150 --> 00:00:25.430 
specific specifics yet I will probably
go<00:00:21.480> with<00:00:21.570> a<00:00:21.630> VM<00:00:21.960> II<00:00:22.110> bus<00:00:22.970> but<00:00:24.020> the<00:00:25.020> background

00:00:25.430 --> 00:00:25.440 
go with a VM II bus but the background

00:00:25.440 --> 00:00:27.320 
go with a VM II bus but the background
on<00:00:25.710> this<00:00:25.860> chip<00:00:26.100> is<00:00:26.250> that<00:00:26.400> I<00:00:26.460> received<00:00:26.790> it<00:00:26.940> for

00:00:27.320 --> 00:00:27.330 
on this chip is that I received it for

00:00:27.330 --> 00:00:30.200 
on this chip is that I received it for
for<00:00:27.960> free<00:00:28.230> from<00:00:28.410> a<00:00:28.560> friend<00:00:28.800> of<00:00:28.890> mine<00:00:29.030> it<00:00:30.030> was

00:00:30.200 --> 00:00:30.210 
for free from a friend of mine it was

00:00:30.210 --> 00:00:32.930 
for free from a friend of mine it was
pulled<00:00:30.450> from<00:00:30.630> a<00:00:30.780> defective<00:00:31.440> Macintosh<00:00:32.070> about

00:00:32.930 --> 00:00:32.940 
pulled from a defective Macintosh about

00:00:32.940 --> 00:00:35.389 
pulled from a defective Macintosh about
15<00:00:33.300> years<00:00:33.540> ago<00:00:33.690> so<00:00:34.079> we<00:00:34.980> didn't<00:00:35.129> know<00:00:35.219> if<00:00:35.309> the

00:00:35.389 --> 00:00:35.399 
15 years ago so we didn't know if the

00:00:35.399 --> 00:00:37.639 
15 years ago so we didn't know if the
chip<00:00:35.609> was<00:00:35.789> good<00:00:35.999> or<00:00:36.120> not<00:00:36.269> so<00:00:36.570> I<00:00:37.170> built<00:00:37.499> this

00:00:37.639 --> 00:00:37.649 
chip was good or not so I built this

00:00:37.649 --> 00:00:41.509 
chip was good or not so I built this
circuit<00:00:38.460> to<00:00:38.489> see<00:00:38.760> if<00:00:38.850> it<00:00:38.940> was<00:00:39.059> viable<00:00:39.329> and<00:00:40.519> I'll

00:00:41.509 --> 00:00:41.519 
circuit to see if it was viable and I'll

00:00:41.519 --> 00:00:42.860 
circuit to see if it was viable and I'll
just<00:00:41.760> go<00:00:41.879> over<00:00:41.969> the<00:00:42.089> basics<00:00:42.120> of<00:00:42.600> what<00:00:42.749> I've<00:00:42.839> got

00:00:42.860 --> 00:00:42.870 
just go over the basics of what I've got

00:00:42.870 --> 00:00:45.979 
just go over the basics of what I've got
on<00:00:43.170> board<00:00:43.440> here<00:00:44.030> as<00:00:45.030> you<00:00:45.449> can<00:00:45.539> see<00:00:45.659> here<00:00:45.839> this

00:00:45.979 --> 00:00:45.989 
on board here as you can see here this

00:00:45.989 --> 00:00:48.259 
on board here as you can see here this
is<00:00:46.050> a<00:00:46.199> 16<00:00:46.800> megahertz<00:00:47.070> part<00:00:47.489> it<00:00:47.579> has<00:00:47.670> a<00:00:47.699> 16<00:00:48.120> at

00:00:48.259 --> 00:00:48.269 
is a 16 megahertz part it has a 16 at

00:00:48.269 --> 00:00:51.439 
is a 16 megahertz part it has a 16 at
the<00:00:48.359> end<00:00:48.510> I<00:00:48.780> am<00:00:49.769> running<00:00:50.100> it<00:00:50.190> though<00:00:50.370> with<00:00:50.579> a<00:00:50.640> 20

00:00:51.439 --> 00:00:51.449 
the end I am running it though with a 20

00:00:51.449 --> 00:00:54.500 
the end I am running it though with a 20
megahertz<00:00:51.780> crystal<00:00:52.620> and<00:00:52.800> this<00:00:53.510> clock

00:00:54.500 --> 00:00:54.510 
megahertz crystal and this clock

00:00:54.510 --> 00:00:56.689 
megahertz crystal and this clock
generation<00:00:54.929> the<00:00:55.140> circuitry<00:00:55.530> I<00:00:55.620> have<00:00:55.829> will<00:00:56.489> cut

00:00:56.689 --> 00:00:56.699 
generation the circuitry I have will cut

00:00:56.699 --> 00:00:59.540 
generation the circuitry I have will cut
that<00:00:56.819> in<00:00:56.969> half<00:00:56.999> and<00:00:57.420> feed<00:00:58.079> the<00:00:58.229> CPU<00:00:58.800> with<00:00:59.010> a<00:00:59.039> 10

00:00:59.540 --> 00:00:59.550 
that in half and feed the CPU with a 10

00:00:59.550 --> 00:01:02.149 
that in half and feed the CPU with a 10
megahertz<00:00:59.879> clock<00:01:00.269> so<00:01:01.170> it<00:01:01.289> is<00:01:01.409> under<00:01:01.620> clock<00:01:01.859> but

00:01:02.149 --> 00:01:02.159 
megahertz clock so it is under clock but

00:01:02.159 --> 00:01:05.960 
megahertz clock so it is under clock but
it<00:01:02.309> should<00:01:02.460> be<00:01:02.489> sufficient<00:01:03.350> the<00:01:04.670> ICS<00:01:05.670> I<00:01:05.820> have

00:01:05.960 --> 00:01:05.970 
it should be sufficient the ICS I have

00:01:05.970 --> 00:01:08.330 
it should be sufficient the ICS I have
over<00:01:06.210> here<00:01:06.450> there's<00:01:06.750> a<00:01:07.130> Schmitt<00:01:08.130> trigger

00:01:08.330 --> 00:01:08.340 
over here there's a Schmitt trigger

00:01:08.340 --> 00:01:11.149 
over here there's a Schmitt trigger
inverter<00:01:09.030> in<00:01:09.329> a<00:01:09.479> regular<00:01:09.810> 7404<00:01:10.799> inverter

00:01:11.149 --> 00:01:11.159 
inverter in a regular 7404 inverter

00:01:11.159 --> 00:01:13.429 
inverter in a regular 7404 inverter
these<00:01:11.880> are<00:01:12.030> taking<00:01:12.299> care<00:01:12.509> of<00:01:12.570> the<00:01:12.990> the

00:01:13.429 --> 00:01:13.439 
these are taking care of the the

00:01:13.439 --> 00:01:17.480 
these are taking care of the the
initialization<00:01:14.430> of<00:01:15.060> the<00:01:15.149> chip<00:01:15.530> the<00:01:16.530> power<00:01:17.250> up

00:01:17.480 --> 00:01:17.490 
initialization of the chip the power up

00:01:17.490 --> 00:01:21.050 
initialization of the chip the power up
you<00:01:17.640> have<00:01:17.850> to<00:01:18.560> drive<00:01:19.560> the<00:01:19.920> halt<00:01:20.399> and<00:01:20.700> reset

00:01:21.050 --> 00:01:21.060 
you have to drive the halt and reset

00:01:21.060 --> 00:01:22.550 
you have to drive the halt and reset
pins<00:01:21.299> for<00:01:21.780> a<00:01:21.810> specified<00:01:22.140> amount<00:01:22.259> of<00:01:22.469> time

00:01:22.550 --> 00:01:22.560 
pins for a specified amount of time

00:01:22.560 --> 00:01:24.260 
pins for a specified amount of time
otherwise<00:01:23.070> the<00:01:23.130> chip<00:01:23.520> will<00:01:23.759> start<00:01:24.030> up<00:01:24.119> an

00:01:24.260 --> 00:01:24.270 
otherwise the chip will start up an

00:01:24.270 --> 00:01:27.050 
otherwise the chip will start up an
indeterminate<00:01:25.200> state<00:01:25.439> so<00:01:26.130> that<00:01:26.549> needs<00:01:26.909> to<00:01:27.000> be

00:01:27.050 --> 00:01:27.060 
indeterminate state so that needs to be

00:01:27.060 --> 00:01:28.550 
indeterminate state so that needs to be
taken<00:01:27.390> care<00:01:27.420> of<00:01:27.630> so<00:01:27.719> that<00:01:27.840> just<00:01:28.110> handles<00:01:28.439> the

00:01:28.550 --> 00:01:28.560 
taken care of so that just handles the

00:01:28.560 --> 00:01:32.149 
taken care of so that just handles the
the<00:01:29.340> power<00:01:29.549> up<00:01:29.759> and<00:01:29.909> reset<00:01:30.270> functions<00:01:30.990> I<00:01:31.259> will

00:01:32.149 --> 00:01:32.159 
the power up and reset functions I will

00:01:32.159 --> 00:01:35.120 
the power up and reset functions I will
flip<00:01:32.280> the<00:01:33.170> board<00:01:34.170> over<00:01:34.320> show<00:01:34.740> what<00:01:34.859> I've<00:01:34.950> got

00:01:35.120 --> 00:01:35.130 
flip the board over show what I've got

00:01:35.130 --> 00:01:36.950 
flip the board over show what I've got
on<00:01:35.219> the<00:01:35.280> bottom<00:01:35.430> here<00:01:35.789> it's<00:01:36.240> all<00:01:36.390> wire<00:01:36.630> wrapped

00:01:36.950 --> 00:01:36.960 
on the bottom here it's all wire wrapped

00:01:36.960 --> 00:01:39.170 
on the bottom here it's all wire wrapped
I've<00:01:37.500> done<00:01:38.399> this<00:01:38.549> because<00:01:38.820> it's<00:01:38.909> a<00:01:38.939> little<00:01:39.090> bit

00:01:39.170 --> 00:01:39.180 
I've done this because it's a little bit

00:01:39.180 --> 00:01:40.969 
I've done this because it's a little bit
easier<00:01:39.210> to<00:01:39.689> work<00:01:39.810> with<00:01:39.869> when<00:01:40.259> you<00:01:40.380> have<00:01:40.409> this

00:01:40.969 --> 00:01:40.979 
easier to work with when you have this

00:01:40.979 --> 00:01:45.349 
easier to work with when you have this
number<00:01:41.280> of<00:01:41.340> pins<00:01:41.719> I<00:01:42.719> do<00:01:43.289> have<00:01:43.590> all<00:01:44.490> the<00:01:44.909> data

00:01:45.349 --> 00:01:45.359 
number of pins I do have all the data

00:01:45.359 --> 00:01:46.849 
number of pins I do have all the data
pins<00:01:45.630> here<00:01:45.810> and<00:01:46.079> yellow<00:01:46.350> at<00:01:46.469> the<00:01:46.560> bottom

00:01:46.849 --> 00:01:46.859 
pins here and yellow at the bottom

00:01:46.859 --> 00:01:51.230 
pins here and yellow at the bottom
that's<00:01:47.759> a<00:01:47.909> 32<00:01:48.380> bit<00:01:49.380> data<00:01:49.439> bus<00:01:50.100> as<00:01:50.340> well<00:01:50.490> as<00:01:50.609> a<00:01:50.700> 32

00:01:51.230 --> 00:01:51.240 
that's a 32 bit data bus as well as a 32

00:01:51.240 --> 00:01:53.660 
that's a 32 bit data bus as well as a 32
bit<00:01:51.420> address<00:01:51.600> bus<00:01:51.990> I<00:01:52.200> have<00:01:52.950> tied<00:01:53.189> them<00:01:53.369> all<00:01:53.520> to

00:01:53.660 --> 00:01:53.670 
bit address bus I have tied them all to

00:01:53.670 --> 00:01:57.679 
bit address bus I have tied them all to
ground<00:01:54.179> and<00:01:55.460> what<00:01:56.460> that<00:01:56.609> will<00:01:56.700> do<00:01:56.820> is<00:01:56.939> any<00:01:57.450> time

00:01:57.679 --> 00:01:57.689 
ground and what that will do is any time

00:01:57.689 --> 00:02:00.469 
ground and what that will do is any time
the<00:01:58.229> CPU<00:01:58.439> attempts<00:01:58.920> to<00:01:59.100> read<00:01:59.369> it<00:01:59.670> will<00:02:00.210> return

00:02:00.469 --> 00:02:00.479 
the CPU attempts to read it will return

00:02:00.479 --> 00:02:06.800 
the CPU attempts to read it will return
all<00:02:00.659> zeros<00:02:01.079> and<00:02:02.960> the<00:02:03.960> other<00:02:04.140> various<00:02:05.810> signals

00:02:06.800 --> 00:02:06.810 
all zeros and the other various signals

00:02:06.810 --> 00:02:08.570 
all zeros and the other various signals
here<00:02:06.929> either<00:02:07.289> tied<00:02:07.590> them<00:02:07.799> to<00:02:07.950> ground<00:02:08.250> or

00:02:08.570 --> 00:02:08.580 
here either tied them to ground or

00:02:08.580 --> 00:02:10.249 
here either tied them to ground or
pulled<00:02:08.970> them<00:02:09.090> high<00:02:09.270> through<00:02:09.600> a<00:02:09.630> 3k<00:02:10.110> resistor

00:02:10.249 --> 00:02:10.259 
pulled them high through a 3k resistor

00:02:10.259 --> 00:02:13.970 
pulled them high through a 3k resistor
depending<00:02:11.069> on<00:02:11.220> if<00:02:11.670> the<00:02:12.349> if<00:02:13.349> the<00:02:13.530> signals<00:02:13.860> are

00:02:13.970 --> 00:02:13.980 
depending on if the if the signals are

00:02:13.980 --> 00:02:14.950 
depending on if the if the signals are
active

00:02:14.950 --> 00:02:14.960 
active

00:02:14.960 --> 00:02:18.760 
active
or<00:02:15.050> active<00:02:15.380> high<00:02:15.530> and<00:02:16.330> up<00:02:17.330> here<00:02:17.690> I<00:02:17.720> have<00:02:18.350> pulled

00:02:18.760 --> 00:02:18.770 
or active high and up here I have pulled

00:02:18.770 --> 00:02:24.460 
or active high and up here I have pulled
out<00:02:18.950> some<00:02:19.880> of<00:02:19.940> the<00:02:20.030> addressed<00:02:20.360> pens<00:02:22.810> address<00:02:23.810> a

00:02:24.460 --> 00:02:24.470 
out some of the addressed pens address a

00:02:24.470 --> 00:02:27.790 
out some of the addressed pens address a
twenty<00:02:25.160> is<00:02:25.400> going<00:02:25.820> to<00:02:26.090> a<00:02:26.450> to<00:02:27.320> an<00:02:27.470> inverter

00:02:27.790 --> 00:02:27.800 
twenty is going to a to an inverter

00:02:27.800 --> 00:02:31.060 
twenty is going to a to an inverter
which<00:02:28.160> in<00:02:28.940> turn<00:02:29.120> is<00:02:29.300> driving<00:02:29.780> this<00:02:29.990> yellow<00:02:30.650> LED

00:02:31.060 --> 00:02:31.070 
which in turn is driving this yellow LED

00:02:31.070 --> 00:02:34.510 
which in turn is driving this yellow LED
on<00:02:31.220> the<00:02:31.310> top<00:02:31.520> of<00:02:31.640> the<00:02:31.730> board<00:02:31.940> and<00:02:32.560> a<00:02:33.560> 21<00:02:34.250> through

00:02:34.510 --> 00:02:34.520 
on the top of the board and a 21 through

00:02:34.520 --> 00:02:36.700 
on the top of the board and a 21 through
a<00:02:34.550> twenty<00:02:35.180> three<00:02:35.510> are<00:02:35.810> out<00:02:35.840> to<00:02:36.290> this<00:02:36.470> header

00:02:36.700 --> 00:02:36.710 
a twenty three are out to this header

00:02:36.710 --> 00:02:40.230 
a twenty three are out to this header
here<00:02:37.040> which<00:02:37.700> I<00:02:37.850> will<00:02:38.000> hook<00:02:38.090> up<00:02:38.270> to<00:02:38.450> this

00:02:40.230 --> 00:02:40.240 
here which I will hook up to this

00:02:40.240 --> 00:02:42.940 
here which I will hook up to this
breadboard<00:02:41.240> to<00:02:41.810> monitor<00:02:42.290> it<00:02:42.410> now<00:02:42.890> the

00:02:42.940 --> 00:02:42.950 
breadboard to monitor it now the

00:02:42.950 --> 00:02:44.830 
breadboard to monitor it now the
operation<00:02:43.550> of<00:02:43.610> this<00:02:43.730> is<00:02:43.940> relatively<00:02:44.480> simple

00:02:44.830 --> 00:02:44.840 
operation of this is relatively simple

00:02:44.840 --> 00:02:46.810 
operation of this is relatively simple
what<00:02:45.410> will<00:02:45.500> happen<00:02:45.800> is<00:02:45.920> when<00:02:46.100> the<00:02:46.280> when<00:02:46.790> the

00:02:46.810 --> 00:02:46.820 
what will happen is when the when the

00:02:46.820 --> 00:02:49.810 
what will happen is when the when the
CPU<00:02:47.360> is<00:02:47.450> powered<00:02:47.780> up<00:02:48.160> it'll<00:02:49.160> start<00:02:49.550> off<00:02:49.640> by

00:02:49.810 --> 00:02:49.820 
CPU is powered up it'll start off by

00:02:49.820 --> 00:02:52.180 
CPU is powered up it'll start off by
reading<00:02:50.030> from<00:02:50.300> the<00:02:50.450> first<00:02:50.600> memory<00:02:51.020> address<00:02:51.260> it

00:02:52.180 --> 00:02:52.190 
reading from the first memory address it

00:02:52.190 --> 00:02:54.370 
reading from the first memory address it
will<00:02:52.490> return<00:02:53.000> all<00:02:53.180> zeros<00:02:53.540> of<00:02:53.750> course<00:02:54.020> with<00:02:54.260> the

00:02:54.370 --> 00:02:54.380 
will return all zeros of course with the

00:02:54.380 --> 00:02:56.680 
will return all zeros of course with the
data<00:02:54.560> pens<00:02:54.800> all<00:02:54.920> tied<00:02:55.130> to<00:02:55.280> ground<00:02:55.400> and<00:02:55.760> then

00:02:56.680 --> 00:02:56.690 
data pens all tied to ground and then

00:02:56.690 --> 00:02:59.290 
data pens all tied to ground and then
the<00:02:56.840> M<00:02:57.050> 68k<00:02:57.710> assembly<00:02:58.100> language<00:02:58.490> when<00:02:58.910> all

00:02:59.290 --> 00:02:59.300 
the M 68k assembly language when all

00:02:59.300 --> 00:03:01.810 
the M 68k assembly language when all
zeros<00:02:59.780> are<00:03:00.110> encountered<00:03:01.040> on<00:03:01.130> the<00:03:01.310> instruction

00:03:01.810 --> 00:03:01.820 
zeros are encountered on the instruction

00:03:01.820 --> 00:03:05.050 
zeros are encountered on the instruction
it<00:03:02.030> simply<00:03:02.390> moves<00:03:02.600> the<00:03:03.260> value<00:03:03.590> 0<00:03:03.980> to<00:03:04.130> the<00:03:04.550> d0

00:03:05.050 --> 00:03:05.060 
it simply moves the value 0 to the d0

00:03:05.060 --> 00:03:08.230 
it simply moves the value 0 to the d0
register<00:03:05.990> and<00:03:06.350> then<00:03:07.040> the<00:03:07.190> CPU<00:03:07.400> steps<00:03:07.880> to<00:03:08.090> the

00:03:08.230 --> 00:03:08.240 
register and then the CPU steps to the

00:03:08.240 --> 00:03:11.320 
register and then the CPU steps to the
next<00:03:08.540> memory<00:03:09.050> address<00:03:09.350> so<00:03:10.280> a<00:03:10.700> good<00:03:10.940> test<00:03:11.180> if

00:03:11.320 --> 00:03:11.330 
next memory address so a good test if

00:03:11.330 --> 00:03:14.650 
next memory address so a good test if
the<00:03:11.420> CPU<00:03:11.840> as<00:03:12.050> viable<00:03:12.860> as<00:03:13.220> to<00:03:13.540> monitor<00:03:14.540> the

00:03:14.650 --> 00:03:14.660 
the CPU as viable as to monitor the

00:03:14.660 --> 00:03:16.240 
the CPU as viable as to monitor the
address<00:03:14.990> pins<00:03:15.260> and<00:03:15.470> see<00:03:15.650> if<00:03:15.740> it<00:03:15.860> is<00:03:15.980> indeed

00:03:16.240 --> 00:03:16.250 
address pins and see if it is indeed

00:03:16.250 --> 00:03:19.150 
address pins and see if it is indeed
stepping<00:03:16.730> through<00:03:16.880> the<00:03:17.060> addresses<00:03:17.890> so<00:03:18.890> that's

00:03:19.150 --> 00:03:19.160 
stepping through the addresses so that's

00:03:19.160 --> 00:03:24.430 
stepping through the addresses so that's
what<00:03:19.310> this<00:03:19.570> circuitry<00:03:20.570> is<00:03:21.380> is<00:03:22.370> for<00:03:22.670> so<00:03:23.240> a<00:03:23.510> 20

00:03:24.430 --> 00:03:24.440 
what this circuitry is is for so a 20

00:03:24.440 --> 00:03:26.680 
what this circuitry is is for so a 20
like<00:03:24.620> I<00:03:24.710> said<00:03:24.860> will<00:03:25.010> be<00:03:25.160> monitored<00:03:26.000> by<00:03:26.630> this

00:03:26.680 --> 00:03:26.690 
like I said will be monitored by this

00:03:26.690 --> 00:03:29.740 
like I said will be monitored by this
led<00:03:27.140> up<00:03:27.260> here<00:03:27.530> and<00:03:27.830> then<00:03:28.520> a<00:03:28.550> 21<00:03:29.270> through<00:03:29.480> 23

00:03:29.740 --> 00:03:29.750 
led up here and then a 21 through 23

00:03:29.750 --> 00:03:32.740 
led up here and then a 21 through 23
will<00:03:30.110> come<00:03:30.260> through<00:03:30.410> here<00:03:30.680> and<00:03:31.060> on<00:03:32.060> this

00:03:32.740 --> 00:03:32.750 
will come through here and on this

00:03:32.750 --> 00:03:37.090 
will come through here and on this
breadboard<00:03:33.050> I<00:03:33.380> have<00:03:33.680> a<00:03:34.130> 74<00:03:34.880> 138<00:03:35.660> which<00:03:36.260> is<00:03:36.440> a<00:03:36.470> 3

00:03:37.090 --> 00:03:37.100 
breadboard I have a 74 138 which is a 3

00:03:37.100 --> 00:03:40.930 
breadboard I have a 74 138 which is a 3
to<00:03:37.220> 8<00:03:37.400> decoder<00:03:37.840> so<00:03:38.840> the<00:03:38.960> 3<00:03:39.170> address<00:03:39.760> pins<00:03:40.760> from

00:03:40.930 --> 00:03:40.940 
to 8 decoder so the 3 address pins from

00:03:40.940 --> 00:03:43.150 
to 8 decoder so the 3 address pins from
the<00:03:41.030> CPU<00:03:41.450> will<00:03:41.600> come<00:03:41.750> in<00:03:41.870> through<00:03:42.050> here<00:03:42.320> it'll

00:03:43.150 --> 00:03:43.160 
the CPU will come in through here it'll

00:03:43.160 --> 00:03:45.820 
the CPU will come in through here it'll
decode<00:03:43.520> those<00:03:43.730> and<00:03:44.210> flash<00:03:44.900> the<00:03:44.930> LEDs<00:03:45.530> from

00:03:45.820 --> 00:03:45.830 
decode those and flash the LEDs from

00:03:45.830 --> 00:03:47.710 
decode those and flash the LEDs from
right<00:03:46.130> to<00:03:46.160> left<00:03:46.340> if<00:03:46.850> everything's<00:03:47.240> working<00:03:47.330> as

00:03:47.710 --> 00:03:47.720 
right to left if everything's working as

00:03:47.720 --> 00:03:48.490 
right to left if everything's working as
expected

00:03:48.490 --> 00:03:48.500 
expected

00:03:48.500 --> 00:03:51.930 
expected
so<00:03:49.220> I<00:03:49.250> may<00:03:49.370> go<00:03:49.520> ahead<00:03:49.610> and<00:03:49.730> hook<00:03:49.940> this<00:03:50.150> up<00:03:50.920> and

00:03:51.930 --> 00:03:51.940 
so I may go ahead and hook this up and

00:03:51.940 --> 00:03:54.820 
so I may go ahead and hook this up and
bear<00:03:52.940> with<00:03:53.090> me<00:03:53.240> for<00:03:53.390> just<00:03:53.450> a<00:03:53.690> moment<00:03:53.810> as<00:03:54.080> I<00:03:54.200> try

00:03:54.820 --> 00:03:54.830 
bear with me for just a moment as I try

00:03:54.830 --> 00:04:00.700 
bear with me for just a moment as I try
to<00:03:54.890> juggle<00:03:55.220> the<00:03:56.140> camera<00:03:57.140> and<00:03:57.380> the<00:03:59.080> and<00:04:00.080> the

00:04:00.700 --> 00:04:00.710 
to juggle the camera and the and the

00:04:00.710 --> 00:04:14.699 
to juggle the camera and the and the
board<00:04:00.950> here

00:04:14.699 --> 00:04:14.709 

00:04:14.709 --> 00:04:17.220 

all<00:04:15.709> right<00:04:15.980> got<00:04:16.220> the<00:04:16.280> power<00:04:16.489> hooked<00:04:16.700> up<00:04:16.910> here

00:04:17.220 --> 00:04:17.230 
all right got the power hooked up here

00:04:17.230 --> 00:04:20.740 
all right got the power hooked up here
so<00:04:18.230> we're<00:04:18.530> good<00:04:18.650> to<00:04:18.769> go<00:04:18.799> this<00:04:19.370> is<00:04:19.430> a<00:04:19.750> 9-volt

00:04:20.740 --> 00:04:20.750 
so we're good to go this is a 9-volt

00:04:20.750 --> 00:04:22.750 
so we're good to go this is a 9-volt
power<00:04:20.930> connector<00:04:21.380> but<00:04:21.650> I<00:04:21.859> am<00:04:22.040> NOT<00:04:22.250> powering

00:04:22.750 --> 00:04:22.760 
power connector but I am NOT powering

00:04:22.760 --> 00:04:25.810 
power connector but I am NOT powering
this<00:04:22.880> on<00:04:23.060> nine<00:04:23.240> volts<00:04:24.040> this<00:04:25.040> is<00:04:25.160> all<00:04:25.310> 5-volt

00:04:25.810 --> 00:04:25.820 
this on nine volts this is all 5-volt

00:04:25.820 --> 00:04:27.790 
this on nine volts this is all 5-volt
logic<00:04:25.880> and<00:04:26.419> that<00:04:26.510> would<00:04:26.630> destroy<00:04:27.230> it<00:04:27.380> so<00:04:27.620> what

00:04:27.790 --> 00:04:27.800 
logic and that would destroy it so what

00:04:27.800 --> 00:04:29.830 
logic and that would destroy it so what
I<00:04:27.830> have<00:04:28.040> is<00:04:28.280> a<00:04:28.310> battery<00:04:29.000> holder<00:04:29.150> with<00:04:29.480> four

00:04:29.830 --> 00:04:29.840 
I have is a battery holder with four

00:04:29.840 --> 00:04:34.270 
I have is a battery holder with four
NiCad<00:04:30.230> batteries<00:04:30.820> these<00:04:31.820> are<00:04:33.280> approximately

00:04:34.270 --> 00:04:34.280 
NiCad batteries these are approximately

00:04:34.280 --> 00:04:37.930 
NiCad batteries these are approximately
1.2<00:04:34.760> volts<00:04:35.060> each<00:04:36.100> at<00:04:37.100> full<00:04:37.400> charge<00:04:37.639> though

00:04:37.930 --> 00:04:37.940 
1.2 volts each at full charge though

00:04:37.940 --> 00:04:41.890 
1.2 volts each at full charge though
it's<00:04:38.120> pulling<00:04:38.570> about<00:04:39.490> five<00:04:40.490> point<00:04:40.850> zero<00:04:41.120> seven

00:04:41.890 --> 00:04:41.900 
it's pulling about five point zero seven

00:04:41.900 --> 00:04:46.300 
it's pulling about five point zero seven
volts<00:04:42.200> on<00:04:42.520> my<00:04:43.520> tester<00:04:43.970> so<00:04:44.240> if<00:04:45.229> anyone<00:04:46.040> decides

00:04:46.300 --> 00:04:46.310 
volts on my tester so if anyone decides

00:04:46.310 --> 00:04:48.219 
volts on my tester so if anyone decides
to<00:04:46.460> do<00:04:46.580> anything<00:04:46.820> with<00:04:47.060> the<00:04:47.150> TTL<00:04:47.540> logic

00:04:48.219 --> 00:04:48.229 
to do anything with the TTL logic

00:04:48.229 --> 00:04:49.840 
to do anything with the TTL logic
don't<00:04:48.650> try<00:04:48.830> it<00:04:48.860> with<00:04:49.070> four-night<00:04:49.490> there<00:04:49.760> are

00:04:49.840 --> 00:04:49.850 
don't try it with four-night there are

00:04:49.850 --> 00:04:53.200 
don't try it with four-night there are
four<00:04:50.060> alkaline<00:04:50.600> batteries<00:04:51.020> they<00:04:51.229> will<00:04:52.210> gladly

00:04:53.200 --> 00:04:53.210 
four alkaline batteries they will gladly

00:04:53.210 --> 00:04:56.530 
four alkaline batteries they will gladly
put<00:04:53.600> out<00:04:53.750> a<00:04:54.290> full<00:04:55.160> six<00:04:55.430> volts<00:04:55.790> and<00:04:56.000> destroy

00:04:56.530 --> 00:04:56.540 
put out a full six volts and destroy

00:04:56.540 --> 00:04:58.510 
put out a full six volts and destroy
your<00:04:56.630> logic<00:04:57.050> so<00:04:57.260> I<00:04:57.470> will<00:04:58.160> go<00:04:58.250> ahead<00:04:58.310> and<00:04:58.400> hook

00:04:58.510 --> 00:04:58.520 
your logic so I will go ahead and hook

00:04:58.520 --> 00:05:00.790 
your logic so I will go ahead and hook
this<00:04:58.669> up<00:04:58.880> this<00:04:59.270> connector<00:04:59.930> is<00:04:59.990> kind<00:05:00.200> of<00:05:00.290> bad

00:05:00.790 --> 00:05:00.800 
this up this connector is kind of bad

00:05:00.800 --> 00:05:02.409 
this up this connector is kind of bad
though<00:05:01.040> so<00:05:01.100> I'm<00:05:01.280> up<00:05:01.400> with<00:05:01.550> the<00:05:01.669> camera<00:05:02.330> down

00:05:02.409 --> 00:05:02.419 
though so I'm up with the camera down

00:05:02.419 --> 00:05:10.629 
though so I'm up with the camera down
for<00:05:02.479> just<00:05:02.720> a<00:05:02.840> moment<00:05:05.410> as<00:05:06.410> I<00:05:07.190> pick<00:05:07.340> this<00:05:07.490> up<00:05:09.639> all

00:05:10.629 --> 00:05:10.639 
for just a moment as I pick this up all

00:05:10.639 --> 00:05:13.690 
for just a moment as I pick this up all
right<00:05:10.880> so<00:05:11.300> I've<00:05:11.389> got<00:05:11.570> it<00:05:11.720> hooked<00:05:11.810> up<00:05:12.520> we<00:05:13.520> can

00:05:13.690 --> 00:05:13.700 
right so I've got it hooked up we can

00:05:13.700 --> 00:05:15.879 
right so I've got it hooked up we can
see<00:05:13.880> that<00:05:14.090> the<00:05:14.270> LED<00:05:14.750> hook<00:05:15.080> up<00:05:15.229> to<00:05:15.350> a<00:05:15.440> twenty<00:05:15.800> is

00:05:15.879 --> 00:05:15.889 
see that the LED hook up to a twenty is

00:05:15.889 --> 00:05:19.150 
see that the LED hook up to a twenty is
flashing<00:05:16.370> as<00:05:16.460> expected<00:05:16.850> and<00:05:17.360> the<00:05:18.200> LEDs<00:05:18.889> over

00:05:19.150 --> 00:05:19.160 
flashing as expected and the LEDs over

00:05:19.160 --> 00:05:20.710 
flashing as expected and the LEDs over
here<00:05:19.370> are<00:05:19.490> indicating<00:05:19.970> that<00:05:20.000> it<00:05:20.210> is<00:05:20.240> at<00:05:20.660> least

00:05:20.710 --> 00:05:20.720 
here are indicating that it is at least

00:05:20.720 --> 00:05:25.360 
here are indicating that it is at least
stepping<00:05:21.139> through<00:05:21.470> that<00:05:23.800> 8-bit<00:05:24.800> section<00:05:25.220> of

00:05:25.360 --> 00:05:25.370 
stepping through that 8-bit section of

00:05:25.370 --> 00:05:27.879 
stepping through that 8-bit section of
the<00:05:25.460> memory<00:05:25.940> addresses<00:05:26.419> so<00:05:26.690> this<00:05:27.560> is<00:05:27.680> a<00:05:27.710> good

00:05:27.879 --> 00:05:27.889 
the memory addresses so this is a good

00:05:27.889 --> 00:05:30.219 
the memory addresses so this is a good
indicator<00:05:28.310> that<00:05:28.430> the<00:05:28.610> chip<00:05:28.820> is<00:05:29.000> okay<00:05:29.330> and<00:05:29.870> I

00:05:30.219 --> 00:05:30.229 
indicator that the chip is okay and I

00:05:30.229 --> 00:05:33.760 
indicator that the chip is okay and I
will<00:05:30.440> continue<00:05:31.479> working<00:05:32.479> on<00:05:32.930> this<00:05:33.289> project

00:05:33.760 --> 00:05:33.770 
will continue working on this project

00:05:33.770 --> 00:05:36.760 
will continue working on this project
the<00:05:34.580> next<00:05:34.820> steps<00:05:35.210> would<00:05:35.330> be<00:05:35.389> to<00:05:35.690> build<00:05:36.500> up<00:05:36.650> the

00:05:36.760 --> 00:05:36.770 
the next steps would be to build up the

00:05:36.770 --> 00:05:39.540 
the next steps would be to build up the
byte<00:05:36.950> enable<00:05:37.190> logic<00:05:37.729> I'll<00:05:37.880> probably<00:05:38.150> use<00:05:38.510> a

00:05:39.540 --> 00:05:39.550 
byte enable logic I'll probably use a

00:05:39.550 --> 00:05:40.690 
byte enable logic I'll probably use a
silence

00:05:40.690 --> 00:05:40.700 
silence

00:05:40.700 --> 00:05:45.879 
silence
Cpl<00:05:41.630> D<00:05:41.840> for<00:05:42.169> that<00:05:42.350> and<00:05:43.930> also<00:05:44.930> through<00:05:45.560> a<00:05:45.590> couple

00:05:45.879 --> 00:05:45.889 
Cpl D for that and also through a couple

00:05:45.889 --> 00:05:48.219 
Cpl D for that and also through a couple
of<00:05:45.950> EEPROM<00:05:46.340> so<00:05:46.639> once<00:05:47.000> that's<00:05:47.120> done<00:05:47.330> on<00:05:47.450> done

00:05:48.219 --> 00:05:48.229 
of EEPROM so once that's done on done

00:05:48.229 --> 00:05:48.969 
of EEPROM so once that's done on done
I'll<00:05:48.410> throw<00:05:48.650> a<00:05:48.680> couple

00:05:48.969 --> 00:05:48.979 
I'll throw a couple

00:05:48.979 --> 00:05:53.020 
I'll throw a couple
eproms<00:05:49.310> at<00:05:49.580> it<00:05:49.729> and<00:05:50.470> some<00:05:51.470> SRAM<00:05:51.919> and<00:05:52.340> hopefully

00:05:53.020 --> 00:05:53.030 
eproms at it and some SRAM and hopefully

00:05:53.030 --> 00:05:55.360 
eproms at it and some SRAM and hopefully
get<00:05:53.210> the<00:05:53.389> very<00:05:53.930> basics<00:05:54.410> of<00:05:54.560> a<00:05:54.710> computer<00:05:55.220> system

00:05:55.360 --> 00:05:55.370 
get the very basics of a computer system

00:05:55.370 --> 00:05:58.020 
get the very basics of a computer system
up<00:05:55.700> and<00:05:55.820> running<00:05:56.320> before<00:05:57.320> moving<00:05:57.530> on<00:05:57.770> to

00:05:58.020 --> 00:05:58.030 
up and running before moving on to

00:05:58.030 --> 00:06:00.339 
up and running before moving on to
input/output<00:05:59.030> through<00:05:59.360> through<00:05:59.840> the<00:05:59.930> u<00:06:00.080> arts

00:06:00.339 --> 00:06:00.349 
input/output through through the u arts

00:06:00.349 --> 00:06:02.950 
input/output through through the u arts
and<00:06:00.590> such<00:06:00.770> so<00:06:01.070> thanks<00:06:02.000> for<00:06:02.150> watching<00:06:02.570> and<00:06:02.810> I

00:06:02.950 --> 00:06:02.960 
and such so thanks for watching and I

00:06:02.960 --> 00:06:06.100 
and such so thanks for watching and I
will<00:06:03.169> put<00:06:03.889> the<00:06:04.010> link<00:06:04.430> to<00:06:04.460> my<00:06:04.729> website<00:06:05.110> online

00:06:06.100 --> 00:06:06.110 
will put the link to my website online

00:06:06.110 --> 00:06:08.920 
will put the link to my website online
or<00:06:06.770> on<00:06:07.039> the<00:06:07.190> comment<00:06:07.729> section<00:06:07.760> along<00:06:08.510> with<00:06:08.570> the

00:06:08.920 --> 00:06:08.930 
or on the comment section along with the

00:06:08.930 --> 00:06:12.700 
or on the comment section along with the
schematics<00:06:09.650> and<00:06:10.690> all<00:06:11.690> my<00:06:11.990> project<00:06:12.530> notes

00:06:12.700 --> 00:06:12.710 
schematics and all my project notes

00:06:12.710 --> 00:06:16.120 
schematics and all my project notes
again<00:06:13.520> thanks<00:06:13.760> for<00:06:13.789> watching

