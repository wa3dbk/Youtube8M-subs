WEBVTT
Kind: captions
Language: en

00:00:01.610 --> 00:00:04.820 

welcome<00:00:02.610> in<00:00:03.179> this<00:00:03.419> series<00:00:03.689> of<00:00:03.959> videos<00:00:04.259> you'll

00:00:04.820 --> 00:00:04.830 
welcome in this series of videos you'll

00:00:04.830 --> 00:00:06.889 
welcome in this series of videos you'll
learn<00:00:05.069> how<00:00:05.339> to<00:00:05.400> use<00:00:05.549> ice<00:00:05.910> to<00:00:06.180> copy<00:00:06.420> and<00:00:06.750> merge

00:00:06.889 --> 00:00:06.899 
learn how to use ice to copy and merge

00:00:06.899 --> 00:00:09.410 
learn how to use ice to copy and merge
topologies<00:00:07.639> you'll<00:00:08.639> also<00:00:08.849> learn<00:00:09.120> how<00:00:09.179> to

00:00:09.410 --> 00:00:09.420 
topologies you'll also learn how to

00:00:09.420 --> 00:00:12.470 
topologies you'll also learn how to
apply<00:00:09.690> materials<00:00:10.410> using<00:00:10.620> ice<00:00:11.030> the<00:00:12.030> goal<00:00:12.240> is<00:00:12.450> to

00:00:12.470 --> 00:00:12.480 
apply materials using ice the goal is to

00:00:12.480 --> 00:00:14.209 
apply materials using ice the goal is to
generate<00:00:12.809> a<00:00:12.990> building<00:00:13.469> from<00:00:13.679> predefined

00:00:14.209 --> 00:00:14.219 
generate a building from predefined

00:00:14.219 --> 00:00:17.120 
generate a building from predefined
parts<00:00:14.639> in<00:00:15.630> this<00:00:15.839> example<00:00:16.230> you<00:00:16.800> will<00:00:16.949> use<00:00:17.100> a

00:00:17.120 --> 00:00:17.130 
parts in this example you will use a

00:00:17.130 --> 00:00:19.670 
parts in this example you will use a
main<00:00:17.460> floor<00:00:17.730> a<00:00:17.940> middle<00:00:18.539> floor<00:00:18.779> and<00:00:18.990> a<00:00:19.289> Rufus

00:00:19.670 --> 00:00:19.680 
main floor a middle floor and a Rufus

00:00:19.680 --> 00:00:22.970 
main floor a middle floor and a Rufus
templates<00:00:21.109> there<00:00:22.109> are<00:00:22.230> several<00:00:22.470> advantages

00:00:22.970 --> 00:00:22.980 
templates there are several advantages

00:00:22.980 --> 00:00:26.060 
templates there are several advantages
to<00:00:23.430> using<00:00:23.460> ice<00:00:23.910> modeling<00:00:24.449> for<00:00:24.600> this<00:00:24.920> for<00:00:25.920> one

00:00:26.060 --> 00:00:26.070 
to using ice modeling for this for one

00:00:26.070 --> 00:00:28.160 
to using ice modeling for this for one
thing<00:00:26.310> you<00:00:26.730> can<00:00:26.910> create<00:00:27.119> a<00:00:27.240> slider<00:00:27.660> to<00:00:27.960> change

00:00:28.160 --> 00:00:28.170 
thing you can create a slider to change

00:00:28.170 --> 00:00:30.320 
thing you can create a slider to change
the<00:00:28.289> number<00:00:28.529> of<00:00:28.560> floors<00:00:28.800> interactively<00:00:29.460> this

00:00:30.320 --> 00:00:30.330 
the number of floors interactively this

00:00:30.330 --> 00:00:31.880 
the number of floors interactively this
would<00:00:30.510> not<00:00:30.660> be<00:00:30.720> possible<00:00:30.869> with<00:00:31.439> an<00:00:31.529> honest

00:00:31.880 --> 00:00:31.890 
would not be possible with an honest

00:00:31.890 --> 00:00:34.090 
would not be possible with an honest
approach<00:00:32.279> such<00:00:32.610> as<00:00:32.759> cloning<00:00:33.210> emerging

00:00:34.090 --> 00:00:34.100 
approach such as cloning emerging

00:00:34.100 --> 00:00:36.470 
approach such as cloning emerging
cloning<00:00:35.100> emerging<00:00:35.460> would<00:00:35.550> also<00:00:35.760> create<00:00:36.090> many

00:00:36.470 --> 00:00:36.480 
cloning emerging would also create many

00:00:36.480 --> 00:00:39.440 
cloning emerging would also create many
extra<00:00:36.899> objects<00:00:37.350> in<00:00:37.440> the<00:00:37.530> scene<00:00:38.450> another

00:00:39.440 --> 00:00:39.450 
extra objects in the scene another

00:00:39.450 --> 00:00:41.209 
extra objects in the scene another
approach<00:00:39.809> might<00:00:40.050> be<00:00:40.079> to<00:00:40.230> duplicate<00:00:40.770> polygon

00:00:41.209 --> 00:00:41.219 
approach might be to duplicate polygon

00:00:41.219 --> 00:00:43.700 
approach might be to duplicate polygon
islands<00:00:41.719> this<00:00:42.719> doesn't<00:00:42.989> require<00:00:43.350> as<00:00:43.559> many

00:00:43.700 --> 00:00:43.710 
islands this doesn't require as many

00:00:43.710 --> 00:00:46.330 
islands this doesn't require as many
extra<00:00:44.160> objects<00:00:44.610> and<00:00:44.820> also<00:00:45.360> provides<00:00:45.660> a<00:00:45.809> slider

00:00:46.330 --> 00:00:46.340 
extra objects and also provides a slider

00:00:46.340 --> 00:00:48.619 
extra objects and also provides a slider
however<00:00:47.340> it<00:00:47.610> would<00:00:47.700> be<00:00:47.820> difficult<00:00:48.030> to<00:00:48.329> update

00:00:48.619 --> 00:00:48.629 
however it would be difficult to update

00:00:48.629 --> 00:00:50.240 
however it would be difficult to update
the<00:00:48.750> roots<00:00:48.960> position<00:00:49.530> when<00:00:49.680> you<00:00:49.770> change<00:00:50.039> the

00:00:50.240 --> 00:00:50.250 
the roots position when you change the

00:00:50.250 --> 00:00:52.340 
the roots position when you change the
number<00:00:50.489> of<00:00:50.520> floors<00:00:50.910> it<00:00:51.870> would<00:00:52.020> also<00:00:52.199> be

00:00:52.340 --> 00:00:52.350 
number of floors it would also be

00:00:52.350 --> 00:00:54.080 
number of floors it would also be
difficult<00:00:52.860> to<00:00:52.949> move<00:00:53.100> all<00:00:53.399> the<00:00:53.520> upper<00:00:53.789> parts

00:00:54.080 --> 00:00:54.090 
difficult to move all the upper parts

00:00:54.090 --> 00:00:57.049 
difficult to move all the upper parts
when<00:00:54.510> you<00:00:54.629> modify<00:00:54.899> something<00:00:55.289> below<00:00:55.649> them<00:00:56.059> ice

00:00:57.049 --> 00:00:57.059 
when you modify something below them ice

00:00:57.059 --> 00:00:59.270 
when you modify something below them ice
modeling<00:00:57.660> offers<00:00:58.050> good<00:00:58.260> solutions<00:00:58.890> for<00:00:59.100> most

00:00:59.270 --> 00:00:59.280 
modeling offers good solutions for most

00:00:59.280 --> 00:01:01.279 
modeling offers good solutions for most
of<00:00:59.460> these<00:00:59.550> problems<00:00:59.850> so<00:01:00.629> it's<00:01:00.780> an<00:01:00.899> ideal

00:01:01.279 --> 00:01:01.289 
of these problems so it's an ideal

00:01:01.289 --> 00:01:04.340 
of these problems so it's an ideal
approach<00:01:01.500> to<00:01:01.949> a<00:01:01.980> project<00:01:02.250> like<00:01:02.520> this<00:01:03.350> before

00:01:04.340 --> 00:01:04.350 
approach to a project like this before

00:01:04.350 --> 00:01:05.630 
approach to a project like this before
recreating<00:01:04.830> the<00:01:05.129> building<00:01:05.460> from<00:01:05.610> scratch

00:01:05.630 --> 00:01:05.640 
recreating the building from scratch

00:01:05.640 --> 00:01:09.080 
recreating the building from scratch
let's<00:01:06.570> explore<00:01:07.080> this<00:01:07.260> scene<00:01:07.560> further<00:01:08.090> the

00:01:09.080 --> 00:01:09.090 
let's explore this scene further the

00:01:09.090 --> 00:01:10.789 
let's explore this scene further the
three<00:01:09.330> templates<00:01:09.780> were<00:01:10.049> modeled<00:01:10.470> to<00:01:10.590> fit

00:01:10.789 --> 00:01:10.799 
three templates were modeled to fit

00:01:10.799 --> 00:01:12.890 
three templates were modeled to fit
together<00:01:11.100> perfectly<00:01:11.369> and<00:01:11.850> they've<00:01:12.750> been

00:01:12.890 --> 00:01:12.900 
together perfectly and they've been

00:01:12.900 --> 00:01:15.469 
together perfectly and they've been
offset<00:01:13.350> to<00:01:13.710> see<00:01:13.860> them<00:01:14.010> better<00:01:14.130> in<00:01:14.580> addition

00:01:15.469 --> 00:01:15.479 
offset to see them better in addition

00:01:15.479 --> 00:01:17.630 
offset to see them better in addition
there<00:01:16.229> is<00:01:16.380> a<00:01:16.409> null<00:01:16.710> which<00:01:16.920> is<00:01:17.070> used<00:01:17.310> to<00:01:17.460> control

00:01:17.630 --> 00:01:17.640 
there is a null which is used to control

00:01:17.640 --> 00:01:25.569 
there is a null which is used to control
the<00:01:17.909> placement<00:01:18.360> of<00:01:18.420> the<00:01:18.540> building

00:01:25.569 --> 00:01:25.579 

00:01:25.579 --> 00:01:27.889 

there's<00:01:26.579> also<00:01:26.789> an<00:01:27.060> empty<00:01:27.359> mesh<00:01:27.539> called

00:01:27.889 --> 00:01:27.899 
there's also an empty mesh called

00:01:27.899 --> 00:01:30.080 
there's also an empty mesh called
material<00:01:28.499> container<00:01:28.950> that<00:01:29.640> acts<00:01:29.819> as<00:01:30.060> a

00:01:30.080 --> 00:01:30.090 
material container that acts as a

00:01:30.090 --> 00:01:31.999 
material container that acts as a
convenient<00:01:30.509> central<00:01:31.049> location<00:01:31.560> to<00:01:31.710> manage

00:01:31.999 --> 00:01:32.009 
convenient central location to manage

00:01:32.009 --> 00:01:34.789 
convenient central location to manage
all<00:01:32.189> the<00:01:32.340> materials<00:01:33.590> this<00:01:34.590> material

00:01:34.789 --> 00:01:34.799 
all the materials this material

00:01:34.799 --> 00:01:37.039 
all the materials this material
container<00:01:35.549> has<00:01:35.850> an<00:01:36.000> ice<00:01:36.149> tree<00:01:36.479> that<00:01:36.659> gets<00:01:36.840> the

00:01:37.039 --> 00:01:37.049 
container has an ice tree that gets the

00:01:37.049 --> 00:01:39.559 
container has an ice tree that gets the
names<00:01:37.229> of<00:01:37.439> materials<00:01:37.950> puts<00:01:38.759> them<00:01:39.000> in<00:01:39.149> an<00:01:39.270> array

00:01:39.559 --> 00:01:39.569 
names of materials puts them in an array

00:01:39.569 --> 00:01:42.050 
names of materials puts them in an array
and<00:01:39.899> stores<00:01:40.679> the<00:01:40.920> array<00:01:41.189> as<00:01:41.399> a<00:01:41.429> special<00:01:41.909> ice

00:01:42.050 --> 00:01:42.060 
and stores the array as a special ice

00:01:42.060 --> 00:01:45.980 
and stores the array as a special ice
attribute<00:01:42.600> named<00:01:42.899> materials<00:01:43.649> an<00:01:44.509> array<00:01:45.509> is<00:01:45.780> an

00:01:45.980 --> 00:01:45.990 
attribute named materials an array is an

00:01:45.990 --> 00:01:48.169 
attribute named materials an array is an
ordered<00:01:46.289> list<00:01:46.319> of<00:01:46.649> elements<00:01:46.890> when<00:01:47.670> referring

00:01:48.169 --> 00:01:48.179 
ordered list of elements when referring

00:01:48.179 --> 00:01:50.179 
ordered list of elements when referring
to<00:01:48.270> elements<00:01:48.719> in<00:01:48.810> this<00:01:48.929> list<00:01:49.229> you<00:01:49.530> must<00:01:49.979> use

00:01:50.179 --> 00:01:50.189 
to elements in this list you must use

00:01:50.189 --> 00:01:53.300 
to elements in this list you must use
the<00:01:50.369> array<00:01:50.670> indices<00:01:51.000> such<00:01:51.509> as<00:01:51.750> 0<00:01:52.020> 1<00:01:52.530> 2<00:01:52.979> and<00:01:53.250> so

00:01:53.300 --> 00:01:53.310 
the array indices such as 0 1 2 and so

00:01:53.310 --> 00:01:58.999 
the array indices such as 0 1 2 and so
on<00:01:56.450> each<00:01:57.450> of<00:01:57.719> the<00:01:57.810> three<00:01:58.049> meshes<00:01:58.469> has<00:01:58.709> an<00:01:58.860> ice

00:01:58.999 --> 00:01:59.009 
on each of the three meshes has an ice

00:01:59.009 --> 00:02:01.069 
on each of the three meshes has an ice
tree<00:01:59.340> that<00:01:59.520> copies<00:01:59.909> the<00:02:00.060> materials<00:02:00.599> attribute

00:02:01.069 --> 00:02:01.079 
tree that copies the materials attribute

00:02:01.079 --> 00:02:03.800 
tree that copies the materials attribute
from<00:02:01.349> the<00:02:01.439> material<00:02:01.920> container<00:02:02.450> this<00:02:03.450> allows

00:02:03.800 --> 00:02:03.810 
from the material container this allows

00:02:03.810 --> 00:02:05.749 
from the material container this allows
you<00:02:03.989> to<00:02:04.110> change<00:02:04.289> the<00:02:04.530> materials<00:02:05.069> defined<00:02:05.579> in

00:02:05.749 --> 00:02:05.759 
you to change the materials defined in

00:02:05.759 --> 00:02:07.580 
you to change the materials defined in
the<00:02:05.849> container<00:02:06.209> and<00:02:06.479> all<00:02:06.989> objects<00:02:07.439> will

00:02:07.580 --> 00:02:07.590 
the container and all objects will

00:02:07.590 --> 00:02:10.759 
the container and all objects will
update<00:02:07.770> automatically<00:02:08.780> the<00:02:09.780> tree<00:02:10.049> also<00:02:10.470> sets

00:02:10.759 --> 00:02:10.769 
update automatically the tree also sets

00:02:10.769 --> 00:02:13.190 
update automatically the tree also sets
each<00:02:10.950> polygons<00:02:11.640> material<00:02:12.209> ID<00:02:12.420> based<00:02:12.959> on

00:02:13.190 --> 00:02:13.200 
each polygons material ID based on

00:02:13.200 --> 00:02:16.880 
each polygons material ID based on
pre-existing<00:02:13.470> clusters<00:02:15.349> material<00:02:16.349> ID<00:02:16.530> is<00:02:16.829> a

00:02:16.880 --> 00:02:16.890 
pre-existing clusters material ID is a

00:02:16.890 --> 00:02:19.009 
pre-existing clusters material ID is a
special<00:02:17.430> ice<00:02:17.640> attribute<00:02:18.239> that<00:02:18.269> specifies

00:02:19.009 --> 00:02:19.019 
special ice attribute that specifies

00:02:19.019 --> 00:02:21.289 
special ice attribute that specifies
which<00:02:19.230> material<00:02:19.920> in<00:02:20.069> the<00:02:20.160> materials<00:02:20.670> array<00:02:20.940> to

00:02:21.289 --> 00:02:21.299 
which material in the materials array to

00:02:21.299 --> 00:02:25.250 
which material in the materials array to
apply<00:02:21.599> /<00:02:21.959> polygon<00:02:23.359> for<00:02:24.359> each<00:02:24.480> material<00:02:24.720> the

00:02:25.250 --> 00:02:25.260 
apply / polygon for each material the

00:02:25.260 --> 00:02:28.160 
apply / polygon for each material the
tree<00:02:25.470> gets<00:02:25.739> each<00:02:25.980> cluster<00:02:26.340> by<00:02:26.640> name<00:02:26.849> and<00:02:27.170> sets

00:02:28.160 --> 00:02:28.170 
tree gets each cluster by name and sets

00:02:28.170 --> 00:02:30.199 
tree gets each cluster by name and sets
the<00:02:28.349> polygons<00:02:28.859> material<00:02:29.459> ID<00:02:29.670> to<00:02:30.090> the

00:02:30.199 --> 00:02:30.209 
the polygons material ID to the

00:02:30.209 --> 00:02:32.150 
the polygons material ID to the
corresponding<00:02:30.900> index<00:02:31.079> of<00:02:31.500> the<00:02:31.650> materials

00:02:32.150 --> 00:02:32.160 
corresponding index of the materials

00:02:32.160 --> 00:02:35.300 
corresponding index of the materials
array<00:02:33.200> note<00:02:34.200> that<00:02:34.440> for<00:02:34.470> the<00:02:34.680> material<00:02:35.160> ID

00:02:35.300 --> 00:02:35.310 
array note that for the material ID

00:02:35.310 --> 00:02:37.910 
array note that for the material ID
attribute<00:02:35.579> the<00:02:36.389> integer<00:02:36.870> 1<00:02:37.109> refers<00:02:37.620> to<00:02:37.829> the

00:02:37.910 --> 00:02:37.920 
attribute the integer 1 refers to the

00:02:37.920 --> 00:02:40.069 
attribute the integer 1 refers to the
first<00:02:38.190> material<00:02:38.790> in<00:02:38.940> the<00:02:39.060> array<00:02:39.359> even<00:02:39.930> though

00:02:40.069 --> 00:02:40.079 
first material in the array even though

00:02:40.079 --> 00:02:43.580 
first material in the array even though
its<00:02:40.260> array<00:02:40.530> index<00:02:40.980> is<00:02:41.220> 0<00:02:41.989> this<00:02:42.989> is<00:02:43.139> because<00:02:43.290> the

00:02:43.580 --> 00:02:43.590 
its array index is 0 this is because the

00:02:43.590 --> 00:02:45.890 
its array index is 0 this is because the
material<00:02:43.739> id0<00:02:44.700> always<00:02:45.209> refers<00:02:45.569> to<00:02:45.780> the

00:02:45.890 --> 00:02:45.900 
material id0 always refers to the

00:02:45.900 --> 00:02:51.009 
material id0 always refers to the
material<00:02:46.380> applied<00:02:46.590> directly<00:02:46.919> to<00:02:47.250> the<00:02:47.430> object

00:02:51.009 --> 00:02:51.019 

00:02:51.019 --> 00:02:53.599 

the<00:02:52.019> building<00:02:52.410> has<00:02:52.560> a<00:02:52.590> nice<00:02:52.799> tree<00:02:53.099> that<00:02:53.310> builds

00:02:53.599 --> 00:02:53.609 
the building has a nice tree that builds

00:02:53.609 --> 00:02:56.449 
the building has a nice tree that builds
its<00:02:53.730> topology<00:02:54.060> based<00:02:54.599> on<00:02:54.840> the<00:02:54.959> templates<00:02:55.459> then

00:02:56.449 --> 00:02:56.459 
its topology based on the templates then

00:02:56.459 --> 00:02:58.430 
its topology based on the templates then
transfers<00:02:57.030> the<00:02:57.180> material<00:02:57.630> ID<00:02:57.780> attributes

00:02:58.430 --> 00:02:58.440 
transfers the material ID attributes

00:02:58.440 --> 00:03:00.620 
transfers the material ID attributes
from<00:02:58.590> the<00:02:58.769> templates<00:02:59.190> and<00:02:59.430> finally<00:03:00.269> copies

00:03:00.620 --> 00:03:00.630 
from the templates and finally copies

00:03:00.630 --> 00:03:03.220 
from the templates and finally copies
the<00:03:00.780> materials<00:03:01.290> array<00:03:01.560> from<00:03:01.980> the<00:03:02.069> container

00:03:03.220 --> 00:03:03.230 
the materials array from the container

00:03:03.230 --> 00:03:05.780 
the materials array from the container
before<00:03:04.230> rebuilding<00:03:04.980> this<00:03:05.099> tree<00:03:05.310> from<00:03:05.489> scratch

00:03:05.780 --> 00:03:05.790 
before rebuilding this tree from scratch

00:03:05.790 --> 00:03:07.789 
before rebuilding this tree from scratch
let's<00:03:06.480> take<00:03:06.690> a<00:03:06.720> closer<00:03:07.019> look<00:03:07.169> at<00:03:07.530> what<00:03:07.650> it's

00:03:07.789 --> 00:03:07.799 
let's take a closer look at what it's

00:03:07.799 --> 00:03:10.400 
let's take a closer look at what it's
doing<00:03:08.269> this<00:03:09.269> will<00:03:09.480> make<00:03:09.510> it<00:03:09.690> easier<00:03:09.900> to<00:03:10.230> follow

00:03:10.400 --> 00:03:10.410 
doing this will make it easier to follow

00:03:10.410 --> 00:03:14.120 
doing this will make it easier to follow
along<00:03:10.650> later<00:03:11.930> the<00:03:12.930> top<00:03:13.169> branch<00:03:13.500> gets<00:03:13.739> the<00:03:13.950> main

00:03:14.120 --> 00:03:14.130 
along later the top branch gets the main

00:03:14.130 --> 00:03:17.390 
along later the top branch gets the main
floor<00:03:14.340> middle<00:03:15.120> floor<00:03:15.389> and<00:03:15.599> roof<00:03:16.160> then<00:03:17.160> it<00:03:17.310> gets

00:03:17.390 --> 00:03:17.400 
floor middle floor and roof then it gets

00:03:17.400 --> 00:03:22.520 
floor middle floor and roof then it gets
their<00:03:17.609> topology<00:03:18.150> attributes<00:03:21.379> transforms<00:03:22.379> the

00:03:22.520 --> 00:03:22.530 
their topology attributes transforms the

00:03:22.530 --> 00:03:24.820 
their topology attributes transforms the
topologies

00:03:24.820 --> 00:03:24.830 
topologies

00:03:24.830 --> 00:03:26.770 
topologies
builds<00:03:25.610> an<00:03:25.700> array<00:03:25.970> from<00:03:26.030> the<00:03:26.270> transformed

00:03:26.770 --> 00:03:26.780 
builds an array from the transformed

00:03:26.780 --> 00:03:28.930 
builds an array from the transformed
topologies<00:03:27.380> and<00:03:27.680> finally<00:03:28.550> sets<00:03:28.790> the

00:03:28.930 --> 00:03:28.940 
topologies and finally sets the

00:03:28.940 --> 00:03:31.930 
topologies and finally sets the
building's<00:03:29.300> topology<00:03:29.870> if<00:03:30.800> we<00:03:31.430> take<00:03:31.580> a<00:03:31.640> closer

00:03:31.930 --> 00:03:31.940 
building's topology if we take a closer

00:03:31.940 --> 00:03:34.210 
building's topology if we take a closer
look<00:03:32.120> at<00:03:32.390> the<00:03:32.480> set<00:03:32.690> topologies<00:03:33.290> compound<00:03:33.770> it

00:03:34.210 --> 00:03:34.220 
look at the set topologies compound it

00:03:34.220 --> 00:03:36.550 
look at the set topologies compound it
just<00:03:34.580> merges<00:03:35.000> the<00:03:35.120> topology<00:03:35.720> array<00:03:35.990> and<00:03:36.260> sets

00:03:36.550 --> 00:03:36.560 
just merges the topology array and sets

00:03:36.560 --> 00:03:38.170 
just merges the topology array and sets
the<00:03:36.680> topology<00:03:37.250> attribute<00:03:37.700> on<00:03:37.850> the<00:03:37.940> self

00:03:38.170 --> 00:03:38.180 
the topology attribute on the self

00:03:38.180 --> 00:03:46.360 
the topology attribute on the self
object<00:03:44.050> for<00:03:45.050> the<00:03:45.080> middle<00:03:45.410> floors<00:03:45.680> there's<00:03:46.280> a

00:03:46.360 --> 00:03:46.370 
object for the middle floors there's a

00:03:46.370 --> 00:03:48.220 
object for the middle floors there's a
second<00:03:46.820> array<00:03:47.060> that<00:03:47.270> gets<00:03:47.420> inserted<00:03:47.780> into<00:03:48.110> the

00:03:48.220 --> 00:03:48.230 
second array that gets inserted into the

00:03:48.230 --> 00:03:49.960 
second array that gets inserted into the
middle<00:03:48.560> of<00:03:48.650> the<00:03:48.770> main<00:03:48.950> array<00:03:49.280> between<00:03:49.880> the

00:03:49.960 --> 00:03:49.970 
middle of the main array between the

00:03:49.970 --> 00:03:53.020 
middle of the main array between the
main<00:03:50.150> floor<00:03:50.360> and<00:03:50.690> the<00:03:50.750> roof<00:03:51.400> the<00:03:52.400> transform

00:03:53.020 --> 00:03:53.030 
main floor and the roof the transform

00:03:53.030 --> 00:03:54.910 
main floor and the roof the transform
that<00:03:53.210> gets<00:03:53.390> applied<00:03:53.660> to<00:03:53.960> the<00:03:54.080> topologies<00:03:54.620> is

00:03:54.910 --> 00:03:54.920 
that gets applied to the topologies is

00:03:54.920 --> 00:03:57.210 
that gets applied to the topologies is
based<00:03:55.190> on<00:03:55.340> the<00:03:55.490> nulls<00:03:55.700> of<00:03:55.910> global<00:03:56.240> kinematics

00:03:57.210 --> 00:03:57.220 
based on the nulls of global kinematics

00:03:57.220 --> 00:03:59.710 
based on the nulls of global kinematics
there<00:03:58.220> were<00:03:58.310> also<00:03:58.520> some<00:03:58.820> additional<00:03:59.270> offsets

00:03:59.710 --> 00:03:59.720 
there were also some additional offsets

00:03:59.720 --> 00:04:01.120 
there were also some additional offsets
that<00:03:59.840> need<00:04:00.050> to<00:04:00.140> be<00:04:00.170> applied<00:04:00.590> for<00:04:00.860> the<00:04:00.920> middle

00:04:01.120 --> 00:04:01.130 
that need to be applied for the middle

00:04:01.130 --> 00:04:04.690 
that need to be applied for the middle
floors<00:04:01.430> and<00:04:01.670> roof<00:04:02.890> the<00:04:03.890> second<00:04:04.250> branch<00:04:04.459> of<00:04:04.610> the

00:04:04.690 --> 00:04:04.700 
floors and roof the second branch of the

00:04:04.700 --> 00:04:06.460 
floors and roof the second branch of the
tree<00:04:04.910> sets<00:04:05.209> the<00:04:05.360> material<00:04:05.840> IDs<00:04:06.170> of<00:04:06.380> the

00:04:06.460 --> 00:04:06.470 
tree sets the material IDs of the

00:04:06.470 --> 00:04:10.000 
tree sets the material IDs of the
polygons<00:04:07.600> the<00:04:08.600> polygons<00:04:09.050> index<00:04:09.470> is<00:04:09.650> used<00:04:09.890> to

00:04:10.000 --> 00:04:10.010 
polygons the polygons index is used to

00:04:10.010 --> 00:04:11.980 
polygons the polygons index is used to
determine<00:04:10.310> the<00:04:10.580> corresponding<00:04:10.850> polygons<00:04:11.750> on

00:04:11.980 --> 00:04:11.990 
determine the corresponding polygons on

00:04:11.990 --> 00:04:14.470 
determine the corresponding polygons on
the<00:04:12.080> original<00:04:12.560> object<00:04:12.980> then<00:04:13.850> the<00:04:14.000> tree<00:04:14.240> looks

00:04:14.470 --> 00:04:14.480 
the original object then the tree looks

00:04:14.480 --> 00:04:16.270 
the original object then the tree looks
up<00:04:14.630> the<00:04:14.660> material<00:04:15.230> ID<00:04:15.410> of<00:04:15.709> the<00:04:15.740> original

00:04:16.270 --> 00:04:16.280 
up the material ID of the original

00:04:16.280 --> 00:04:18.780 
up the material ID of the original
polygon<00:04:16.609> and<00:04:16.970> sets<00:04:17.510> it<00:04:17.660> on<00:04:17.720> the<00:04:17.780> new<00:04:17.989> one

00:04:18.780 --> 00:04:18.790 
polygon and sets it on the new one

00:04:18.790 --> 00:04:20.920 
polygon and sets it on the new one
different<00:04:19.790> operations<00:04:20.359> are<00:04:20.510> needed<00:04:20.810> to

00:04:20.920 --> 00:04:20.930 
different operations are needed to

00:04:20.930 --> 00:04:22.840 
different operations are needed to
calculate<00:04:21.140> the<00:04:21.440> corresponding<00:04:21.830> polygons<00:04:22.640> on

00:04:22.840 --> 00:04:22.850 
calculate the corresponding polygons on

00:04:22.850 --> 00:04:25.330 
calculate the corresponding polygons on
the<00:04:22.970> original<00:04:23.390> objects<00:04:24.250> depending<00:04:25.250> on

00:04:25.330 --> 00:04:25.340 
the original objects depending on

00:04:25.340 --> 00:04:26.740 
the original objects depending on
whether<00:04:25.550> the<00:04:25.640> polygon<00:04:26.210> is<00:04:26.360> on<00:04:26.480> the<00:04:26.570> main<00:04:26.720> floor

00:04:26.740 --> 00:04:26.750 
whether the polygon is on the main floor

00:04:26.750 --> 00:04:30.970 
whether the polygon is on the main floor
middle<00:04:27.620> floors<00:04:28.010> or<00:04:28.280> roof<00:04:29.230> the<00:04:30.230> last<00:04:30.470> branch<00:04:30.830> of

00:04:30.970 --> 00:04:30.980 
middle floors or roof the last branch of

00:04:30.980 --> 00:04:34.000 
middle floors or roof the last branch of
the<00:04:31.070> tree<00:04:31.310> is<00:04:31.520> very<00:04:31.940> simple<00:04:32.210> it<00:04:33.169> just<00:04:33.230> gets<00:04:33.770> and

00:04:34.000 --> 00:04:34.010 
the tree is very simple it just gets and

00:04:34.010 --> 00:04:35.620 
the tree is very simple it just gets and
sets<00:04:34.160> the<00:04:34.400> materials<00:04:34.970> array<00:04:35.240> from<00:04:35.540> the

00:04:35.620 --> 00:04:35.630 
sets the materials array from the

00:04:35.630 --> 00:04:37.659 
sets the materials array from the
materials<00:04:36.140> container<00:04:36.530> just<00:04:37.160> like<00:04:37.340> on<00:04:37.520> every

00:04:37.659 --> 00:04:37.669 
materials container just like on every

00:04:37.669 --> 00:04:40.990 
materials container just like on every
other<00:04:37.910> object<00:04:39.070> so<00:04:40.070> now<00:04:40.220> you've<00:04:40.460> got<00:04:40.669> a<00:04:40.700> good

00:04:40.990 --> 00:04:41.000 
other object so now you've got a good

00:04:41.000 --> 00:04:43.360 
other object so now you've got a good
overview<00:04:41.330> of<00:04:41.570> how<00:04:41.690> the<00:04:41.750> tree<00:04:42.050> works<00:04:42.290> in<00:04:42.620> the

00:04:43.360 --> 00:04:43.370 
overview of how the tree works in the

00:04:43.370 --> 00:04:45.159 
overview of how the tree works in the
next<00:04:43.640> video<00:04:43.880> we'll<00:04:44.390> see<00:04:44.600> how<00:04:44.630> it<00:04:44.900> was<00:04:44.990> put

00:04:45.159 --> 00:04:45.169 
next video we'll see how it was put

00:04:45.169 --> 00:04:48.100 
next video we'll see how it was put
together<00:04:45.350> in<00:04:45.590> the<00:04:45.770> first<00:04:45.919> place

