WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:01.969 

my<00:00:00.480> name<00:00:00.630> is<00:00:00.780> Daniel<00:00:01.020> Wilson<00:00:01.350> and<00:00:01.589> today<00:00:01.800> I'll

00:00:01.969 --> 00:00:01.979 
my name is Daniel Wilson and today I'll

00:00:01.979 --> 00:00:04.519 
my name is Daniel Wilson and today I'll
be<00:00:02.070> introducing<00:00:02.340> sky<00:00:03.000> master<00:00:03.419> a<00:00:03.600> simulant

00:00:04.519 --> 00:00:04.529 
be introducing sky master a simulant

00:00:04.529 --> 00:00:06.530 
be introducing sky master a simulant
powered<00:00:04.920> autopilot<00:00:05.430> for<00:00:05.790> unmanned<00:00:06.180> aerial

00:00:06.530 --> 00:00:06.540 
powered autopilot for unmanned aerial

00:00:06.540 --> 00:00:10.129 
powered autopilot for unmanned aerial
vehicles<00:00:07.040> so<00:00:08.040> what<00:00:08.189> does<00:00:08.340> sky<00:00:08.550> master<00:00:08.849> do<00:00:09.139> well

00:00:10.129 --> 00:00:10.139 
vehicles so what does sky master do well

00:00:10.139 --> 00:00:12.379 
vehicles so what does sky master do well
when<00:00:10.530> installed<00:00:10.889> in<00:00:10.980> an<00:00:11.099> aerial<00:00:11.429> platform<00:00:11.910> sky

00:00:12.379 --> 00:00:12.389 
when installed in an aerial platform sky

00:00:12.389 --> 00:00:14.060 
when installed in an aerial platform sky
master<00:00:12.690> takes<00:00:12.900> control<00:00:13.110> of<00:00:13.410> the<00:00:13.469> vehicle<00:00:13.620> to

00:00:14.060 --> 00:00:14.070 
master takes control of the vehicle to

00:00:14.070 --> 00:00:15.589 
master takes control of the vehicle to
carry<00:00:14.280> out<00:00:14.429> a<00:00:14.460> specified<00:00:14.940> mission<00:00:15.330> with

00:00:15.589 --> 00:00:15.599 
carry out a specified mission with

00:00:15.599 --> 00:00:18.410 
carry out a specified mission with
complete<00:00:15.960> autonomy<00:00:16.430> here<00:00:17.430> we<00:00:18.000> have<00:00:18.119> a<00:00:18.150> typical

00:00:18.410 --> 00:00:18.420 
complete autonomy here we have a typical

00:00:18.420 --> 00:00:20.210 
complete autonomy here we have a typical
fixed-wing<00:00:18.930> application<00:00:19.470> which<00:00:19.800> we<00:00:19.980> use

00:00:20.210 --> 00:00:20.220 
fixed-wing application which we use

00:00:20.220 --> 00:00:22.490 
fixed-wing application which we use
throughout<00:00:20.460> this<00:00:20.550> presentation<00:00:21.289> now<00:00:22.289> here's

00:00:22.490 --> 00:00:22.500 
throughout this presentation now here's

00:00:22.500 --> 00:00:24.500 
throughout this presentation now here's
the<00:00:22.619> custom<00:00:22.980> printed<00:00:23.279> circuit<00:00:23.670> board<00:00:23.880> it

00:00:24.500 --> 00:00:24.510 
the custom printed circuit board it

00:00:24.510 --> 00:00:26.000 
the custom printed circuit board it
comprises<00:00:24.930> everything<00:00:25.500> necessary<00:00:25.619> for

00:00:26.000 --> 00:00:26.010 
comprises everything necessary for

00:00:26.010 --> 00:00:27.769 
comprises everything necessary for
autonomous<00:00:26.369> flight<00:00:26.670> which<00:00:27.090> includes<00:00:27.480> a

00:00:27.769 --> 00:00:27.779 
autonomous flight which includes a

00:00:27.779 --> 00:00:29.800 
autonomous flight which includes a
microcontroller<00:00:28.560> and<00:00:28.769> array<00:00:29.429> of<00:00:29.550> sensors

00:00:29.800 --> 00:00:29.810 
microcontroller and array of sensors

00:00:29.810 --> 00:00:32.600 
microcontroller and array of sensors
onboard<00:00:30.810> data<00:00:30.960> logging<00:00:31.260> and<00:00:31.590> a<00:00:31.920> connector<00:00:32.340> for

00:00:32.600 --> 00:00:32.610 
onboard data logging and a connector for

00:00:32.610 --> 00:00:35.420 
onboard data logging and a connector for
communications<00:00:33.300> actuation<00:00:34.110> and<00:00:34.290> power<00:00:34.590> the

00:00:35.420 --> 00:00:35.430 
communications actuation and power the

00:00:35.430 --> 00:00:37.220 
communications actuation and power the
good<00:00:35.610> news<00:00:35.790> here<00:00:36.120> is<00:00:36.239> that<00:00:36.690> the<00:00:36.899> hardware

00:00:37.220 --> 00:00:37.230 
good news here is that the hardware

00:00:37.230 --> 00:00:39.049 
good news here is that the hardware
development<00:00:37.649> occurs<00:00:38.010> offline<00:00:38.520> and<00:00:38.790> is

00:00:39.049 --> 00:00:39.059 
development occurs offline and is

00:00:39.059 --> 00:00:41.869 
development occurs offline and is
largely<00:00:39.420> non<00:00:40.020> iterative<00:00:40.559> so<00:00:41.219> refinement<00:00:41.760> is

00:00:41.869 --> 00:00:41.879 
largely non iterative so refinement is

00:00:41.879 --> 00:00:43.880 
largely non iterative so refinement is
not<00:00:42.030> normally<00:00:42.300> necessary<00:00:42.719> on<00:00:42.960> the<00:00:43.620> software

00:00:43.880 --> 00:00:43.890 
not normally necessary on the software

00:00:43.890 --> 00:00:45.889 
not normally necessary on the software
side<00:00:44.190> we<00:00:45.030> are<00:00:45.149> running<00:00:45.329> a<00:00:45.510> real-time

00:00:45.889 --> 00:00:45.899 
side we are running a real-time

00:00:45.899 --> 00:00:47.209 
side we are running a real-time
operating<00:00:46.260> system<00:00:46.710> onboard<00:00:47.160> the

00:00:47.209 --> 00:00:47.219 
operating system onboard the

00:00:47.219 --> 00:00:49.610 
operating system onboard the
microcontroller<00:00:47.610> to<00:00:48.059> handle<00:00:48.780> tasks<00:00:49.230> such<00:00:49.590> as

00:00:49.610 --> 00:00:49.620 
microcontroller to handle tasks such as

00:00:49.620 --> 00:00:52.459 
microcontroller to handle tasks such as
sensor<00:00:50.460> sampling<00:00:50.989> configuration<00:00:51.989> data

00:00:52.459 --> 00:00:52.469 
sensor sampling configuration data

00:00:52.469 --> 00:00:55.549 
sensor sampling configuration data
logging<00:00:52.710> and<00:00:53.039> ground<00:00:53.489> communications<00:00:54.559> like

00:00:55.549 --> 00:00:55.559 
logging and ground communications like

00:00:55.559 --> 00:00:57.139 
logging and ground communications like
the<00:00:55.710> hardware<00:00:56.039> development<00:00:56.879> of<00:00:57.030> these

00:00:57.139 --> 00:00:57.149 
the hardware development of these

00:00:57.149 --> 00:01:00.080 
the hardware development of these
modules<00:00:57.329> only<00:00:57.870> requires<00:00:58.170> one<00:00:58.289> pass<00:00:58.879> the<00:00:59.879> same

00:01:00.080 --> 00:01:00.090 
modules only requires one pass the same

00:01:00.090 --> 00:01:01.819 
modules only requires one pass the same
cannot<00:01:00.329> be<00:01:00.390> said<00:01:00.510> however<00:01:00.899> for<00:01:01.440> the<00:01:01.500> heart<00:01:01.710> of

00:01:01.819 --> 00:01:01.829 
cannot be said however for the heart of

00:01:01.829 --> 00:01:03.920 
cannot be said however for the heart of
sky<00:01:02.010> master<00:01:02.399> the<00:01:02.910> guidance<00:01:03.329> navigation<00:01:03.449> to

00:01:03.920 --> 00:01:03.930 
sky master the guidance navigation to

00:01:03.930 --> 00:01:07.940 
sky master the guidance navigation to
control<00:01:04.290> or<00:01:04.530> GNC<00:01:05.159> module<00:01:05.930> here<00:01:06.950> development

00:01:07.940 --> 00:01:07.950 
control or GNC module here development

00:01:07.950 --> 00:01:09.530 
control or GNC module here development
requires<00:01:08.280> a<00:01:08.520> derivative<00:01:08.670> field<00:01:09.119> testing

00:01:09.530 --> 00:01:09.540 
requires a derivative field testing

00:01:09.540 --> 00:01:12.109 
requires a derivative field testing
analysis<00:01:10.020> and<00:01:10.290> refinement<00:01:10.770> this<00:01:11.700> process

00:01:12.109 --> 00:01:12.119 
analysis and refinement this process

00:01:12.119 --> 00:01:14.000 
analysis and refinement this process
generally<00:01:12.479> consists<00:01:13.080> of<00:01:13.200> implementing<00:01:13.920> the

00:01:14.000 --> 00:01:14.010 
generally consists of implementing the

00:01:14.010 --> 00:01:16.999 
generally consists of implementing the
GNC<00:01:14.340> algorithms<00:01:15.090> and<00:01:15.360> simulation<00:01:16.009> converting

00:01:16.999 --> 00:01:17.009 
GNC algorithms and simulation converting

00:01:17.009 --> 00:01:19.100 
GNC algorithms and simulation converting
them<00:01:17.159> to<00:01:17.369> an<00:01:17.430> embedded<00:01:17.729> language<00:01:18.110> compiling

00:01:19.100 --> 00:01:19.110 
them to an embedded language compiling

00:01:19.110 --> 00:01:20.480 
them to an embedded language compiling
them<00:01:19.320> with<00:01:19.409> the<00:01:19.500> auto<00:01:19.650> pilot<00:01:19.799> software<00:01:20.310> and

00:01:20.480 --> 00:01:20.490 
them with the auto pilot software and

00:01:20.490 --> 00:01:22.730 
them with the auto pilot software and
then<00:01:20.759> testing<00:01:21.180> the<00:01:21.900> main<00:01:22.049> bottleneck<00:01:22.290> in<00:01:22.650> this

00:01:22.730 --> 00:01:22.740 
then testing the main bottleneck in this

00:01:22.740 --> 00:01:24.859 
then testing the main bottleneck in this
process<00:01:23.189> is<00:01:23.400> the<00:01:23.670> menu<00:01:23.970> conversion<00:01:24.479> from<00:01:24.689> high

00:01:24.859 --> 00:01:24.869 
process is the menu conversion from high

00:01:24.869 --> 00:01:26.859 
process is the menu conversion from high
level<00:01:25.200> simulation<00:01:25.680> to<00:01:26.280> an<00:01:26.369> embedded<00:01:26.670> language

00:01:26.859 --> 00:01:26.869 
level simulation to an embedded language

00:01:26.869 --> 00:01:29.630 
level simulation to an embedded language
not<00:01:27.869> only<00:01:27.900> is<00:01:28.259> this<00:01:28.380> process<00:01:28.710> slow<00:01:29.009> but<00:01:29.520> it's

00:01:29.630 --> 00:01:29.640 
not only is this process slow but it's

00:01:29.640 --> 00:01:32.030 
not only is this process slow but it's
difficult<00:01:29.850> and<00:01:30.270> often<00:01:30.630> induces<00:01:30.930> errors<00:01:31.409> which

00:01:32.030 --> 00:01:32.040 
difficult and often induces errors which

00:01:32.040 --> 00:01:33.590 
difficult and often induces errors which
don't<00:01:32.250> show<00:01:32.430> up<00:01:32.579> until<00:01:32.820> the<00:01:33.119> flight<00:01:33.270> testing

00:01:33.590 --> 00:01:33.600 
don't show up until the flight testing

00:01:33.600 --> 00:01:35.899 
don't show up until the flight testing
phase<00:01:33.780> when<00:01:34.770> developing<00:01:35.189> complex<00:01:35.549> aerial

00:01:35.899 --> 00:01:35.909 
phase when developing complex aerial

00:01:35.909 --> 00:01:37.910 
phase when developing complex aerial
systems<00:01:36.270> problems<00:01:37.140> here<00:01:37.470> can<00:01:37.740> be<00:01:37.829> the

00:01:37.910 --> 00:01:37.920 
systems problems here can be the

00:01:37.920 --> 00:01:39.520 
systems problems here can be the
difference<00:01:38.009> between<00:01:38.340> success<00:01:38.670> and<00:01:39.150> failure

00:01:39.520 --> 00:01:39.530 
difference between success and failure

00:01:39.530 --> 00:01:41.660 
difference between success and failure
now<00:01:40.530> this<00:01:40.650> is<00:01:40.770> where<00:01:40.950> Simulink<00:01:41.369> enters

00:01:41.660 --> 00:01:41.670 
now this is where Simulink enters

00:01:41.670 --> 00:01:44.240 
now this is where Simulink enters
licensing<00:01:42.090> affairs<00:01:42.860> simulating<00:01:43.860> gates<00:01:44.040> these

00:01:44.240 --> 00:01:44.250 
licensing affairs simulating gates these

00:01:44.250 --> 00:01:46.609 
licensing affairs simulating gates these
issues<00:01:44.610> by<00:01:44.970> combining<00:01:45.479> simulation<00:01:46.020> code

00:01:46.609 --> 00:01:46.619 
issues by combining simulation code

00:01:46.619 --> 00:01:49.130 
issues by combining simulation code
generation<00:01:47.070> and<00:01:47.399> algorithm<00:01:48.360> validation<00:01:48.930> in<00:01:49.049> a

00:01:49.130 --> 00:01:49.140 
generation and algorithm validation in a

00:01:49.140 --> 00:01:52.190 
generation and algorithm validation in a
single<00:01:49.530> streamline<00:01:50.130> step<00:01:50.780> not<00:01:51.780> only<00:01:52.079> is

00:01:52.190 --> 00:01:52.200 
single streamline step not only is

00:01:52.200 --> 00:01:53.780 
single streamline step not only is
embedded<00:01:52.560> code<00:01:52.740> automatically<00:01:53.250> generated

00:01:53.780 --> 00:01:53.790 
embedded code automatically generated

00:01:53.790 --> 00:01:56.179 
embedded code automatically generated
with<00:01:53.909> a<00:01:53.939> single<00:01:54.299> click<00:01:54.479> but<00:01:55.439> all<00:01:55.649> algorithm

00:01:56.179 --> 00:01:56.189 
with a single click but all algorithm

00:01:56.189 --> 00:01:58.039 
with a single click but all algorithm
development<00:01:56.579> and<00:01:56.880> testing<00:01:57.420> can<00:01:57.630> occur<00:01:57.869> in<00:01:57.930> a

00:01:58.039 --> 00:01:58.049 
development and testing can occur in a

00:01:58.049 --> 00:02:01.249 
development and testing can occur in a
high-level<00:01:58.259> graphical<00:01:59.100> environment<00:02:00.259> similar

00:02:01.249 --> 00:02:01.259 
high-level graphical environment similar

00:02:01.259 --> 00:02:03.050 
high-level graphical environment similar
link<00:02:01.500> reduces<00:02:01.890> a<00:02:01.920> time<00:02:02.280> consuming<00:02:02.759> tedious

00:02:03.050 --> 00:02:03.060 
link reduces a time consuming tedious

00:02:03.060 --> 00:02:05.870 
link reduces a time consuming tedious
and<00:02:03.509> error-prone<00:02:03.899> process<00:02:04.399> to<00:02:05.399> just<00:02:05.520> a<00:02:05.670> few

00:02:05.870 --> 00:02:05.880 
and error-prone process to just a few

00:02:05.880 --> 00:02:06.639 
and error-prone process to just a few
mouse<00:02:06.030> clicks

00:02:06.639 --> 00:02:06.649 
mouse clicks

00:02:06.649 --> 00:02:09.380 
mouse clicks
so<00:02:07.649> how<00:02:07.710> does<00:02:07.770> this<00:02:07.950> work<00:02:08.160> we<00:02:08.940> begin<00:02:09.209> with<00:02:09.360> a

00:02:09.380 --> 00:02:09.390 
so how does this work we begin with a

00:02:09.390 --> 00:02:11.300 
so how does this work we begin with a
simulation<00:02:09.929> running<00:02:10.560> in<00:02:10.709> real-time<00:02:10.890> and

00:02:11.300 --> 00:02:11.310 
simulation running in real-time and

00:02:11.310 --> 00:02:13.140 
simulation running in real-time and
showing<00:02:11.760> a<00:02:11.819> visualization<00:02:12.599> of<00:02:12.750> an

00:02:13.140 --> 00:02:13.150 
showing a visualization of an

00:02:13.150 --> 00:02:15.600 
showing a visualization of an
craft<00:02:13.420> as<00:02:14.079> well<00:02:14.319> as<00:02:14.379> a<00:02:14.439> scope<00:02:14.739> comparing<00:02:15.370> bank

00:02:15.600 --> 00:02:15.610 
craft as well as a scope comparing bank

00:02:15.610 --> 00:02:18.300 
craft as well as a scope comparing bank
with<00:02:15.849> a<00:02:15.879> bank<00:02:16.120> command<00:02:16.420> and<00:02:16.920> the<00:02:17.920> simulation

00:02:18.300 --> 00:02:18.310 
with a bank command and the simulation

00:02:18.310 --> 00:02:20.160 
with a bank command and the simulation
we<00:02:18.760> can<00:02:18.909> modify<00:02:19.120> the<00:02:19.269> bank<00:02:19.540> command<00:02:19.900> and

00:02:20.160 --> 00:02:20.170 
we can modify the bank command and

00:02:20.170 --> 00:02:21.780 
we can modify the bank command and
analyze<00:02:20.470> the<00:02:20.620> response<00:02:21.010> to<00:02:21.129> the<00:02:21.220> aircraft<00:02:21.610> in

00:02:21.780 --> 00:02:21.790 
analyze the response to the aircraft in

00:02:21.790 --> 00:02:22.640 
analyze the response to the aircraft in
real-time

00:02:22.640 --> 00:02:22.650 
real-time

00:02:22.650 --> 00:02:25.229 
real-time
this<00:02:23.650> allows<00:02:23.890> us<00:02:24.099> to<00:02:24.220> develop<00:02:24.340> ensuring<00:02:24.909> the<00:02:25.060> G

00:02:25.229 --> 00:02:25.239 
this allows us to develop ensuring the G

00:02:25.239 --> 00:02:27.600 
this allows us to develop ensuring the G
and<00:02:25.360> C<00:02:25.480> algorithms<00:02:25.989> offline<00:02:26.409> without<00:02:27.250> risking

00:02:27.600 --> 00:02:27.610 
and C algorithms offline without risking

00:02:27.610 --> 00:02:30.390 
and C algorithms offline without risking
any<00:02:27.819> aircraft<00:02:28.000> and<00:02:28.890> this<00:02:29.890> is<00:02:30.010> where<00:02:30.159> all<00:02:30.280> the

00:02:30.390 --> 00:02:30.400 
any aircraft and this is where all the

00:02:30.400 --> 00:02:32.690 
any aircraft and this is where all the
autonomy<00:02:30.760> happens<00:02:31.060> and<00:02:31.299> the<00:02:31.720> GNC<00:02:31.989> block

00:02:32.690 --> 00:02:32.700 
autonomy happens and the GNC block

00:02:32.700 --> 00:02:35.009 
autonomy happens and the GNC block
inside<00:02:33.700> we<00:02:33.970> can<00:02:34.090> see<00:02:34.120> separate<00:02:34.540> models<00:02:34.870> of

00:02:35.009 --> 00:02:35.019 
inside we can see separate models of

00:02:35.019 --> 00:02:37.860 
inside we can see separate models of
guidance<00:02:35.379> navigation<00:02:35.650> and<00:02:36.159> control<00:02:36.870> the

00:02:37.860 --> 00:02:37.870 
guidance navigation and control the

00:02:37.870 --> 00:02:39.690 
guidance navigation and control the
beauty<00:02:38.170> of<00:02:38.200> this<00:02:38.379> inherent<00:02:38.769> modularity<00:02:39.159> is

00:02:39.690 --> 00:02:39.700 
beauty of this inherent modularity is

00:02:39.700 --> 00:02:41.280 
beauty of this inherent modularity is
that<00:02:39.879> provided<00:02:40.269> we<00:02:40.359> maintain<00:02:40.750> a<00:02:40.780> standard<00:02:41.170> set

00:02:41.280 --> 00:02:41.290 
that provided we maintain a standard set

00:02:41.290 --> 00:02:43.619 
that provided we maintain a standard set
of<00:02:41.349> interfaces<00:02:41.670> we<00:02:42.670> can<00:02:42.790> swap<00:02:43.090> different<00:02:43.299> gene

00:02:43.619 --> 00:02:43.629 
of interfaces we can swap different gene

00:02:43.629 --> 00:02:46.920 
of interfaces we can swap different gene
z<00:02:43.780> algorithms<00:02:44.319> in<00:02:44.530> and<00:02:44.739> out<00:02:44.859> seamlessly<00:02:45.930> this

00:02:46.920 --> 00:02:46.930 
z algorithms in and out seamlessly this

00:02:46.930 --> 00:02:48.629 
z algorithms in and out seamlessly this
simplifies<00:02:47.379> algorithm<00:02:47.980> benchmarking<00:02:48.519> and

00:02:48.629 --> 00:02:48.639 
simplifies algorithm benchmarking and

00:02:48.639 --> 00:02:50.640 
simplifies algorithm benchmarking and
allows<00:02:49.239> skymaster<00:02:50.019> to<00:02:50.200> be<00:02:50.260> used<00:02:50.470> on<00:02:50.620> different

00:02:50.640 --> 00:02:50.650 
allows skymaster to be used on different

00:02:50.650 --> 00:02:53.190 
allows skymaster to be used on different
types<00:02:51.040> of<00:02:51.129> aerial<00:02:51.430> vehicles<00:02:51.819> the<00:02:52.720> next<00:02:52.989> step

00:02:53.190 --> 00:02:53.200 
types of aerial vehicles the next step

00:02:53.200 --> 00:02:55.259 
types of aerial vehicles the next step
is<00:02:53.409> automatic<00:02:53.980> generation<00:02:54.340> of<00:02:54.700> embedded<00:02:55.120> code

00:02:55.259 --> 00:02:55.269 
is automatic generation of embedded code

00:02:55.269 --> 00:02:58.589 
is automatic generation of embedded code
from<00:02:55.810> the<00:02:55.959> GNC<00:02:56.200> model<00:02:56.670> we<00:02:57.670> simply<00:02:58.030> click<00:02:58.480> the

00:02:58.589 --> 00:02:58.599 
from the GNC model we simply click the

00:02:58.599 --> 00:03:00.229 
from the GNC model we simply click the
build<00:02:58.780> button<00:02:58.989> and<00:02:59.260> wait<00:02:59.439> until<00:02:59.650> completion

00:03:00.229 --> 00:03:00.239 
build button and wait until completion

00:03:00.239 --> 00:03:02.670 
build button and wait until completion
the<00:03:01.239> benefits<00:03:01.659> of<00:03:01.780> the<00:03:01.870> single<00:03:02.139> click<00:03:02.349> can<00:03:02.530> not

00:03:02.670 --> 00:03:02.680 
the benefits of the single click can not

00:03:02.680 --> 00:03:04.830 
the benefits of the single click can not
be<00:03:02.799> overstated<00:03:03.030> all<00:03:04.030> the<00:03:04.269> complex<00:03:04.599> heavy

00:03:04.830 --> 00:03:04.840 
be overstated all the complex heavy

00:03:04.840 --> 00:03:06.559 
be overstated all the complex heavy
lifting<00:03:05.139> is<00:03:05.260> done<00:03:05.290> in<00:03:05.620> a<00:03:05.680> matter<00:03:05.829> of<00:03:05.920> seconds

00:03:06.559 --> 00:03:06.569 
lifting is done in a matter of seconds

00:03:06.569 --> 00:03:09.089 
lifting is done in a matter of seconds
further<00:03:07.569> this<00:03:08.019> process<00:03:08.470> ensures<00:03:08.799> that<00:03:08.829> the

00:03:09.089 --> 00:03:09.099 
further this process ensures that the

00:03:09.099 --> 00:03:11.220 
further this process ensures that the
algorithm<00:03:09.579> running<00:03:09.790> in<00:03:09.939> a<00:03:10.000> simulation<00:03:10.359> is

00:03:11.220 --> 00:03:11.230 
algorithm running in a simulation is

00:03:11.230 --> 00:03:12.960 
algorithm running in a simulation is
equivalent<00:03:11.829> to<00:03:12.040> the<00:03:12.129> algorithm<00:03:12.400> running

00:03:12.960 --> 00:03:12.970 
equivalent to the algorithm running

00:03:12.970 --> 00:03:14.360 
equivalent to the algorithm running
onboard<00:03:13.299> the<00:03:13.389> aircraft

00:03:14.360 --> 00:03:14.370 
onboard the aircraft

00:03:14.370 --> 00:03:17.189 
onboard the aircraft
next<00:03:15.370> we<00:03:15.639> copy<00:03:15.849> the<00:03:16.030> generated<00:03:16.060> files<00:03:16.720> over<00:03:17.169> to

00:03:17.189 --> 00:03:17.199 
next we copy the generated files over to

00:03:17.199 --> 00:03:20.369 
next we copy the generated files over to
the<00:03:17.349> sky<00:03:17.500> master<00:03:17.829> project<00:03:18.069> and<00:03:18.519> compile<00:03:19.379> here

00:03:20.369 --> 00:03:20.379 
the sky master project and compile here

00:03:20.379 --> 00:03:22.439 
the sky master project and compile here
we<00:03:20.620> can<00:03:20.739> see<00:03:20.859> the<00:03:20.949> GNC<00:03:21.280> function<00:03:21.819> placeholder

00:03:22.439 --> 00:03:22.449 
we can see the GNC function placeholder

00:03:22.449 --> 00:03:23.819 
we can see the GNC function placeholder
in<00:03:22.540> the<00:03:22.569> main<00:03:22.780> file<00:03:23.019> which<00:03:23.440> calls<00:03:23.709> the

00:03:23.819 --> 00:03:23.829 
in the main file which calls the

00:03:23.829 --> 00:03:26.250 
in the main file which calls the
generated<00:03:24.190> code<00:03:24.690> we<00:03:25.690> now<00:03:25.840> upload<00:03:26.139> the

00:03:26.250 --> 00:03:26.260 
generated code we now upload the

00:03:26.260 --> 00:03:28.140 
generated code we now upload the
executable<00:03:26.829> to<00:03:26.980> Sky<00:03:27.160> master<00:03:27.549> and<00:03:27.760> do<00:03:28.000> some

00:03:28.140 --> 00:03:28.150 
executable to Sky master and do some

00:03:28.150 --> 00:03:30.539 
executable to Sky master and do some
last-minute<00:03:28.419> ground-based<00:03:28.930> tests<00:03:29.549> this

00:03:30.539 --> 00:03:30.549 
last-minute ground-based tests this

00:03:30.549 --> 00:03:34.560 
last-minute ground-based tests this
includes<00:03:30.970> checking<00:03:31.419> the<00:03:31.629> manual<00:03:31.930> radio<00:03:32.230> link

00:03:34.560 --> 00:03:34.570 

00:03:34.570 --> 00:03:36.610 

checking<00:03:35.570> the<00:03:35.660> status<00:03:35.870> in<00:03:36.110> but<00:03:36.230> on<00:03:36.410> the<00:03:36.530> ground

00:03:36.610 --> 00:03:36.620 
checking the status in but on the ground

00:03:36.620 --> 00:03:39.460 
checking the status in but on the ground
station

00:03:39.460 --> 00:03:39.470 

00:03:39.470 --> 00:03:41.980 

and<00:03:39.580> then<00:03:40.580> engaging<00:03:40.880> autonomous<00:03:41.420> mode<00:03:41.660> to

00:03:41.980 --> 00:03:41.990 
and then engaging autonomous mode to

00:03:41.990 --> 00:03:44.740 
and then engaging autonomous mode to
check<00:03:42.110> the<00:03:42.230> response<00:03:43.180> here<00:03:44.180> we<00:03:44.420> can<00:03:44.540> see<00:03:44.660> the

00:03:44.740 --> 00:03:44.750 
check the response here we can see the

00:03:44.750 --> 00:03:46.330 
check the response here we can see the
ailerons<00:03:45.170> compensating<00:03:45.860> for<00:03:46.010> the<00:03:46.100> rolling

00:03:46.330 --> 00:03:46.340 
ailerons compensating for the rolling

00:03:46.340 --> 00:03:51.190 
ailerons compensating for the rolling
motion<00:03:49.150> now<00:03:50.150> it's<00:03:50.330> time<00:03:50.480> to<00:03:50.600> test<00:03:50.750> the<00:03:50.870> system

00:03:51.190 --> 00:03:51.200 
motion now it's time to test the system

00:03:51.200 --> 00:03:54.070 
motion now it's time to test the system
in<00:03:51.290> the<00:03:51.380> field<00:03:52.060> here<00:03:53.060> the<00:03:53.480> UAV<00:03:53.900> is

00:03:54.070 --> 00:03:54.080 
in the field here the UAV is

00:03:54.080 --> 00:03:55.510 
in the field here the UAV is
implementing<00:03:54.590> a<00:03:54.680> nonlinear<00:03:55.190> garden's

00:03:55.510 --> 00:03:55.520 
implementing a nonlinear garden's

00:03:55.520 --> 00:03:57.670 
implementing a nonlinear garden's
algorithm<00:03:55.970> to<00:03:56.180> follow<00:03:56.390> a<00:03:56.450> divins<00:03:56.780> path<00:03:56.990> while

00:03:57.670 --> 00:03:57.680 
algorithm to follow a divins path while

00:03:57.680 --> 00:03:59.080 
algorithm to follow a divins path while
maintaining<00:03:57.950> and<00:03:58.280> commanded<00:03:58.640> altitude<00:03:58.970> and

00:03:59.080 --> 00:03:59.090 
maintaining and commanded altitude and

00:03:59.090 --> 00:04:02.140 
maintaining and commanded altitude and
airspeed<00:03:59.240> all<00:03:59.690> with<00:04:00.200> full<00:04:00.440> autonomy<00:04:01.150> it

00:04:02.140 --> 00:04:02.150 
airspeed all with full autonomy it

00:04:02.150 --> 00:04:03.460 
airspeed all with full autonomy it
should<00:04:02.330> be<00:04:02.420> noted<00:04:02.750> that<00:04:02.780> problems<00:04:03.320> during

00:04:03.460 --> 00:04:03.470 
should be noted that problems during

00:04:03.470 --> 00:04:04.960 
should be noted that problems during
flight<00:04:03.740> testing<00:04:04.130> have<00:04:04.250> been<00:04:04.370> minimal<00:04:04.760> and<00:04:04.940> the

00:04:04.960 --> 00:04:04.970 
flight testing have been minimal and the

00:04:04.970 --> 00:04:07.270 
flight testing have been minimal and the
minor<00:04:05.510> issues<00:04:05.780> we<00:04:05.900> did<00:04:06.080> encounter<00:04:06.320> were<00:04:07.070> able

00:04:07.270 --> 00:04:07.280 
minor issues we did encounter were able

00:04:07.280 --> 00:04:09.070 
minor issues we did encounter were able
to<00:04:07.310> be<00:04:07.430> recreated<00:04:07.760> in<00:04:08.000> simulation<00:04:08.510> fixing

00:04:09.070 --> 00:04:09.080 
to be recreated in simulation fixing

00:04:09.080 --> 00:04:10.990 
to be recreated in simulation fixing
simulation<00:04:09.620> upload<00:04:10.430> to<00:04:10.580> the<00:04:10.670> aircraft

00:04:10.990 --> 00:04:11.000 
simulation upload to the aircraft

00:04:11.000 --> 00:04:13.060 
simulation upload to the aircraft
effects<00:04:11.630> on<00:04:11.780> the<00:04:11.840> aircraft<00:04:12.170> or<00:04:12.530> within<00:04:12.950> a

00:04:13.060 --> 00:04:13.070 
effects on the aircraft or within a

00:04:13.070 --> 00:04:15.970 
effects on the aircraft or within a
space<00:04:13.250> one<00:04:13.490> afternoon<00:04:14.380> without<00:04:15.380> this<00:04:15.680> rapid

00:04:15.970 --> 00:04:15.980 
space one afternoon without this rapid

00:04:15.980 --> 00:04:17.830 
space one afternoon without this rapid
development<00:04:16.400> framework<00:04:16.760> this<00:04:17.359> debugging

00:04:17.830 --> 00:04:17.840 
development framework this debugging

00:04:17.840 --> 00:04:19.390 
development framework this debugging
process<00:04:18.049> would<00:04:18.410> have<00:04:18.470> likely<00:04:18.709> required<00:04:19.190> an

00:04:19.390 --> 00:04:19.400 
process would have likely required an

00:04:19.400 --> 00:04:22.450 
process would have likely required an
unproductive<00:04:19.730> trip<00:04:20.150> back<00:04:20.359> to<00:04:20.390> the<00:04:20.510> lab<00:04:21.460> after

00:04:22.450 --> 00:04:22.460 
unproductive trip back to the lab after

00:04:22.460 --> 00:04:24.940 
unproductive trip back to the lab after
the<00:04:23.060> flight<00:04:23.300> a<00:04:23.510> series<00:04:24.200> of<00:04:24.230> MATLAB<00:04:24.620> scripts

00:04:24.940 --> 00:04:24.950 
the flight a series of MATLAB scripts

00:04:24.950 --> 00:04:26.800 
the flight a series of MATLAB scripts
automatically<00:04:25.640> analyze<00:04:26.090> and<00:04:26.420> display<00:04:26.690> the

00:04:26.800 --> 00:04:26.810 
automatically analyze and display the

00:04:26.810 --> 00:04:29.590 
automatically analyze and display the
flight<00:04:27.020> data

00:04:29.590 --> 00:04:29.600 

00:04:29.600 --> 00:04:31.969 

this<00:04:30.600> even<00:04:30.900> includes<00:04:30.960> automatic<00:04:31.560> generation

00:04:31.969 --> 00:04:31.979 
this even includes automatic generation

00:04:31.979 --> 00:04:34.370 
this even includes automatic generation
of<00:04:32.280> kml<00:04:32.699> files<00:04:32.970> for<00:04:33.509> visualization<00:04:33.810> and

00:04:34.370 --> 00:04:34.380 
of kml files for visualization and

00:04:34.380 --> 00:04:37.340 
of kml files for visualization and
google<00:04:34.650> earth<00:04:35.240> further<00:04:36.240> the<00:04:36.690> flight<00:04:36.900> data<00:04:37.080> can

00:04:37.340 --> 00:04:37.350 
google earth further the flight data can

00:04:37.350 --> 00:04:38.809 
google earth further the flight data can
even<00:04:37.560> be<00:04:37.650> used<00:04:37.860> to<00:04:37.949> replay<00:04:38.280> the<00:04:38.430> mission<00:04:38.699> and

00:04:38.809 --> 00:04:38.819 
even be used to replay the mission and

00:04:38.819 --> 00:04:43.040 
even be used to replay the mission and
Simulink<00:04:39.949> so<00:04:40.949> what's<00:04:41.130> next<00:04:41.389> well<00:04:42.389> what<00:04:42.900> better

00:04:43.040 --> 00:04:43.050 
Simulink so what's next well what better

00:04:43.050 --> 00:04:44.809 
Simulink so what's next well what better
way<00:04:43.259> to<00:04:43.289> demonstrate<00:04:43.500> the<00:04:43.919> fast<00:04:44.160> benefits<00:04:44.699> of

00:04:44.809 --> 00:04:44.819 
way to demonstrate the fast benefits of

00:04:44.819 --> 00:04:47.450 
way to demonstrate the fast benefits of
Simulink<00:04:45.240> then<00:04:45.750> with<00:04:45.960> multi<00:04:46.319> UAV<00:04:46.800> autonomous

00:04:47.450 --> 00:04:47.460 
Simulink then with multi UAV autonomous

00:04:47.460 --> 00:04:49.790 
Simulink then with multi UAV autonomous
formation<00:04:47.940> flats<00:04:48.240> at<00:04:48.900> separations<00:04:49.560> which

00:04:49.790 --> 00:04:49.800 
formation flats at separations which

00:04:49.800 --> 00:04:51.430 
formation flats at separations which
have<00:04:49.919> not<00:04:50.069> previously<00:04:50.460> had<00:04:50.729> been<00:04:50.759> attempted

00:04:51.430 --> 00:04:51.440 
have not previously had been attempted

00:04:51.440 --> 00:04:53.270 
have not previously had been attempted
finally<00:04:52.440> I'd<00:04:52.650> like<00:04:52.710> to<00:04:52.830> express<00:04:53.069> my<00:04:53.250> gratitude

00:04:53.270 --> 00:04:53.280 
finally I'd like to express my gratitude

00:04:53.280 --> 00:04:56.390 
finally I'd like to express my gratitude
to<00:04:53.849> my<00:04:53.880> supervisor<00:04:54.360> dr.<00:04:54.840> elegant<00:04:55.319> Odin<00:04:55.590> dr.

00:04:56.390 --> 00:04:56.400 
to my supervisor dr. elegant Odin dr.

00:04:56.400 --> 00:04:58.189 
to my supervisor dr. elegant Odin dr.
jeremy<00:04:56.729> randall<00:04:57.120> facting<00:04:57.599> as<00:04:57.690> a<00:04:57.720> safety<00:04:58.050> pilot

00:04:58.189 --> 00:04:58.199 
jeremy randall facting as a safety pilot

00:04:58.199 --> 00:05:00.770 
jeremy randall facting as a safety pilot
and<00:04:58.530> the<00:04:59.130> Australian<00:04:59.610> Research<00:04:59.789> Council<00:04:59.970> for

00:05:00.770 --> 00:05:00.780 
and the Australian Research Council for

00:05:00.780 --> 00:05:02.749 
and the Australian Research Council for
supporting<00:05:01.169> this<00:05:01.229> work<00:05:01.580> thank<00:05:02.580> you<00:05:02.639> for

00:05:02.749 --> 00:05:02.759 
supporting this work thank you for

00:05:02.759 --> 00:05:04.880 
supporting this work thank you for
listening

