WEBVTT
Kind: captions
Language: en

00:00:00.120 --> 00:00:04.940 

why<00:00:00.960> bang<00:00:01.199> or<00:00:01.439> to<00:00:01.709> controller<00:00:02.629> sending<00:00:03.950> serial

00:00:04.940 --> 00:00:04.950 
why bang or to controller sending serial

00:00:04.950 --> 00:00:09.169 
why bang or to controller sending serial
value<00:00:05.460> outputs<00:00:05.970> to<00:00:06.180> the<00:00:06.210> PC<00:00:07.670> as<00:00:08.670> you<00:00:08.820> can<00:00:08.970> see

00:00:09.169 --> 00:00:09.179 
value outputs to the PC as you can see

00:00:09.179 --> 00:00:12.950 
value outputs to the PC as you can see
it<00:00:09.269> sent<00:00:10.230> in<00:00:10.380> two<00:00:10.620> four<00:00:10.860> four<00:00:11.450> two<00:00:12.450> point<00:00:12.480> four

00:00:12.950 --> 00:00:12.960 
it sent in two four four two point four

00:00:12.960 --> 00:00:16.120 
it sent in two four four two point four
four<00:00:13.110> lambda<00:00:13.380> which<00:00:13.889> is<00:00:13.920> the<00:00:14.610> free<00:00:14.820> air<00:00:15.030> value

00:00:16.120 --> 00:00:16.130 
four lambda which is the free air value

00:00:16.130 --> 00:00:23.390 
four lambda which is the free air value
equivalent<00:00:17.539> 20.9%<00:00:18.539> oxygen<00:00:22.039> the<00:00:23.039> weight<00:00:23.189> band

00:00:23.390 --> 00:00:23.400 
equivalent 20.9% oxygen the weight band

00:00:23.400 --> 00:00:28.160 
equivalent 20.9% oxygen the weight band
o2<00:00:23.550> sensor<00:00:24.470> and<00:00:25.470> free<00:00:25.830> here<00:00:26.869> the<00:00:27.869> interface

00:00:28.160 --> 00:00:28.170 
o2 sensor and free here the interface

00:00:28.170 --> 00:00:33.069 
o2 sensor and free here the interface
board<00:00:29.179> which<00:00:30.179> interfaces<00:00:30.779> to<00:00:30.900> the<00:00:31.019> sensor

00:00:33.069 --> 00:00:33.079 
board which interfaces to the sensor

00:00:33.079 --> 00:00:35.720 
board which interfaces to the sensor
dialect<00:00:34.079> flashing<00:00:34.469> indicates<00:00:35.070> strength

00:00:35.720 --> 00:00:35.730 
dialect flashing indicates strength

00:00:35.730 --> 00:00:37.130 
dialect flashing indicates strength
immunity<00:00:36.090> and<00:00:36.210> the<00:00:36.270> temperature<00:00:36.660> within<00:00:36.899> 5

00:00:37.130 --> 00:00:37.140 
immunity and the temperature within 5

00:00:37.140 --> 00:00:41.360 
immunity and the temperature within 5
degrees<00:00:37.290> Celsius<00:00:38.059> of<00:00:39.059> the<00:00:39.980> operating<00:00:40.980> nominal

00:00:41.360 --> 00:00:41.370 
degrees Celsius of the operating nominal

00:00:41.370 --> 00:00:43.700 
degrees Celsius of the operating nominal
temperature<00:00:41.489> for<00:00:41.910> the<00:00:42.210> sensor<00:00:42.629> this<00:00:43.350> board

00:00:43.700 --> 00:00:43.710 
temperature for the sensor this board

00:00:43.710 --> 00:00:46.000 
temperature for the sensor this board
interfaces<00:00:44.370> with<00:00:44.489> the<00:00:44.520> microcontroller

00:00:46.000 --> 00:00:46.010 
interfaces with the microcontroller

00:00:46.010 --> 00:00:52.360 
interfaces with the microcontroller
which<00:00:47.010> is<00:00:47.190> on<00:00:47.399> here<00:00:47.719> very<00:00:48.719> powerful<00:00:49.520> pic32

00:00:52.360 --> 00:00:52.370 
which is on here very powerful pic32

00:00:52.370 --> 00:00:54.680 
which is on here very powerful pic32
32-bit<00:00:53.370> memory<00:00:53.489> control<00:00:53.940> of<00:00:54.090> retinal<00:00:54.449> 80

00:00:54.680 --> 00:00:54.690 
32-bit memory control of retinal 80

00:00:54.690 --> 00:00:58.040 
32-bit memory control of retinal 80
megahertz<00:00:55.489> trap<00:00:56.489> on<00:00:56.670> 5<00:00:57.300> nanoseconds

00:00:58.040 --> 00:00:58.050 
megahertz trap on 5 nanoseconds

00:00:58.050 --> 00:01:00.260 
megahertz trap on 5 nanoseconds
instruction<00:00:58.620> cycle<00:00:58.949> oh<00:00:59.100> here<00:00:59.910> we<00:01:00.030> have<00:01:00.149> the

00:01:00.260 --> 00:01:00.270 
instruction cycle oh here we have the

00:01:00.270 --> 00:01:03.340 
instruction cycle oh here we have the
rs-232<00:01:01.050> interface<00:01:01.469> the<00:01:02.370> programming<00:01:02.940> port

00:01:03.340 --> 00:01:03.350 
rs-232 interface the programming port

00:01:03.350 --> 00:01:07.100 
rs-232 interface the programming port
I'll<00:01:04.350> see<00:01:04.559> the<00:01:04.739> debugger<00:01:05.220> 3<00:01:05.820> which<00:01:06.689> allows<00:01:06.930> me

00:01:07.100 --> 00:01:07.110 
I'll see the debugger 3 which allows me

00:01:07.110 --> 00:01:10.340 
I'll see the debugger 3 which allows me
to<00:01:07.290> debug<00:01:07.590> the<00:01:08.490> program<00:01:08.990> well<00:01:09.990> it's<00:01:10.200> actually

00:01:10.340 --> 00:01:10.350 
to debug the program well it's actually

00:01:10.350 --> 00:01:14.200 
to debug the program well it's actually
on<00:01:10.830> the<00:01:11.070> running<00:01:11.869> do<00:01:12.869> you<00:01:12.960> have<00:01:13.140> the

00:01:14.200 --> 00:01:14.210 
on the running do you have the

00:01:14.210 --> 00:01:16.460 
on the running do you have the
regulators<00:01:15.210> on<00:01:15.360> error<00:01:15.600> switching<00:01:15.990> regulators

00:01:16.460 --> 00:01:16.470 
regulators on error switching regulators

00:01:16.470 --> 00:01:22.039 
regulators on error switching regulators
and<00:01:16.909> 3.3<00:01:17.909> volt<00:01:18.150> regulator<00:01:18.390> for<00:01:18.810> the<00:01:19.369> chip<00:01:21.049> this

00:01:22.039 --> 00:01:22.049 
and 3.3 volt regulator for the chip this

00:01:22.049 --> 00:01:24.550 
and 3.3 volt regulator for the chip this
is<00:01:22.229> the<00:01:22.350> PWM<00:01:22.890> signal<00:01:23.070> contain<00:01:23.700> a<00:01:23.759> heater

00:01:24.550 --> 00:01:24.560 
is the PWM signal contain a heater

00:01:24.560 --> 00:02:11.460 
is the PWM signal contain a heater
treatment<00:01:25.560> unit<00:01:26.240> 7<00:01:27.240> 2006<00:01:27.689> degree<00:01:27.990> Celsius

00:02:11.460 --> 00:02:11.470 

00:02:11.470 --> 00:02:13.530 

you

