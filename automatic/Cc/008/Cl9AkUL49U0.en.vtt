WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.990 

hey<00:00:00.599> guys<00:00:00.780> welcome<00:00:01.170> to<00:00:01.319> the<00:00:01.469> 188<00:00:02.250> c-sharp

00:00:02.990 --> 00:00:03.000 
hey guys welcome to the 188 c-sharp

00:00:03.000 --> 00:00:04.910 
hey guys welcome to the 188 c-sharp
tutorial<00:00:03.600> that<00:00:03.780> I'm<00:00:03.899> making<00:00:04.259> for<00:00:04.529> the<00:00:04.799> New

00:00:04.910 --> 00:00:04.920 
tutorial that I'm making for the New

00:00:04.920 --> 00:00:07.249 
tutorial that I'm making for the New
Boston<00:00:05.190> and<00:00:05.759> in<00:00:06.330> this<00:00:06.450> tutorial<00:00:07.020> we're<00:00:07.170> going

00:00:07.249 --> 00:00:07.259 
Boston and in this tutorial we're going

00:00:07.259 --> 00:00:08.900 
Boston and in this tutorial we're going
to<00:00:07.319> continue<00:00:07.740> working<00:00:07.919> on<00:00:08.189> our<00:00:08.250> reader<00:00:08.580> class

00:00:08.900 --> 00:00:08.910 
to continue working on our reader class

00:00:08.910 --> 00:00:10.850 
to continue working on our reader class
and<00:00:09.269> really<00:00:10.080> all<00:00:10.200> that<00:00:10.349> we're<00:00:10.469> going<00:00:10.650> to<00:00:10.769> be

00:00:10.850 --> 00:00:10.860 
and really all that we're going to be

00:00:10.860 --> 00:00:12.259 
and really all that we're going to be
doing<00:00:10.980> here<00:00:11.400> is<00:00:11.550> just<00:00:11.730> reading<00:00:12.059> different

00:00:12.259 --> 00:00:12.269 
doing here is just reading different

00:00:12.269 --> 00:00:14.749 
doing here is just reading different
data<00:00:12.660> types<00:00:12.960> so<00:00:13.950> let's<00:00:14.130> just<00:00:14.280> jump<00:00:14.340> right<00:00:14.610> into

00:00:14.749 --> 00:00:14.759 
data types so let's just jump right into

00:00:14.759 --> 00:00:16.760 
data types so let's just jump right into
it<00:00:15.120> here<00:00:15.150> the<00:00:15.839> first<00:00:16.020> data<00:00:16.230> type<00:00:16.320> that<00:00:16.650> we're

00:00:16.760 --> 00:00:16.770 
it here the first data type that we're

00:00:16.770 --> 00:00:18.830 
it here the first data type that we're
going<00:00:16.890> to<00:00:16.980> be<00:00:17.130> reading<00:00:17.340> is<00:00:17.640> a<00:00:17.670> byte<00:00:17.970> so<00:00:18.630> we're

00:00:18.830 --> 00:00:18.840 
going to be reading is a byte so we're

00:00:18.840 --> 00:00:21.080 
going to be reading is a byte so we're
just<00:00:18.869> gonna<00:00:19.050> say<00:00:19.289> public<00:00:19.920> byte<00:00:20.460> if<00:00:20.760> you<00:00:20.910> want

00:00:21.080 --> 00:00:21.090 
just gonna say public byte if you want

00:00:21.090 --> 00:00:23.420 
just gonna say public byte if you want
to<00:00:21.270> return<00:00:21.570> a<00:00:21.630> byte<00:00:21.930> that<00:00:22.170> is<00:00:22.289> read<00:00:22.529> and<00:00:23.039> I'm

00:00:23.420 --> 00:00:23.430 
to return a byte that is read and I'm

00:00:23.430 --> 00:00:24.710 
to return a byte that is read and I'm
just<00:00:23.609> going<00:00:23.730> to<00:00:23.760> call<00:00:23.939> this<00:00:24.119> method<00:00:24.300> we're

00:00:24.710 --> 00:00:24.720 
just going to call this method we're

00:00:24.720 --> 00:00:25.939 
just going to call this method we're
really<00:00:24.869> quite<00:00:25.170> since<00:00:25.529> that's<00:00:25.740> what<00:00:25.859> we're

00:00:25.939 --> 00:00:25.949 
really quite since that's what we're

00:00:25.949 --> 00:00:29.859 
really quite since that's what we're
going<00:00:26.130> to<00:00:26.189> be<00:00:26.310> doing<00:00:26.460> so<00:00:26.789> we<00:00:27.029> fight<00:00:28.519> all<00:00:29.519> right

00:00:29.859 --> 00:00:29.869 
going to be doing so we fight all right

00:00:29.869 --> 00:00:32.209 
going to be doing so we fight all right
and<00:00:30.869> all<00:00:31.170> we're<00:00:31.289> gonna<00:00:31.349> have<00:00:31.470> it<00:00:31.679> do<00:00:31.830> is<00:00:32.040> just

00:00:32.209 --> 00:00:32.219 
and all we're gonna have it do is just

00:00:32.219 --> 00:00:33.920 
and all we're gonna have it do is just
read<00:00:32.489> about<00:00:32.910> you<00:00:33.030> at<00:00:33.090> the<00:00:33.210> current<00:00:33.510> position

00:00:33.920 --> 00:00:33.930 
read about you at the current position

00:00:33.930 --> 00:00:35.900 
read about you at the current position
and<00:00:34.079> then<00:00:34.230> return<00:00:34.590> it<00:00:34.770> so<00:00:34.950> you're<00:00:35.640> a<00:00:35.670> key

00:00:35.900 --> 00:00:35.910 
and then return it so you're a key

00:00:35.910 --> 00:00:40.369 
and then return it so you're a key
return<00:00:36.649> BRE<00:00:37.649> button<00:00:38.750> all<00:00:39.750> right<00:00:39.930> so<00:00:40.110> you're

00:00:40.369 --> 00:00:40.379 
return BRE button all right so you're

00:00:40.379 --> 00:00:41.720 
return BRE button all right so you're
probably<00:00:40.559> thinking<00:00:40.860> well<00:00:41.219> this<00:00:41.309> is<00:00:41.489> stupid

00:00:41.720 --> 00:00:41.730 
probably thinking well this is stupid

00:00:41.730 --> 00:00:43.610 
probably thinking well this is stupid
why<00:00:42.090> are<00:00:42.149> we<00:00:42.360> even<00:00:42.510> creating<00:00:42.989> a<00:00:43.050> reader<00:00:43.290> class

00:00:43.610 --> 00:00:43.620 
why are we even creating a reader class

00:00:43.620 --> 00:00:45.950 
why are we even creating a reader class
if<00:00:44.010> we're<00:00:44.670> just<00:00:44.760> using<00:00:45.030> the<00:00:45.270> binary<00:00:45.450> readers

00:00:45.950 --> 00:00:45.960 
if we're just using the binary readers

00:00:45.960 --> 00:00:48.260 
if we're just using the binary readers
class<00:00:46.260> and<00:00:46.620> it's<00:00:47.129> returning<00:00:47.250> whatever<00:00:47.670> reads

00:00:48.260 --> 00:00:48.270 
class and it's returning whatever reads

00:00:48.270 --> 00:00:50.660 
class and it's returning whatever reads
well<00:00:49.079> you're<00:00:49.469> partially<00:00:49.920> right<00:00:49.950> for<00:00:50.489> this

00:00:50.660 --> 00:00:50.670 
well you're partially right for this

00:00:50.670 --> 00:00:51.950 
well you're partially right for this
method<00:00:50.910> we<00:00:51.270> don't<00:00:51.420> really<00:00:51.570> have<00:00:51.719> to<00:00:51.809> do

00:00:51.950 --> 00:00:51.960 
method we don't really have to do

00:00:51.960 --> 00:00:53.660 
method we don't really have to do
anything<00:00:52.170> but<00:00:52.590> for<00:00:52.829> all<00:00:53.070> the<00:00:53.309> other<00:00:53.340> methods

00:00:53.660 --> 00:00:53.670 
anything but for all the other methods

00:00:53.670 --> 00:00:55.279 
anything but for all the other methods
that<00:00:53.940> we're<00:00:54.149> going<00:00:54.270> to<00:00:54.360> be<00:00:54.510> doing<00:00:54.629> for<00:00:55.020> all<00:00:55.170> the

00:00:55.279 --> 00:00:55.289 
that we're going to be doing for all the

00:00:55.289 --> 00:00:56.569 
that we're going to be doing for all the
other<00:00:55.440> data<00:00:55.620> types<00:00:55.920> that<00:00:56.039> we're<00:00:56.219> going<00:00:56.340> to<00:00:56.489> be

00:00:56.569 --> 00:00:56.579 
other data types that we're going to be

00:00:56.579 --> 00:00:59.000 
other data types that we're going to be
reading<00:00:56.820> for<00:00:57.420> a<00:00:57.480> signed<00:00:57.840> by<00:00:58.079> or<00:00:58.440> all<00:00:58.859> the

00:00:59.000 --> 00:00:59.010 
reading for a signed by or all the

00:00:59.010 --> 00:00:59.990 
reading for a signed by or all the
integers<00:00:59.399> and<00:00:59.609> stuff

00:00:59.990 --> 00:01:00.000 
integers and stuff

00:01:00.000 --> 00:01:01.880 
integers and stuff
we're<00:01:00.270> gonna<00:01:00.359> have<00:01:00.539> to<00:01:00.629> change<00:01:01.170> how<00:01:01.829> the

00:01:01.880 --> 00:01:01.890 
we're gonna have to change how the

00:01:01.890 --> 00:01:03.650 
we're gonna have to change how the
method<00:01:02.280> works<00:01:02.309> and<00:01:02.730> what<00:01:03.000> it<00:01:03.120> does<00:01:03.270> it's<00:01:03.510> going

00:01:03.650 --> 00:01:03.660 
method works and what it does it's going

00:01:03.660 --> 00:01:05.899 
method works and what it does it's going
to<00:01:03.750> be<00:01:03.870> different<00:01:04.229> than<00:01:04.379> the<00:01:04.640> binary<00:01:05.640> reader

00:01:05.899 --> 00:01:05.909 
to be different than the binary reader

00:01:05.909 --> 00:01:08.510 
to be different than the binary reader
class<00:01:06.439> all<00:01:07.439> right<00:01:07.619> so<00:01:07.890> what<00:01:08.310> you're<00:01:08.369> gonna

00:01:08.510 --> 00:01:08.520 
class all right so what you're gonna

00:01:08.520 --> 00:01:09.950 
class all right so what you're gonna
probably<00:01:08.760> want<00:01:09.000> to<00:01:09.090> do<00:01:09.210> here<00:01:09.479> is<00:01:09.630> just<00:01:09.659> give<00:01:09.930> a

00:01:09.950 --> 00:01:09.960 
probably want to do here is just give a

00:01:09.960 --> 00:01:11.660 
probably want to do here is just give a
nice<00:01:10.170> summary<00:01:10.619> of<00:01:10.920> what<00:01:11.280> this<00:01:11.430> method

00:01:11.660 --> 00:01:11.670 
nice summary of what this method

00:01:11.670 --> 00:01:15.260 
nice summary of what this method
actually<00:01:12.270> does<00:01:12.479> now<00:01:13.170> I'm<00:01:13.500> not<00:01:13.710> going<00:01:13.920> to<00:01:14.270> do

00:01:15.260 --> 00:01:15.270 
actually does now I'm not going to do

00:01:15.270 --> 00:01:17.300 
actually does now I'm not going to do
that<00:01:15.420> out<00:01:15.570> for<00:01:15.750> every<00:01:16.049> method<00:01:16.200> but<00:01:16.890> one<00:01:17.159> thing

00:01:17.300 --> 00:01:17.310 
that out for every method but one thing

00:01:17.310 --> 00:01:18.800 
that out for every method but one thing
that<00:01:17.340> you're<00:01:17.580> going<00:01:17.700> to<00:01:17.790> Ramon<00:01:18.150> to<00:01:18.330> remember

00:01:18.800 --> 00:01:18.810 
that you're going to Ramon to remember

00:01:18.810 --> 00:01:21.560 
that you're going to Ramon to remember
is<00:01:18.990> whenever<00:01:19.920> it<00:01:20.189> reads<00:01:20.369> a<00:01:20.490> value<00:01:20.909> it<00:01:21.090> advances

00:01:21.560 --> 00:01:21.570 
is whenever it reads a value it advances

00:01:21.570 --> 00:01:24.140 
is whenever it reads a value it advances
the<00:01:21.600> current<00:01:21.990> position<00:01:22.110> by<00:01:22.619> one<00:01:22.979> so<00:01:23.400> if<00:01:23.939> the

00:01:24.140 --> 00:01:24.150 
the current position by one so if the

00:01:24.150 --> 00:01:25.640 
the current position by one so if the
current<00:01:24.299> position<00:01:24.570> of<00:01:24.900> the<00:01:24.960> binary<00:01:25.229> reader

00:01:25.640 --> 00:01:25.650 
current position of the binary reader

00:01:25.650 --> 00:01:28.160 
current position of the binary reader
right<00:01:25.890> now<00:01:26.040> is<00:01:26.280> like<00:01:26.520> 100<00:01:27.330> and<00:01:27.509> it<00:01:27.990> read

00:01:28.160 --> 00:01:28.170 
right now is like 100 and it read

00:01:28.170 --> 00:01:30.770 
right now is like 100 and it read
another<00:01:28.409> bite<00:01:28.650> it<00:01:28.950> would<00:01:29.070> be<00:01:29.189> 101<00:01:29.909> all<00:01:30.630> right

00:01:30.770 --> 00:01:30.780 
another bite it would be 101 all right

00:01:30.780 --> 00:01:31.969 
another bite it would be 101 all right
and<00:01:30.960> you<00:01:31.020> should<00:01:31.049> probably<00:01:31.439> say<00:01:31.710> that<00:01:31.860> in<00:01:31.950> your

00:01:31.969 --> 00:01:31.979 
and you should probably say that in your

00:01:31.979 --> 00:01:35.210 
and you should probably say that in your
summer<00:01:32.990> all<00:01:33.990> right<00:01:34.140> so<00:01:34.350> the<00:01:34.530> next<00:01:34.740> data<00:01:34.979> type

00:01:35.210 --> 00:01:35.220 
summer all right so the next data type

00:01:35.220 --> 00:01:36.380 
summer all right so the next data type
that<00:01:35.400> we're<00:01:35.520> going<00:01:35.640> to<00:01:35.790> be<00:01:35.880> reading<00:01:36.090> is

00:01:36.380 --> 00:01:36.390 
that we're going to be reading is

00:01:36.390 --> 00:01:38.630 
that we're going to be reading is
assigned<00:01:36.810> by<00:01:37.079> E<00:01:37.140> or<00:01:37.380> an<00:01:37.500> ass<00:01:37.650> right<00:01:37.680> so<00:01:38.520> we're

00:01:38.630 --> 00:01:38.640 
assigned by E or an ass right so we're

00:01:38.640 --> 00:01:40.969 
assigned by E or an ass right so we're
just<00:01:38.670> gonna<00:01:38.850> say<00:01:39.090> public<00:01:39.689> a<00:01:39.869> spike<00:01:40.590> or<00:01:40.829> a

00:01:40.969 --> 00:01:40.979 
just gonna say public a spike or a

00:01:40.979 --> 00:01:42.620 
just gonna say public a spike or a
signed<00:01:41.280> byte<00:01:41.549> and<00:01:42.090> then<00:01:42.210> we're<00:01:42.299> just<00:01:42.329> going<00:01:42.540> to

00:01:42.620 --> 00:01:42.630 
signed byte and then we're just going to

00:01:42.630 --> 00:01:45.200 
signed byte and then we're just going to
call<00:01:42.780> this<00:01:42.930> method<00:01:43.140> read<00:01:43.740> a<00:01:43.979> spike<00:01:44.670> since<00:01:45.060> that

00:01:45.200 --> 00:01:45.210 
call this method read a spike since that

00:01:45.210 --> 00:01:46.429 
call this method read a spike since that
work<00:01:45.360> that's<00:01:45.630> what<00:01:45.780> we're<00:01:45.930> going<00:01:46.079> to<00:01:46.229> be<00:01:46.320> doing

00:01:46.429 --> 00:01:46.439 
work that's what we're going to be doing

00:01:46.439 --> 00:01:47.990 
work that's what we're going to be doing
reading<00:01:46.950> assigned<00:01:47.369> value<00:01:47.729> at<00:01:47.850> the<00:01:47.970> current

00:01:47.990 --> 00:01:48.000 
reading assigned value at the current

00:01:48.000 --> 00:01:50.899 
reading assigned value at the current
position<00:01:48.360> and<00:01:49.250> then<00:01:50.250> we're<00:01:50.430> just<00:01:50.460> going<00:01:50.729> to

00:01:50.899 --> 00:01:50.909 
position and then we're just going to

00:01:50.909 --> 00:01:55.280 
position and then we're just going to
say<00:01:51.119> return<00:01:51.299> yard<00:01:52.229> read<00:01:53.040> byte<00:01:54.110> alright<00:01:55.110> well

00:01:55.280 --> 00:01:55.290 
say return yard read byte alright well

00:01:55.290 --> 00:01:57.649 
say return yard read byte alright well
we<00:01:55.409> can't<00:01:55.619> just<00:01:55.829> say<00:01:55.979> VRE<00:01:56.939> twice<00:01:57.240> since<00:01:57.509> this

00:01:57.649 --> 00:01:57.659 
we can't just say VRE twice since this

00:01:57.659 --> 00:01:59.240 
we can't just say VRE twice since this
will<00:01:57.840> just<00:01:57.930> return<00:01:58.259> a<00:01:58.320> regular<00:01:58.799> bite<00:01:59.009> we

00:01:59.240 --> 00:01:59.250 
will just return a regular bite we

00:01:59.250 --> 00:02:00.770 
will just return a regular bite we
actually<00:01:59.520> have<00:01:59.610> to<00:01:59.670> turn<00:01:59.909> it<00:02:00.030> into<00:02:00.210> a<00:02:00.420> sign

00:02:00.770 --> 00:02:00.780 
actually have to turn it into a sign

00:02:00.780 --> 00:02:03.560 
actually have to turn it into a sign
byte<00:02:01.079> and<00:02:01.549> we're<00:02:02.549> just<00:02:02.610> going<00:02:02.759> to<00:02:02.820> cast<00:02:03.119> it<00:02:03.390> as

00:02:03.560 --> 00:02:03.570 
byte and we're just going to cast it as

00:02:03.570 --> 00:02:05.980 
byte and we're just going to cast it as
a<00:02:03.600> sign<00:02:04.079> bite<00:02:04.350> so<00:02:04.619> we're<00:02:04.710> just<00:02:04.740> gonna<00:02:04.920> say<00:02:05.280> s

00:02:05.980 --> 00:02:05.990 
a sign bite so we're just gonna say s

00:02:05.990 --> 00:02:09.260 
a sign bite so we're just gonna say s
bug<00:02:06.990> right<00:02:07.200> there<00:02:07.520> and<00:02:08.520> I'll<00:02:08.729> just<00:02:08.759> convert

00:02:09.260 --> 00:02:09.270 
bug right there and I'll just convert

00:02:09.270 --> 00:02:10.940 
bug right there and I'll just convert
the<00:02:09.509> byte<00:02:09.690> that<00:02:09.929> it<00:02:10.020> returns<00:02:10.349> the<00:02:10.590> regular

00:02:10.940 --> 00:02:10.950 
the byte that it returns the regular

00:02:10.950 --> 00:02:12.280 
the byte that it returns the regular
byte<00:02:11.160> that<00:02:11.340> it<00:02:11.430> returns

00:02:12.280 --> 00:02:12.290 
byte that it returns

00:02:12.290 --> 00:02:15.339 
byte that it returns
into<00:02:12.590> a<00:02:12.620> sign<00:02:12.980> bite<00:02:13.480> all<00:02:14.480> right<00:02:14.629> and<00:02:14.930> like<00:02:15.260> I

00:02:15.339 --> 00:02:15.349 
into a sign bite all right and like I

00:02:15.349 --> 00:02:16.539 
into a sign bite all right and like I
said<00:02:15.409> you're<00:02:15.799> just<00:02:15.890> gonna<00:02:16.040> want<00:02:16.220> to<00:02:16.280> probably

00:02:16.539 --> 00:02:16.549 
said you're just gonna want to probably

00:02:16.549 --> 00:02:18.069 
said you're just gonna want to probably
have<00:02:16.849> a<00:02:16.909> summary<00:02:17.420> of<00:02:17.510> what<00:02:17.720> this<00:02:17.870> method

00:02:18.069 --> 00:02:18.079 
have a summary of what this method

00:02:18.079 --> 00:02:21.130 
have a summary of what this method
actually<00:02:18.379> does<00:02:19.450> okay<00:02:20.450> now<00:02:20.689> we're<00:02:20.930> going<00:02:21.079> to

00:02:21.130 --> 00:02:21.140 
actually does okay now we're going to

00:02:21.140 --> 00:02:23.800 
actually does okay now we're going to
want<00:02:21.349> to<00:02:21.470> get<00:02:21.829> into<00:02:22.010> reading<00:02:22.579> the<00:02:22.700> integers<00:02:23.180> so

00:02:23.800 --> 00:02:23.810 
want to get into reading the integers so

00:02:23.810 --> 00:02:25.750 
want to get into reading the integers so
the<00:02:24.260> person<00:02:24.650> to<00:02:24.739> do<00:02:24.829> that<00:02:24.860> type<00:02:25.430> that<00:02:25.640> we're

00:02:25.750 --> 00:02:25.760 
the person to do that type that we're

00:02:25.760 --> 00:02:27.819 
the person to do that type that we're
going<00:02:25.879> to<00:02:26.000> be<00:02:26.090> reading<00:02:26.329> is<00:02:26.629> an<00:02:26.780> N<00:02:26.989> 16<00:02:27.379> or<00:02:27.799> a

00:02:27.819 --> 00:02:27.829 
going to be reading is an N 16 or a

00:02:27.829 --> 00:02:30.990 
going to be reading is an N 16 or a
short<00:02:28.280> so<00:02:29.239> we're<00:02:29.360> just<00:02:29.390> going<00:02:29.629> to<00:02:29.690> say<00:02:29.930> public

00:02:30.990 --> 00:02:31.000 
short so we're just going to say public

00:02:31.000 --> 00:02:33.309 
short so we're just going to say public
short<00:02:32.000> since<00:02:32.480> we're<00:02:32.599> going<00:02:32.720> to<00:02:32.810> be<00:02:32.900> reading<00:02:33.230> an

00:02:33.309 --> 00:02:33.319 
short since we're going to be reading an

00:02:33.319 --> 00:02:36.910 
short since we're going to be reading an
N<00:02:33.500> 16<00:02:33.890> and<00:02:34.310> short<00:02:35.000> and<00:02:35.269> N<00:02:35.480> 16<00:02:35.780> are<00:02:36.049> the<00:02:36.170> same<00:02:36.440> and

00:02:36.910 --> 00:02:36.920 
N 16 and short and N 16 are the same and

00:02:36.920 --> 00:02:38.199 
N 16 and short and N 16 are the same and
then<00:02:37.459> we're<00:02:37.610> just<00:02:37.640> going<00:02:37.849> to<00:02:37.909> call<00:02:38.090> this

00:02:38.199 --> 00:02:38.209 
then we're just going to call this

00:02:38.209 --> 00:02:42.460 
then we're just going to call this
method<00:02:38.420> agreed<00:02:38.989> in<00:02:39.799> 16<00:02:40.670> and<00:02:41.540> we're<00:02:41.989> need<00:02:42.109> not

00:02:42.460 --> 00:02:42.470 
method agreed in 16 and we're need not

00:02:42.470 --> 00:02:43.839 
method agreed in 16 and we're need not
going<00:02:42.650> to<00:02:42.709> need<00:02:42.859> easier<00:02:43.189> to<00:02:43.310> pass<00:02:43.489> through<00:02:43.790> any

00:02:43.839 --> 00:02:43.849 
going to need easier to pass through any

00:02:43.849 --> 00:02:45.160 
going to need easier to pass through any
parameters<00:02:44.480> so<00:02:44.659> we're<00:02:44.750> just<00:02:44.780> gonna<00:02:44.989> leave

00:02:45.160 --> 00:02:45.170 
parameters so we're just gonna leave

00:02:45.170 --> 00:02:46.470 
parameters so we're just gonna leave
that<00:02:45.200> blank

00:02:46.470 --> 00:02:46.480 
that blank

00:02:46.480 --> 00:02:48.729 
that blank
alright<00:02:47.480> so<00:02:47.720> we're<00:02:48.170> just<00:02:48.200> going<00:02:48.440> to<00:02:48.530> stay

00:02:48.729 --> 00:02:48.739 
alright so we're just going to stay

00:02:48.739 --> 00:02:52.360 
alright so we're just going to stay
right<00:02:48.799> here<00:02:48.920> short<00:02:49.700> my<00:02:50.090> short<00:02:50.950> equals<00:02:51.950> be<00:02:52.220> our

00:02:52.360 --> 00:02:52.370 
right here short my short equals be our

00:02:52.370 --> 00:02:56.379 
right here short my short equals be our
read<00:02:53.150> and<00:02:53.510> then<00:02:53.840> an<00:02:53.989> in<00:02:54.139> 16<00:02:54.709> and<00:02:55.670> remember<00:02:56.239> the

00:02:56.379 --> 00:02:56.389 
read and then an in 16 and remember the

00:02:56.389 --> 00:02:59.559 
read and then an in 16 and remember the
binary<00:02:56.810> reader<00:02:57.079> default<00:02:57.709> eread<00:02:58.269> integers<00:02:59.269> in

00:02:59.559 --> 00:02:59.569 
binary reader default eread integers in

00:02:59.569 --> 00:03:02.740 
binary reader default eread integers in
little-endian<00:03:00.560> so<00:03:01.159> inside<00:03:02.000> of<00:03:02.090> the<00:03:02.150> file<00:03:02.420> if

00:03:02.740 --> 00:03:02.750 
little-endian so inside of the file if

00:03:02.750 --> 00:03:04.479 
little-endian so inside of the file if
there<00:03:02.930> was<00:03:03.019> an<00:03:03.079> in<00:03:03.230> 16<00:03:03.709> or<00:03:03.950> a<00:03:03.980> short<00:03:04.310> right

00:03:04.479 --> 00:03:04.489 
there was an in 16 or a short right

00:03:04.489 --> 00:03:08.530 
there was an in 16 or a short right
there<00:03:04.730> that<00:03:04.879> was<00:03:05.000> just<00:03:05.209> like<00:03:05.450> 78<00:03:07.359> 65<00:03:08.359> or

00:03:08.530 --> 00:03:08.540 
there that was just like 78 65 or

00:03:08.540 --> 00:03:11.830 
there that was just like 78 65 or
something<00:03:08.930> it<00:03:09.319> would<00:03:09.500> read<00:03:09.739> 65<00:03:10.459> 78<00:03:11.450> and<00:03:11.690> that's

00:03:11.830 --> 00:03:11.840 
something it would read 65 78 and that's

00:03:11.840 --> 00:03:14.229 
something it would read 65 78 and that's
not<00:03:11.959> what<00:03:12.170> we<00:03:12.290> want<00:03:12.560> so<00:03:12.799> since<00:03:13.519> its<00:03:13.700> default<00:03:14.120> we

00:03:14.229 --> 00:03:14.239 
not what we want so since its default we

00:03:14.239 --> 00:03:15.789 
not what we want so since its default we
big<00:03:14.420> endian<00:03:14.750> we're<00:03:15.049> gonna<00:03:15.139> want<00:03:15.379> to<00:03:15.470> check<00:03:15.650> to

00:03:15.789 --> 00:03:15.799 
big endian we're gonna want to check to

00:03:15.799 --> 00:03:18.369 
big endian we're gonna want to check to
see<00:03:15.829> if<00:03:16.459> the<00:03:16.819> byte<00:03:17.060> order<00:03:17.389> is<00:03:17.510> big<00:03:17.750> endian<00:03:18.079> and

00:03:18.369 --> 00:03:18.379 
see if the byte order is big endian and

00:03:18.379 --> 00:03:19.930 
see if the byte order is big endian and
if<00:03:18.470> it<00:03:18.620> is<00:03:18.739> we're<00:03:18.980> going<00:03:19.129> to<00:03:19.220> want<00:03:19.489> to<00:03:19.639> reverse

00:03:19.930 --> 00:03:19.940 
if it is we're going to want to reverse

00:03:19.940 --> 00:03:23.289 
if it is we're going to want to reverse
it<00:03:20.180> so<00:03:20.690> let's<00:03:20.989> say<00:03:21.169> right<00:03:21.379> here<00:03:21.790> that<00:03:22.790> it<00:03:23.060> read

00:03:23.289 --> 00:03:23.299 
it so let's say right here that it read

00:03:23.299 --> 00:03:25.780 
it so let's say right here that it read
this<00:03:23.449> value<00:03:23.690> as<00:03:24.049> an<00:03:24.199> N<00:03:24.319> 16<00:03:24.650> so<00:03:25.340> it<00:03:25.519> would<00:03:25.669> have

00:03:25.780 --> 00:03:25.790 
this value as an N 16 so it would have

00:03:25.790 --> 00:03:29.050 
this value as an N 16 so it would have
read<00:03:26.030> 65<00:03:26.810> 78<00:03:27.739> since<00:03:28.069> a<00:03:28.160> default<00:03:28.579> you<00:03:28.699> reads<00:03:28.910> it

00:03:29.050 --> 00:03:29.060 
read 65 78 since a default you reads it

00:03:29.060 --> 00:03:31.119 
read 65 78 since a default you reads it
in<00:03:29.150> little-endian<00:03:29.569> and<00:03:30.019> what<00:03:30.859> we're<00:03:30.980> going<00:03:31.069> to

00:03:31.119 --> 00:03:31.129 
in little-endian and what we're going to

00:03:31.129 --> 00:03:33.729 
in little-endian and what we're going to
want<00:03:31.280> I'm<00:03:31.400> going<00:03:31.549> to<00:03:31.609> do<00:03:31.790> is<00:03:32.090> reverse<00:03:32.870> it<00:03:33.139> so<00:03:33.470> it

00:03:33.729 --> 00:03:33.739 
want I'm going to do is reverse it so it

00:03:33.739 --> 00:03:37.030 
want I'm going to do is reverse it so it
will<00:03:33.829> actually<00:03:34.280> read<00:03:34.519> 78<00:03:35.239> 65<00:03:35.930> so<00:03:36.889> we're<00:03:37.010> just

00:03:37.030 --> 00:03:37.040 
will actually read 78 65 so we're just

00:03:37.040 --> 00:03:40.050 
will actually read 78 65 so we're just
going<00:03:37.250> to<00:03:37.280> say<00:03:37.489> right<00:03:37.699> here<00:03:38.260> while<00:03:39.260> you<00:03:39.379> are<00:03:39.530> a

00:03:40.050 --> 00:03:40.060 
going to say right here while you are a

00:03:40.060 --> 00:03:44.949 
going to say right here while you are a
Bock<00:03:41.260> equals<00:03:42.260> bit<00:03:42.590> converter<00:03:43.519> god<00:03:44.269> get<00:03:44.660> bytes

00:03:44.949 --> 00:03:44.959 
Bock equals bit converter god get bytes

00:03:44.959 --> 00:03:47.289 
Bock equals bit converter god get bytes
and<00:03:45.310> that<00:03:46.310> would<00:03:46.400> be<00:03:46.489> from<00:03:46.699> that<00:03:46.819> short<00:03:47.120> right

00:03:47.289 --> 00:03:47.299 
and that would be from that short right

00:03:47.299 --> 00:03:50.319 
and that would be from that short right
there<00:03:47.510> so<00:03:47.720> I<00:03:47.750> my<00:03:47.900> short<00:03:48.230> and<00:03:49.180> then<00:03:50.180> we're<00:03:50.299> just

00:03:50.319 --> 00:03:50.329 
there so I my short and then we're just

00:03:50.329 --> 00:03:52.360 
there so I my short and then we're just
going<00:03:50.540> to<00:03:50.599> want<00:03:50.780> to<00:03:50.870> reverse<00:03:51.199> this<00:03:51.410> array<00:03:51.769> so

00:03:52.360 --> 00:03:52.370 
going to want to reverse this array so

00:03:52.370 --> 00:03:55.589 
going to want to reverse this array so
we're<00:03:52.519> just<00:03:52.639> going<00:03:52.760> to<00:03:52.790> say<00:03:53.030> array<00:03:54.280> reverse

00:03:55.589 --> 00:03:55.599 
we're just going to say array reverse

00:03:55.599 --> 00:03:58.809 
we're just going to say array reverse
and<00:03:56.739> there<00:03:57.739> was<00:03:57.859> no<00:03:58.040> one<00:03:58.159> to<00:03:58.190> reverse<00:03:58.519> that

00:03:58.809 --> 00:03:58.819 
and there was no one to reverse that

00:03:58.819 --> 00:04:01.449 
and there was no one to reverse that
buck<00:03:59.150> right<00:03:59.359> there<00:03:59.419> that<00:03:59.810> buffer<00:04:00.280> and<00:04:01.280> then

00:04:01.449 --> 00:04:01.459 
buck right there that buffer and then

00:04:01.459 --> 00:04:05.220 
buck right there that buffer and then
we're<00:04:01.549> going<00:04:01.639> to<00:04:01.730> want<00:04:01.879> to<00:04:02.000> say<00:04:03.099> my<00:04:04.099> short

00:04:05.220 --> 00:04:05.230 
we're going to want to say my short

00:04:05.230 --> 00:04:12.879 
we're going to want to say my short
equals<00:04:07.269> fit<00:04:09.400> converter<00:04:10.400> to<00:04:11.299> and<00:04:11.900> then<00:04:12.079> in<00:04:12.349> 16

00:04:12.879 --> 00:04:12.889 
equals fit converter to and then in 16

00:04:12.889 --> 00:04:14.890 
equals fit converter to and then in 16
so<00:04:13.099> it's<00:04:13.220> going<00:04:13.340> to<00:04:13.400> convert<00:04:13.609> this<00:04:14.299> byte<00:04:14.690> array

00:04:14.890 --> 00:04:14.900 
so it's going to convert this byte array

00:04:14.900 --> 00:04:18.250 
so it's going to convert this byte array
buffer<00:04:15.560> back<00:04:15.859> into<00:04:16.310> an<00:04:16.430> age<00:04:16.579> 16<00:04:17.150> so<00:04:17.570> so<00:04:18.079> we're

00:04:18.250 --> 00:04:18.260 
buffer back into an age 16 so so we're

00:04:18.260 --> 00:04:19.810 
buffer back into an age 16 so so we're
just<00:04:18.289> going<00:04:18.470> to<00:04:18.560> want<00:04:18.680> to<00:04:18.739> put<00:04:18.919> buff<00:04:19.280> in<00:04:19.519> here

00:04:19.810 --> 00:04:19.820 
just going to want to put buff in here

00:04:19.820 --> 00:04:21.819 
just going to want to put buff in here
and<00:04:20.000> then<00:04:20.450> if<00:04:20.570> the<00:04:20.690> second<00:04:21.049> parameter<00:04:21.200> is<00:04:21.650> the

00:04:21.819 --> 00:04:21.829 
and then if the second parameter is the

00:04:21.829 --> 00:04:23.440 
and then if the second parameter is the
index<00:04:22.219> and<00:04:22.400> the<00:04:22.490> fight<00:04:22.669> area<00:04:22.880> that<00:04:23.090> we<00:04:23.180> want<00:04:23.360> it

00:04:23.440 --> 00:04:23.450 
index and the fight area that we want it

00:04:23.450 --> 00:04:23.900 
index and the fight area that we want it
to<00:04:23.479> start

00:04:23.900 --> 00:04:23.910 
to start

00:04:23.910 --> 00:04:25.970 
to start
reading<00:04:24.270> XR<00:04:24.780> converting<00:04:25.260> it<00:04:25.350> and<00:04:25.530> now<00:04:25.620> just<00:04:25.830> be

00:04:25.970 --> 00:04:25.980 
reading XR converting it and now just be

00:04:25.980 --> 00:04:29.690 
reading XR converting it and now just be
zero<00:04:26.840> alright<00:04:27.840> so<00:04:28.530> basically<00:04:28.950> what<00:04:29.340> this<00:04:29.460> does

00:04:29.690 --> 00:04:29.700 
zero alright so basically what this does

00:04:29.700 --> 00:04:31.910 
zero alright so basically what this does
right<00:04:29.730> here<00:04:30.150> is<00:04:30.360> it<00:04:30.630> converts<00:04:31.140> this<00:04:31.530> short

00:04:31.910 --> 00:04:31.920 
right here is it converts this short

00:04:31.920 --> 00:04:34.550 
right here is it converts this short
right<00:04:32.190> here<00:04:32.490> into<00:04:32.730> a<00:04:33.300> buggy<00:04:33.690> race<00:04:33.960> so<00:04:34.170> now<00:04:34.320> this

00:04:34.550 --> 00:04:34.560 
right here into a buggy race so now this

00:04:34.560 --> 00:04:38.630 
right here into a buggy race so now this
poly<00:04:34.860> array<00:04:35.100> reads<00:04:35.550> 65<00:04:36.480> 78<00:04:37.470> and<00:04:37.710> basically<00:04:38.460> we

00:04:38.630 --> 00:04:38.640 
poly array reads 65 78 and basically we

00:04:38.640 --> 00:04:40.580 
poly array reads 65 78 and basically we
wanted<00:04:38.910> to<00:04:39.060> reverse<00:04:39.450> that<00:04:39.690> by<00:04:39.930> array<00:04:40.290> so<00:04:40.350> that

00:04:40.580 --> 00:04:40.590 
wanted to reverse that by array so that

00:04:40.590 --> 00:04:44.270 
wanted to reverse that by array so that
now<00:04:40.860> it<00:04:41.040> reads<00:04:41.480> 78<00:04:42.480> 65<00:04:43.320> and<00:04:43.740> now<00:04:44.070> we're<00:04:44.220> just

00:04:44.270 --> 00:04:44.280 
now it reads 78 65 and now we're just

00:04:44.280 --> 00:04:46.150 
now it reads 78 65 and now we're just
converting<00:04:44.760> that<00:04:44.880> bike<00:04:45.120> all<00:04:45.270> right<00:04:45.450> back<00:04:45.720> into

00:04:46.150 --> 00:04:46.160 
converting that bike all right back into

00:04:46.160 --> 00:04:49.430 
converting that bike all right back into
short<00:04:47.160> so<00:04:47.580> now<00:04:47.820> this<00:04:48.090> player<00:04:48.360> Asia<00:04:48.750> or<00:04:49.200> this

00:04:49.430 --> 00:04:49.440 
short so now this player Asia or this

00:04:49.440 --> 00:04:54.230 
short so now this player Asia or this
short<00:04:50.040> should<00:04:50.310> read<00:04:50.720> 78<00:04:52.040> 65<00:04:53.040> so<00:04:53.610> just<00:04:53.970> the<00:04:54.120> way

00:04:54.230 --> 00:04:54.240 
short should read 78 65 so just the way

00:04:54.240 --> 00:04:56.900 
short should read 78 65 so just the way
it<00:04:54.450> should<00:04:54.690> be<00:04:54.720> in<00:04:55.140> big<00:04:55.470> endian<00:04:55.890> but<00:04:56.550> we<00:04:56.700> only

00:04:56.900 --> 00:04:56.910 
it should be in big endian but we only

00:04:56.910 --> 00:04:59.240 
it should be in big endian but we only
want<00:04:57.270> it<00:04:57.330> to<00:04:57.480> reverse<00:04:57.780> it<00:04:58.050> if<00:04:58.200> the<00:04:58.470> way<00:04:59.070> that

00:04:59.240 --> 00:04:59.250 
want it to reverse it if the way that

00:04:59.250 --> 00:05:01.280 
want it to reverse it if the way that
the<00:04:59.370> user<00:04:59.490> wants<00:04:59.760> to<00:05:00.120> read<00:05:00.300> it<00:05:00.330> there<00:05:00.930> is<00:05:01.050> big

00:05:01.280 --> 00:05:01.290 
the user wants to read it there is big

00:05:01.290 --> 00:05:04.640 
the user wants to read it there is big
endian<00:05:01.590> so<00:05:02.160> we're<00:05:02.250> going<00:05:02.340> to<00:05:02.400> say<00:05:02.640> get<00:05:03.650> white

00:05:04.640 --> 00:05:04.650 
endian so we're going to say get white

00:05:04.650 --> 00:05:10.340 
endian so we're going to say get white
border<00:05:06.620> equals<00:05:07.620> by<00:05:08.520> order<00:05:09.000> got<00:05:09.270> big<00:05:09.870> endian

00:05:10.340 --> 00:05:10.350 
border equals by order got big endian

00:05:10.350 --> 00:05:12.020 
border equals by order got big endian
then<00:05:10.800> we're<00:05:11.040> going<00:05:11.190> to<00:05:11.250> do<00:05:11.340> this<00:05:11.520> well

00:05:12.020 --> 00:05:12.030 
then we're going to do this well

00:05:12.030 --> 00:05:13.760 
then we're going to do this well
otherwise<00:05:12.360> this<00:05:12.720> leave<00:05:12.960> it<00:05:13.110> be<00:05:13.320> does<00:05:13.620> it

00:05:13.760 --> 00:05:13.770 
otherwise this leave it be does it

00:05:13.770 --> 00:05:15.680 
otherwise this leave it be does it
deepali<00:05:14.220> reads<00:05:14.580> it<00:05:14.760> in<00:05:14.880> little-endian<00:05:15.270> and

00:05:15.680 --> 00:05:15.690 
deepali reads it in little-endian and

00:05:15.690 --> 00:05:16.790 
deepali reads it in little-endian and
then<00:05:15.870> we're<00:05:15.990> just<00:05:16.020> going<00:05:16.230> to<00:05:16.260> want<00:05:16.440> to<00:05:16.500> return

00:05:16.790 --> 00:05:16.800 
then we're just going to want to return

00:05:16.800 --> 00:05:20.590 
then we're just going to want to return
that<00:05:17.610> short<00:05:18.090> right<00:05:18.300> there<00:05:18.510> so<00:05:18.810> turn<00:05:19.140> my<00:05:19.440> short

00:05:20.590 --> 00:05:20.600 
that short right there so turn my short

00:05:20.600 --> 00:05:22.580 
that short right there so turn my short
alright<00:05:21.600> and<00:05:21.780> then<00:05:21.960> you're<00:05:22.050> gonna<00:05:22.140> want<00:05:22.380> to<00:05:22.470> do

00:05:22.580 --> 00:05:22.590 
alright and then you're gonna want to do

00:05:22.590 --> 00:05:24.530 
alright and then you're gonna want to do
this<00:05:22.740> for<00:05:23.040> all<00:05:23.250> the<00:05:23.520> integers<00:05:23.970> and<00:05:24.270> I'm<00:05:24.390> not

00:05:24.530 --> 00:05:24.540 
this for all the integers and I'm not

00:05:24.540 --> 00:05:25.970 
this for all the integers and I'm not
going<00:05:24.690> to<00:05:24.750> go<00:05:24.840> through<00:05:25.140> every<00:05:25.470> single<00:05:25.650> one<00:05:25.830> of

00:05:25.970 --> 00:05:25.980 
going to go through every single one of

00:05:25.980 --> 00:05:27.350 
going to go through every single one of
them<00:05:26.190> because<00:05:26.490> it's<00:05:26.640> just<00:05:26.760> a<00:05:27.000> matter<00:05:27.210> of

00:05:27.350 --> 00:05:27.360 
them because it's just a matter of

00:05:27.360 --> 00:05:29.720 
them because it's just a matter of
changing<00:05:27.630> on<00:05:28.080> the<00:05:28.140> pipes<00:05:28.890> so<00:05:29.280> if<00:05:29.370> we<00:05:29.490> were<00:05:29.580> to

00:05:29.720 --> 00:05:29.730 
changing on the pipes so if we were to

00:05:29.730 --> 00:05:33.140 
changing on the pipes so if we were to
do<00:05:29.910> read<00:05:30.750> UN<00:05:31.650> 16<00:05:32.160> right<00:05:32.310> here<00:05:32.640> we<00:05:32.760> just<00:05:32.910> say

00:05:33.140 --> 00:05:33.150 
do read UN 16 right here we just say

00:05:33.150 --> 00:05:37.220 
do read UN 16 right here we just say
read<00:05:33.420> you<00:05:34.020> win<00:05:34.200> 16<00:05:34.680> you<00:05:35.460> sure<00:05:35.760> you<00:05:36.630> short<00:05:36.960> my

00:05:37.220 --> 00:05:37.230 
read you win 16 you sure you short my

00:05:37.230 --> 00:05:40.159 
read you win 16 you sure you short my
you<00:05:37.800> short<00:05:38.450> now<00:05:39.450> we're<00:05:39.600> just<00:05:39.660> gonna<00:05:39.780> want<00:05:40.080> to

00:05:40.159 --> 00:05:40.169 
you short now we're just gonna want to

00:05:40.169 --> 00:05:42.470 
you short now we're just gonna want to
read<00:05:40.440> a<00:05:40.500> you<00:05:40.860> went<00:05:41.070> 16<00:05:41.580> instead<00:05:41.790> of<00:05:42.000> a<00:05:42.060> regular

00:05:42.470 --> 00:05:42.480 
read a you went 16 instead of a regular

00:05:42.480 --> 00:05:45.680 
read a you went 16 instead of a regular
in<00:05:42.690> 16<00:05:43.650> we<00:05:43.890> have<00:05:43.950> to<00:05:44.100> change<00:05:44.310> all<00:05:44.520> these<00:05:44.700> to<00:05:44.760> my

00:05:45.680 --> 00:05:45.690 
in 16 we have to change all these to my

00:05:45.690 --> 00:05:48.380 
in 16 we have to change all these to my
you<00:05:45.750> sure<00:05:46.290> and<00:05:46.830> they<00:05:47.700> have<00:05:47.820> to<00:05:47.940> convert<00:05:48.240> it

00:05:48.380 --> 00:05:48.390 
you sure and they have to convert it

00:05:48.390 --> 00:05:51.110 
you sure and they have to convert it
into<00:05:48.540> a<00:05:48.780> UN<00:05:49.200> 16<00:05:49.710> so<00:05:50.280> it's<00:05:50.430> great<00:05:50.669> basically

00:05:51.110 --> 00:05:51.120 
into a UN 16 so it's great basically

00:05:51.120 --> 00:05:53.450 
into a UN 16 so it's great basically
just<00:05:51.300> changing<00:05:52.200> everything<00:05:52.410> that<00:05:52.950> has<00:05:53.130> to<00:05:53.340> do

00:05:53.450 --> 00:05:53.460 
just changing everything that has to do

00:05:53.460 --> 00:05:55.760 
just changing everything that has to do
with<00:05:53.580> the<00:05:53.700> data<00:05:53.910> type<00:05:54.150> in<00:05:54.390> to<00:05:54.960> the<00:05:55.350> different

00:05:55.760 --> 00:05:55.770 
with the data type in to the different

00:05:55.770 --> 00:05:57.740 
with the data type in to the different
ones<00:05:55.950> so<00:05:56.220> we<00:05:56.370> just<00:05:56.520> change<00:05:56.820> everything<00:05:57.360> that

00:05:57.740 --> 00:05:57.750 
ones so we just change everything that

00:05:57.750 --> 00:06:00.800 
ones so we just change everything that
had<00:05:57.840> to<00:05:57.900> do<00:05:58.020> with<00:05:58.050> an<00:05:58.200> N<00:05:58.350> 16<00:05:58.710> into<00:05:59.400> au<00:05:59.760> and<00:06:00.210> 16

00:06:00.800 --> 00:06:00.810 
had to do with an N 16 into au and 16

00:06:00.810 --> 00:06:03.020 
had to do with an N 16 into au and 16
and<00:06:00.930> unsigned<00:06:01.440> 8<00:06:01.620> 16<00:06:02.130> and<00:06:02.310> you're<00:06:02.820> going<00:06:02.970> to

00:06:03.020 --> 00:06:03.030 
and unsigned 8 16 and you're going to

00:06:03.030 --> 00:06:07.990 
and unsigned 8 16 and you're going to
want<00:06:03.180> to<00:06:03.210> do<00:06:03.330> that<00:06:03.480> for<00:06:03.840> in<00:06:04.169> 16<00:06:04.710> in<00:06:05.520> 32<00:06:06.090> and<00:06:06.530> 64

00:06:07.990 --> 00:06:08.000 
want to do that for in 16 in 32 and 64

00:06:08.000 --> 00:06:10.520 
want to do that for in 16 in 32 and 64
in<00:06:09.000> the<00:06:09.180> next<00:06:09.419> tutorial<00:06:09.870> I'll<00:06:09.960> have<00:06:10.140> those<00:06:10.350> all

00:06:10.520 --> 00:06:10.530 
in the next tutorial I'll have those all

00:06:10.530 --> 00:06:12.290 
in the next tutorial I'll have those all
done<00:06:10.800> so<00:06:11.370> you<00:06:11.460> should<00:06:11.820> too

00:06:12.290 --> 00:06:12.300 
done so you should too

00:06:12.300 --> 00:06:15.919 
done so you should too
alright<00:06:12.780> so<00:06:13.169> see<00:06:13.680> you<00:06:13.740> guys

