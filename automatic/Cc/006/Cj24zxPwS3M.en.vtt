WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.250 

I<00:00:00.060> am<00:00:00.299> going<00:00:00.570> to<00:00:00.690> create<00:00:00.870> a<00:00:00.960> very<00:00:01.199> basic

00:00:01.250 --> 00:00:01.260 
I am going to create a very basic

00:00:01.260 --> 00:00:03.039 
I am going to create a very basic
JavaScript<00:00:01.860> program<00:00:02.399> that<00:00:02.610> will<00:00:02.790> calculate

00:00:03.039 --> 00:00:03.049 
JavaScript program that will calculate

00:00:03.049 --> 00:00:06.170 
JavaScript program that will calculate
some<00:00:04.049> of<00:00:04.230> and<00:00:04.500> odd<00:00:04.920> numbers<00:00:05.430> okay<00:00:05.700> so<00:00:05.759> this<00:00:06.000> is

00:00:06.170 --> 00:00:06.180 
some of and odd numbers okay so this is

00:00:06.180 --> 00:00:08.259 
some of and odd numbers okay so this is
a<00:00:06.210> kind<00:00:06.420> of<00:00:06.629> beginner<00:00:07.259> tutorial

00:00:08.259 --> 00:00:08.269 
a kind of beginner tutorial

00:00:08.269 --> 00:00:11.120 
a kind of beginner tutorial
katelyn<00:00:09.269> function<00:00:09.719> and<00:00:09.900> this<00:00:10.380> is<00:00:10.559> my<00:00:10.800> function

00:00:11.120 --> 00:00:11.130 
katelyn function and this is my function

00:00:11.130 --> 00:00:13.549 
katelyn function and this is my function
statement<00:00:12.090> and<00:00:12.269> give<00:00:12.719> the<00:00:12.870> name<00:00:13.019> of<00:00:13.170> function

00:00:13.549 --> 00:00:13.559 
statement and give the name of function

00:00:13.559 --> 00:00:18.230 
statement and give the name of function
like<00:00:13.799> and<00:00:15.170> odd<00:00:16.170> sum<00:00:16.920> okay<00:00:17.400> this<00:00:17.820> is<00:00:17.970> the<00:00:18.060> name

00:00:18.230 --> 00:00:18.240 
like and odd sum okay this is the name

00:00:18.240 --> 00:00:21.349 
like and odd sum okay this is the name
of<00:00:18.270> function<00:00:18.810> this<00:00:19.770> is<00:00:19.800> my<00:00:20.250> parameter<00:00:20.609> and<00:00:21.060> the

00:00:21.349 --> 00:00:21.359 
of function this is my parameter and the

00:00:21.359 --> 00:00:24.470 
of function this is my parameter and the
actual<00:00:21.630> value<00:00:21.930> will<00:00:22.080> be<00:00:22.230> called<00:00:23.480> arguments

00:00:24.470 --> 00:00:24.480 
actual value will be called arguments

00:00:24.480 --> 00:00:27.259 
actual value will be called arguments
okay<00:00:25.140> so<00:00:25.619> this<00:00:25.769> is<00:00:25.980> my<00:00:26.130> function<00:00:26.400> and<00:00:26.820> the<00:00:27.060> body

00:00:27.259 --> 00:00:27.269 
okay so this is my function and the body

00:00:27.269 --> 00:00:30.200 
okay so this is my function and the body
let's<00:00:28.170> initialize<00:00:28.590> some<00:00:29.310> variables<00:00:29.340> sum<00:00:30.090> is

00:00:30.200 --> 00:00:30.210 
let's initialize some variables sum is

00:00:30.210 --> 00:00:32.030 
let's initialize some variables sum is
equal<00:00:30.240> to<00:00:30.599> zero<00:00:30.869> so<00:00:31.170> this<00:00:31.289> is<00:00:31.349> my<00:00:31.679> variable

00:00:32.030 --> 00:00:32.040 
equal to zero so this is my variable

00:00:32.040 --> 00:00:34.880 
equal to zero so this is my variable
statement<00:00:32.759> and<00:00:32.969> using<00:00:33.899> for<00:00:34.140> loop<00:00:34.380> we<00:00:34.739> will

00:00:34.880 --> 00:00:34.890 
statement and using for loop we will

00:00:34.890 --> 00:00:37.100 
statement and using for loop we will
calculate<00:00:35.100> the<00:00:35.520> sum<00:00:35.550> of<00:00:35.880> and<00:00:36.210> odd<00:00:36.570> numbers

00:00:37.100 --> 00:00:37.110 
calculate the sum of and odd numbers

00:00:37.110 --> 00:00:41.660 
calculate the sum of and odd numbers
okay<00:00:37.380> so<00:00:38.450> inside<00:00:39.450> for<00:00:40.020> statement<00:00:40.739> initialize

00:00:41.660 --> 00:00:41.670 
okay so inside for statement initialize

00:00:41.670 --> 00:00:44.299 
okay so inside for statement initialize
any<00:00:42.329> variable<00:00:42.870> like<00:00:43.050> I<00:00:43.320> is<00:00:43.559> equal<00:00:43.770> to<00:00:43.890> one<00:00:44.070> this

00:00:44.299 --> 00:00:44.309 
any variable like I is equal to one this

00:00:44.309 --> 00:00:47.600 
any variable like I is equal to one this
is<00:00:44.520> my<00:00:44.730> first<00:00:45.120> odd<00:00:45.420> number<00:00:45.930> and<00:00:46.340> this<00:00:47.340> is<00:00:47.399> the

00:00:47.600 --> 00:00:47.610 
is my first odd number and this is the

00:00:47.610 --> 00:00:50.150 
is my first odd number and this is the
condition<00:00:47.940> and<00:00:48.420> this<00:00:48.629> should<00:00:48.870> be<00:00:48.899> 2<00:00:49.469> n<00:00:49.620> minus<00:00:49.920> 1

00:00:50.150 --> 00:00:50.160 
condition and this should be 2 n minus 1

00:00:50.160 --> 00:00:54.049 
condition and this should be 2 n minus 1
right<00:00:50.399> and<00:00:51.170> increment<00:00:52.170> I<00:00:52.469> plus<00:00:53.219> is<00:00:53.430> equal<00:00:53.550> to<00:00:53.730> 2

00:00:54.049 --> 00:00:54.059 
right and increment I plus is equal to 2

00:00:54.059 --> 00:00:56.510 
right and increment I plus is equal to 2
so<00:00:54.510> this<00:00:54.660> will<00:00:54.870> be<00:00:54.989> my<00:00:55.140> next<00:00:55.199> odd<00:00:55.890> number<00:00:56.340> and

00:00:56.510 --> 00:00:56.520 
so this will be my next odd number and

00:00:56.520 --> 00:00:59.450 
so this will be my next odd number and
so<00:00:56.850> on<00:00:56.969> this<00:00:57.750> is<00:00:57.989> my<00:00:58.199> for<00:00:58.559> statement<00:00:59.219> and

00:00:59.450 --> 00:00:59.460 
so on this is my for statement and

00:00:59.460 --> 00:01:00.500 
so on this is my for statement and
inside<00:01:00.000> the<00:01:00.149> body

00:01:00.500 --> 00:01:00.510 
inside the body

00:01:00.510 --> 00:01:04.270 
inside the body
I<00:01:00.770> will<00:01:01.770> just<00:01:01.980> say<00:01:02.219> sum<00:01:02.550> plus<00:01:03.000> is<00:01:03.270> equal<00:01:03.600> to<00:01:03.840> i

00:01:04.270 --> 00:01:04.280 
I will just say sum plus is equal to i

00:01:04.280 --> 00:01:07.219 
I will just say sum plus is equal to i
okay<00:01:05.280> so<00:01:05.460> in<00:01:05.909> the<00:01:06.030> first<00:01:06.210> iteration<00:01:06.420> I<00:01:06.900> will<00:01:07.080> be

00:01:07.219 --> 00:01:07.229 
okay so in the first iteration I will be

00:01:07.229 --> 00:01:10.010 
okay so in the first iteration I will be
1<00:01:07.439> and<00:01:07.619> it<00:01:08.220> will<00:01:08.400> check<00:01:08.670> that<00:01:09.000> I<00:01:09.299> is<00:01:09.479> less<00:01:09.810> than

00:01:10.010 --> 00:01:10.020 
1 and it will check that I is less than

00:01:10.020 --> 00:01:12.140 
1 and it will check that I is less than
2<00:01:10.170> n<00:01:10.290> minus<00:01:10.320> 1<00:01:10.619> let's<00:01:10.979> say<00:01:11.040> n<00:01:11.220> is<00:01:11.340> 5<00:01:11.640> so<00:01:11.909> it<00:01:12.000> will

00:01:12.140 --> 00:01:12.150 
2 n minus 1 let's say n is 5 so it will

00:01:12.150 --> 00:01:15.770 
2 n minus 1 let's say n is 5 so it will
be<00:01:12.270> I<00:01:12.299> less<00:01:12.600> than<00:01:12.810> equal<00:01:13.080> to<00:01:13.110> 9<00:01:14.010> it<00:01:14.460> will<00:01:15.000> add

00:01:15.770 --> 00:01:15.780 
be I less than equal to 9 it will add

00:01:15.780 --> 00:01:16.760 
be I less than equal to 9 it will add
with<00:01:16.200> the<00:01:16.320> sum

00:01:16.760 --> 00:01:16.770 
with the sum

00:01:16.770 --> 00:01:19.670 
with the sum
initially<00:01:17.430> sum<00:01:17.640> is<00:01:17.790> 0<00:01:18.030> so<00:01:18.390> sum<00:01:18.659> plus<00:01:19.140> is<00:01:19.380> equal

00:01:19.670 --> 00:01:19.680 
initially sum is 0 so sum plus is equal

00:01:19.680 --> 00:01:22.940 
initially sum is 0 so sum plus is equal
to<00:01:19.970> 1<00:01:20.970> so<00:01:21.180> initially<00:01:21.840> it<00:01:21.900> will<00:01:21.990> be<00:01:22.170> 1<00:01:22.380> in<00:01:22.590> the

00:01:22.940 --> 00:01:22.950 
to 1 so initially it will be 1 in the

00:01:22.950 --> 00:01:26.539 
to 1 so initially it will be 1 in the
next<00:01:23.220> iteration<00:01:23.490> I<00:01:23.880> will<00:01:24.210> become<00:01:24.439> 3<00:01:25.439> right<00:01:25.979> so

00:01:26.539 --> 00:01:26.549 
next iteration I will become 3 right so

00:01:26.549 --> 00:01:29.330 
next iteration I will become 3 right so
1<00:01:26.759> plus<00:01:27.090> 3<00:01:27.420> will<00:01:27.600> be<00:01:27.780> 4<00:01:28.020> and<00:01:28.320> and<00:01:28.740> finally<00:01:29.220> we

00:01:29.330 --> 00:01:29.340 
1 plus 3 will be 4 and and finally we

00:01:29.340 --> 00:01:32.960 
1 plus 3 will be 4 and and finally we
will<00:01:29.490> return<00:01:30.290> this<00:01:31.290> sum<00:01:31.890> okay<00:01:32.250> this<00:01:32.610> is<00:01:32.759> called

00:01:32.960 --> 00:01:32.970 
will return this sum okay this is called

00:01:32.970 --> 00:01:36.469 
will return this sum okay this is called
return<00:01:33.240> statement<00:01:34.110> okay<00:01:34.680> and<00:01:35.240> we<00:01:36.240> are<00:01:36.299> done

00:01:36.469 --> 00:01:36.479 
return statement okay and we are done

00:01:36.479 --> 00:01:39.310 
return statement okay and we are done
with<00:01:36.600> our<00:01:36.780> program<00:01:37.140> let's<00:01:37.350> try<00:01:37.950> to<00:01:38.009> execute<00:01:38.400> it

00:01:39.310 --> 00:01:39.320 
with our program let's try to execute it

00:01:39.320 --> 00:01:42.889 
with our program let's try to execute it
in<00:01:40.320> the<00:01:40.799> console<00:01:41.310> console<00:01:41.759> dot<00:01:41.970> log<00:01:42.030> I<00:01:42.630> am

00:01:42.889 --> 00:01:42.899 
in the console console dot log I am

00:01:42.899 --> 00:01:46.280 
in the console console dot log I am
saying<00:01:43.200> and<00:01:43.380> not<00:01:43.770> some<00:01:44.189> 5<00:01:44.880> this<00:01:45.659> is<00:01:45.720> a<00:01:45.869> function

00:01:46.280 --> 00:01:46.290 
saying and not some 5 this is a function

00:01:46.290 --> 00:01:48.740 
saying and not some 5 this is a function
invocation<00:01:46.560> that<00:01:47.009> is<00:01:47.159> saying<00:01:47.430> I<00:01:47.640> need<00:01:48.360> the<00:01:48.540> sum

00:01:48.740 --> 00:01:48.750 
invocation that is saying I need the sum

00:01:48.750 --> 00:01:52.399 
invocation that is saying I need the sum
of<00:01:48.780> 5<00:01:49.259> odd<00:01:49.560> numbers<00:01:49.950> 1<00:01:50.250> plus<00:01:50.579> 3<00:01:51.240> plus<00:01:51.450> 5<00:01:51.869> plus<00:01:52.200> 7

00:01:52.399 --> 00:01:52.409 
of 5 odd numbers 1 plus 3 plus 5 plus 7

00:01:52.409 --> 00:01:55.670 
of 5 odd numbers 1 plus 3 plus 5 plus 7
plus<00:01:52.680> 9<00:01:52.979> and<00:01:53.220> that<00:01:53.850> should<00:01:54.119> be<00:01:54.299> 5<00:01:54.600> square<00:01:55.049> 25

00:01:55.670 --> 00:01:55.680 
plus 9 and that should be 5 square 25

00:01:55.680 --> 00:02:00.410 
plus 9 and that should be 5 square 25
okay<00:01:57.170> let's<00:01:58.170> try<00:01:58.380> to<00:01:58.469> execute<00:01:58.860> it<00:01:59.159> and<00:01:59.670> see<00:02:00.329> in

00:02:00.410 --> 00:02:00.420 
okay let's try to execute it and see in

00:02:00.420 --> 00:02:05.300 
okay let's try to execute it and see in
the<00:02:00.450> console<00:02:00.930> this<00:02:01.380> is<00:02:01.560> 25<00:02:02.719> if<00:02:03.719> I<00:02:04.020> say<00:02:04.320> 1<00:02:04.740> that

00:02:05.300 --> 00:02:05.310 
the console this is 25 if I say 1 that

00:02:05.310 --> 00:02:09.320 
the console this is 25 if I say 1 that
would<00:02:05.549> be<00:02:05.820> just<00:02:06.479> 1<00:02:06.840> right<00:02:07.759> let's<00:02:08.759> try<00:02:08.970> to<00:02:09.090> add

00:02:09.320 --> 00:02:09.330 
would be just 1 right let's try to add

00:02:09.330 --> 00:02:11.460 
would be just 1 right let's try to add
hundred<00:02:09.869> odd<00:02:10.050> numbers

00:02:11.460 --> 00:02:11.470 
hundred odd numbers

00:02:11.470 --> 00:02:14.520 
hundred odd numbers
this<00:02:12.280> would<00:02:12.490> be<00:02:12.670> hundred<00:02:13.000> square<00:02:13.540> okay

00:02:14.520 --> 00:02:14.530 
this would be hundred square okay

00:02:14.530 --> 00:02:16.500 
this would be hundred square okay
this<00:02:15.040> is<00:02:15.160> all<00:02:15.340> about<00:02:15.580> this<00:02:15.730> function<00:02:16.180> and<00:02:16.360> if

00:02:16.500 --> 00:02:16.510 
this is all about this function and if

00:02:16.510 --> 00:02:17.760 
this is all about this function and if
you<00:02:16.660> have<00:02:16.750> any<00:02:16.900> question<00:02:17.260> please<00:02:17.290> comment

00:02:17.760 --> 00:02:17.770 
you have any question please comment

00:02:17.770 --> 00:02:19.470 
you have any question please comment
below<00:02:17.860> this<00:02:18.130> video<00:02:18.340> and<00:02:18.640> thanks<00:02:19.060> for<00:02:19.150> watching

00:02:19.470 --> 00:02:19.480 
below this video and thanks for watching

00:02:19.480 --> 00:02:21.810 
below this video and thanks for watching
bye

