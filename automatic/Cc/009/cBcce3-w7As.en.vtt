WEBVTT
Kind: captions
Language: en

00:00:09.170 --> 00:00:11.990 

waited<00:00:10.170> today<00:00:10.650> I<00:00:10.679> will<00:00:11.130> show<00:00:11.370> you<00:00:11.429> how<00:00:11.670> I<00:00:11.700> can

00:00:11.990 --> 00:00:12.000 
waited today I will show you how I can

00:00:12.000 --> 00:00:13.730 
waited today I will show you how I can
test<00:00:12.330> my<00:00:12.420> automation<00:00:13.080> project<00:00:13.500> effectively

00:00:13.730 --> 00:00:13.740 
test my automation project effectively

00:00:13.740 --> 00:00:16.609 
test my automation project effectively
within<00:00:14.639> the<00:00:14.940> shortest<00:00:15.420> possible<00:00:15.599> time<00:00:15.900> for

00:00:16.609 --> 00:00:16.619 
within the shortest possible time for

00:00:16.619 --> 00:00:18.349 
within the shortest possible time for
this<00:00:16.740> purpose<00:00:17.160> I<00:00:17.310> will<00:00:17.369> use<00:00:17.730> the<00:00:17.940> simulation

00:00:18.349 --> 00:00:18.359 
this purpose I will use the simulation

00:00:18.359 --> 00:00:21.050 
this purpose I will use the simulation
framework<00:00:18.990> sim<00:00:19.439> it<00:00:19.560> sim<00:00:20.189> it<00:00:20.340> is<00:00:20.460> a<00:00:20.490> real-time

00:00:21.050 --> 00:00:21.060 
framework sim it sim it is a real-time

00:00:21.060 --> 00:00:22.880 
framework sim it sim it is a real-time
simulation<00:00:21.720> software<00:00:22.170> with<00:00:22.320> a<00:00:22.350> user-friendly

00:00:22.880 --> 00:00:22.890 
simulation software with a user-friendly

00:00:22.890 --> 00:00:25.730 
simulation software with a user-friendly
graphical<00:00:23.820> user<00:00:23.850> interface<00:00:24.480> designed<00:00:25.470> for

00:00:25.730 --> 00:00:25.740 
graphical user interface designed for

00:00:25.740 --> 00:00:27.349 
graphical user interface designed for
virtual<00:00:26.189> commissioning<00:00:26.760> of<00:00:26.880> automation

00:00:27.349 --> 00:00:27.359 
virtual commissioning of automation

00:00:27.359 --> 00:00:30.259 
virtual commissioning of automation
projects<00:00:28.019> as<00:00:28.170> a<00:00:28.830> result<00:00:29.279> you<00:00:29.519> achieve<00:00:29.880> higher

00:00:30.259 --> 00:00:30.269 
projects as a result you achieve higher

00:00:30.269 --> 00:00:32.450 
projects as a result you achieve higher
engineering<00:00:30.900> quality<00:00:31.260> and<00:00:31.500> more<00:00:32.040> planning

00:00:32.450 --> 00:00:32.460 
engineering quality and more planning

00:00:32.460 --> 00:00:34.490 
engineering quality and more planning
security<00:00:33.000> whilst<00:00:33.600> at<00:00:33.930> the<00:00:33.960> same<00:00:34.230> time

00:00:34.490 --> 00:00:34.500 
security whilst at the same time

00:00:34.500 --> 00:00:37.250 
security whilst at the same time
minimizing<00:00:35.219> project<00:00:35.850> costs<00:00:36.300> and<00:00:36.480> risks<00:00:36.750> for

00:00:37.250 --> 00:00:37.260 
minimizing project costs and risks for

00:00:37.260 --> 00:00:39.740 
minimizing project costs and risks for
testing<00:00:37.770> my<00:00:37.920> automation<00:00:38.489> software<00:00:38.640> I<00:00:39.090> use<00:00:39.570> the

00:00:39.740 --> 00:00:39.750 
testing my automation software I use the

00:00:39.750 --> 00:00:41.750 
testing my automation software I use the
real<00:00:39.930> hardware<00:00:40.440> controller<00:00:40.800> a<00:00:41.100> so-called

00:00:41.750 --> 00:00:41.760 
real hardware controller a so-called

00:00:41.760 --> 00:00:44.510 
real hardware controller a so-called
hardware<00:00:42.600> in<00:00:42.840> the<00:00:42.960> loop<00:00:42.989> solution<00:00:43.710> to<00:00:44.190> connect

00:00:44.510 --> 00:00:44.520 
hardware in the loop solution to connect

00:00:44.520 --> 00:00:46.850 
hardware in the loop solution to connect
to<00:00:44.760> my<00:00:44.910> real<00:00:45.149> controller<00:00:45.660> I<00:00:45.899> use<00:00:46.469> an<00:00:46.620> interface

00:00:46.850 --> 00:00:46.860 
to my real controller I use an interface

00:00:46.860 --> 00:00:49.279 
to my real controller I use an interface
module<00:00:47.430> which<00:00:48.059> enables<00:00:48.539> coupling<00:00:48.989> to<00:00:49.170> the

00:00:49.279 --> 00:00:49.289 
module which enables coupling to the

00:00:49.289 --> 00:00:51.860 
module which enables coupling to the
PROFIBUS<00:00:49.739> DP<00:00:50.190> interface<00:00:50.670> seem<00:00:51.510> it<00:00:51.660> also

00:00:51.860 --> 00:00:51.870 
PROFIBUS DP interface seem it also

00:00:51.870 --> 00:00:53.569 
PROFIBUS DP interface seem it also
provides<00:00:52.320> additional<00:00:52.620> coupling<00:00:53.219> options

00:00:53.569 --> 00:00:53.579 
provides additional coupling options

00:00:53.579 --> 00:00:57.110 
provides additional coupling options
such<00:00:54.239> as<00:00:54.270> proofing<00:00:54.989> at<00:00:55.140> I<00:00:55.170> Oh<00:00:55.550> PLC<00:00:56.550> sim<00:00:56.879> in

00:00:57.110 --> 00:00:57.120 
such as proofing at I Oh PLC sim in

00:00:57.120 --> 00:00:58.639 
such as proofing at I Oh PLC sim in
order<00:00:57.629> to<00:00:57.780> be<00:00:57.899> able<00:00:58.020> to<00:00:58.199> test<00:00:58.469> without

00:00:58.639 --> 00:00:58.649 
order to be able to test without

00:00:58.649 --> 00:01:01.729 
order to be able to test without
available<00:00:59.340> hardware<00:00:59.730> as<00:00:59.910> well<00:01:00.539> as<00:01:00.750> OPC<00:01:01.289> and

00:01:01.729 --> 00:01:01.739 
available hardware as well as OPC and

00:01:01.739 --> 00:01:04.670 
available hardware as well as OPC and
shared<00:01:02.100> memory<00:01:02.489> interfaces<00:01:03.180> I'll<00:01:03.899> start<00:01:04.500> by

00:01:04.670 --> 00:01:04.680 
shared memory interfaces I'll start by

00:01:04.680 --> 00:01:06.950 
shared memory interfaces I'll start by
creating<00:01:04.920> a<00:01:05.220> new<00:01:05.250> profile<00:01:05.790> as<00:01:05.909> DP<00:01:06.360> coupling<00:01:06.810> I

00:01:06.950 --> 00:01:06.960 
creating a new profile as DP coupling I

00:01:06.960 --> 00:01:09.800 
creating a new profile as DP coupling I
will<00:01:07.950> then<00:01:08.159> import<00:01:08.640> the<00:01:08.909> system<00:01:09.240> data<00:01:09.450> blocks

00:01:09.800 --> 00:01:09.810 
will then import the system data blocks

00:01:09.810 --> 00:01:15.840 
will then import the system data blocks
and<00:01:10.080> the<00:01:10.260> symbol<00:01:10.590> table

00:01:15.840 --> 00:01:15.850 

00:01:15.850 --> 00:01:18.330 

all<00:01:16.119> symbolic<00:01:17.049> names<00:01:17.409> and<00:01:17.680> signals<00:01:18.070> are<00:01:18.189> now

00:01:18.330 --> 00:01:18.340 
all symbolic names and signals are now

00:01:18.340 --> 00:01:20.310 
all symbolic names and signals are now
defined<00:01:18.729> which<00:01:19.420> is<00:01:19.630> sufficient<00:01:20.290> for

00:01:20.310 --> 00:01:20.320 
defined which is sufficient for

00:01:20.320 --> 00:01:23.580 
defined which is sufficient for
simulation<00:01:21.040> at<00:01:21.220> the<00:01:21.369> signal<00:01:21.670> level<00:01:22.590> but

00:01:23.580 --> 00:01:23.590 
simulation at the signal level but

00:01:23.590 --> 00:01:25.680 
simulation at the signal level but
before<00:01:24.070> that<00:01:24.220> I'll<00:01:24.549> configure<00:01:25.030> my<00:01:25.330> interface

00:01:25.680 --> 00:01:25.690 
before that I'll configure my interface

00:01:25.690 --> 00:01:30.240 
before that I'll configure my interface
module

00:01:30.240 --> 00:01:30.250 

00:01:30.250 --> 00:01:32.550 

the<00:01:30.640> red<00:01:30.820> bus<00:01:31.090> fault<00:01:31.450> LED<00:01:31.900> is<00:01:32.080> now<00:01:32.110> switched

00:01:32.550 --> 00:01:32.560 
the red bus fault LED is now switched

00:01:32.560 --> 00:01:35.280 
the red bus fault LED is now switched
off<00:01:32.830> meaning<00:01:33.700> that<00:01:33.850> my<00:01:34.060> profibus<00:01:34.570> DP<00:01:35.020> slave

00:01:35.280 --> 00:01:35.290 
off meaning that my profibus DP slave

00:01:35.290 --> 00:01:38.250 
off meaning that my profibus DP slave
has<00:01:35.530> been<00:01:35.740> correctly<00:01:36.310> recognized<00:01:36.790> I<00:01:37.150> can<00:01:38.050> now

00:01:38.250 --> 00:01:38.260 
has been correctly recognized I can now

00:01:38.260 --> 00:01:40.320 
has been correctly recognized I can now
start<00:01:38.620> the<00:01:38.770> simulation<00:01:39.190> and<00:01:39.610> thus<00:01:39.820> control

00:01:40.320 --> 00:01:40.330 
start the simulation and thus control

00:01:40.330 --> 00:01:51.170 
start the simulation and thus control
and<00:01:40.720> monitor<00:01:41.200> individual<00:01:42.130> values

00:01:51.170 --> 00:01:51.180 

00:01:51.180 --> 00:01:55.080 

in<00:01:52.470> order<00:01:53.470> to<00:01:53.500> go<00:01:53.830> on<00:01:54.040> with<00:01:54.280> an<00:01:54.400> automatic<00:01:54.730> test

00:01:55.080 --> 00:01:55.090 
in order to go on with an automatic test

00:01:55.090 --> 00:01:57.390 
in order to go on with an automatic test
sequence<00:01:55.510> I<00:01:55.720> now<00:01:56.290> begin<00:01:56.620> with<00:01:56.860> the<00:01:56.980> modeling

00:01:57.390 --> 00:01:57.400 
sequence I now begin with the modeling

00:01:57.400 --> 00:02:00.510 
sequence I now begin with the modeling
of<00:01:57.610> the<00:01:57.760> device<00:01:58.030> level<00:01:58.680> for<00:01:59.680> this<00:01:59.830> purpose<00:02:00.280> I

00:02:00.510 --> 00:02:00.520 
of the device level for this purpose I

00:02:00.520 --> 00:02:02.310 
of the device level for this purpose I
use<00:02:00.700> templates<00:02:01.270> in<00:02:01.480> order<00:02:02.050> to<00:02:02.170> generate

00:02:02.310 --> 00:02:02.320 
use templates in order to generate

00:02:02.320 --> 00:02:04.770 
use templates in order to generate
simulation<00:02:03.160> models<00:02:03.520> automatically<00:02:04.180> on<00:02:04.360> the

00:02:04.770 --> 00:02:04.780 
simulation models automatically on the

00:02:04.780 --> 00:02:08.370 
simulation models automatically on the
basis<00:02:05.110> of<00:02:05.140> tables<00:02:06.270> I'll<00:02:07.270> show<00:02:07.870> you<00:02:07.930> how<00:02:08.200> that

00:02:08.370 --> 00:02:08.380 
basis of tables I'll show you how that

00:02:08.380 --> 00:02:11.840 
basis of tables I'll show you how that
works<00:02:08.560> using<00:02:09.369> the<00:02:09.670> example<00:02:10.240> of<00:02:10.330> a<00:02:10.450> drive<00:02:10.690> unit

00:02:11.840 --> 00:02:11.850 
works using the example of a drive unit

00:02:11.850 --> 00:02:14.850 
works using the example of a drive unit
to<00:02:12.850> start<00:02:13.240> I<00:02:13.480> create<00:02:13.840> a<00:02:13.870> new<00:02:14.110> diagram<00:02:14.320> and

00:02:14.850 --> 00:02:14.860 
to start I create a new diagram and

00:02:14.860 --> 00:02:16.680 
to start I create a new diagram and
select<00:02:15.460> the<00:02:15.610> drive<00:02:15.790> component<00:02:16.480> from<00:02:16.630> the

00:02:16.680 --> 00:02:16.690 
select the drive component from the

00:02:16.690 --> 00:02:19.230 
select the drive component from the
standard<00:02:17.200> library<00:02:17.230> onto<00:02:18.070> my<00:02:18.220> diagram<00:02:18.700> /

00:02:19.230 --> 00:02:19.240 
standard library onto my diagram /

00:02:19.240 --> 00:02:21.980 
standard library onto my diagram /
simple<00:02:19.600> drag-and-drop

00:02:21.980 --> 00:02:21.990 

00:02:21.990 --> 00:02:24.890 

I<00:02:22.130> now<00:02:23.130> connect<00:02:23.520> an<00:02:23.670> input<00:02:24.000> and<00:02:24.180> an<00:02:24.240> output<00:02:24.390> to

00:02:24.890 --> 00:02:24.900 
I now connect an input and an output to

00:02:24.900 --> 00:02:30.450 
I now connect an input and an output to
the<00:02:25.020> component

00:02:30.450 --> 00:02:30.460 

00:02:30.460 --> 00:02:32.880 

and<00:02:30.550> my<00:02:31.390> simulation<00:02:31.990> model<00:02:32.320> is<00:02:32.470> ready<00:02:32.710> to<00:02:32.860> use

00:02:32.880 --> 00:02:32.890 
and my simulation model is ready to use

00:02:32.890 --> 00:02:37.380 
and my simulation model is ready to use
I<00:02:34.440> store<00:02:35.440> this<00:02:35.680> as<00:02:35.860> a<00:02:35.890> template<00:02:36.370> so<00:02:36.550> that<00:02:37.000> I<00:02:37.210> can

00:02:37.380 --> 00:02:37.390 
I store this as a template so that I can

00:02:37.390 --> 00:02:40.940 
I store this as a template so that I can
reuse<00:02:37.840> it<00:02:38.050> repeatedly<00:02:38.590> in<00:02:38.770> other<00:02:38.920> projects<00:02:39.520> I

00:02:40.940 --> 00:02:40.950 
reuse it repeatedly in other projects I

00:02:40.950 --> 00:02:43.500 
reuse it repeatedly in other projects I
define<00:02:41.950> my<00:02:42.160> input<00:02:42.550> and<00:02:42.580> my<00:02:42.790> output<00:02:43.360> as

00:02:43.500 --> 00:02:43.510 
define my input and my output as

00:02:43.510 --> 00:02:47.530 
define my input and my output as
variables

00:02:47.530 --> 00:02:47.540 

00:02:47.540 --> 00:02:50.110 

I<00:02:47.650> can<00:02:48.650> instantiate<00:02:49.010> the<00:02:49.549> template<00:02:49.909> for

00:02:50.110 --> 00:02:50.120 
I can instantiate the template for

00:02:50.120 --> 00:02:52.899 
I can instantiate the template for
future<00:02:50.390> multiple<00:02:51.049> use<00:02:51.290> we<00:02:52.040> have<00:02:52.069> the<00:02:52.340> exported

00:02:52.899 --> 00:02:52.909 
future multiple use we have the exported

00:02:52.909 --> 00:02:56.559 
future multiple use we have the exported
Excel<00:02:53.329> table<00:02:54.189> further<00:02:55.189> on<00:02:55.459> I'll<00:02:55.730> be<00:02:55.939> using<00:02:56.420> the

00:02:56.559 --> 00:02:56.569 
Excel table further on I'll be using the

00:02:56.569 --> 00:03:00.199 
Excel table further on I'll be using the
standard<00:02:57.049> templates<00:02:57.500> contained<00:02:58.069> in<00:02:58.250> cimmyt

00:03:00.199 --> 00:03:00.209 
standard templates contained in cimmyt

00:03:00.209 --> 00:03:03.289 
standard templates contained in cimmyt
for<00:03:01.109> multiple<00:03:01.560> instantiation<00:03:02.219> I<00:03:02.579> will<00:03:03.060> use

00:03:03.289 --> 00:03:03.299 
for multiple instantiation I will use

00:03:03.299 --> 00:03:05.449 
for multiple instantiation I will use
the<00:03:03.510> import/export<00:03:04.109> assistant<00:03:05.010> tables

00:03:05.449 --> 00:03:05.459 
the import/export assistant tables

00:03:05.459 --> 00:03:09.470 
the import/export assistant tables
provided<00:03:06.299> by<00:03:06.480> pcs<00:03:07.049> 7<00:03:07.439> I<00:03:07.760> start<00:03:08.760> the<00:03:08.909> import<00:03:09.239> by

00:03:09.470 --> 00:03:09.480 
provided by pcs 7 I start the import by

00:03:09.480 --> 00:03:11.839 
provided by pcs 7 I start the import by
pressing<00:03:09.930> the<00:03:10.049> SMD<00:03:10.620> button<00:03:10.980> and<00:03:11.129> selecting

00:03:11.839 --> 00:03:11.849 
pressing the SMD button and selecting

00:03:11.849 --> 00:03:14.660 
pressing the SMD button and selecting
the<00:03:12.000> table<00:03:12.359> all<00:03:13.519> necessary<00:03:14.519> equipment

00:03:14.660 --> 00:03:14.670 
the table all necessary equipment

00:03:14.670 --> 00:03:17.330 
the table all necessary equipment
modules<00:03:15.510> for<00:03:15.780> my<00:03:15.930> valve<00:03:16.170> drive<00:03:16.530> are<00:03:16.829> now<00:03:17.040> ready

00:03:17.330 --> 00:03:17.340 
modules for my valve drive are now ready

00:03:17.340 --> 00:03:20.690 
modules for my valve drive are now ready
and<00:03:17.489> could<00:03:18.060> be<00:03:18.209> simulated<00:03:18.950> I'll<00:03:19.950> now<00:03:20.310> do<00:03:20.370> the

00:03:20.690 --> 00:03:20.700 
and could be simulated I'll now do the

00:03:20.700 --> 00:03:24.670 
and could be simulated I'll now do the
same<00:03:20.730> with<00:03:21.209> my<00:03:21.480> pumps<00:03:21.989> select<00:03:22.980> the<00:03:23.219> template

00:03:24.670 --> 00:03:24.680 
same with my pumps select the template

00:03:24.680 --> 00:03:28.220 
same with my pumps select the template
confirm<00:03:25.680> the<00:03:25.889> SMD<00:03:26.400> functionality

00:03:28.220 --> 00:03:28.230 
confirm the SMD functionality

00:03:28.230 --> 00:03:30.979 
confirm the SMD functionality
and<00:03:28.489> import<00:03:29.489> all<00:03:29.840> necessary<00:03:30.840> equipment

00:03:30.979 --> 00:03:30.989 
and import all necessary equipment

00:03:30.989 --> 00:03:33.530 
and import all necessary equipment
models<00:03:31.709> are<00:03:31.950> now<00:03:32.099> ready<00:03:32.400> and<00:03:32.640> the<00:03:33.150> simulation

00:03:33.530 --> 00:03:33.540 
models are now ready and the simulation

00:03:33.540 --> 00:03:42.670 
models are now ready and the simulation
can<00:03:33.900> begin<00:03:34.230> at<00:03:34.470> the<00:03:34.769> device<00:03:35.040> level

00:03:42.670 --> 00:03:42.680 

00:03:42.680 --> 00:03:50.600 

you

00:03:50.600 --> 00:03:50.610 

00:03:50.610 --> 00:03:52.940 

both<00:03:51.150> the<00:03:51.420> process<00:03:51.840> centered<00:03:52.290> technological

00:03:52.940 --> 00:03:52.950 
both the process centered technological

00:03:52.950 --> 00:03:54.950 
both the process centered technological
characteristics<00:03:53.670> of<00:03:53.850> the<00:03:53.970> system<00:03:54.360> or<00:03:54.630> machine

00:03:54.950 --> 00:03:54.960 
characteristics of the system or machine

00:03:54.960 --> 00:03:57.980 
characteristics of the system or machine
can<00:03:55.590> be<00:03:55.740> simulated<00:03:55.980> in<00:03:56.430> cimmyt<00:03:56.820> for<00:03:57.540> example

00:03:57.980 --> 00:03:57.990 
can be simulated in cimmyt for example

00:03:57.990 --> 00:04:00.340 
can be simulated in cimmyt for example
in<00:03:58.170> order<00:03:58.860> to<00:03:58.980> test<00:03:59.190> sequential<00:03:59.760> functions

00:04:00.340 --> 00:04:00.350 
in order to test sequential functions

00:04:00.350 --> 00:04:02.870 
in order to test sequential functions
you<00:04:01.350> can<00:04:01.560> model<00:04:01.920> this<00:04:02.070> either<00:04:02.310> by<00:04:02.610> using

00:04:02.870 --> 00:04:02.880 
you can model this either by using

00:04:02.880 --> 00:04:04.190 
you can model this either by using
standard<00:04:03.480> components

00:04:04.190 --> 00:04:04.200 
standard components

00:04:04.200 --> 00:04:06.980 
standard components
simply<00:04:04.920> put<00:04:05.100> drag-and-drop<00:04:05.520> or<00:04:05.970> based<00:04:06.810> on

00:04:06.980 --> 00:04:06.990 
simply put drag-and-drop or based on

00:04:06.990 --> 00:04:10.220 
simply put drag-and-drop or based on
templates<00:04:07.490> in<00:04:08.490> addition<00:04:09.030> users<00:04:09.750> may<00:04:09.930> define

00:04:10.220 --> 00:04:10.230 
templates in addition users may define

00:04:10.230 --> 00:04:13.190 
templates in addition users may define
their<00:04:10.470> own<00:04:10.500> components<00:04:11.280> in<00:04:11.660> this<00:04:12.660> case<00:04:12.930> I<00:04:13.140> will

00:04:13.190 --> 00:04:13.200 
their own components in this case I will

00:04:13.200 --> 00:04:14.990 
their own components in this case I will
use<00:04:13.320> templates<00:04:13.950> that<00:04:14.130> have<00:04:14.250> already<00:04:14.550> created

00:04:14.990 --> 00:04:15.000 
use templates that have already created

00:04:15.000 --> 00:04:17.720 
use templates that have already created
in<00:04:15.360> an<00:04:15.480> earlier<00:04:15.660> project<00:04:16.340> first<00:04:17.340> of<00:04:17.519> all<00:04:17.700> I

00:04:17.720 --> 00:04:17.730 
in an earlier project first of all I

00:04:17.730 --> 00:04:20.210 
in an earlier project first of all I
stop<00:04:18.239> the<00:04:18.420> simulation<00:04:18.570> and<00:04:19.200> then<00:04:19.769> I<00:04:19.799> select

00:04:20.210 --> 00:04:20.220 
stop the simulation and then I select

00:04:20.220 --> 00:04:23.170 
stop the simulation and then I select
the<00:04:20.519> template

00:04:23.170 --> 00:04:23.180 

00:04:23.180 --> 00:04:25.390 

the<00:04:23.930> folder<00:04:24.320> in<00:04:24.470> which<00:04:24.650> I<00:04:24.770> wanted<00:04:25.070> to<00:04:25.160> store

00:04:25.390 --> 00:04:25.400 
the folder in which I wanted to store

00:04:25.400 --> 00:04:28.270 
the folder in which I wanted to store
the<00:04:25.520> template

00:04:28.270 --> 00:04:28.280 

00:04:28.280 --> 00:04:33.700 

and<00:04:28.450> the<00:04:29.450> table<00:04:29.780> as<00:04:31.150> a<00:04:32.150> next<00:04:32.600> step<00:04:32.900> I<00:04:33.080> select

00:04:33.700 --> 00:04:33.710 
and the table as a next step I select

00:04:33.710 --> 00:04:38.320 
and the table as a next step I select
the<00:04:33.920> next<00:04:34.070> template

00:04:38.320 --> 00:04:38.330 

00:04:38.330 --> 00:04:40.500 

done<00:04:39.169> now<00:04:39.889> it's<00:04:40.159> time

00:04:40.500 --> 00:04:40.510 
done now it's time

00:04:40.510 --> 00:04:42.710 
done now it's time
to<00:04:40.570> test<00:04:40.780> my<00:04:40.870> automation<00:04:41.560> functionality<00:04:42.250> I

00:04:42.710 --> 00:04:42.720 
to test my automation functionality I

00:04:42.720 --> 00:04:48.900 
to test my automation functionality I
start<00:04:43.720> the<00:04:43.840> simulation

00:04:48.900 --> 00:04:48.910 

00:04:48.910 --> 00:04:52.190 

switch<00:04:49.810> over<00:04:50.020> to<00:04:50.230> my<00:04:50.500> tank<00:04:50.770> model<00:04:51.160> and

00:04:52.190 --> 00:04:52.200 
switch over to my tank model and

00:04:52.200 --> 00:05:00.410 
switch over to my tank model and
initiate<00:04:53.200> the<00:04:53.230> filling<00:04:53.740> process

00:05:00.410 --> 00:05:00.420 

00:05:00.420 --> 00:05:03.440 

if<00:05:00.480> I<00:05:01.140> switch<00:05:01.500> to<00:05:01.530> the<00:05:01.830> OS<00:05:02.100> view<00:05:02.400> I<00:05:02.610> can<00:05:03.180> see

00:05:03.440 --> 00:05:03.450 
if I switch to the OS view I can see

00:05:03.450 --> 00:05:07.130 
if I switch to the OS view I can see
that<00:05:03.660> my<00:05:03.810> filling<00:05:04.230> level<00:05:04.350> is<00:05:04.590> rising<00:05:04.830> I<00:05:06.140> then

00:05:07.130 --> 00:05:07.140 
that my filling level is rising I then

00:05:07.140 --> 00:05:11.559 
that my filling level is rising I then
start<00:05:07.530> the<00:05:07.770> SFC

00:05:11.559 --> 00:05:11.569 

00:05:11.569 --> 00:05:15.330 

all<00:05:11.860> valves<00:05:12.860> are<00:05:13.189> correctly<00:05:13.580> controlled

00:05:15.330 --> 00:05:15.340 
all valves are correctly controlled

00:05:15.340 --> 00:05:19.080 
all valves are correctly controlled
and<00:05:15.430> my<00:05:16.240> reactor<00:05:16.750> one<00:05:17.020> is<00:05:17.260> filled<00:05:17.699> the<00:05:18.699> test<00:05:18.940> is

00:05:19.080 --> 00:05:19.090 
and my reactor one is filled the test is

00:05:19.090 --> 00:05:21.030 
and my reactor one is filled the test is
successful<00:05:19.440> proving<00:05:20.440> that<00:05:20.530> the<00:05:20.680> automation

00:05:21.030 --> 00:05:21.040 
successful proving that the automation

00:05:21.040 --> 00:05:24.719 
successful proving that the automation
program<00:05:21.580> works<00:05:21.820> properly<00:05:23.490> since<00:05:24.490> the

00:05:24.719 --> 00:05:24.729 
program works properly since the

00:05:24.729 --> 00:05:26.730 
program works properly since the
simulation<00:05:25.300> runs<00:05:25.510> fully<00:05:25.870> separated<00:05:26.380> from<00:05:26.620> the

00:05:26.730 --> 00:05:26.740 
simulation runs fully separated from the

00:05:26.740 --> 00:05:28.860 
simulation runs fully separated from the
controller<00:05:27.100> I<00:05:27.370> can<00:05:28.000> take<00:05:28.210> my<00:05:28.360> automation

00:05:28.860 --> 00:05:28.870 
controller I can take my automation

00:05:28.870 --> 00:05:31.110 
controller I can take my automation
project<00:05:29.229> directly<00:05:29.919> with<00:05:30.070> me<00:05:30.250> to<00:05:30.790> the<00:05:30.940> real

00:05:31.110 --> 00:05:31.120 
project directly with me to the real

00:05:31.120 --> 00:05:33.990 
project directly with me to the real
plant<00:05:31.479> as<00:05:31.750> a<00:05:32.620> result<00:05:33.070> there's<00:05:33.400> no<00:05:33.610> risk<00:05:33.820> of

00:05:33.990 --> 00:05:34.000 
plant as a result there's no risk of

00:05:34.000 --> 00:05:37.370 
plant as a result there's no risk of
forgetting<00:05:34.449> simulations<00:05:35.110> in<00:05:35.260> my<00:05:35.380> controller

00:05:37.370 --> 00:05:37.380 
forgetting simulations in my controller

00:05:37.380 --> 00:05:41.340 
forgetting simulations in my controller
virtual<00:05:38.380> commissioning<00:05:38.949> with<00:05:39.100> CIMMYT<00:05:40.350> quick

00:05:41.340 --> 00:05:41.350 
virtual commissioning with CIMMYT quick

00:05:41.350 --> 00:05:45.300 
virtual commissioning with CIMMYT quick
flexible<00:05:42.280> and<00:05:42.430> comfortable

