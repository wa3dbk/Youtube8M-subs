WEBVTT
Kind: captions
Language: en

00:00:00.170 --> 00:00:03.379 

hello<00:00:01.170> guys<00:00:01.380> welcome<00:00:01.770> to<00:00:02.129> the<00:00:02.280> fourth<00:00:02.820> Java

00:00:03.379 --> 00:00:03.389 
hello guys welcome to the fourth Java

00:00:03.389 --> 00:00:05.720 
hello guys welcome to the fourth Java
tutorial<00:00:04.020> in<00:00:04.290> this<00:00:04.589> tutorial<00:00:04.650> I<00:00:05.310> will<00:00:05.339> teach

00:00:05.720 --> 00:00:05.730 
tutorial in this tutorial I will teach

00:00:05.730 --> 00:00:09.560 
tutorial in this tutorial I will teach
you<00:00:05.790> how<00:00:06.299> to<00:00:06.810> create<00:00:07.849> how<00:00:08.849> to<00:00:08.910> perform

00:00:09.560 --> 00:00:09.570 
you how to create how to perform

00:00:09.570 --> 00:00:12.709 
you how to create how to perform
mathematics<00:00:10.170> function<00:00:10.530> in<00:00:10.800> Java<00:00:11.269> so<00:00:12.269> I've

00:00:12.709 --> 00:00:12.719 
mathematics function in Java so I've

00:00:12.719 --> 00:00:14.270 
mathematics function in Java so I've
already<00:00:12.929> created<00:00:13.200> a<00:00:13.440> new<00:00:13.559> project<00:00:14.009> if<00:00:14.160> you

00:00:14.270 --> 00:00:14.280 
already created a new project if you

00:00:14.280 --> 00:00:15.589 
already created a new project if you
don't<00:00:14.730> know<00:00:14.820> how<00:00:14.910> to<00:00:14.940> create<00:00:15.240> a<00:00:15.299> new<00:00:15.330> project

00:00:15.589 --> 00:00:15.599 
don't know how to create a new project

00:00:15.599 --> 00:00:17.540 
don't know how to create a new project
in<00:00:15.929> netbeans<00:00:16.320> please<00:00:16.619> watch<00:00:17.190> my<00:00:17.220> previous

00:00:17.540 --> 00:00:17.550 
in netbeans please watch my previous

00:00:17.550 --> 00:00:19.640 
in netbeans please watch my previous
tutorial<00:00:18.180> so<00:00:18.690> let's<00:00:18.900> get<00:00:19.020> started<00:00:19.170> with<00:00:19.439> the

00:00:19.640 --> 00:00:19.650 
tutorial so let's get started with the

00:00:19.650 --> 00:00:22.700 
tutorial so let's get started with the
tutorial<00:00:20.210> so<00:00:21.210> first<00:00:21.449> of<00:00:21.570> all<00:00:21.720> we<00:00:21.990> will<00:00:22.439> declare

00:00:22.700 --> 00:00:22.710 
tutorial so first of all we will declare

00:00:22.710 --> 00:00:29.000 
tutorial so first of all we will declare
four<00:00:23.640> variables<00:00:24.180> in<00:00:24.600> a<00:00:26.119> b<00:00:27.119> c<00:00:27.650> 33<00:00:28.650> very<00:00:28.830> will

00:00:29.000 --> 00:00:29.010 
four variables in a b c 33 very will

00:00:29.010 --> 00:00:33.700 
four variables in a b c 33 very will
declare<00:00:29.250> three<00:00:29.490> variables<00:00:30.029> in<00:00:31.040> ABC<00:00:32.420> and<00:00:33.420> now

00:00:33.700 --> 00:00:33.710 
declare three variables in ABC and now

00:00:33.710 --> 00:00:39.200 
declare three variables in ABC and now
there<00:00:34.710> are<00:00:34.980> a<00:00:36.290> few<00:00:37.730> mathematics<00:00:38.730> function<00:00:39.030> jaw

00:00:39.200 --> 00:00:39.210 
there are a few mathematics function jaw

00:00:39.210 --> 00:00:42.139 
there are a few mathematics function jaw
addition<00:00:39.960> multiplication<00:00:41.149> division

00:00:42.139 --> 00:00:42.149 
addition multiplication division

00:00:42.149 --> 00:00:44.869 
addition multiplication division
addition<00:00:42.420> and<00:00:43.260> subtraction<00:00:43.980> in<00:00:44.460> normal

00:00:44.869 --> 00:00:44.879 
addition and subtraction in normal

00:00:44.879 --> 00:00:46.610 
addition and subtraction in normal
programming<00:00:45.210> languages<00:00:45.690> other<00:00:45.840> than<00:00:45.960> java<00:00:46.320> if

00:00:46.610 --> 00:00:46.620 
programming languages other than java if

00:00:46.620 --> 00:00:48.290 
programming languages other than java if
you<00:00:46.800> perform<00:00:47.129> this<00:00:47.280> function<00:00:47.460> functions<00:00:48.180> will

00:00:48.290 --> 00:00:48.300 
you perform this function functions will

00:00:48.300 --> 00:00:50.690 
you perform this function functions will
all<00:00:48.450> be<00:00:48.629> performed<00:00:49.020> from<00:00:49.140> left<00:00:49.440> to<00:00:49.530> right<00:00:49.700> but

00:00:50.690 --> 00:00:50.700 
all be performed from left to right but

00:00:50.700 --> 00:00:52.520 
all be performed from left to right but
in<00:00:50.879> java<00:00:51.149> there<00:00:51.390> is<00:00:51.480> a<00:00:51.539> precedent<00:00:51.899> rule<00:00:52.230> that

00:00:52.520 --> 00:00:52.530 
in java there is a precedent rule that

00:00:52.530 --> 00:00:56.180 
in java there is a precedent rule that
multiplication<00:00:53.430> and<00:00:53.940> division<00:00:54.379> has<00:00:55.379> priority

00:00:56.180 --> 00:00:56.190 
multiplication and division has priority

00:00:56.190 --> 00:00:59.900 
multiplication and division has priority
over<00:00:56.570> addition<00:00:57.570> and<00:00:57.989> subtraction<00:00:58.770> so<00:00:59.399> let<00:00:59.730> me

00:00:59.900 --> 00:00:59.910 
over addition and subtraction so let me

00:00:59.910 --> 00:01:01.670 
over addition and subtraction so let me
show<00:01:00.120> you<00:01:00.149> an<00:01:00.420> example<00:01:00.539> how<00:01:01.020> is<00:01:01.199> this<00:01:01.320> done<00:01:01.530> in

00:01:01.670 --> 00:01:01.680 
show you an example how is this done in

00:01:01.680 --> 00:01:05.649 
show you an example how is this done in
java<00:01:03.290> system<00:01:04.290> print<00:01:04.530> alarm<00:01:04.799> system<00:01:05.220> that<00:01:05.250> out

00:01:05.649 --> 00:01:05.659 
java system print alarm system that out

00:01:05.659 --> 00:01:12.140 
java system print alarm system that out
dot<00:01:06.830> print<00:01:08.900> ln<00:01:10.220> first<00:01:11.220> of<00:01:11.400> all<00:01:11.580> we<00:01:11.760> need<00:01:11.970> to

00:01:12.140 --> 00:01:12.150 
dot print ln first of all we need to

00:01:12.150 --> 00:01:14.450 
dot print ln first of all we need to
assign<00:01:12.450> some<00:01:12.810> values<00:01:13.170> to<00:01:13.380> the<00:01:13.590> variable<00:01:14.010> so<00:01:14.250> a

00:01:14.450 --> 00:01:14.460 
assign some values to the variable so a

00:01:14.460 --> 00:01:22.210 
assign some values to the variable so a
equals<00:01:15.210> to<00:01:16.610> be<00:01:17.610> equals<00:01:18.180> to<00:01:19.100> C<00:01:20.100> equals<00:01:20.549> 2<00:01:20.850> and

00:01:22.210 --> 00:01:22.220 
equals to be equals to C equals 2 and

00:01:22.220 --> 00:01:24.950 
equals to be equals to C equals 2 and
now<00:01:23.220> we'll<00:01:23.670> perform<00:01:23.909> the<00:01:24.360> functions

00:01:24.950 --> 00:01:24.960 
now we'll perform the functions

00:01:24.960 --> 00:01:30.440 
now we'll perform the functions
mathematical<00:01:25.860> functions<00:01:26.280> a<00:01:26.490> +<00:01:27.240> 2<00:01:27.810> x<00:01:28.799> c<00:01:29.159> and<00:01:29.450> now

00:01:30.440 --> 00:01:30.450 
mathematical functions a + 2 x c and now

00:01:30.450 --> 00:01:32.060 
mathematical functions a + 2 x c and now
in<00:01:30.570> normal<00:01:30.930> programming<00:01:31.259> languages<00:01:31.770> it<00:01:31.920> will

00:01:32.060 --> 00:01:32.070 
in normal programming languages it will

00:01:32.070 --> 00:01:34.100 
in normal programming languages it will
be<00:01:32.189> done<00:01:32.400> from<00:01:32.670> left<00:01:32.970> to<00:01:33.060> right<00:01:33.180> first<00:01:33.930> it<00:01:34.049> will

00:01:34.100 --> 00:01:34.110 
be done from left to right first it will

00:01:34.110 --> 00:01:36.800 
be done from left to right first it will
be<00:01:34.229> done<00:01:34.350> a<00:01:34.590> plus<00:01:35.100> B<00:01:35.130> den<00:01:35.700> multi<00:01:35.939> privacy<00:01:36.360> but

00:01:36.800 --> 00:01:36.810 
be done a plus B den multi privacy but

00:01:36.810 --> 00:01:38.810 
be done a plus B den multi privacy but
in<00:01:36.930> Java<00:01:37.140> the<00:01:37.229> president<00:01:37.829> rules<00:01:38.009> tells<00:01:38.310> Java

00:01:38.810 --> 00:01:38.820 
in Java the president rules tells Java

00:01:38.820 --> 00:01:41.420 
in Java the president rules tells Java
to<00:01:39.360> perform<00:01:39.780> multiplication<00:01:40.140> first<00:01:40.710> then

00:01:41.420 --> 00:01:41.430 
to perform multiplication first then

00:01:41.430 --> 00:01:43.940 
to perform multiplication first then
addition<00:01:41.909> so<00:01:42.540> multiplication<00:01:42.960> has<00:01:43.380> priority

00:01:43.940 --> 00:01:43.950 
addition so multiplication has priority

00:01:43.950 --> 00:01:46.609 
addition so multiplication has priority
over<00:01:44.130> addition<00:01:44.880> so<00:01:45.570> if<00:01:45.750> we<00:01:45.780> perform<00:01:46.049> in<00:01:46.380> Java

00:01:46.609 --> 00:01:46.619 
over addition so if we perform in Java

00:01:46.619 --> 00:01:48.260 
over addition so if we perform in Java
this<00:01:46.860> one<00:01:47.040> the<00:01:47.220> answer<00:01:47.490> would<00:01:47.579> be<00:01:47.640> to<00:01:47.790> multi

00:01:48.260 --> 00:01:48.270 
this one the answer would be to multi

00:01:48.270 --> 00:01:51.859 
this one the answer would be to multi
level<00:01:48.509> 24<00:01:48.869> +<00:01:49.290> 26<00:01:49.890> so<00:01:50.759> let's<00:01:51.060> run<00:01:51.600> this<00:01:51.689> program

00:01:51.859 --> 00:01:51.869 
level 24 + 26 so let's run this program

00:01:51.869 --> 00:01:54.499 
level 24 + 26 so let's run this program
and<00:01:52.320> find<00:01:52.530> out<00:01:52.680> what<00:01:52.829> is<00:01:52.979> the<00:01:53.070> answer<00:01:53.220> and<00:01:53.579> now

00:01:54.499 --> 00:01:54.509 
and find out what is the answer and now

00:01:54.509 --> 00:01:56.080 
and find out what is the answer and now
we<00:01:54.570> learn<00:01:54.750> this<00:01:54.899> program<00:01:55.259> the<00:01:55.380> answer<00:01:55.649> is<00:01:55.770> six

00:01:56.080 --> 00:01:56.090 
we learn this program the answer is six

00:01:56.090 --> 00:01:59.359 
we learn this program the answer is six
ok<00:01:57.090> this<00:01:57.270> is<00:01:57.450> how<00:01:57.479> the<00:01:57.659> is<00:01:58.259> the<00:01:58.649> same<00:01:58.890> with<00:01:59.159> the

00:01:59.359 --> 00:01:59.369 
ok this is how the is the same with the

00:01:59.369 --> 00:02:02.300 
ok this is how the is the same with the
division<00:02:00.240> if<00:02:00.570> you<00:02:00.659> perform<00:02:00.899> division<00:02:01.380> so

00:02:02.300 --> 00:02:02.310 
division if you perform division so

00:02:02.310 --> 00:02:04.580 
division if you perform division so
first<00:02:02.670> division<00:02:03.090> would<00:02:03.240> be<00:02:03.360> performed<00:02:03.810> then

00:02:04.580 --> 00:02:04.590 
first division would be performed then

00:02:04.590 --> 00:02:07.459 
first division would be performed then
addition<00:02:05.159> and<00:02:05.340> division<00:02:06.299> also<00:02:06.509> has<00:02:06.869> priority

00:02:07.459 --> 00:02:07.469 
addition and division also has priority

00:02:07.469 --> 00:02:11.740 
addition and division also has priority
over

00:02:11.740 --> 00:02:11.750 

00:02:11.750 --> 00:02:16.180 

over<00:02:12.620> addition<00:02:13.160> and<00:02:13.340> subtraction<00:02:13.940> so<00:02:14.890> to<00:02:15.890> do

00:02:16.180 --> 00:02:16.190 
over addition and subtraction so to do

00:02:16.190 --> 00:02:19.000 
over addition and subtraction so to do
and<00:02:16.430> divided<00:02:17.120> by<00:02:17.150> 2<00:02:17.270> will<00:02:17.600> be<00:02:17.720> 1<00:02:17.960> and<00:02:18.200> 2<00:02:18.650> plus

00:02:19.000 --> 00:02:19.010 
and divided by 2 will be 1 and 2 plus

00:02:19.010 --> 00:02:21.100 
and divided by 2 will be 1 and 2 plus
one<00:02:19.550> equals<00:02:19.970> two<00:02:20.030> three<00:02:20.270> when<00:02:20.600> we<00:02:20.720> run<00:02:20.900> this

00:02:21.100 --> 00:02:21.110 
one equals two three when we run this

00:02:21.110 --> 00:02:23.800 
one equals two three when we run this
program<00:02:21.290> the<00:02:21.650> answer<00:02:21.860> would<00:02:21.980> be<00:02:22.040> three<00:02:22.810> here

00:02:23.800 --> 00:02:23.810 
program the answer would be three here

00:02:23.810 --> 00:02:27.580 
program the answer would be three here
it<00:02:23.960> goes<00:02:24.140> answer<00:02:24.740> is<00:02:24.860> 3<00:02:25.100> so<00:02:25.690> this<00:02:26.690> is<00:02:27.080> how<00:02:27.260> the

00:02:27.580 --> 00:02:27.590 
it goes answer is 3 so this is how the

00:02:27.590 --> 00:02:29.590 
it goes answer is 3 so this is how the
president<00:02:27.890> rule<00:02:28.310> work<00:02:28.580> in<00:02:28.730> Java<00:02:28.970> but<00:02:29.209> if<00:02:29.360> we

00:02:29.590 --> 00:02:29.600 
president rule work in Java but if we

00:02:29.600 --> 00:02:31.090 
president rule work in Java but if we
don't<00:02:29.810> want<00:02:30.140> if<00:02:30.350> you<00:02:30.650> don't<00:02:30.860> want<00:02:31.010> like

00:02:31.090 --> 00:02:31.100 
don't want if you don't want like

00:02:31.100 --> 00:02:33.220 
don't want if you don't want like
multiplication<00:02:31.520> to<00:02:32.090> be<00:02:32.209> done<00:02:32.390> first<00:02:32.630> and<00:02:32.959> we

00:02:33.220 --> 00:02:33.230 
multiplication to be done first and we

00:02:33.230 --> 00:02:34.840 
multiplication to be done first and we
want<00:02:33.440> addition<00:02:33.920> to<00:02:34.040> be<00:02:34.130> done<00:02:34.280> first<00:02:34.459> then<00:02:34.700> we

00:02:34.840 --> 00:02:34.850 
want addition to be done first then we

00:02:34.850 --> 00:02:38.860 
want addition to be done first then we
can<00:02:34.880> use<00:02:35.870> brackets<00:02:36.850> around<00:02:37.850> addition<00:02:38.690> and

00:02:38.860 --> 00:02:38.870 
can use brackets around addition and

00:02:38.870 --> 00:02:40.870 
can use brackets around addition and
then<00:02:39.410> we<00:02:39.530> can<00:02:39.709> perform<00:02:39.890> multiplication<00:02:40.310> then

00:02:40.870 --> 00:02:40.880 
then we can perform multiplication then

00:02:40.880 --> 00:02:44.260 
then we can perform multiplication then
with<00:02:41.300> telling<00:02:41.690> Java<00:02:41.930> that<00:02:42.820> perform<00:02:43.820> this

00:02:44.260 --> 00:02:44.270 
with telling Java that perform this

00:02:44.270 --> 00:02:46.960 
with telling Java that perform this
thing<00:02:44.989> in<00:02:45.260> within<00:02:45.830> the<00:02:46.070> brackets<00:02:46.489> first<00:02:46.670> and

00:02:46.960 --> 00:02:46.970 
thing in within the brackets first and

00:02:46.970 --> 00:02:51.190 
thing in within the brackets first and
then<00:02:47.630> multiply<00:02:47.660> it<00:02:48.200> with<00:02:49.180> C<00:02:50.180> so<00:02:50.690> it<00:02:50.900> this<00:02:51.170> time

00:02:51.190 --> 00:02:51.200 
then multiply it with C so it this time

00:02:51.200 --> 00:02:54.280 
then multiply it with C so it this time
it<00:02:51.500> will<00:02:51.590> be<00:02:51.650> 2<00:02:51.980> plus<00:02:52.130> 2<00:02:52.459> for<00:02:52.730> 4<00:02:53.209> x<00:02:53.600> 28<00:02:54.020> the

00:02:54.280 --> 00:02:54.290 
it will be 2 plus 2 for 4 x 28 the

00:02:54.290 --> 00:02:55.840 
it will be 2 plus 2 for 4 x 28 the
answer<00:02:54.560> should<00:02:54.709> be<00:02:54.770> eight<00:02:55.010> when<00:02:55.459> we<00:02:55.550> run<00:02:55.670> this

00:02:55.840 --> 00:02:55.850 
answer should be eight when we run this

00:02:55.850 --> 00:02:58.470 
answer should be eight when we run this
program<00:02:56.030> we're<00:02:56.840> running<00:02:57.170> it<00:02:57.290> the<00:02:57.650> answer<00:02:57.980> is<00:02:58.010> 8

00:02:58.470 --> 00:02:58.480 
program we're running it the answer is 8

00:02:58.480 --> 00:03:02.170 
program we're running it the answer is 8
so<00:02:59.480> this<00:02:59.720> is<00:02:59.750> how<00:03:00.080> we<00:03:00.140> do<00:03:00.530> like<00:03:01.250> create<00:03:01.880> this<00:03:02.030> is

00:03:02.170 --> 00:03:02.180 
so this is how we do like create this is

00:03:02.180 --> 00:03:04.540 
so this is how we do like create this is
our<00:03:02.300> present<00:03:02.450> working<00:03:02.750> Java<00:03:03.350> but<00:03:04.100> if<00:03:04.280> we<00:03:04.310> are

00:03:04.540 --> 00:03:04.550 
our present working Java but if we are

00:03:04.550 --> 00:03:08.020 
our present working Java but if we are
like<00:03:05.180> if<00:03:06.050> we<00:03:06.560> are<00:03:06.650> not<00:03:06.830> using<00:03:07.100> any<00:03:07.370> addition

00:03:08.020 --> 00:03:08.030 
like if we are not using any addition

00:03:08.030 --> 00:03:09.490 
like if we are not using any addition
we're<00:03:08.180> not<00:03:08.360> using<00:03:08.570> any<00:03:08.750> multiplication<00:03:09.080> and

00:03:09.490 --> 00:03:09.500 
we're not using any multiplication and

00:03:09.500 --> 00:03:11.290 
we're not using any multiplication and
division<00:03:09.560> we<00:03:10.010> are<00:03:10.160> only<00:03:10.310> using<00:03:10.430> subtraction

00:03:11.290 --> 00:03:11.300 
division we are only using subtraction

00:03:11.300 --> 00:03:13.000 
division we are only using subtraction
and<00:03:11.450> addition<00:03:11.540> if<00:03:12.020> you<00:03:12.590> are<00:03:12.680> only<00:03:12.770> doing

00:03:13.000 --> 00:03:13.010 
and addition if you are only doing

00:03:13.010 --> 00:03:15.580 
and addition if you are only doing
subtraction<00:03:13.250> and<00:03:13.820> addition<00:03:14.230> it<00:03:15.230> will<00:03:15.290> be

00:03:15.580 --> 00:03:15.590 
subtraction and addition it will be

00:03:15.590 --> 00:03:17.530 
subtraction and addition it will be
performed<00:03:16.100> from<00:03:16.250> left<00:03:16.549> right<00:03:16.880> it<00:03:17.120> won't<00:03:17.420> be

00:03:17.530 --> 00:03:17.540 
performed from left right it won't be

00:03:17.540 --> 00:03:19.449 
performed from left right it won't be
perform<00:03:17.989> like<00:03:18.140> subtraction<00:03:18.950> first<00:03:19.190> or

00:03:19.449 --> 00:03:19.459 
perform like subtraction first or

00:03:19.459 --> 00:03:21.009 
perform like subtraction first or
addition<00:03:19.880> first<00:03:20.090> there<00:03:20.510> is<00:03:20.630> no<00:03:20.810> precedent

00:03:21.009 --> 00:03:21.019 
addition first there is no precedent

00:03:21.019 --> 00:03:23.949 
addition first there is no precedent
rule<00:03:21.440> in<00:03:21.860> subtraction<00:03:22.400> and<00:03:22.820> addition<00:03:22.959> Joe

00:03:23.949 --> 00:03:23.959 
rule in subtraction and addition Joe

00:03:23.959 --> 00:03:26.140 
rule in subtraction and addition Joe
Oliver<00:03:24.410> form<00:03:24.680> from<00:03:25.040> left<00:03:25.310> to<00:03:25.459> right<00:03:25.610> when<00:03:26.000> we

00:03:26.140 --> 00:03:26.150 
Oliver form from left to right when we

00:03:26.150 --> 00:03:29.830 
Oliver form from left to right when we
are<00:03:26.209> only<00:03:27.940> performing<00:03:28.940> subtraction<00:03:29.660> and

00:03:29.830 --> 00:03:29.840 
are only performing subtraction and

00:03:29.840 --> 00:03:31.539 
are only performing subtraction and
addition<00:03:29.930> and<00:03:30.350> this<00:03:30.799> time<00:03:30.980> if<00:03:31.100> we<00:03:31.220> run<00:03:31.400> it

00:03:31.539 --> 00:03:31.549 
addition and this time if we run it

00:03:31.549 --> 00:03:34.420 
addition and this time if we run it
would<00:03:31.700> be<00:03:31.820> 2+2<00:03:32.570> 4<00:03:32.900> minus<00:03:33.260> 2<00:03:33.410> to<00:03:33.739> answer<00:03:34.310> should

00:03:34.420 --> 00:03:34.430 
would be 2+2 4 minus 2 to answer should

00:03:34.430 --> 00:03:38.830 
would be 2+2 4 minus 2 to answer should
be<00:03:34.489> two<00:03:34.790> and<00:03:35.980> answer<00:03:36.980> is<00:03:37.160> 2<00:03:37.400> so<00:03:38.180> this<00:03:38.540> is<00:03:38.690> how

00:03:38.830 --> 00:03:38.840 
be two and answer is 2 so this is how

00:03:38.840 --> 00:03:40.900 
be two and answer is 2 so this is how
the<00:03:38.870> president<00:03:39.230> rule<00:03:39.650> work<00:03:39.920> in<00:03:40.070> Java<00:03:40.310> and<00:03:40.610> this

00:03:40.900 --> 00:03:40.910 
the president rule work in Java and this

00:03:40.910 --> 00:03:42.550 
the president rule work in Java and this
is<00:03:41.060> how<00:03:41.180> we<00:03:41.239> perform<00:03:41.480> this<00:03:41.930> multiplication

00:03:42.550 --> 00:03:42.560 
is how we perform this multiplication

00:03:42.560 --> 00:03:45.759 
is how we perform this multiplication
addition<00:03:43.370> subtraction<00:03:44.060> and<00:03:44.900> division<00:03:44.930> in

00:03:45.759 --> 00:03:45.769 
addition subtraction and division in

00:03:45.769 --> 00:03:48.100 
addition subtraction and division in
Java<00:03:46.070> so<00:03:46.730> now<00:03:47.060> you<00:03:47.120> guys<00:03:47.360> know<00:03:47.420> how<00:03:47.810> these

00:03:48.100 --> 00:03:48.110 
Java so now you guys know how these

00:03:48.110 --> 00:03:50.620 
Java so now you guys know how these
things<00:03:48.170> work<00:03:48.680> we<00:03:49.370> will<00:03:49.549> finish<00:03:49.790> this<00:03:50.030> tutorial

00:03:50.620 --> 00:03:50.630 
things work we will finish this tutorial

00:03:50.630 --> 00:03:52.960 
things work we will finish this tutorial
here<00:03:51.019> in<00:03:51.200> the<00:03:51.500> next<00:03:51.709> tutorial<00:03:51.950> I<00:03:52.459> will<00:03:52.519> teach

00:03:52.960 --> 00:03:52.970 
here in the next tutorial I will teach

00:03:52.970 --> 00:03:56.410 
here in the next tutorial I will teach
you<00:03:53.120> if<00:03:53.810> a<00:03:54.140> statement<00:03:54.709> so<00:03:55.610> this<00:03:56.060> was<00:03:56.239> really

00:03:56.410 --> 00:03:56.420 
you if a statement so this was really

00:03:56.420 --> 00:03:59.170 
you if a statement so this was really
short<00:03:56.690> tutorial<00:03:57.230> so<00:03:57.860> thanks<00:03:58.700> for<00:03:58.730> watching

00:03:59.170 --> 00:03:59.180 
short tutorial so thanks for watching

00:03:59.180 --> 00:04:01.720 
short tutorial so thanks for watching
please<00:03:59.540> rate<00:03:59.600> comment<00:04:00.140> and<00:04:00.470> subscribe<00:04:00.730> see

00:04:01.720 --> 00:04:01.730 
please rate comment and subscribe see

00:04:01.730 --> 00:04:10.950 
please rate comment and subscribe see
you<00:04:01.760> in<00:04:02.030> the<00:04:02.120> next<00:04:02.239> tutorial

00:04:10.950 --> 00:04:10.960 

00:04:10.960 --> 00:04:13.020 

you

