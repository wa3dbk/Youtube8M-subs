WEBVTT
Kind: captions
Language: en

00:00:00.860 --> 00:00:03.560 

all<00:00:01.860> right<00:00:02.070> so<00:00:02.370> I<00:00:02.610> was<00:00:03.090> going<00:00:03.240> to<00:00:03.330> make<00:00:03.449> this

00:00:03.560 --> 00:00:03.570 
all right so I was going to make this

00:00:03.570 --> 00:00:04.940 
all right so I was going to make this
amazing<00:00:04.080> video<00:00:04.319> that<00:00:04.350> would<00:00:04.620> have<00:00:04.710> dropped

00:00:04.940 --> 00:00:04.950 
amazing video that would have dropped

00:00:04.950 --> 00:00:06.650 
amazing video that would have dropped
your<00:00:05.190> average<00:00:05.520> is<00:00:05.670> about<00:00:05.790> like<00:00:05.910> 20<00:00:06.180> seconds<00:00:06.600> or

00:00:06.650 --> 00:00:06.660 
your average is about like 20 seconds or

00:00:06.660 --> 00:00:08.750 
your average is about like 20 seconds or
more<00:00:06.690> however<00:00:07.649> you<00:00:08.099> guys<00:00:08.220> made<00:00:08.429> it<00:00:08.460> clear<00:00:08.730> to

00:00:08.750 --> 00:00:08.760 
more however you guys made it clear to

00:00:08.760 --> 00:00:10.759 
more however you guys made it clear to
me<00:00:09.000> through<00:00:09.210> about<00:00:09.510> 20<00:00:10.019> comments<00:00:10.320> and<00:00:10.500> 50

00:00:10.759 --> 00:00:10.769 
me through about 20 comments and 50

00:00:10.769 --> 00:00:12.589 
me through about 20 comments and 50
private<00:00:11.040> messages<00:00:11.429> that<00:00:11.880> you<00:00:12.000> really<00:00:12.330> want<00:00:12.480> a

00:00:12.589 --> 00:00:12.599 
private messages that you really want a

00:00:12.599 --> 00:00:14.839 
private messages that you really want a
to<00:00:12.750> luck<00:00:12.929> PLL<00:00:13.320> video<00:00:13.590> so<00:00:14.429> therefore<00:00:14.820> I

00:00:14.839 --> 00:00:14.849 
to luck PLL video so therefore I

00:00:14.849 --> 00:00:16.340 
to luck PLL video so therefore I
abandoned<00:00:15.240> the<00:00:15.299> original<00:00:15.690> idea<00:00:15.929> and<00:00:16.139> I'll

00:00:16.340 --> 00:00:16.350 
abandoned the original idea and I'll

00:00:16.350 --> 00:00:19.359 
abandoned the original idea and I'll
tell<00:00:16.590> you<00:00:16.650> how<00:00:16.740> to<00:00:16.770> do<00:00:16.980> til<00:00:17.310> appeal<00:00:17.580> instead

00:00:19.359 --> 00:00:19.369 
tell you how to do til appeal instead

00:00:19.369 --> 00:00:22.040 
tell you how to do til appeal instead
okay<00:00:20.369> so<00:00:20.430> the<00:00:20.699> tool<00:00:20.910> appeal<00:00:21.240> is<00:00:21.449> real<00:00:21.689> just<00:00:21.840> way

00:00:22.040 --> 00:00:22.050 
okay so the tool appeal is real just way

00:00:22.050 --> 00:00:24.050 
okay so the tool appeal is real just way
of<00:00:22.140> doing<00:00:22.350> the<00:00:22.470> fridge<00:00:22.680> appeal<00:00:23.100> but<00:00:23.789> into

00:00:24.050 --> 00:00:24.060 
of doing the fridge appeal but into

00:00:24.060 --> 00:00:26.599 
of doing the fridge appeal but into
looks<00:00:24.300> or<00:00:24.510> two<00:00:24.840> steps<00:00:25.050> as<00:00:25.350> you<00:00:25.980> hopefully<00:00:26.310> know

00:00:26.599 --> 00:00:26.609 
looks or two steps as you hopefully know

00:00:26.609 --> 00:00:28.339 
looks or two steps as you hopefully know
the<00:00:26.730> project<00:00:26.910> feel<00:00:27.210> moves<00:00:27.599> the<00:00:27.720> cube<00:00:27.960> eats<00:00:28.140> on

00:00:28.339 --> 00:00:28.349 
the project feel moves the cube eats on

00:00:28.349 --> 00:00:30.500 
the project feel moves the cube eats on
the<00:00:28.529> last<00:00:28.769> layer<00:00:29.039> around<00:00:29.310> the<00:00:29.550> cube<00:00:29.820> after

00:00:30.500 --> 00:00:30.510 
the last layer around the cube after

00:00:30.510 --> 00:00:32.450 
the last layer around the cube after
they<00:00:30.960> are<00:00:31.050> all<00:00:31.230> oriented<00:00:31.769> so<00:00:32.130> like<00:00:32.279> here

00:00:32.450 --> 00:00:32.460 
they are all oriented so like here

00:00:32.460 --> 00:00:34.790 
they are all oriented so like here
they're<00:00:32.610> allele<00:00:33.140> anyway<00:00:34.140> so<00:00:34.559> I'll<00:00:34.649> now

00:00:34.790 --> 00:00:34.800 
they're allele anyway so I'll now

00:00:34.800 --> 00:00:36.319 
they're allele anyway so I'll now
describe<00:00:35.280> a<00:00:35.399> process<00:00:35.610> by<00:00:35.969> which<00:00:36.000> you<00:00:36.210> can

00:00:36.319 --> 00:00:36.329 
describe a process by which you can

00:00:36.329 --> 00:00:38.660 
describe a process by which you can
always<00:00:36.690> solve<00:00:36.899> your<00:00:37.079> PLL<00:00:37.530> case<00:00:38.129> and<00:00:38.430> two

00:00:38.660 --> 00:00:38.670 
always solve your PLL case and two

00:00:38.670 --> 00:00:41.150 
always solve your PLL case and two
algorithms<00:00:39.590> obviously<00:00:40.590> this<00:00:40.739> technique<00:00:41.070> is

00:00:41.150 --> 00:00:41.160 
algorithms obviously this technique is

00:00:41.160 --> 00:00:42.770 
algorithms obviously this technique is
slower<00:00:41.399> than<00:00:41.489> the<00:00:41.640> full<00:00:41.910> PLL<00:00:42.329> well<00:00:42.510> you<00:00:42.660> would

00:00:42.770 --> 00:00:42.780 
slower than the full PLL well you would

00:00:42.780 --> 00:00:44.569 
slower than the full PLL well you would
only<00:00:43.050> need<00:00:43.320> to<00:00:43.500> apply<00:00:43.890> a<00:00:43.920> single<00:00:44.219> algorithm

00:00:44.569 --> 00:00:44.579 
only need to apply a single algorithm

00:00:44.579 --> 00:00:46.970 
only need to apply a single algorithm
but<00:00:45.450> you<00:00:45.690> only<00:00:45.840> have<00:00:45.989> to<00:00:46.050> remember<00:00:46.200> six<00:00:46.530> cases

00:00:46.970 --> 00:00:46.980 
but you only have to remember six cases

00:00:46.980 --> 00:00:50.029 
but you only have to remember six cases
as<00:00:47.129> opposed<00:00:47.399> to<00:00:47.489> all<00:00:47.760> 21<00:00:48.180> cases<00:00:48.450> and<00:00:48.860> at<00:00:49.860> least

00:00:50.029 --> 00:00:50.039 
as opposed to all 21 cases and at least

00:00:50.039 --> 00:00:51.319 
as opposed to all 21 cases and at least
three<00:00:50.309> of<00:00:50.399> those<00:00:50.489> cases<00:00:50.850> you<00:00:50.940> already

00:00:51.319 --> 00:00:51.329 
three of those cases you already

00:00:51.329 --> 00:00:57.299 
three of those cases you already
probably<00:00:51.570> know

00:00:57.299 --> 00:00:57.309 

00:00:57.309 --> 00:00:59.010 

so<00:00:57.850> the<00:00:57.969> first<00:00:58.149> logarithm<00:00:58.420> you<00:00:58.660> need<00:00:58.809> to<00:00:58.899> know

00:00:59.010 --> 00:00:59.020 
so the first logarithm you need to know

00:00:59.020 --> 00:01:02.369 
so the first logarithm you need to know
is<00:00:59.170> the<00:00:59.289> clockwise<00:00:59.739> quarter<00:01:00.129> cycle<00:01:01.230> so<00:01:02.230> at

00:01:02.369 --> 00:01:02.379 
is the clockwise quarter cycle so at

00:01:02.379 --> 00:01:04.109 
is the clockwise quarter cycle so at
least<00:01:02.530> this<00:01:02.769> corner<00:01:03.070> loan<00:01:03.309> hold<00:01:03.850> it<00:01:03.940> like<00:01:04.089> this

00:01:04.109 --> 00:01:04.119 
least this corner loan hold it like this

00:01:04.119 --> 00:01:10.410 
least this corner loan hold it like this
and<00:01:04.500> you<00:01:05.500> go<00:01:05.680> X<00:01:06.270> R<00:01:07.270> prime<00:01:07.690> u<00:01:07.869> R<00:01:08.140> prime<00:01:08.530> D<00:01:09.070> to<00:01:09.310> R<00:01:09.580> u

00:01:10.410 --> 00:01:10.420 
and you go X R prime u R prime D to R u

00:01:10.420 --> 00:01:15.030 
and you go X R prime u R prime D to R u
prime<00:01:10.720> R<00:01:10.960> prime<00:01:10.990> D<00:01:11.650> to<00:01:11.890> R<00:01:12.159> to<00:01:12.549> the<00:01:14.040> next

00:01:15.030 --> 00:01:15.040 
prime R prime D to R to the next

00:01:15.040 --> 00:01:16.139 
prime R prime D to R to the next
algorithm<00:01:15.250> you<00:01:15.520> need<00:01:15.640> to<00:01:15.729> know<00:01:15.850> is<00:01:16.030> the

00:01:16.139 --> 00:01:16.149 
algorithm you need to know is the

00:01:16.149 --> 00:01:18.540 
algorithm you need to know is the
clockwise<00:01:16.630> edge<00:01:16.990> cycle<00:01:17.530> it<00:01:17.950> leaves<00:01:18.190> this<00:01:18.369> edge

00:01:18.540 --> 00:01:18.550 
clockwise edge cycle it leaves this edge

00:01:18.550 --> 00:01:22.830 
clockwise edge cycle it leaves this edge
alone<00:01:19.950> rotates<00:01:20.950> these<00:01:21.100> clockwise<00:01:21.759> but<00:01:22.630> like

00:01:22.830 --> 00:01:22.840 
alone rotates these clockwise but like

00:01:22.840 --> 00:01:26.910 
alone rotates these clockwise but like
so<00:01:23.130> r2<00:01:24.130> u<00:01:24.310> R<00:01:24.549> u<00:01:25.060> R<00:01:25.299> a<00:01:25.330> prime<00:01:25.570> u<00:01:25.720> prime<00:01:25.750> R<00:01:26.229> prime<00:01:26.470> u

00:01:26.910 --> 00:01:26.920 
so r2 u R u R a prime u prime R prime u

00:01:26.920 --> 00:01:31.919 
so r2 u R u R a prime u prime R prime u
prime<00:01:26.950> R<00:01:27.460> prime<00:01:27.520> u<00:01:28.450> R<00:01:28.869> prime<00:01:30.509> ok<00:01:31.509> you<00:01:31.570> need<00:01:31.810> to

00:01:31.919 --> 00:01:31.929 
prime R prime u R prime ok you need to

00:01:31.929 --> 00:01:33.570 
prime R prime u R prime ok you need to
know<00:01:32.020> the<00:01:32.200> color<00:01:32.410> clockwise<00:01:32.860> edge<00:01:33.130> cycle<00:01:33.520> as

00:01:33.570 --> 00:01:33.580 
know the color clockwise edge cycle as

00:01:33.580 --> 00:01:36.690 
know the color clockwise edge cycle as
well<00:01:33.789> and<00:01:34.179> leave<00:01:34.360> this<00:01:34.539> edge<00:01:34.720> alone<00:01:35.130> are<00:01:36.130> u

00:01:36.690 --> 00:01:36.700 
well and leave this edge alone are u

00:01:36.700 --> 00:01:39.840 
well and leave this edge alone are u
prime<00:01:37.000> R<00:01:37.270> u<00:01:37.600> R<00:01:37.899> u<00:01:38.320> R<00:01:38.619> u<00:01:39.009> prime<00:01:39.250> R<00:01:39.460> prime<00:01:39.490> u<00:01:39.820> prime

00:01:39.840 --> 00:01:39.850 
prime R u R u R u prime R prime u prime

00:01:39.850 --> 00:01:43.200 
prime R u R u R u prime R prime u prime
marching<00:01:41.429> ok<00:01:42.429> we<00:01:42.580> are<00:01:42.610> now<00:01:42.789> getting<00:01:42.940> to<00:01:43.090> the

00:01:43.200 --> 00:01:43.210 
marching ok we are now getting to the

00:01:43.210 --> 00:01:46.290 
marching ok we are now getting to the
algorithms<00:01:43.600> that<00:01:43.690> you<00:01:43.840> may<00:01:43.960> not<00:01:44.200> know<00:01:45.119> the<00:01:46.119> H

00:01:46.290 --> 00:01:46.300 
algorithms that you may not know the H

00:01:46.300 --> 00:01:47.940 
algorithms that you may not know the H
permutation<00:01:46.929> swaps<00:01:47.380> these<00:01:47.590> two<00:01:47.740> and<00:01:47.860> these

00:01:47.940 --> 00:01:47.950 
permutation swaps these two and these

00:01:47.950 --> 00:01:53.669 
permutation swaps these two and these
two<00:01:48.009> and<00:01:48.810> two<00:01:49.810> you<00:01:50.140> m2<00:01:51.069> u2<00:01:51.399> and<00:01:51.940> to<00:01:52.479> you<00:01:52.899> and<00:01:53.110> two

00:01:53.669 --> 00:01:53.679 
two and two you m2 u2 and to you and two

00:01:53.679 --> 00:01:56.040 
two and two you m2 u2 and to you and two
I'm<00:01:54.429> doing<00:01:54.729> the<00:01:54.850> MS<00:01:55.149> with<00:01:55.330> my<00:01:55.479> fingers<00:01:55.840> like

00:01:56.040 --> 00:01:56.050 
I'm doing the MS with my fingers like

00:01:56.050 --> 00:01:59.100 
I'm doing the MS with my fingers like
that<00:01:57.479> okay<00:01:58.479> we<00:01:58.659> have<00:01:58.810> the<00:01:58.899> very

00:01:59.100 --> 00:01:59.110 
that okay we have the very

00:01:59.110 --> 00:02:02.310 
that okay we have the very
similar-looking<00:01:59.560> set<00:02:00.310> permutation<00:02:01.229> so<00:02:02.229> at

00:02:02.310 --> 00:02:02.320 
similar-looking set permutation so at

00:02:02.320 --> 00:02:07.109 
similar-looking set permutation so at
least<00:02:02.500> least<00:02:02.829> or<00:02:03.369> like<00:02:03.670> so<00:02:03.960> m2<00:02:04.960> u<00:02:05.229> m2<00:02:05.680> u<00:02:06.340> and

00:02:07.109 --> 00:02:07.119 
least least or like so m2 u m2 u and

00:02:07.119 --> 00:02:12.440 
least least or like so m2 u m2 u and
prime<00:02:07.540> u<00:02:07.780> 2<00:02:08.019> and<00:02:08.290> 2<00:02:08.649> u<00:02:08.979> 2<00:02:09.220> and<00:02:09.489> prime<00:02:09.880> u<00:02:10.090> 2<00:02:10.380> and

00:02:12.440 --> 00:02:12.450 
prime u 2 and 2 u 2 and prime u 2 and

00:02:12.450 --> 00:02:16.350 
prime u 2 and 2 u 2 and prime u 2 and
finally<00:02:13.450> we<00:02:14.079> have<00:02:14.320> the<00:02:14.530> e<00:02:14.739> permutation<00:02:15.489> it

00:02:16.350 --> 00:02:16.360 
finally we have the e permutation it

00:02:16.360 --> 00:02:19.350 
finally we have the e permutation it
swaps<00:02:16.690> the<00:02:16.959> soon<00:02:17.320> andis<00:02:17.769> to<00:02:18.090> hold<00:02:19.090> it<00:02:19.209> like

00:02:19.350 --> 00:02:19.360 
swaps the soon andis to hold it like

00:02:19.360 --> 00:02:24.720 
swaps the soon andis to hold it like
this<00:02:19.540> X<00:02:19.900> prime<00:02:20.519> R<00:02:21.519> u<00:02:22.000> prime<00:02:22.329> R<00:02:22.570> prime<00:02:22.600> V<00:02:23.320> R<00:02:23.620> u<00:02:24.489> R

00:02:24.720 --> 00:02:24.730 
this X prime R u prime R prime V R u R

00:02:24.730 --> 00:02:31.199 
this X prime R u prime R prime V R u R
prime<00:02:25.320> small<00:02:26.320> u2<00:02:27.030> r<00:02:28.030> prime<00:02:28.359> u<00:02:28.630> r<00:02:28.900> d<00:02:29.829> r<00:02:30.760> prime<00:02:31.030> u

00:02:31.199 --> 00:02:31.209 
prime small u2 r prime u r d r prime u

00:02:31.209 --> 00:02:35.160 
prime small u2 r prime u r d r prime u
prime<00:02:31.269> R<00:02:33.239> ok<00:02:34.239> now<00:02:34.359> that<00:02:34.420> the<00:02:34.600> boring<00:02:34.870> stuff<00:02:34.959> is

00:02:35.160 --> 00:02:35.170 
prime R ok now that the boring stuff is

00:02:35.170 --> 00:02:36.390 
prime R ok now that the boring stuff is
out<00:02:35.320> of<00:02:35.410> the<00:02:35.500> way<00:02:35.620> we<00:02:35.799> can<00:02:35.950> get<00:02:36.070> to<00:02:36.160> the<00:02:36.250> fun

00:02:36.390 --> 00:02:36.400 
out of the way we can get to the fun

00:02:36.400 --> 00:02:38.310 
out of the way we can get to the fun
I'll<00:02:36.880> show<00:02:37.329> you<00:02:37.420> how<00:02:37.600> to<00:02:37.630> use<00:02:37.870> those<00:02:38.049> six

00:02:38.310 --> 00:02:38.320 
I'll show you how to use those six

00:02:38.320 --> 00:02:40.259 
I'll show you how to use those six
algorithms<00:02:38.769> to<00:02:38.950> solve<00:02:39.100> any<00:02:39.430> PLL<00:02:39.910> that<00:02:40.030> you<00:02:40.120> can

00:02:40.259 --> 00:02:40.269 
algorithms to solve any PLL that you can

00:02:40.269 --> 00:02:43.680 
algorithms to solve any PLL that you can
run<00:02:40.390> into<00:02:40.680> so<00:02:41.680> here<00:02:41.980> we<00:02:42.160> have<00:02:42.250> a<00:02:42.280> PLL<00:02:42.700> what

00:02:43.680 --> 00:02:43.690 
run into so here we have a PLL what

00:02:43.690 --> 00:02:45.539 
run into so here we have a PLL what
you're<00:02:43.870> going<00:02:44.019> to<00:02:44.079> do<00:02:44.260> is<00:02:44.470> you're<00:02:45.310> going<00:02:45.340> to

00:02:45.539 --> 00:02:45.549 
you're going to do is you're going to

00:02:45.549 --> 00:02:48.630 
you're going to do is you're going to
try<00:02:45.790> to<00:02:45.850> find<00:02:46.090> two<00:02:46.480> similar<00:02:47.320> color<00:02:47.890> stickers

00:02:48.630 --> 00:02:48.640 
try to find two similar color stickers

00:02:48.640 --> 00:02:51.360 
try to find two similar color stickers
on<00:02:48.880> these<00:02:49.120> two<00:02:49.269> positions<00:02:49.690> so<00:02:49.840> red<00:02:50.590> green<00:02:50.950> do

00:02:51.360 --> 00:02:51.370 
on these two positions so red green do

00:02:51.370 --> 00:02:52.020 
on these two positions so red green do
not<00:02:51.519> match

00:02:52.020 --> 00:02:52.030 
not match

00:02:52.030 --> 00:02:56.220 
not match
orange<00:02:52.930> red<00:02:53.170> do<00:02:53.769> not<00:02:53.950> match<00:02:54.390> green<00:02:55.390> orange<00:02:55.989> do

00:02:56.220 --> 00:02:56.230 
orange red do not match green orange do

00:02:56.230 --> 00:02:58.920 
orange red do not match green orange do
not<00:02:56.350> match<00:02:56.590> blue<00:02:57.130> and<00:02:57.310> blue<00:02:57.489> match<00:02:57.880> put<00:02:58.780> those

00:02:58.920 --> 00:02:58.930 
not match blue and blue match put those

00:02:58.930 --> 00:03:01.020 
not match blue and blue match put those
two<00:02:59.170> that<00:02:59.350> match<00:02:59.560> in<00:02:59.890> the<00:03:00.100> back<00:03:00.310> and<00:03:00.609> do<00:03:00.910> the

00:03:01.020 --> 00:03:01.030 
two that match in the back and do the

00:03:01.030 --> 00:03:02.729 
two that match in the back and do the
first<00:03:01.180> algorithm<00:03:01.480> that<00:03:01.750> I<00:03:01.810> showed<00:03:02.079> you<00:03:02.109> the

00:03:02.729 --> 00:03:02.739 
first algorithm that I showed you the

00:03:02.739 --> 00:03:06.020 
first algorithm that I showed you the
corner<00:03:03.250> three<00:03:03.940> cycle<00:03:04.329> clockwise<00:03:04.989> so

00:03:06.020 --> 00:03:06.030 
corner three cycle clockwise so

00:03:06.030 --> 00:03:10.880 
corner three cycle clockwise so
we<00:03:06.480> do<00:03:06.630> X<00:03:06.900> R<00:03:07.800> prime<00:03:08.310> u<00:03:08.550> R<00:03:08.790> prime<00:03:09.270> D<00:03:09.570> to<00:03:09.780> R<00:03:10.050> u<00:03:10.620> prime

00:03:10.880 --> 00:03:10.890 
we do X R prime u R prime D to R u prime

00:03:10.890 --> 00:03:14.810 
we do X R prime u R prime D to R u prime
R<00:03:11.130> prime<00:03:11.160> D<00:03:11.670> to<00:03:11.880> R<00:03:12.090> to<00:03:12.800> actually<00:03:13.800> do<00:03:13.950> this<00:03:14.100> you

00:03:14.810 --> 00:03:14.820 
R prime D to R to actually do this you

00:03:14.820 --> 00:03:16.250 
R prime D to R to actually do this you
are<00:03:14.940> guaranteed<00:03:15.360> to<00:03:15.390> run<00:03:15.660> into<00:03:15.930> one<00:03:16.050> of<00:03:16.080> the

00:03:16.250 --> 00:03:16.260 
are guaranteed to run into one of the

00:03:16.260 --> 00:03:17.630 
are guaranteed to run into one of the
six<00:03:16.500> algorithms<00:03:16.860> that<00:03:17.010> I<00:03:17.070> already<00:03:17.430> show<00:03:17.580> you

00:03:17.630 --> 00:03:17.640 
six algorithms that I already show you

00:03:17.640 --> 00:03:20.570 
six algorithms that I already show you
so<00:03:18.480> this<00:03:18.840> is<00:03:18.900> the<00:03:19.200> edge<00:03:19.440> cycle<00:03:19.860> clockwise<00:03:20.250> I

00:03:20.570 --> 00:03:20.580 
so this is the edge cycle clockwise I

00:03:20.580 --> 00:03:22.850 
so this is the edge cycle clockwise I
showed<00:03:21.390> you<00:03:21.510> how<00:03:21.660> to<00:03:21.690> show<00:03:22.050> how<00:03:22.410> to<00:03:22.470> solve<00:03:22.680> it

00:03:22.850 --> 00:03:22.860 
showed you how to show how to solve it

00:03:22.860 --> 00:03:27.380 
showed you how to show how to solve it
and<00:03:23.570> that's<00:03:24.570> it<00:03:24.720> to<00:03:24.930> all<00:03:25.020> games<00:03:26.150> ok<00:03:27.150> there<00:03:27.330> is

00:03:27.380 --> 00:03:27.390 
and that's it to all games ok there is

00:03:27.390 --> 00:03:28.370 
and that's it to all games ok there is
only<00:03:27.540> one<00:03:27.840> catch

00:03:28.370 --> 00:03:28.380 
only one catch

00:03:28.380 --> 00:03:30.880 
only one catch
it<00:03:28.740> may<00:03:28.950> happen<00:03:29.310> that<00:03:29.340> you<00:03:29.700> do<00:03:29.880> not<00:03:30.060> find

00:03:30.880 --> 00:03:30.890 
it may happen that you do not find

00:03:30.890 --> 00:03:33.110 
it may happen that you do not find
matching<00:03:31.890> sticker<00:03:32.190> colors<00:03:32.610> on<00:03:32.880> these

00:03:33.110 --> 00:03:33.120 
matching sticker colors on these

00:03:33.120 --> 00:03:36.440 
matching sticker colors on these
dispositions<00:03:33.720> in<00:03:34.640> that<00:03:35.640> case<00:03:35.850> just<00:03:36.150> hold<00:03:36.360> the

00:03:36.440 --> 00:03:36.450 
dispositions in that case just hold the

00:03:36.450 --> 00:03:38.300 
dispositions in that case just hold the
cube<00:03:36.660> in<00:03:36.750> any<00:03:36.900> way<00:03:37.020> you<00:03:37.080> like<00:03:37.290> and<00:03:37.470> apply<00:03:37.740> the<00:03:37.830> D

00:03:38.300 --> 00:03:38.310 
cube in any way you like and apply the D

00:03:38.310 --> 00:03:39.680 
cube in any way you like and apply the D
permutation<00:03:38.820> that's<00:03:39.000> what<00:03:39.180> else<00:03:39.270> these<00:03:39.480> two

00:03:39.680 --> 00:03:39.690 
permutation that's what else these two

00:03:39.690 --> 00:03:41.270 
permutation that's what else these two
corners<00:03:39.900> and<00:03:40.140> these<00:03:40.260> two<00:03:40.440> I<00:03:40.620> showed<00:03:41.010> it<00:03:41.130> to<00:03:41.220> you

00:03:41.270 --> 00:03:41.280 
corners and these two I showed it to you

00:03:41.280 --> 00:03:44.150 
corners and these two I showed it to you
it<00:03:41.459> was<00:03:41.550> one<00:03:41.700> of<00:03:41.730> the<00:03:41.880> six<00:03:42.090> algorithms<00:03:42.830> X<00:03:43.830> prime

00:03:44.150 --> 00:03:44.160 
it was one of the six algorithms X prime

00:03:44.160 --> 00:03:49.729 
it was one of the six algorithms X prime
R<00:03:44.850> prime<00:03:44.910> R<00:03:45.780> prime<00:03:45.840> D<00:03:46.350> R<00:03:46.709> u<00:03:47.220> R<00:03:47.489> prime<00:03:47.910> small<00:03:48.660> u2<00:03:48.959> r

00:03:49.729 --> 00:03:49.739 
R prime R prime D R u R prime small u2 r

00:03:49.739 --> 00:03:54.320 
R prime R prime D R u R prime small u2 r
prime<00:03:50.070> u<00:03:50.400> Rd<00:03:51.150> our<00:03:51.540> prime<00:03:52.500> u<00:03:52.739> prime<00:03:52.770> R<00:03:53.330> once

00:03:54.320 --> 00:03:54.330 
prime u Rd our prime u prime R once

00:03:54.330 --> 00:03:56.060 
prime u Rd our prime u prime R once
again<00:03:54.630> you<00:03:54.840> are<00:03:54.870> guaranteed<00:03:55.320> to<00:03:55.350> run<00:03:55.680> into<00:03:55.950> one

00:03:56.060 --> 00:03:56.070 
again you are guaranteed to run into one

00:03:56.070 --> 00:03:57.500 
again you are guaranteed to run into one
of<00:03:56.160> the<00:03:56.250> six<00:03:56.489> algorithms<00:03:57.000> that<00:03:57.209> I<00:03:57.270> showed<00:03:57.480> you

00:03:57.500 --> 00:03:57.510 
of the six algorithms that I showed you

00:03:57.510 --> 00:03:59.900 
of the six algorithms that I showed you
just<00:03:57.810> so<00:03:58.530> this<00:03:58.800> one<00:03:59.040> I<00:03:59.190> showed<00:03:59.459> you<00:03:59.489> how<00:03:59.670> to<00:03:59.730> do

00:03:59.900 --> 00:03:59.910 
just so this one I showed you how to do

00:03:59.910 --> 00:04:03.890 
just so this one I showed you how to do
it<00:04:00.000> and<00:04:00.770> that's<00:04:01.770> it<00:04:02.360> lastly<00:04:03.360> for<00:04:03.570> the<00:04:03.690> sake<00:04:03.870> of

00:04:03.890 --> 00:04:03.900 
it and that's it lastly for the sake of

00:04:03.900 --> 00:04:05.330 
it and that's it lastly for the sake of
completeness<00:04:04.290> I'm<00:04:04.650> going<00:04:04.830> to<00:04:04.920> mention<00:04:05.100> that

00:04:05.330 --> 00:04:05.340 
completeness I'm going to mention that

00:04:05.340 --> 00:04:08.540 
completeness I'm going to mention that
if<00:04:06.330> all<00:04:06.840> your<00:04:07.140> stickers<00:04:07.530> here<00:04:07.739> match<00:04:07.950> that's

00:04:08.540 --> 00:04:08.550 
if all your stickers here match that's

00:04:08.550 --> 00:04:10.699 
if all your stickers here match that's
because<00:04:09.060> all<00:04:09.300> the<00:04:09.330> corners<00:04:09.720> are<00:04:09.900> already<00:04:10.410> sold

00:04:10.699 --> 00:04:10.709 
because all the corners are already sold

00:04:10.709 --> 00:04:13.479 
because all the corners are already sold
and<00:04:11.040> you<00:04:11.790> know<00:04:11.940> all<00:04:12.150> the<00:04:12.299> possible<00:04:12.870> edge<00:04:13.049> cases

00:04:13.479 --> 00:04:13.489 
and you know all the possible edge cases

00:04:13.489 --> 00:04:16.490 
and you know all the possible edge cases
so<00:04:14.489> in<00:04:15.209> that<00:04:15.480> case<00:04:15.720> it's<00:04:15.959> only<00:04:16.080> one<00:04:16.290> single

00:04:16.490 --> 00:04:16.500 
so in that case it's only one single

00:04:16.500 --> 00:04:19.210 
so in that case it's only one single
logarithm

00:04:19.210 --> 00:04:19.220 

00:04:19.220 --> 00:04:21.320 

okay<00:04:20.220> that's<00:04:20.400> all<00:04:20.519> there<00:04:20.700> is<00:04:20.729> to<00:04:20.910> know<00:04:21.090> about

00:04:21.320 --> 00:04:21.330 
okay that's all there is to know about

00:04:21.330 --> 00:04:24.170 
okay that's all there is to know about
the<00:04:21.780> Toolik<00:04:22.080> PLL<00:04:22.470> those<00:04:23.430> six<00:04:23.700> cases<00:04:24.030> will

00:04:24.170 --> 00:04:24.180 
the Toolik PLL those six cases will

00:04:24.180 --> 00:04:25.250 
the Toolik PLL those six cases will
guarantee<00:04:24.450> that<00:04:24.600> you<00:04:24.840> solved<00:04:25.110> the<00:04:25.200> entire

00:04:25.250 --> 00:04:25.260 
guarantee that you solved the entire

00:04:25.260 --> 00:04:28.310 
guarantee that you solved the entire
pillow<00:04:25.620> in<00:04:25.919> too<00:04:26.370> fast<00:04:26.610> algorithms<00:04:27.120> I<00:04:27.330> hope<00:04:28.169> I

00:04:28.310 --> 00:04:28.320 
pillow in too fast algorithms I hope I

00:04:28.320 --> 00:04:29.630 
pillow in too fast algorithms I hope I
did<00:04:28.500> not<00:04:28.530> discourage<00:04:29.040> you<00:04:29.130> from<00:04:29.160> learning<00:04:29.610> the

00:04:29.630 --> 00:04:29.640 
did not discourage you from learning the

00:04:29.640 --> 00:04:31.610 
did not discourage you from learning the
phobia<00:04:30.030> I<00:04:30.330> cannot<00:04:30.840> stress<00:04:31.020> enough<00:04:31.110> that<00:04:31.380> the

00:04:31.610 --> 00:04:31.620 
phobia I cannot stress enough that the

00:04:31.620 --> 00:04:33.110 
phobia I cannot stress enough that the
torque<00:04:31.860> PLO<00:04:32.220> should<00:04:32.430> only<00:04:32.580> be<00:04:32.729> viewed<00:04:32.940> as<00:04:33.090> a

00:04:33.110 --> 00:04:33.120 
torque PLO should only be viewed as a

00:04:33.120 --> 00:04:35.090 
torque PLO should only be viewed as a
temporary<00:04:33.510> stage<00:04:33.840> you<00:04:34.380> really<00:04:34.650> want<00:04:34.800> to<00:04:34.919> learn

00:04:35.090 --> 00:04:35.100 
temporary stage you really want to learn

00:04:35.100 --> 00:04:38.210 
temporary stage you really want to learn
those<00:04:35.280> pills<00:04:35.610> for<00:04:35.940> two<00:04:36.120> reasons<00:04:36.510> a<00:04:36.740> about<00:04:37.740> 15

00:04:38.210 --> 00:04:38.220 
those pills for two reasons a about 15

00:04:38.220 --> 00:04:40.490 
those pills for two reasons a about 15
of<00:04:38.310> them<00:04:38.460> are<00:04:38.640> really<00:04:38.790> easy<00:04:39.030> and<00:04:39.330> B<00:04:39.780> they<00:04:40.350> will

00:04:40.490 --> 00:04:40.500 
of them are really easy and B they will

00:04:40.500 --> 00:04:44.120 
of them are really easy and B they will
speed<00:04:40.680> you<00:04:40.770> up<00:04:41.720> so<00:04:42.720> that's<00:04:43.169> it<00:04:43.350> for<00:04:43.440> now<00:04:43.500> all

00:04:44.120 --> 00:04:44.130 
speed you up so that's it for now all

00:04:44.130 --> 00:04:52.640 
speed you up so that's it for now all
right

00:04:52.640 --> 00:04:52.650 

00:04:52.650 --> 00:04:54.710 

you

