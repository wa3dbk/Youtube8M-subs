WEBVTT
Kind: captions
Language: en

00:00:02.190 --> 00:00:05.840 

or<00:00:02.760> other<00:00:03.090> side<00:00:03.510> I<00:00:03.750> don't<00:00:04.200> know<00:00:04.319> Oh<00:00:04.529> at<00:00:05.490> least

00:00:05.840 --> 00:00:05.850 
or other side I don't know Oh at least

00:00:05.850 --> 00:00:09.740 
or other side I don't know Oh at least
they're<00:00:06.210> not<00:00:06.240> floats<00:00:06.980> so<00:00:07.980> yeah<00:00:08.750> those

00:00:09.740 --> 00:00:09.750 
they're not floats so yeah those

00:00:09.750 --> 00:00:12.879 
they're not floats so yeah those
integers<00:00:10.230> are<00:00:10.619> all<00:00:11.039> you<00:00:11.280> can<00:00:11.490> save<00:00:11.760> in<00:00:12.000> there

00:00:12.879 --> 00:00:12.889 
integers are all you can save in there

00:00:12.889 --> 00:00:20.560 
integers are all you can save in there
so<00:00:13.889> let's<00:00:14.549> just<00:00:14.879> say<00:00:15.180> we<00:00:15.629> used<00:00:15.930> move<00:00:17.660> good

00:00:20.560 --> 00:00:20.570 
so let's just say we used move good

00:00:20.570 --> 00:00:24.320 
so let's just say we used move good
shall<00:00:21.570> I<00:00:21.600> use<00:00:21.930> the<00:00:22.140> mnemonics<00:00:22.770> now<00:00:23.000> let's<00:00:24.000> just

00:00:24.320 --> 00:00:24.330 
shall I use the mnemonics now let's just

00:00:24.330 --> 00:00:30.250 
shall I use the mnemonics now let's just
say<00:00:24.630> we<00:00:25.110> told<00:00:25.680> the<00:00:26.300> CPU<00:00:27.300> to<00:00:27.990> move<00:00:28.590> the<00:00:29.039> value<00:00:29.550> to

00:00:30.250 --> 00:00:30.260 
say we told the CPU to move the value to

00:00:30.260 --> 00:00:36.680 
say we told the CPU to move the value to
into<00:00:31.759> Rho<00:00:32.759> Ram<00:00:33.629> space<00:00:33.930> 1<00:00:34.550> so<00:00:35.550> we<00:00:35.999> put<00:00:36.300> two<00:00:36.659> of

00:00:36.680 --> 00:00:36.690 
into Rho Ram space 1 so we put two of

00:00:36.690 --> 00:00:40.279 
into Rho Ram space 1 so we put two of
these<00:00:36.809> cans<00:00:37.320> on<00:00:37.559> there<00:00:37.739> and<00:00:38.120> there<00:00:39.120> they<00:00:39.809> said

00:00:40.279 --> 00:00:40.289 
these cans on there and there they said

00:00:40.289 --> 00:00:43.840 
these cans on there and there they said
they're<00:00:40.469> stored<00:00:40.859> for<00:00:41.100> later<00:00:41.249> use<00:00:42.050> if<00:00:43.050> we<00:00:43.440> add

00:00:43.840 --> 00:00:43.850 
they're stored for later use if we add

00:00:43.850 --> 00:00:49.009 
they're stored for later use if we add
two<00:00:44.850> of<00:00:45.030> them<00:00:45.979> or<00:00:46.979> let's<00:00:47.909> say<00:00:48.120> we<00:00:48.359> add<00:00:48.479> one<00:00:48.510> we

00:00:49.009 --> 00:00:49.019 
two of them or let's say we add one we

00:00:49.019 --> 00:00:51.500 
two of them or let's say we add one we
have<00:00:49.140> three<00:00:49.409> in<00:00:49.559> there<00:00:49.769> of<00:00:49.920> course<00:00:50.129> but<00:00:50.399> if<00:00:51.149> we

00:00:51.500 --> 00:00:51.510 
have three in there of course but if we

00:00:51.510 --> 00:00:55.250 
have three in there of course but if we
use<00:00:51.749> the<00:00:52.109> retail<00:00:52.829> of<00:00:53.100> CPU<00:00:53.550> to<00:00:53.760> move<00:00:54.059> stuff<00:00:55.019> in

00:00:55.250 --> 00:00:55.260 
use the retail of CPU to move stuff in

00:00:55.260 --> 00:01:00.410 
use the retail of CPU to move stuff in
there<00:00:55.530> again<00:00:56.989> we<00:00:57.989> will<00:00:58.199> of<00:00:58.530> course<00:00:58.760> run<00:00:59.760> into

00:01:00.410 --> 00:01:00.420 
there again we will of course run into

00:01:00.420 --> 00:01:03.829 
there again we will of course run into
trouble<00:01:01.409> if<00:01:01.620> we<00:01:01.649> expected<00:01:02.339> it<00:01:02.429> to<00:01:02.729> be<00:01:02.839> three

00:01:03.829 --> 00:01:03.839 
trouble if we expected it to be three

00:01:03.839 --> 00:01:07.910 
trouble if we expected it to be three
because<00:01:04.799> it's<00:01:05.010> not<00:01:05.720> going<00:01:06.720> to<00:01:06.990> empty<00:01:07.530> its

00:01:07.910 --> 00:01:07.920 
because it's not going to empty its

00:01:07.920 --> 00:01:12.280 
because it's not going to empty its
memory<00:01:08.370> space<00:01:09.050> I'm<00:01:10.050> sorry<00:01:10.350> drastically<00:01:11.280> and

00:01:12.280 --> 00:01:12.290 
memory space I'm sorry drastically and

00:01:12.290 --> 00:01:18.380 
memory space I'm sorry drastically and
then<00:01:13.290> going<00:01:13.680> to<00:01:13.830> put<00:01:14.420> yeah<00:01:15.420> one<00:01:15.960> in<00:01:16.110> there<00:01:17.390> so

00:01:18.380 --> 00:01:18.390 
then going to put yeah one in there so

00:01:18.390 --> 00:01:23.140 
then going to put yeah one in there so
we<00:01:19.290> always<00:01:19.860> need<00:01:20.610> to<00:01:20.790> tell<00:01:21.150> those<00:01:21.420> the<00:01:22.350> setcpu

00:01:23.140 --> 00:01:23.150 
we always need to tell those the setcpu

00:01:23.150 --> 00:01:28.370 
we always need to tell those the setcpu
CPU<00:01:25.400> exactly<00:01:26.400> what<00:01:26.790> to<00:01:27.060> do<00:01:27.240> the<00:01:27.420> CPU<00:01:27.840> is<00:01:28.110> not

00:01:28.370 --> 00:01:28.380 
CPU exactly what to do the CPU is not

00:01:28.380 --> 00:01:32.150 
CPU exactly what to do the CPU is not
going<00:01:28.620> to<00:01:28.830> do<00:01:29.340> anything<00:01:29.850> of<00:01:30.300> its<00:01:30.510> own<00:01:31.160> except

00:01:32.150 --> 00:01:32.160 
going to do anything of its own except

00:01:32.160 --> 00:01:35.510 
going to do anything of its own except
controlling<00:01:32.760> the<00:01:32.940> program<00:01:33.450> flow<00:01:34.100> yeah<00:01:35.100> let's

00:01:35.510 --> 00:01:35.520 
controlling the program flow yeah let's

00:01:35.520 --> 00:01:39.080 
controlling the program flow yeah let's
talk<00:01:35.790> about<00:01:36.000> the<00:01:36.330> program<00:01:36.780> flow<00:01:38.090> script

00:01:39.080 --> 00:01:39.090 
talk about the program flow script

00:01:39.090 --> 00:01:42.290 
talk about the program flow script
commands<00:01:39.750> in<00:01:40.050> the<00:01:40.110> CPU<00:01:40.800> of<00:01:41.040> written<00:01:41.490> in<00:01:41.700> order

00:01:42.290 --> 00:01:42.300 
commands in the CPU of written in order

00:01:42.300 --> 00:01:48.230 
commands in the CPU of written in order
from<00:01:42.570> top<00:01:43.230> to<00:01:43.260> down<00:01:43.410> we<00:01:44.250> have<00:01:44.610> some<00:01:45.060> handy<00:01:47.240> code

00:01:48.230 --> 00:01:48.240 
from top to down we have some handy code

00:01:48.240 --> 00:01:54.170 
from top to down we have some handy code
editor<00:01:48.780> here<00:01:49.940> well<00:01:50.940> yeah<00:01:51.390> if<00:01:51.690> we<00:01:52.700> write<00:01:53.700> stuff

00:01:54.170 --> 00:01:54.180 
editor here well yeah if we write stuff

00:01:54.180 --> 00:01:59.000 
editor here well yeah if we write stuff
here<00:01:55.370> then<00:01:56.420> if<00:01:57.420> that's<00:01:58.230> loaded<00:01:58.740> into<00:01:58.890> the

00:01:59.000 --> 00:01:59.010 
here then if that's loaded into the

00:01:59.010 --> 00:02:02.300 
here then if that's loaded into the
compiler<00:01:59.490> the<00:01:59.730> compilers<00:02:00.330> 2<00:02:00.780> is<00:02:01.320> going<00:02:02.130> to

00:02:02.300 --> 00:02:02.310 
compiler the compilers 2 is going to

00:02:02.310 --> 00:02:06.970 
compiler the compilers 2 is going to
begin<00:02:02.460> up<00:02:02.820> here<00:02:03.210> and<00:02:03.360> to<00:02:04.050> end<00:02:04.400> down<00:02:05.400> here<00:02:05.960> this

00:02:06.970 --> 00:02:06.980 
begin up here and to end down here this

00:02:06.980 --> 00:02:12.980 
begin up here and to end down here this
highly<00:02:08.420> differs<00:02:09.420> from<00:02:09.899> the<00:02:10.019> way<00:02:11.810> expression<00:02:12.810> 2

00:02:12.980 --> 00:02:12.990 
highly differs from the way expression 2

00:02:12.990 --> 00:02:15.950 
highly differs from the way expression 2
handles<00:02:13.500> its<00:02:13.710> code<00:02:13.980> if<00:02:14.220> an<00:02:14.880> expression

00:02:15.950 --> 00:02:15.960 
handles its code if an expression

00:02:15.960 --> 00:02:21.440 
handles its code if an expression
too<00:02:16.350> we<00:02:16.800> have<00:02:17.250> a<00:02:17.670> variable<00:02:18.450> a<00:02:18.780> that<00:02:19.590> is<00:02:20.120> set<00:02:21.120> to

00:02:21.440 --> 00:02:21.450 
too we have a variable a that is set to

00:02:21.450 --> 00:02:28.760 
too we have a variable a that is set to
its<00:02:21.900> value<00:02:23.750> plus<00:02:24.750> 1<00:02:25.880> then<00:02:26.880> the<00:02:27.540> then<00:02:28.440> by

00:02:28.760 --> 00:02:28.770 
its value plus 1 then the then by

00:02:28.770 --> 00:02:31.880 
its value plus 1 then the then by
standard<00:02:29.360> whenever<00:02:30.360> someone<00:02:31.080> of<00:02:31.230> the<00:02:31.380> inputs

00:02:31.880 --> 00:02:31.890 
standard whenever someone of the inputs

00:02:31.890 --> 00:02:35.210 
standard whenever someone of the inputs
change<00:02:32.820> this<00:02:33.480> is<00:02:33.750> going<00:02:34.020> to<00:02:34.200> be<00:02:34.350> executed

00:02:35.210 --> 00:02:35.220 
change this is going to be executed

00:02:35.220 --> 00:02:41.000 
change this is going to be executed
again<00:02:35.600> however<00:02:36.600> if<00:02:37.400> we<00:02:38.400> have<00:02:39.210> a<00:02:39.240> cpu<00:02:39.810> and<00:02:40.140> we

00:02:41.000 --> 00:02:41.010 
again however if we have a cpu and we

00:02:41.010 --> 00:02:43.210 
again however if we have a cpu and we
have<00:02:41.220> just<00:02:41.760> some<00:02:42.030> commands<00:02:42.600> here<00:02:42.870> it's

00:02:43.210 --> 00:02:43.220 
have just some commands here it's

00:02:43.220 --> 00:02:46.460 
have just some commands here it's
completely<00:02:44.220> random<00:02:44.610> then<00:02:45.390> the<00:02:45.750> cpu<00:02:46.170> is<00:02:46.290> going

00:02:46.460 --> 00:02:46.470 
completely random then the cpu is going

00:02:46.470 --> 00:02:49.940 
completely random then the cpu is going
to<00:02:46.620> execute<00:02:47.160> line<00:02:47.880> for<00:02:48.300> then<00:02:48.810> line<00:02:49.080> 5<00:02:49.470> then

00:02:49.940 --> 00:02:49.950 
to execute line for then line 5 then

00:02:49.950 --> 00:02:53.840 
to execute line for then line 5 then
like<00:02:50.160> 6<00:02:50.700> 16<00:02:51.480> and<00:02:51.780> then<00:02:52.440> finding<00:02:53.190> no<00:02:53.400> more<00:02:53.610> code

00:02:53.840 --> 00:02:53.850 
like 6 16 and then finding no more code

00:02:53.850 --> 00:02:57.730 
like 6 16 and then finding no more code
to<00:02:54.000> execute<00:02:54.150> is<00:02:54.660> going<00:02:55.020> to<00:02:55.140> terminate<00:02:55.970> this<00:02:56.970> is

00:02:57.730 --> 00:02:57.740 
to execute is going to terminate this is

00:02:57.740 --> 00:02:59.780 
to execute is going to terminate this is
different<00:02:58.740> from<00:02:58.950> the<00:02:59.190> expression<00:02:59.580> to<00:02:59.760> the

00:02:59.780 --> 00:02:59.790 
different from the expression to the

00:02:59.790 --> 00:03:02.080 
different from the expression to the
expression<00:03:00.330> 2<00:03:00.420> will<00:03:00.570> always<00:03:01.170> loop<00:03:01.530> the<00:03:01.770> code

00:03:02.080 --> 00:03:02.090 
expression 2 will always loop the code

00:03:02.090 --> 00:03:05.150 
expression 2 will always loop the code
if<00:03:03.090> you<00:03:03.300> tell<00:03:03.540> it<00:03:03.690> to<00:03:03.840> run<00:03:04.050> on<00:03:04.080> tick<00:03:04.680> that<00:03:04.920> means

00:03:05.150 --> 00:03:05.160 
if you tell it to run on tick that means

00:03:05.160 --> 00:03:08.870 
if you tell it to run on tick that means
a<00:03:05.580> loop<00:03:06.300> all<00:03:06.630> over<00:03:07.050> again<00:03:07.410> whenever<00:03:08.400> the<00:03:08.640> code

00:03:08.870 --> 00:03:08.880 
a loop all over again whenever the code

00:03:08.880 --> 00:03:14.600 
a loop all over again whenever the code
ends<00:03:10.250> in<00:03:11.250> given<00:03:11.970> intervals<00:03:12.720> of<00:03:12.870> time<00:03:13.170> or<00:03:13.610> you

00:03:14.600 --> 00:03:14.610 
ends in given intervals of time or you

00:03:14.610 --> 00:03:16.760 
ends in given intervals of time or you
tell<00:03:14.880> it<00:03:15.090> to<00:03:15.420> have<00:03:15.690> a<00:03:15.720> certain<00:03:16.110> trigger<00:03:16.440> it's

00:03:16.760 --> 00:03:16.770 
tell it to have a certain trigger it's

00:03:16.770 --> 00:03:19.820 
tell it to have a certain trigger it's
always<00:03:17.460> going<00:03:17.790> to<00:03:17.940> loop<00:03:18.150> the<00:03:18.180> code<00:03:18.570> however<00:03:19.530> in

00:03:19.820 --> 00:03:19.830 
always going to loop the code however in

00:03:19.830 --> 00:03:23.900 
always going to loop the code however in
the<00:03:20.400> CPU<00:03:20.940> we<00:03:21.270> have<00:03:21.510> to<00:03:21.690> do<00:03:21.930> this<00:03:22.230> on<00:03:22.470> our<00:03:22.890> own<00:03:22.950> we

00:03:23.900 --> 00:03:23.910 
the CPU we have to do this on our own we

00:03:23.910 --> 00:03:27.640 
the CPU we have to do this on our own we
have<00:03:24.030> to<00:03:24.150> do<00:03:24.270> anything<00:03:24.800> about<00:03:25.800> of<00:03:26.010> our<00:03:26.550> own<00:03:26.790> and

00:03:27.640 --> 00:03:27.650 
have to do anything about of our own and

00:03:27.650 --> 00:03:30.880 
have to do anything about of our own and
let's<00:03:28.650> close<00:03:28.920> this<00:03:29.220> code<00:03:29.520> editor<00:03:29.910> for<00:03:30.150> second

00:03:30.880 --> 00:03:30.890 
let's close this code editor for second

00:03:30.890 --> 00:03:37.040 
let's close this code editor for second
well<00:03:31.890> yes<00:03:33.440> the<00:03:34.440> cpu<00:03:35.070> can<00:03:35.670> only<00:03:35.910> handle<00:03:36.360> numbers

00:03:37.040 --> 00:03:37.050 
well yes the cpu can only handle numbers

00:03:37.050 --> 00:03:39.950 
well yes the cpu can only handle numbers
and<00:03:37.410> it<00:03:37.950> cannot<00:03:38.490> do<00:03:38.670> anything<00:03:38.970> about<00:03:39.480> itself

00:03:39.950 --> 00:03:39.960 
and it cannot do anything about itself

00:03:39.960 --> 00:03:44.530 
and it cannot do anything about itself
so<00:03:40.350> let's<00:03:41.010> handle<00:03:41.850> the<00:03:42.980> advantages<00:03:43.980> and

00:03:44.530 --> 00:03:44.540 
so let's handle the advantages and

00:03:44.540 --> 00:03:49.580 
so let's handle the advantages and
disadvantages<00:03:45.540> of<00:03:45.720> the<00:03:45.990> cpu<00:03:46.970> well<00:03:48.020> first<00:03:49.020> I'll

00:03:49.580 --> 00:03:49.590 
disadvantages of the cpu well first I'll

00:03:49.590 --> 00:03:52.150 
disadvantages of the cpu well first I'll
handle<00:03:50.070> I'll<00:03:50.340> address<00:03:50.550> the<00:03:51.080> disadvantages

00:03:52.150 --> 00:03:52.160 
handle I'll address the disadvantages

00:03:52.160 --> 00:03:56.810 
handle I'll address the disadvantages
first<00:03:53.160> of<00:03:53.280> all<00:03:53.370> it's<00:03:53.670> less<00:03:54.180> fancy<00:03:55.110> than<00:03:55.820> the

00:03:56.810 --> 00:03:56.820 
first of all it's less fancy than the

00:03:56.820 --> 00:03:58.640 
first of all it's less fancy than the
expression<00:03:57.330> to<00:03:57.480> the<00:03:57.510> especially<00:03:58.050> to<00:03:58.170> can<00:03:58.440> do

00:03:58.640 --> 00:03:58.650 
expression to the especially to can do

00:03:58.650 --> 00:04:02.660 
expression to the especially to can do
almost<00:03:59.460> anything<00:04:00.270> other<00:04:00.690> wired<00:04:01.680> ships<00:04:02.040> can<00:04:02.400> on

00:04:02.660 --> 00:04:02.670 
almost anything other wired ships can on

00:04:02.670 --> 00:04:06.260 
almost anything other wired ships can on
its<00:04:03.120> own<00:04:03.450> it<00:04:04.440> even<00:04:04.830> has<00:04:05.010> a<00:04:05.040> holograph<00:04:05.640> library

00:04:06.260 --> 00:04:06.270 
its own it even has a holograph library

00:04:06.270 --> 00:04:12.800 
its own it even has a holograph library
that<00:04:06.630> is<00:04:06.870> not<00:04:07.440> that<00:04:07.620> slow<00:04:08.360> but<00:04:09.360> well<00:04:11.030> yeah<00:04:12.030> it's

00:04:12.800 --> 00:04:12.810 
that is not that slow but well yeah it's

00:04:12.810 --> 00:04:15.830 
that is not that slow but well yeah it's
fancy<00:04:13.500> that<00:04:13.800> it<00:04:13.950> has<00:04:14.130> one<00:04:14.430> but<00:04:15.180> the<00:04:15.480> CPU

00:04:15.830 --> 00:04:15.840 
fancy that it has one but the CPU

00:04:15.840 --> 00:04:18.740 
fancy that it has one but the CPU
doesn't<00:04:16.260> have<00:04:16.440> all<00:04:16.710> this<00:04:17.010> stuff<00:04:17.239> the<00:04:18.239> CPU<00:04:18.690> has

00:04:18.740 --> 00:04:18.750 
doesn't have all this stuff the CPU has

00:04:18.750 --> 00:04:22.310 
doesn't have all this stuff the CPU has
a<00:04:19.440> basic<00:04:20.070> arithmetic<00:04:20.460> a<00:04:21.210> stack<00:04:21.660> that<00:04:21.900> we<00:04:22.080> can

00:04:22.310 --> 00:04:22.320 
a basic arithmetic a stack that we can

00:04:22.320 --> 00:04:25.310 
a basic arithmetic a stack that we can
push<00:04:23.130> things<00:04:23.490> on<00:04:23.970> that<00:04:24.630> means<00:04:24.810> adding<00:04:25.169> it<00:04:25.290> to

00:04:25.310 --> 00:04:25.320 
push things on that means adding it to

00:04:25.320 --> 00:04:29.140 
push things on that means adding it to
the<00:04:25.530> stack<00:04:25.830> and<00:04:25.980> take<00:04:26.880> stuff<00:04:27.150> off<00:04:27.360> and

00:04:29.140 --> 00:04:29.150 
the stack and take stuff off and

00:04:29.150 --> 00:04:34.360 
the stack and take stuff off and
but<00:04:30.150> it's<00:04:30.420> bet<00:04:31.080> it's<00:04:31.320> basically<00:04:31.920> all<00:04:32.310> about

00:04:34.360 --> 00:04:34.370 
but it's bet it's basically all about

00:04:34.370 --> 00:04:38.210 
but it's bet it's basically all about
determining<00:04:35.720> values<00:04:36.720> and<00:04:37.050> then<00:04:37.500> outputting

00:04:38.210 --> 00:04:38.220 
determining values and then outputting

00:04:38.220 --> 00:04:40.640 
determining values and then outputting
them<00:04:38.370> to<00:04:38.580> regular<00:04:39.240> violet<00:04:39.720> why<00:04:39.930> devices<00:04:40.500> or

00:04:40.640 --> 00:04:40.650 
them to regular violet why devices or

00:04:40.650 --> 00:04:46.310 
them to regular violet why devices or
high<00:04:41.160> speed<00:04:41.490> devices<00:04:43.760> yeah<00:04:44.840> also<00:04:45.840> a

00:04:46.310 --> 00:04:46.320 
high speed devices yeah also a

00:04:46.320 --> 00:04:49.310 
high speed devices yeah also a
disadvantage<00:04:47.220> is<00:04:47.550> that<00:04:47.600> the<00:04:48.600> scripting

00:04:49.310 --> 00:04:49.320 
disadvantage is that the scripting

00:04:49.320 --> 00:04:52.940 
disadvantage is that the scripting
language<00:04:49.770> is<00:04:50.040> so<00:04:50.700> difficult<00:04:51.630> to<00:04:52.260> get<00:04:52.440> used<00:04:52.470> to

00:04:52.940 --> 00:04:52.950 
language is so difficult to get used to

00:04:52.950 --> 00:04:56.360 
language is so difficult to get used to
but<00:04:53.670> you<00:04:54.660> I<00:04:54.690> think<00:04:55.260> using<00:04:55.770> these<00:04:56.010> video

00:04:56.360 --> 00:04:56.370 
but you I think using these video

00:04:56.370 --> 00:05:01.160 
but you I think using these video
tutorials<00:04:56.430> I<00:04:57.090> hope<00:04:58.130> you<00:04:59.130> will<00:04:59.340> be<00:05:00.300> finding

00:05:01.160 --> 00:05:01.170 
tutorials I hope you will be finding

00:05:01.170 --> 00:05:06.050 
tutorials I hope you will be finding
this<00:05:01.380> pretty<00:05:02.190> easy<00:05:03.380> the<00:05:04.380> clear<00:05:04.910> advantages<00:05:05.910> of

00:05:06.050 --> 00:05:06.060 
this pretty easy the clear advantages of

00:05:06.060 --> 00:05:09.500 
this pretty easy the clear advantages of
the<00:05:06.300> CPU<00:05:06.660> our<00:05:06.930> first<00:05:07.500> of<00:05:07.680> all<00:05:07.860> it's<00:05:08.510> abnormal

00:05:09.500 --> 00:05:09.510 
the CPU our first of all it's abnormal

00:05:09.510 --> 00:05:16.610 
the CPU our first of all it's abnormal
speed<00:05:09.960> well<00:05:10.950> if<00:05:11.570> the<00:05:12.950> wire<00:05:14.690> well<00:05:15.690> I<00:05:15.720> begin<00:05:16.470> with

00:05:16.610 --> 00:05:16.620 
speed well if the wire well I begin with

00:05:16.620 --> 00:05:20.690 
speed well if the wire well I begin with
the<00:05:16.740> numbers<00:05:17.780> normal<00:05:18.780> wire<00:05:19.020> devices<00:05:19.650> s<00:05:19.860> let's

00:05:20.690 --> 00:05:20.700 
the numbers normal wire devices s let's

00:05:20.700 --> 00:05:29.390 
the numbers normal wire devices s let's
say<00:05:22.070> an<00:05:23.070> angle<00:05:23.610> gate<00:05:23.850> Oh<00:05:24.500> wire<00:05:25.500> to<00:05:27.350> or<00:05:28.400> let's

00:05:29.390 --> 00:05:29.400 
say an angle gate Oh wire to or let's

00:05:29.400 --> 00:05:33.230 
say an angle gate Oh wire to or let's
just<00:05:29.670> have<00:05:29.850> a<00:05:29.880> net<00:05:30.180> and<00:05:30.510> add<00:05:31.500> gate<00:05:32.070> wired<00:05:32.640> to

00:05:33.230 --> 00:05:33.240 
just have a net and add gate wired to

00:05:33.240 --> 00:05:41.450 
just have a net and add gate wired to
the<00:05:36.590> two<00:05:38.000> random<00:05:39.000> numbers<00:05:39.980> it<00:05:40.980> doesn't<00:05:41.040> matter

00:05:41.450 --> 00:05:41.460 
the two random numbers it doesn't matter

00:05:41.460 --> 00:05:44.930 
the two random numbers it doesn't matter
anyway<00:05:42.080> that<00:05:43.080> will<00:05:43.800> have<00:05:43.950> a<00:05:43.980> transfer<00:05:44.520> rate<00:05:44.730> of

00:05:44.930 --> 00:05:44.940 
anyway that will have a transfer rate of

00:05:44.940 --> 00:05:48.890 
anyway that will have a transfer rate of
40<00:05:45.690> bytes<00:05:45.960> per<00:05:46.200> second<00:05:47.030> 40<00:05:48.030> bytes<00:05:48.210> per<00:05:48.330> second

00:05:48.890 --> 00:05:48.900 
40 bytes per second 40 bytes per second

00:05:48.900 --> 00:05:53.770 
40 bytes per second 40 bytes per second
is<00:05:49.110> not<00:05:49.560> bad<00:05:49.890> actually<00:05:50.160> but<00:05:51.030> when<00:05:51.450> using<00:05:52.320> heavy

00:05:53.770 --> 00:05:53.780 
is not bad actually but when using heavy

00:05:53.780 --> 00:05:56.870 
is not bad actually but when using heavy
hell<00:05:54.780> when<00:05:55.320> you<00:05:55.350> think<00:05:55.650> using<00:05:55.950> heavy<00:05:56.400> averse

00:05:56.870 --> 00:05:56.880 
hell when you think using heavy averse

00:05:56.880 --> 00:05:59.600 
hell when you think using heavy averse
mattox<00:05:57.330> it<00:05:57.660> gets<00:05:58.080> slow<00:05:58.470> real<00:05:58.770> fast<00:05:59.250> and<00:05:59.520> it

00:05:59.600 --> 00:05:59.610 
mattox it gets slow real fast and it

00:05:59.610 --> 00:06:03.440 
mattox it gets slow real fast and it
will<00:05:59.820> start<00:06:00.420> lagging<00:06:01.190> it<00:06:02.190> will<00:06:02.760> start<00:06:03.030> even

00:06:03.440 --> 00:06:03.450 
will start lagging it will start even

00:06:03.450 --> 00:06:05.270 
will start lagging it will start even
started<00:06:03.780> lagging<00:06:03.900> for<00:06:04.230> other<00:06:04.380> players<00:06:04.770> since

00:06:05.270 --> 00:06:05.280 
started lagging for other players since

00:06:05.280 --> 00:06:08.210 
started lagging for other players since
most<00:06:05.700> of<00:06:05.850> the<00:06:05.910> wire<00:06:06.210> stuff<00:06:06.570> is<00:06:06.810> a<00:06:07.320> calculated

00:06:08.210 --> 00:06:08.220 
most of the wire stuff is a calculated

00:06:08.220 --> 00:06:11.420 
most of the wire stuff is a calculated
client<00:06:08.700> side<00:06:08.910> and<00:06:09.200> that<00:06:10.200> stuff<00:06:10.650> who<00:06:10.860> is<00:06:11.040> which

00:06:11.420 --> 00:06:11.430 
client side and that stuff who is which

00:06:11.430 --> 00:06:14.960 
client side and that stuff who is which
is<00:06:11.460> going<00:06:11.760> to<00:06:11.880> be<00:06:12.890> calculated<00:06:13.890> server<00:06:14.640> side

00:06:14.960 --> 00:06:14.970 
is going to be calculated server side

00:06:14.970 --> 00:06:19.630 
is going to be calculated server side
will<00:06:15.350> also<00:06:16.350> like<00:06:16.590> the<00:06:16.740> server<00:06:17.040> so<00:06:17.940> well<00:06:18.630> yeah

00:06:19.630 --> 00:06:19.640 
will also like the server so well yeah

00:06:19.640 --> 00:06:24.470 
will also like the server so well yeah
the<00:06:20.640> cpu<00:06:21.450> however<00:06:22.250> transfers<00:06:23.250> of<00:06:23.490> course<00:06:24.270> as

00:06:24.470 --> 00:06:24.480 
the cpu however transfers of course as

00:06:24.480 --> 00:06:26.780 
the cpu however transfers of course as
long<00:06:24.540> as<00:06:24.990> wide<00:06:25.200> to<00:06:25.230> high<00:06:25.680> speed<00:06:26.040> devices<00:06:26.220> that

00:06:26.780 --> 00:06:26.790 
long as wide to high speed devices that

00:06:26.790 --> 00:06:31.160 
long as wide to high speed devices that
are<00:06:26.940> built<00:06:27.300> for<00:06:27.540> that<00:06:27.740> with<00:06:29.510> 32,000<00:06:30.510> bytes<00:06:30.990> per

00:06:31.160 --> 00:06:31.170 
are built for that with 32,000 bytes per

00:06:31.170 --> 00:06:36.860 
are built for that with 32,000 bytes per
second<00:06:31.830> m<00:06:33.590> that<00:06:34.590> is<00:06:34.800> fast<00:06:35.280> enough<00:06:35.460> to<00:06:36.000> do<00:06:36.840> a

00:06:36.860 --> 00:06:36.870 
second m that is fast enough to do a

00:06:36.870 --> 00:06:40.280 
second m that is fast enough to do a
camcorder<00:06:37.290> that<00:06:38.010> can<00:06:38.670> record<00:06:38.970> i<00:06:39.570> think<00:06:40.110> it's

00:06:40.280 --> 00:06:40.290 
camcorder that can record i think it's

00:06:40.290 --> 00:06:42.679 
camcorder that can record i think it's
about<00:06:40.560> 15<00:06:41.310> FPS

00:06:42.679 --> 00:06:42.689 
about 15 FPS

00:06:42.689 --> 00:06:50.479 
about 15 FPS
on<00:06:42.749> a<00:06:42.809> 16<00:06:43.649> point<00:06:44.599> 16<00:06:45.599> x<00:06:46.610> 16<00:06:48.469> pixel<00:06:49.469> wide<00:06:49.860> area

00:06:50.479 --> 00:06:50.489 
on a 16 point 16 x 16 pixel wide area

00:06:50.489 --> 00:06:54.199 
on a 16 point 16 x 16 pixel wide area
this<00:06:51.239> is<00:06:51.739> one<00:06:52.739> of<00:06:52.860> the<00:06:53.009> awesome<00:06:53.459> things<00:06:53.489> that

00:06:54.199 --> 00:06:54.209 
this is one of the awesome things that

00:06:54.209 --> 00:07:00.019 
this is one of the awesome things that
the<00:06:54.509> CPU<00:06:55.409> makes<00:06:55.979> possible<00:06:56.339> and<00:06:58.099> well<00:06:59.099> yeah<00:06:59.339> now

00:07:00.019 --> 00:07:00.029 
the CPU makes possible and well yeah now

00:07:00.029 --> 00:07:04.339 
the CPU makes possible and well yeah now
that<00:07:00.089> you<00:07:00.419> got<00:07:00.809> this<00:07:02.059> stuff<00:07:03.059> about<00:07:03.360> not<00:07:04.049> being

00:07:04.339 --> 00:07:04.349 
that you got this stuff about not being

00:07:04.349 --> 00:07:08.029 
that you got this stuff about not being
able<00:07:04.559> to<00:07:05.149> do<00:07:06.149> any<00:07:06.329> fancy<00:07:06.629> things<00:07:07.139> with<00:07:07.409> the<00:07:07.619> CPU

00:07:08.029 --> 00:07:08.039 
able to do any fancy things with the CPU

00:07:08.039 --> 00:07:10.009 
able to do any fancy things with the CPU
you<00:07:08.339> might<00:07:08.579> want<00:07:08.879> to<00:07:09.059> quit<00:07:09.389> these<00:07:09.569> tutorials

00:07:10.009 --> 00:07:10.019 
you might want to quit these tutorials

00:07:10.019 --> 00:07:14.539 
you might want to quit these tutorials
if<00:07:10.529> you<00:07:10.829> want<00:07:11.069> to<00:07:11.249> do<00:07:11.429> to<00:07:12.179> do<00:07:12.329> so<00:07:12.569> then<00:07:13.159> well<00:07:14.159> do

00:07:14.539 --> 00:07:14.549 
if you want to do to do so then well do

00:07:14.549 --> 00:07:17.149 
if you want to do to do so then well do
so<00:07:14.899> expression<00:07:15.899> is<00:07:15.989> a<00:07:16.199> neat<00:07:16.529> trip<00:07:16.800> don't<00:07:17.039> get

00:07:17.149 --> 00:07:17.159 
so expression is a neat trip don't get

00:07:17.159 --> 00:07:21.709 
so expression is a neat trip don't get
me<00:07:17.279> wrong<00:07:17.579> but<00:07:17.789> the<00:07:18.659> CPU<00:07:19.139> just<00:07:20.360> does<00:07:21.360> stuff

00:07:21.709 --> 00:07:21.719 
me wrong but the CPU just does stuff

00:07:21.719 --> 00:07:23.749 
me wrong but the CPU just does stuff
that<00:07:22.019> the<00:07:22.199> expression<00:07:22.529> can<00:07:22.919> only<00:07:23.129> dream<00:07:23.550> off

00:07:23.749 --> 00:07:23.759 
that the expression can only dream off

00:07:23.759 --> 00:07:26.299 
that the expression can only dream off
of<00:07:24.029> course<00:07:24.809> the<00:07:24.929> expression<00:07:25.349> also<00:07:25.499> does<00:07:26.129> some

00:07:26.299 --> 00:07:26.309 
of course the expression also does some

00:07:26.309 --> 00:07:29.029 
of course the expression also does some
stuff<00:07:26.610> but<00:07:27.179> their<00:07:27.419> stuff<00:07:27.809> is<00:07:28.079> mostly<00:07:28.800> cosmetic

00:07:29.029 --> 00:07:29.039 
stuff but their stuff is mostly cosmetic

00:07:29.039 --> 00:07:34.189 
stuff but their stuff is mostly cosmetic
oh<00:07:30.019> well<00:07:31.019> I<00:07:31.289> guess<00:07:32.279> we'll<00:07:32.539> end<00:07:33.539> this<00:07:33.659> tutorial

00:07:34.189 --> 00:07:34.199 
oh well I guess we'll end this tutorial

00:07:34.199 --> 00:07:37.159 
oh well I guess we'll end this tutorial
here<00:07:34.469> this<00:07:34.829> is<00:07:34.979> Rick<00:07:35.219> and<00:07:35.550> in<00:07:36.059> the<00:07:36.599> next<00:07:36.779> part

00:07:37.159 --> 00:07:37.169 
here this is Rick and in the next part

00:07:37.169 --> 00:07:41.149 
here this is Rick and in the next part
will<00:07:37.619> actually<00:07:38.189> start<00:07:38.459> with<00:07:38.639> scripting

