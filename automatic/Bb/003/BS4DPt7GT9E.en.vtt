WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.379 

hi<00:00:00.840> today<00:00:01.650> I<00:00:01.680> will<00:00:02.010> show<00:00:02.220> you<00:00:02.280> how<00:00:02.879> to<00:00:02.939> enable

00:00:03.379 --> 00:00:03.389 
hi today I will show you how to enable

00:00:03.389 --> 00:00:06.170 
hi today I will show you how to enable
hardware<00:00:04.110> acceleration<00:00:04.620> for<00:00:04.980> video<00:00:05.790> decoding

00:00:06.170 --> 00:00:06.180 
hardware acceleration for video decoding

00:00:06.180 --> 00:00:10.520 
hardware acceleration for video decoding
and<00:00:06.569> video<00:00:07.350> deinterlacing<00:00:08.210> to<00:00:09.210> begin<00:00:09.510> with<00:00:09.719> we

00:00:10.520 --> 00:00:10.530 
and video deinterlacing to begin with we

00:00:10.530 --> 00:00:13.910 
and video deinterlacing to begin with we
will<00:00:10.559> need<00:00:10.740> to<00:00:11.280> use<00:00:11.309> the<00:00:12.000> LAV<00:00:12.530> video<00:00:13.530> decoder

00:00:13.910 --> 00:00:13.920 
will need to use the LAV video decoder

00:00:13.920 --> 00:00:17.080 
will need to use the LAV video decoder
because<00:00:14.429> it's<00:00:14.849> very<00:00:15.059> flexible<00:00:15.299> and<00:00:15.870> gives<00:00:16.199> us

00:00:17.080 --> 00:00:17.090 
because it's very flexible and gives us

00:00:17.090 --> 00:00:21.650 
because it's very flexible and gives us
several<00:00:18.090> different<00:00:18.930> methods<00:00:19.920> of<00:00:20.270> using<00:00:21.270> how

00:00:21.650 --> 00:00:21.660 
several different methods of using how

00:00:21.660 --> 00:00:27.410 
several different methods of using how
to<00:00:21.720> acceleration<00:00:22.670> so<00:00:24.619> to<00:00:25.619> check<00:00:25.939> whether<00:00:26.939> a

00:00:27.410 --> 00:00:27.420 
to acceleration so to check whether a

00:00:27.420 --> 00:00:30.999 
to acceleration so to check whether a
specific<00:00:27.840> format<00:00:28.619> you<00:00:29.070> might<00:00:29.310> be<00:00:29.460> playing<00:00:29.760> is

00:00:30.999 --> 00:00:31.009 
specific format you might be playing is

00:00:31.009 --> 00:00:34.340 
specific format you might be playing is
supported<00:00:32.009> by<00:00:32.189> LAV<00:00:32.700> open<00:00:33.390> the<00:00:33.960> option<00:00:34.260> of

00:00:34.340 --> 00:00:34.350 
supported by LAV open the option of

00:00:34.350 --> 00:00:40.369 
supported by LAV open the option of
dialogue<00:00:35.780> and<00:00:37.610> then<00:00:38.610> i<00:00:39.030> go<00:00:39.510> to<00:00:39.540> the<00:00:39.690> smart<00:00:40.050> play

00:00:40.369 --> 00:00:40.379 
dialogue and then i go to the smart play

00:00:40.379 --> 00:00:45.290 
dialogue and then i go to the smart play
section<00:00:40.920> and<00:00:42.379> let's<00:00:43.379> for<00:00:43.649> example<00:00:44.160> check<00:00:44.730> the

00:00:45.290 --> 00:00:45.300 
section and let's for example check the

00:00:45.300 --> 00:00:51.189 
section and let's for example check the
popular<00:00:46.700> h.264<00:00:47.700> format<00:00:47.989> also<00:00:48.989> known<00:00:49.200> as

00:00:51.189 --> 00:00:51.199 
popular h.264 format also known as

00:00:51.199 --> 00:00:58.010 
popular h.264 format also known as
mpeg-4<00:00:52.820> advanced<00:00:53.820> video<00:00:54.329> coding<00:00:55.430> and<00:00:57.020> here

00:00:58.010 --> 00:00:58.020 
mpeg-4 advanced video coding and here

00:00:58.020 --> 00:01:01.549 
mpeg-4 advanced video coding and here
you<00:00:58.170> can<00:00:58.379> see<00:00:58.590> LED<00:00:59.190> is<00:00:59.609> selected<00:01:00.449> as<00:01:00.629> the<00:01:01.260> video

00:01:01.549 --> 00:01:01.559 
you can see LED is selected as the video

00:01:01.559 --> 00:01:08.120 
you can see LED is selected as the video
decoder<00:01:03.080> now<00:01:04.080> I<00:01:04.470> play<00:01:05.159> video<00:01:05.580> and<00:01:05.790> now<00:01:07.130> from

00:01:08.120 --> 00:01:08.130 
decoder now I play video and now from

00:01:08.130 --> 00:01:11.890 
decoder now I play video and now from
here<00:01:08.400> I<00:01:08.610> open<00:01:08.970> the<00:01:09.689> LAV<00:01:10.320> video<00:01:11.100> decoder

00:01:11.890 --> 00:01:11.900 
here I open the LAV video decoder

00:01:11.900 --> 00:01:15.020 
here I open the LAV video decoder
property<00:01:12.900> page<00:01:13.110> or<00:01:13.409> configuration<00:01:14.040> page<00:01:14.490> you

00:01:15.020 --> 00:01:15.030 
property page or configuration page you

00:01:15.030 --> 00:01:18.260 
property page or configuration page you
can<00:01:15.150> also<00:01:15.390> do<00:01:15.689> this<00:01:15.869> by<00:01:16.170> clicking<00:01:16.799> D<00:01:17.610> on<00:01:18.030> the

00:01:18.260 --> 00:01:18.270 
can also do this by clicking D on the

00:01:18.270 --> 00:01:24.789 
can also do this by clicking D on the
keyboard<00:01:19.850> once<00:01:20.850> opened<00:01:21.330> you<00:01:22.549> can<00:01:23.549> see<00:01:23.759> there's

00:01:24.789 --> 00:01:24.799 
keyboard once opened you can see there's

00:01:24.799 --> 00:01:27.410 
keyboard once opened you can see there's
hardware<00:01:25.799> Federation<00:01:26.400> section<00:01:27.000> here<00:01:27.210> and

00:01:27.410 --> 00:01:27.420 
hardware Federation section here and

00:01:27.420 --> 00:01:29.749 
hardware Federation section here and
there's<00:01:27.750> an<00:01:28.290> additional<00:01:28.740> software<00:01:29.400> the

00:01:29.749 --> 00:01:29.759 
there's an additional software the

00:01:29.759 --> 00:01:32.120 
there's an additional software the
interlacing<00:01:30.270> section<00:01:30.930> I<00:01:31.140> will<00:01:31.439> touch<00:01:31.680> on<00:01:31.890> a

00:01:32.120 --> 00:01:32.130 
interlacing section I will touch on a

00:01:32.130 --> 00:01:36.670 
interlacing section I will touch on a
little<00:01:32.250> bit<00:01:32.460> later<00:01:33.590> and<00:01:34.590> there<00:01:34.770> are<00:01:34.979> several

00:01:36.670 --> 00:01:36.680 
little bit later and there are several

00:01:36.680 --> 00:01:40.130 
little bit later and there are several
types<00:01:37.680> of<00:01:37.890> hardware<00:01:38.820> acceleration<00:01:39.329> supported

00:01:40.130 --> 00:01:40.140 
types of hardware acceleration supported

00:01:40.140 --> 00:01:45.520 
types of hardware acceleration supported
by<00:01:41.070> the<00:01:41.759> LAV<00:01:42.180> decoder<00:01:42.720> you<00:01:43.680> have<00:01:43.920> the<00:01:44.460> Nvidia

00:01:45.520 --> 00:01:45.530 
by the LAV decoder you have the Nvidia

00:01:45.530 --> 00:01:49.789 
by the LAV decoder you have the Nvidia
sous-vide<00:01:46.530> which<00:01:47.220> is<00:01:47.579> a<00:01:48.799> hardware

00:01:49.789 --> 00:01:49.799 
sous-vide which is a hardware

00:01:49.799 --> 00:01:53.990 
sous-vide which is a hardware
acceleration<00:01:50.430> based<00:01:50.880> on<00:01:51.210> CUDA<00:01:51.689> over<00:01:53.000> good

00:01:53.990 --> 00:01:54.000 
acceleration based on CUDA over good

00:01:54.000 --> 00:01:59.560 
acceleration based on CUDA over good
video<00:01:54.810> engine<00:01:55.200> and<00:01:57.380> it's<00:01:58.380> supported<00:01:59.009> by<00:01:59.040> most

00:01:59.560 --> 00:01:59.570 
video engine and it's supported by most

00:01:59.570 --> 00:02:03.170 
video engine and it's supported by most
Nvidia<00:02:00.570> cards<00:02:01.070> some<00:02:02.070> with<00:02:02.909> better

00:02:03.170 --> 00:02:03.180 
Nvidia cards some with better

00:02:03.180 --> 00:02:07.119 
Nvidia cards some with better
performance<00:02:03.810> than<00:02:04.340> others<00:02:05.369> not<00:02:06.149> necessarily

00:02:07.119 --> 00:02:07.129 
performance than others not necessarily

00:02:07.129 --> 00:02:12.180 
performance than others not necessarily
equivalent<00:02:08.129> to<00:02:08.700> the<00:02:08.849> 3d<00:02:09.270> performance

00:02:12.180 --> 00:02:12.190 

00:02:12.190 --> 00:02:14.700 

then<00:02:12.460> you<00:02:12.580> have<00:02:12.790> the<00:02:13.000> Intel<00:02:13.360> Quick<00:02:13.570> Sync<00:02:13.870> which

00:02:14.700 --> 00:02:14.710 
then you have the Intel Quick Sync which

00:02:14.710 --> 00:02:17.730 
then you have the Intel Quick Sync which
was<00:02:15.010> introduced<00:02:15.400> in<00:02:16.090> the<00:02:16.150> Intel<00:02:16.990> Sandy<00:02:17.410> Bridge

00:02:17.730 --> 00:02:17.740 
was introduced in the Intel Sandy Bridge

00:02:17.740 --> 00:02:20.450 
was introduced in the Intel Sandy Bridge
possessive<00:02:18.430> and<00:02:18.970> not<00:02:19.690> all<00:02:19.930> of<00:02:19.960> them<00:02:20.110> have

00:02:20.450 --> 00:02:20.460 
possessive and not all of them have

00:02:20.460 --> 00:02:23.040 
possessive and not all of them have
support<00:02:21.460> for<00:02:21.580> quick<00:02:21.820> sync<00:02:22.090> only<00:02:22.360> the<00:02:22.840> ones

00:02:23.040 --> 00:02:23.050 
support for quick sync only the ones

00:02:23.050 --> 00:02:27.810 
support for quick sync only the ones
with<00:02:23.760> the<00:02:25.200> integrated<00:02:26.200> graphics<00:02:26.290> and<00:02:27.040> maybe<00:02:27.670> a

00:02:27.810 --> 00:02:27.820 
with the integrated graphics and maybe a

00:02:27.820 --> 00:02:32.570 
with the integrated graphics and maybe a
few<00:02:28.060> other<00:02:28.330> models<00:02:28.870> and<00:02:29.490> you<00:02:30.490> have<00:02:30.700> dc-8<00:02:31.690> to

00:02:32.570 --> 00:02:32.580 
few other models and you have dc-8 to

00:02:32.580 --> 00:02:37.560 
few other models and you have dc-8 to
is<00:02:33.580> the<00:02:34.390> Microsoft<00:02:35.080> DirectX<00:02:36.270> framework<00:02:37.270> for

00:02:37.560 --> 00:02:37.570 
is the Microsoft DirectX framework for

00:02:37.570 --> 00:02:40.770 
is the Microsoft DirectX framework for
video<00:02:37.840> acceleration<00:02:38.790> and<00:02:39.790> these<00:02:40.300> two<00:02:40.570> options

00:02:40.770 --> 00:02:40.780 
video acceleration and these two options

00:02:40.780 --> 00:02:45.930 
video acceleration and these two options
our<00:02:43.110> direct<00:02:44.110> implementation<00:02:44.820> for<00:02:45.820> the

00:02:45.930 --> 00:02:45.940 
our direct implementation for the

00:02:45.940 --> 00:02:49.920 
our direct implementation for the
hardware<00:02:46.240> and<00:02:46.600> d3a<00:02:47.730> is<00:02:48.730> using<00:02:49.240> the<00:02:49.390> Microsoft

00:02:49.920 --> 00:02:49.930 
hardware and d3a is using the Microsoft

00:02:49.930 --> 00:02:55.050 
hardware and d3a is using the Microsoft
web<00:02:50.170> framework<00:02:50.680> which<00:02:51.100> and<00:02:52.140> drivers<00:02:53.140> by<00:02:54.060> Intel

00:02:55.050 --> 00:02:55.060 
web framework which and drivers by Intel

00:02:55.060 --> 00:02:58.440 
web framework which and drivers by Intel
Nvidia<00:02:55.330> and<00:02:55.840> ATI<00:02:56.280> and<00:02:57.280> it<00:02:57.430> should<00:02:57.640> support<00:02:57.880> but

00:02:58.440 --> 00:02:58.450 
Nvidia and ATI and it should support but

00:02:58.450 --> 00:03:01.740 
Nvidia and ATI and it should support but
dig<00:02:59.110> flay<00:02:59.410> can<00:02:59.740> sometimes<00:03:00.190> be<00:03:00.580> funny<00:03:01.000> YouTube

00:03:01.740 --> 00:03:01.750 
dig flay can sometimes be funny YouTube

00:03:01.750 --> 00:03:05.370 
dig flay can sometimes be funny YouTube
driver<00:03:02.140> but<00:03:03.300> when<00:03:04.300> I<00:03:04.420> say<00:03:04.600> buggy<00:03:04.870> I<00:03:05.050> mean

00:03:05.370 --> 00:03:05.380 
driver but when I say buggy I mean

00:03:05.380 --> 00:03:09.720 
driver but when I say buggy I mean
unstable<00:03:06.190> and<00:03:07.410> you<00:03:08.410> have<00:03:08.560> two<00:03:08.800> modes<00:03:09.010> for<00:03:09.670> the

00:03:09.720 --> 00:03:09.730 
unstable and you have two modes for the

00:03:09.730 --> 00:03:13.910 
unstable and you have two modes for the
agree<00:03:10.210> have<00:03:10.660> copy<00:03:10.990> back<00:03:11.290> and<00:03:11.550> you<00:03:12.550> have<00:03:12.760> native

00:03:13.910 --> 00:03:13.920 
agree have copy back and you have native

00:03:13.920 --> 00:03:17.940 
agree have copy back and you have native
native<00:03:14.920> means<00:03:15.460> that<00:03:16.090> the<00:03:16.720> video<00:03:17.620> image

00:03:17.940 --> 00:03:17.950 
native means that the video image

00:03:17.950 --> 00:03:22.520 
native means that the video image
remains<00:03:18.520> in<00:03:18.880> the<00:03:19.239> display<00:03:20.020> how<00:03:20.620> to<00:03:20.730> memory<00:03:21.730> and

00:03:22.520 --> 00:03:22.530 
remains in the display how to memory and

00:03:22.530 --> 00:03:26.310 
remains in the display how to memory and
copy<00:03:23.530> back<00:03:23.830> means<00:03:24.790> that<00:03:25.239> the<00:03:25.600> image<00:03:25.840> is<00:03:25.870> then

00:03:26.310 --> 00:03:26.320 
copy back means that the image is then

00:03:26.320 --> 00:03:32.550 
copy back means that the image is then
copied<00:03:26.860> back<00:03:27.750> to<00:03:28.750> the<00:03:28.989> CPU<00:03:29.950> memory<00:03:31.560> the

00:03:32.550 --> 00:03:32.560 
copied back to the CPU memory the

00:03:32.560 --> 00:03:36.780 
copied back to the CPU memory the
computer<00:03:33.959> removable<00:03:35.070> which<00:03:36.070> means<00:03:36.370> it<00:03:36.580> can

00:03:36.780 --> 00:03:36.790 
computer removable which means it can

00:03:36.790 --> 00:03:40.190 
computer removable which means it can
then<00:03:36.970> be<00:03:37.180> used<00:03:37.209> for<00:03:37.630> post-processing<00:03:38.620> and<00:03:39.040> for

00:03:40.190 --> 00:03:40.200 
then be used for post-processing and for

00:03:40.200 --> 00:03:46.920 
then be used for post-processing and for
subtitles<00:03:44.670> we<00:03:45.670> just<00:03:45.970> like<00:03:46.239> to<00:03:46.450> make<00:03:46.480> a<00:03:46.630> note

00:03:46.920 --> 00:03:46.930 
subtitles we just like to make a note

00:03:46.930 --> 00:03:49.770 
subtitles we just like to make a note
that<00:03:47.220> hard<00:03:48.220> work<00:03:48.370> acceleration<00:03:49.180> is<00:03:49.450> not

00:03:49.770 --> 00:03:49.780 
that hard work acceleration is not

00:03:49.780 --> 00:03:52.830 
that hard work acceleration is not
always<00:03:50.230> faster<00:03:50.950> than<00:03:51.190> software<00:03:51.840> sometimes

00:03:52.830 --> 00:03:52.840 
always faster than software sometimes

00:03:52.840 --> 00:03:55.199 
always faster than software sometimes
having<00:03:53.260> the<00:03:53.530> setting<00:03:54.250> error<00:03:54.430> none<00:03:54.700> will

00:03:55.199 --> 00:03:55.209 
having the setting error none will

00:03:55.209 --> 00:03:56.520 
having the setting error none will
actually<00:03:55.630> give<00:03:55.870> you<00:03:56.019> better<00:03:56.320> performance

00:03:56.520 --> 00:03:56.530 
actually give you better performance

00:03:56.530 --> 00:04:00.000 
actually give you better performance
when<00:03:57.220> decoding<00:03:57.900> especially<00:03:58.900> noticeable<00:03:59.260> when

00:04:00.000 --> 00:04:00.010 
when decoding especially noticeable when

00:04:00.010 --> 00:04:04.250 
when decoding especially noticeable when
seeking<00:04:00.640> and<00:04:01.410> the<00:04:02.410> reason<00:04:02.709> for<00:04:02.860> this<00:04:03.040> is<00:04:03.100> that

00:04:04.250 --> 00:04:04.260 
seeking and the reason for this is that

00:04:04.260 --> 00:04:09.030 
seeking and the reason for this is that
modern<00:04:05.610> CPUs<00:04:06.610> with<00:04:07.269> multiple<00:04:08.200> cores<00:04:08.680> and

00:04:09.030 --> 00:04:09.040 
modern CPUs with multiple cores and

00:04:09.040 --> 00:04:14.250 
modern CPUs with multiple cores and
multiple<00:04:09.790> threads<00:04:10.860> can<00:04:11.940> sometimes<00:04:12.940> be<00:04:13.750> faster

00:04:14.250 --> 00:04:14.260 
multiple threads can sometimes be faster

00:04:14.260 --> 00:04:21.300 
multiple threads can sometimes be faster
than<00:04:16.320> a<00:04:18.540> custom<00:04:19.540> chip<00:04:19.900> that<00:04:20.169> might<00:04:20.350> be<00:04:20.590> used<00:04:20.890> on

00:04:21.300 --> 00:04:21.310 
than a custom chip that might be used on

00:04:21.310 --> 00:04:25.710 
than a custom chip that might be used on
your<00:04:21.660> display<00:04:22.660> adapter<00:04:23.610> display<00:04:24.610> card

00:04:25.710 --> 00:04:25.720 
your display adapter display card

00:04:25.720 --> 00:04:29.220 
your display adapter display card
so<00:04:26.380> you<00:04:27.010> should<00:04:27.220> check<00:04:27.520> if<00:04:27.820> setting<00:04:28.510> this<00:04:28.990> to

00:04:29.220 --> 00:04:29.230 
so you should check if setting this to

00:04:29.230 --> 00:04:31.260 
so you should check if setting this to
none<00:04:29.440> actually<00:04:29.950> faster<00:04:30.520> and<00:04:30.700> easiest<00:04:31.030> way<00:04:31.240> to

00:04:31.260 --> 00:04:31.270 
none actually faster and easiest way to

00:04:31.270 --> 00:04:34.830 
none actually faster and easiest way to
check<00:04:31.600> is<00:04:31.930> to<00:04:31.990> play<00:04:32.470> HD<00:04:33.430> video<00:04:33.850> and<00:04:34.150> basically

00:04:34.830 --> 00:04:34.840 
check is to play HD video and basically

00:04:34.840 --> 00:04:37.560 
check is to play HD video and basically
just<00:04:35.110> seek<00:04:35.710> backward<00:04:36.640> and<00:04:36.760> forward<00:04:37.210> and<00:04:37.390> see

00:04:37.560 --> 00:04:37.570 
just seek backward and forward and see

00:04:37.570 --> 00:04:42.090 
just seek backward and forward and see
how<00:04:37.750> fast<00:04:38.080> the<00:04:38.260> image<00:04:38.470> returns<00:04:39.780> once<00:04:41.100> enabling

00:04:42.090 --> 00:04:42.100 
how fast the image returns once enabling

00:04:42.100 --> 00:04:44.790 
how fast the image returns once enabling
video<00:04:42.730> acceleration<00:04:43.300> you<00:04:43.540> can<00:04:43.690> select<00:04:43.900> which

00:04:44.790 --> 00:04:44.800 
video acceleration you can select which

00:04:44.800 --> 00:04:48.690 
video acceleration you can select which
format<00:04:45.070> it<00:04:45.490> will<00:04:45.790> be<00:04:45.910> used<00:04:46.090> for<00:04:46.240> and<00:04:47.250> then<00:04:48.250> and

00:04:48.690 --> 00:04:48.700 
format it will be used for and then and

00:04:48.700 --> 00:04:51.090 
format it will be used for and then and
we<00:04:49.120> reach<00:04:49.270> the<00:04:49.300> second<00:04:49.900> subject<00:04:50.740> of<00:04:50.890> this

00:04:51.090 --> 00:04:51.100 
we reach the second subject of this

00:04:51.100 --> 00:04:54.690 
we reach the second subject of this
piece<00:04:52.000> which<00:04:52.810> is<00:04:53.310> hardware<00:04:54.310> video

00:04:54.690 --> 00:04:54.700 
piece which is hardware video

00:04:54.700 --> 00:04:59.880 
piece which is hardware video
deinterlacing<00:04:56.400> for<00:04:57.400> the<00:04:58.150> best<00:04:58.890> information

00:04:59.880 --> 00:04:59.890 
deinterlacing for the best information

00:04:59.890 --> 00:05:03.960 
deinterlacing for the best information
on<00:05:00.580> what<00:05:01.360> the<00:05:01.840> interlacing<00:05:02.380> is<00:05:02.710> you<00:05:03.430> can<00:05:03.640> visit

00:05:03.960 --> 00:05:03.970 
on what the interlacing is you can visit

00:05:03.970 --> 00:05:08.100 
on what the interlacing is you can visit
this<00:05:04.090> website<00:05:04.950> this<00:05:05.950> is<00:05:06.340> a<00:05:06.880> screenshot<00:05:07.300> of<00:05:07.720> the

00:05:08.100 --> 00:05:08.110 
this website this is a screenshot of the

00:05:08.110 --> 00:05:10.830 
this website this is a screenshot of the
comp<00:05:08.410> effect<00:05:08.800> created<00:05:09.400> by<00:05:09.840> interlaced

00:05:10.830 --> 00:05:10.840 
comp effect created by interlaced

00:05:10.840 --> 00:05:14.250 
comp effect created by interlaced
material<00:05:11.550> the<00:05:12.550> interlacing<00:05:13.060> is<00:05:13.420> the<00:05:13.870> method

00:05:14.250 --> 00:05:14.260 
material the interlacing is the method

00:05:14.260 --> 00:05:17.220 
material the interlacing is the method
of<00:05:14.470> removing<00:05:15.150> these<00:05:16.150> lines<00:05:16.450> is<00:05:16.870> calming

00:05:17.220 --> 00:05:17.230 
of removing these lines is calming

00:05:17.230 --> 00:05:21.210 
of removing these lines is calming
effect<00:05:17.560> and<00:05:17.770> in<00:05:18.610> trying<00:05:18.820> to<00:05:19.030> which<00:05:19.210> a<00:05:20.220> clean

00:05:21.210 --> 00:05:21.220 
effect and in trying to which a clean

00:05:21.220 --> 00:05:25.850 
effect and in trying to which a clean
image<00:05:22.800> there<00:05:23.800> are<00:05:24.280> several<00:05:24.640> ways<00:05:24.880> to<00:05:24.940> do<00:05:25.240> this

00:05:25.850 --> 00:05:25.860 
image there are several ways to do this

00:05:25.860 --> 00:05:31.020 
image there are several ways to do this
none<00:05:26.860> is<00:05:27.370> basically<00:05:29.130> none<00:05:30.130> a<00:05:30.160> weave<00:05:30.610> is

00:05:31.020 --> 00:05:31.030 
none is basically none a weave is

00:05:31.030 --> 00:05:35.130 
none is basically none a weave is
basically<00:05:31.419> this<00:05:32.760> which<00:05:33.760> means<00:05:34.210> you<00:05:34.450> see<00:05:34.720> you

00:05:35.130 --> 00:05:35.140 
basically this which means you see you

00:05:35.140 --> 00:05:38.370 
basically this which means you see you
see<00:05:35.350> the<00:05:35.530> calming<00:05:35.830> effect<00:05:36.130> Bob<00:05:37.120> is<00:05:37.450> really

00:05:38.370 --> 00:05:38.380 
see the calming effect Bob is really

00:05:38.380 --> 00:05:42.330 
see the calming effect Bob is really
annoying<00:05:38.890> effect<00:05:39.340> basically<00:05:39.940> and<00:05:40.630> you<00:05:41.500> get<00:05:41.919> to

00:05:42.330 --> 00:05:42.340 
annoying effect basically and you get to

00:05:42.340 --> 00:05:45.990 
annoying effect basically and you get to
see<00:05:42.550> half<00:05:42.760> the<00:05:42.820> picture<00:05:43.860> it's<00:05:44.860> usually<00:05:45.460> double

00:05:45.990 --> 00:05:46.000 
see half the picture it's usually double

00:05:46.000 --> 00:05:48.270 
see half the picture it's usually double
the<00:05:46.120> framerate<00:05:46.390> and<00:05:46.930> it<00:05:47.410> causes<00:05:47.680> a<00:05:47.830> little<00:05:48.130> bit

00:05:48.270 --> 00:05:48.280 
the framerate and it causes a little bit

00:05:48.280 --> 00:05:50.940 
the framerate and it causes a little bit
of<00:05:48.490> image<00:05:49.450> chopping<00:05:49.990> up<00:05:50.169> and<00:05:50.350> down<00:05:50.530> and

00:05:50.940 --> 00:05:50.950 
of image chopping up and down and

00:05:50.950 --> 00:05:53.280 
of image chopping up and down and
detailing<00:05:51.910> a<00:05:52.030> little<00:05:52.240> bit<00:05:52.360> up<00:05:52.480> and<00:05:52.630> down<00:05:52.810> and

00:05:53.280 --> 00:05:53.290 
detailing a little bit up and down and

00:05:53.290 --> 00:05:57.240 
detailing a little bit up and down and
which<00:05:54.190> can<00:05:54.400> be<00:05:54.430> annoying<00:05:55.680> and<00:05:56.680> then<00:05:56.950> you<00:05:57.100> have

00:05:57.240 --> 00:05:57.250 
which can be annoying and then you have

00:05:57.250 --> 00:05:59.820 
which can be annoying and then you have
a<00:05:57.280> duck<00:05:57.520> tip<00:05:57.760> which<00:05:58.000> tries<00:05:58.750> to<00:05:58.830> interpolate

00:05:59.820 --> 00:05:59.830 
a duck tip which tries to interpolate

00:05:59.830 --> 00:06:03.900 
a duck tip which tries to interpolate
the<00:06:00.790> missing<00:06:01.180> pixels<00:06:01.770> to<00:06:02.770> create<00:06:03.070> a<00:06:03.550> smooth

00:06:03.900 --> 00:06:03.910 
the missing pixels to create a smooth

00:06:03.910 --> 00:06:06.570 
the missing pixels to create a smooth
image<00:06:04.150> with<00:06:04.830> without<00:06:05.830> losing<00:06:06.250> too<00:06:06.460> much

00:06:06.570 --> 00:06:06.580 
image with without losing too much

00:06:06.580 --> 00:06:10.040 
image with without losing too much
detail<00:06:07.060> then<00:06:07.960> you<00:06:08.110> have<00:06:08.350> the<00:06:08.830> framerate<00:06:09.250> mode

00:06:10.040 --> 00:06:10.050 
detail then you have the framerate mode

00:06:10.050 --> 00:06:13.730 
detail then you have the framerate mode
you<00:06:11.050> have<00:06:11.260> this<00:06:11.650> mode<00:06:12.370> which<00:06:12.580> basically<00:06:12.610> means

00:06:13.730 --> 00:06:13.740 
you have this mode which basically means

00:06:13.740 --> 00:06:16.260 
you have this mode which basically means
maintaining<00:06:14.740> is<00:06:14.830> the<00:06:14.919> same<00:06:15.160> format<00:06:16.030> as<00:06:16.240> the

00:06:16.260 --> 00:06:16.270 
maintaining is the same format as the

00:06:16.270 --> 00:06:19.140 
maintaining is the same format as the
source<00:06:16.900> material<00:06:17.380> and<00:06:17.560> then<00:06:18.190> you<00:06:18.280> have<00:06:18.490> this

00:06:19.140 --> 00:06:19.150 
source material and then you have this

00:06:19.150 --> 00:06:20.700 
source material and then you have this
option<00:06:19.390> which<00:06:19.720> means<00:06:19.750> doubling<00:06:20.530> the

00:06:20.700 --> 00:06:20.710 
option which means doubling the

00:06:20.710 --> 00:06:24.690 
option which means doubling the
framerate<00:06:21.010> and<00:06:21.370> this<00:06:22.270> can<00:06:22.480> be<00:06:22.600> used<00:06:22.630> to<00:06:23.290> give<00:06:24.040> a

00:06:24.690 --> 00:06:24.700 
framerate and this can be used to give a

00:06:24.700 --> 00:06:28.020 
framerate and this can be used to give a
smoother<00:06:25.240> image<00:06:25.840> by<00:06:26.200> creating<00:06:27.030> interference

00:06:28.020 --> 00:06:28.030 
smoother image by creating interference

00:06:28.030 --> 00:06:34.200 
smoother image by creating interference
from<00:06:28.650> partial<00:06:29.940> data<00:06:31.500> and<00:06:32.500> it<00:06:33.340> makes<00:06:33.669> it<00:06:33.910> appear

00:06:34.200 --> 00:06:34.210 
from partial data and it makes it appear

00:06:34.210 --> 00:06:36.719 
from partial data and it makes it appear
that<00:06:34.240> the<00:06:34.510> video<00:06:34.780> that<00:06:35.260> the<00:06:35.380> video<00:06:35.650> motion<00:06:35.979> and

00:06:36.719 --> 00:06:36.729 
that the video that the video motion and

00:06:36.729 --> 00:06:40.619 
that the video that the video motion and
timing<00:06:37.059> is<00:06:37.270> a<00:06:37.749> lot<00:06:38.080> smoother<00:06:38.439> and<00:06:39.479> lastly<00:06:40.479> you

00:06:40.619 --> 00:06:40.629 
timing is a lot smoother and lastly you

00:06:40.629 --> 00:06:43.619 
timing is a lot smoother and lastly you
have<00:06:40.719> software<00:06:41.499> the<00:06:41.650> interlacing<00:06:42.629> depending

00:06:43.619 --> 00:06:43.629 
have software the interlacing depending

00:06:43.629 --> 00:06:45.059 
have software the interlacing depending
on<00:06:43.749> your<00:06:43.839> hardware<00:06:44.050> software<00:06:44.529> the

00:06:45.059 --> 00:06:45.069 
on your hardware software the

00:06:45.069 --> 00:06:50.909 
on your hardware software the
interlacing<00:06:46.229> may<00:06:47.969> be<00:06:48.969> actually<00:06:49.919> better

00:06:50.909 --> 00:06:50.919 
interlacing may be actually better

00:06:50.919 --> 00:06:57.059 
interlacing may be actually better
quality<00:06:52.860> but<00:06:53.860> it<00:06:54.400> is<00:06:54.460> a<00:06:55.120> CPU<00:06:55.900> based<00:06:56.169> and<00:06:56.499> it

00:06:57.059 --> 00:06:57.069 
quality but it is a CPU based and it

00:06:57.069 --> 00:07:03.390 
quality but it is a CPU based and it
will<00:06:57.370> cost<00:06:58.139> performance<00:06:59.550> I<00:07:01.469> hope<00:07:02.469> this

00:07:03.390 --> 00:07:03.400 
will cost performance I hope this

00:07:03.400 --> 00:07:09.659 
will cost performance I hope this
tutorial<00:07:03.939> was<00:07:04.710> enjoyable<00:07:05.710> and<00:07:06.089> come<00:07:07.089> visit<00:07:07.539> us

