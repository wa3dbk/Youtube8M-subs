WEBVTT
Kind: captions
Language: en

00:00:03.810 --> 00:00:06.530 

in<00:00:03.870> this<00:00:04.770> video<00:00:05.130> I'll<00:00:05.490> show<00:00:05.939> how<00:00:06.120> to<00:00:06.149> use<00:00:06.270> the

00:00:06.530 --> 00:00:06.540 
in this video I'll show how to use the

00:00:06.540 --> 00:00:08.539 
in this video I'll show how to use the
point<00:00:06.810> cloud<00:00:07.020> library<00:00:07.560> within<00:00:07.830> peer<00:00:08.250> review

00:00:08.539 --> 00:00:08.549 
point cloud library within peer review

00:00:08.549 --> 00:00:11.600 
point cloud library within peer review
using<00:00:08.969> the<00:00:09.150> PCL<00:00:09.690> plugin<00:00:10.170> from<00:00:11.100> the<00:00:11.309> sources

00:00:11.600 --> 00:00:11.610 
using the PCL plugin from the sources

00:00:11.610 --> 00:00:13.850 
using the PCL plugin from the sources
menu<00:00:11.879> I'll<00:00:12.209> select<00:00:12.270> the<00:00:12.809> open<00:00:13.170> and<00:00:13.379> I<00:00:13.500> source

00:00:13.850 --> 00:00:13.860 
menu I'll select the open and I source

00:00:13.860 --> 00:00:16.609 
menu I'll select the open and I source
this<00:00:14.730> check<00:00:15.059> box<00:00:15.090> we'll<00:00:15.629> start<00:00:15.930> the<00:00:16.080> open<00:00:16.410> and

00:00:16.609 --> 00:00:16.619 
this check box we'll start the open and

00:00:16.619 --> 00:00:18.189 
this check box we'll start the open and
eye<00:00:16.680> grabber<00:00:16.980> on<00:00:17.250> a<00:00:17.279> separate<00:00:17.699> thread

00:00:18.189 --> 00:00:18.199 
eye grabber on a separate thread

00:00:18.199 --> 00:00:20.960 
eye grabber on a separate thread
clicking<00:00:19.199> the<00:00:19.320> refresh<00:00:19.770> button<00:00:19.800> will<00:00:20.339> display

00:00:20.960 --> 00:00:20.970 
clicking the refresh button will display

00:00:20.970 --> 00:00:22.609 
clicking the refresh button will display
the<00:00:21.119> most<00:00:21.269> recently<00:00:21.750> acquired<00:00:22.050> point<00:00:22.439> cloud

00:00:22.609 --> 00:00:22.619 
the most recently acquired point cloud

00:00:22.619 --> 00:00:25.130 
the most recently acquired point cloud
in<00:00:22.890> the<00:00:22.949> pair<00:00:23.279> of<00:00:23.310> you<00:00:23.460> render<00:00:23.789> window<00:00:24.140> I'll

00:00:25.130 --> 00:00:25.140 
in the pair of you render window I'll

00:00:25.140 --> 00:00:27.499 
in the pair of you render window I'll
change<00:00:25.499> the<00:00:25.679> coloring<00:00:25.949> mode<00:00:26.220> to<00:00:26.490> display<00:00:26.640> RGB

00:00:27.499 --> 00:00:27.509 
change the coloring mode to display RGB

00:00:27.509 --> 00:00:38.300 
change the coloring mode to display RGB
colors<00:00:35.690> the<00:00:36.690> auto<00:00:36.900> refresh<00:00:37.350> checkbox<00:00:38.040> will

00:00:38.300 --> 00:00:38.310 
colors the auto refresh checkbox will

00:00:38.310 --> 00:00:40.790 
colors the auto refresh checkbox will
update<00:00:38.520> the<00:00:38.850> point<00:00:39.090> cloud<00:00:39.240> on<00:00:39.510> a<00:00:39.540> timer<00:00:39.840> this

00:00:40.790 --> 00:00:40.800 
update the point cloud on a timer this

00:00:40.800 --> 00:00:43.010 
update the point cloud on a timer this
slider<00:00:41.130> controls<00:00:41.610> the<00:00:41.760> update<00:00:42.120> frequency<00:00:42.510> all

00:00:43.010 --> 00:00:43.020 
slider controls the update frequency all

00:00:43.020 --> 00:00:44.990 
slider controls the update frequency all
the<00:00:43.320> way<00:00:43.410> to<00:00:43.470> the<00:00:43.680> left<00:00:43.860> is<00:00:44.130> 30<00:00:44.370> frames<00:00:44.580> per

00:00:44.990 --> 00:00:45.000 
the way to the left is 30 frames per

00:00:45.000 --> 00:00:51.410 
the way to the left is 30 frames per
second<00:00:49.130> now<00:00:50.160> I'll<00:00:50.460> build<00:00:50.790> a<00:00:50.910> segmentation

00:00:51.410 --> 00:00:51.420 
second now I'll build a segmentation

00:00:51.420 --> 00:00:55.010 
second now I'll build a segmentation
pipeline<00:00:52.020> using<00:00:52.530> PCL<00:00:53.130> filters<00:00:53.750> first<00:00:54.750> I'll

00:00:55.010 --> 00:00:55.020 
pipeline using PCL filters first I'll

00:00:55.020 --> 00:00:57.200 
pipeline using PCL filters first I'll
apply<00:00:55.200> the<00:00:55.410> voxel<00:00:55.980> grid<00:00:56.010> filter<00:00:56.550> to<00:00:57.030> reduce

00:00:57.200 --> 00:00:57.210 
apply the voxel grid filter to reduce

00:00:57.210 --> 00:01:03.590 
apply the voxel grid filter to reduce
the<00:00:57.660> overall<00:00:57.930> number<00:00:58.380> of<00:00:58.500> points<00:01:02.240> next<00:01:03.240> I'll

00:01:03.590 --> 00:01:03.600 
the overall number of points next I'll

00:01:03.600 --> 00:01:06.080 
the overall number of points next I'll
run<00:01:03.870> the<00:01:04.049> ransac<00:01:04.500> segmentation<00:01:05.280> filter<00:01:05.610> to

00:01:06.080 --> 00:01:06.090 
run the ransac segmentation filter to

00:01:06.090 --> 00:01:08.120 
run the ransac segmentation filter to
fit<00:01:06.299> a<00:01:06.330> plane<00:01:06.689> model<00:01:06.930> to<00:01:07.259> the<00:01:07.380> wall<00:01:07.590> behind<00:01:07.859> the

00:01:08.120 --> 00:01:08.130 
fit a plane model to the wall behind the

00:01:08.130 --> 00:01:12.289 
fit a plane model to the wall behind the
tabletop<00:01:09.920> will<00:01:10.920> color<00:01:11.130> the<00:01:11.340> points<00:01:11.640> by<00:01:11.789> ransac

00:01:12.289 --> 00:01:12.299 
tabletop will color the points by ransac

00:01:12.299 --> 00:01:14.510 
tabletop will color the points by ransac
label<00:01:12.689> the<00:01:13.170> red<00:01:13.350> points<00:01:13.679> are<00:01:13.770> in<00:01:13.950> liars

00:01:14.510 --> 00:01:14.520 
label the red points are in liars

00:01:14.520 --> 00:01:17.149 
label the red points are in liars
the<00:01:14.729> blue<00:01:14.939> points<00:01:15.179> are<00:01:15.479> outliers<00:01:16.159> these

00:01:17.149 --> 00:01:17.159 
the blue points are outliers these

00:01:17.159 --> 00:01:18.830 
the blue points are outliers these
points<00:01:17.520> protruding<00:01:17.939> from<00:01:17.999> the<00:01:18.179> wall<00:01:18.359> were<00:01:18.659> not

00:01:18.830 --> 00:01:18.840 
points protruding from the wall were not

00:01:18.840 --> 00:01:21.289 
points protruding from the wall were not
segmented<00:01:19.439> I<00:01:19.649> can<00:01:20.310> increase<00:01:20.609> the<00:01:20.729> distance

00:01:21.289 --> 00:01:21.299 
segmented I can increase the distance

00:01:21.299 --> 00:01:23.179 
segmented I can increase the distance
threshold<00:01:21.749> parameter<00:01:21.929> to<00:01:22.619> include<00:01:23.039> these

00:01:23.179 --> 00:01:23.189 
threshold parameter to include these

00:01:23.189 --> 00:01:28.520 
threshold parameter to include these
points<00:01:23.549> in<00:01:23.670> the<00:01:23.759> segmentation<00:01:27.350> next<00:01:28.350> I'll

00:01:28.520 --> 00:01:28.530 
points in the segmentation next I'll

00:01:28.530 --> 00:01:30.859 
points in the segmentation next I'll
apply<00:01:28.560> a<00:01:28.859> threshold<00:01:29.280> points<00:01:29.850> filter<00:01:30.179> this<00:01:30.659> is

00:01:30.859 --> 00:01:30.869 
apply a threshold points filter this is

00:01:30.869 --> 00:01:32.539 
apply a threshold points filter this is
a<00:01:30.899> pass-through<00:01:31.200> filter<00:01:31.770> that<00:01:32.039> is<00:01:32.189> used<00:01:32.399> to

00:01:32.539 --> 00:01:32.549 
a pass-through filter that is used to

00:01:32.549 --> 00:01:40.010 
a pass-through filter that is used to
remove<00:01:32.700> the<00:01:33.090> red<00:01:33.270> points<00:01:38.030> now<00:01:39.030> I'm<00:01:39.389> applying<00:01:39.810> a

00:01:40.010 --> 00:01:40.020 
remove the red points now I'm applying a

00:01:40.020 --> 00:01:41.959 
remove the red points now I'm applying a
Python<00:01:40.439> program<00:01:40.920> and<00:01:41.100> will<00:01:41.189> filter<00:01:41.460> and

00:01:41.959 --> 00:01:41.969 
Python program and will filter and

00:01:41.969 --> 00:01:44.599 
Python program and will filter and
pasting<00:01:42.420> in<00:01:42.509> some<00:01:42.719> Python<00:01:42.929> code<00:01:43.340> this<00:01:44.340> code

00:01:44.599 --> 00:01:44.609 
pasting in some Python code this code

00:01:44.609 --> 00:01:46.669 
pasting in some Python code this code
runs<00:01:44.939> the<00:01:45.210> ransac<00:01:45.659> segmentation<00:01:46.319> filter

00:01:46.669 --> 00:01:46.679 
runs the ransac segmentation filter

00:01:46.679 --> 00:01:49.129 
runs the ransac segmentation filter
again<00:01:46.979> this<00:01:47.609> time<00:01:47.909> to<00:01:48.119> segment<00:01:48.509> the<00:01:48.600> tabletop

00:01:49.129 --> 00:01:49.139 
again this time to segment the tabletop

00:01:49.139 --> 00:01:52.099 
again this time to segment the tabletop
then<00:01:50.069> for<00:01:50.579> each<00:01:50.700> point<00:01:50.969> it<00:01:51.299> computes<00:01:51.689> the<00:01:51.869> sine

00:01:52.099 --> 00:01:52.109 
then for each point it computes the sine

00:01:52.109 --> 00:01:55.969 
then for each point it computes the sine
distance<00:01:52.590> to<00:01:52.799> the<00:01:52.920> plane<00:01:53.159> now<00:01:54.139> I<00:01:55.139> can<00:01:55.590> apply

00:01:55.969 --> 00:01:55.979 
distance to the plane now I can apply

00:01:55.979 --> 00:01:57.679 
distance to the plane now I can apply
the<00:01:56.100> threshold<00:01:56.639> filter<00:01:56.909> again<00:01:57.209> to<00:01:57.450> keep<00:01:57.630> the

00:01:57.679 --> 00:01:57.689 
the threshold filter again to keep the

00:01:57.689 --> 00:02:06.060 
the threshold filter again to keep the
points<00:01:58.170> that<00:01:58.319> are<00:01:58.380> above<00:01:58.679> the<00:01:58.859> tabletop

00:02:06.060 --> 00:02:06.070 

00:02:06.070 --> 00:02:08.530 

I'll<00:02:07.070> use<00:02:07.370> the<00:02:07.580> Euclidean<00:02:08.119> cluster

00:02:08.530 --> 00:02:08.540 
I'll use the Euclidean cluster

00:02:08.540 --> 00:02:10.450 
I'll use the Euclidean cluster
extraction<00:02:09.140> filter<00:02:09.470> to<00:02:09.860> cluster<00:02:10.280> the

00:02:10.450 --> 00:02:10.460 
extraction filter to cluster the

00:02:10.460 --> 00:02:16.840 
extraction filter to cluster the
remaining<00:02:10.910> points<00:02:15.100> now<00:02:16.100> I<00:02:16.130> can<00:02:16.460> color<00:02:16.640> the

00:02:16.840 --> 00:02:16.850 
remaining points now I can color the

00:02:16.850 --> 00:02:21.190 
remaining points now I can color the
points<00:02:17.180> by<00:02:17.330> cluster<00:02:17.780> label<00:02:19.990> finally<00:02:20.990> I'll

00:02:21.190 --> 00:02:21.200 
points by cluster label finally I'll

00:02:21.200 --> 00:02:23.260 
points by cluster label finally I'll
apply<00:02:21.560> an<00:02:21.710> annotation<00:02:22.190> filter<00:02:22.700> to<00:02:23.000> draw

00:02:23.260 --> 00:02:23.270 
apply an annotation filter to draw

00:02:23.270 --> 00:02:25.270 
apply an annotation filter to draw
oriented<00:02:23.870> bounding<00:02:24.230> boxes<00:02:24.590> around<00:02:24.950> each

00:02:25.270 --> 00:02:25.280 
oriented bounding boxes around each

00:02:25.280 --> 00:02:31.600 
oriented bounding boxes around each
cluster<00:02:28.840> now<00:02:29.840> I<00:02:29.900> can<00:02:30.320> go<00:02:30.470> back<00:02:30.710> to<00:02:30.740> the<00:02:31.010> open<00:02:31.340> ni

00:02:31.600 --> 00:02:31.610 
cluster now I can go back to the open ni

00:02:31.610 --> 00:02:33.460 
cluster now I can go back to the open ni
source<00:02:31.910> at<00:02:32.180> the<00:02:32.300> top<00:02:32.510> of<00:02:32.720> the<00:02:32.810> pipeline<00:02:33.260> and

00:02:33.460 --> 00:02:33.470 
source at the top of the pipeline and

00:02:33.470 --> 00:02:35.800 
source at the top of the pipeline and
enable<00:02:34.310> the<00:02:34.460> auto<00:02:34.640> refresh<00:02:35.090> mode<00:02:35.450> to

00:02:35.800 --> 00:02:35.810 
enable the auto refresh mode to

00:02:35.810 --> 00:02:37.180 
enable the auto refresh mode to
continuously<00:02:36.470> update<00:02:36.560> the<00:02:37.070> entire

00:02:37.180 --> 00:02:37.190 
continuously update the entire

00:02:37.190 --> 00:02:39.670 
continuously update the entire
segmentation<00:02:38.180> pipeline<00:02:38.600> with<00:02:39.170> the<00:02:39.320> newly

00:02:39.670 --> 00:02:39.680 
segmentation pipeline with the newly

00:02:39.680 --> 00:02:43.810 
segmentation pipeline with the newly
acquired<00:02:39.950> point<00:02:40.370> clouds<00:02:40.610> I<00:02:42.550> can<00:02:43.550> manipulate

00:02:43.810 --> 00:02:43.820 
acquired point clouds I can manipulate

00:02:43.820 --> 00:02:45.910 
acquired point clouds I can manipulate
the<00:02:44.209> objects<00:02:44.600> on<00:02:44.810> the<00:02:44.959> table<00:02:45.110> and<00:02:45.530> see<00:02:45.770> the

00:02:45.910 --> 00:02:45.920 
the objects on the table and see the

00:02:45.920 --> 00:03:33.370 
the objects on the table and see the
segmentation<00:02:46.400> results<00:02:46.730> update<00:02:47.720> in<00:02:47.870> real-time

00:03:33.370 --> 00:03:33.380 

00:03:33.380 --> 00:03:35.750 

thanks<00:03:34.380> for<00:03:34.530> watching<00:03:34.860> for<00:03:35.550> more<00:03:35.610> information

00:03:35.750 --> 00:03:35.760 
thanks for watching for more information

00:03:35.760 --> 00:03:39.710 
thanks for watching for more information
please<00:03:36.390> visit<00:03:36.930> our<00:03:37.200> wiki<00:03:37.410> page

