WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:02.750 

look<00:00:01.260> at<00:00:01.350> this<00:00:01.469> question<00:00:01.829> assumed<00:00:02.580> that<00:00:02.700> a

00:00:02.750 --> 00:00:02.760 
look at this question assumed that a

00:00:02.760 --> 00:00:04.490 
look at this question assumed that a
sliding<00:00:03.120> window<00:00:03.149> protocol<00:00:03.449> is<00:00:03.810> designed<00:00:04.230> for

00:00:04.490 --> 00:00:04.500 
sliding window protocol is designed for

00:00:04.500 --> 00:00:07.400 
sliding window protocol is designed for
one<00:00:04.740> than<00:00:04.920> BPS<00:00:05.339> point-to-point<00:00:05.960> link<00:00:06.960> to<00:00:07.170> moon

00:00:07.400 --> 00:00:07.410 
one than BPS point-to-point link to moon

00:00:07.410 --> 00:00:09.020 
one than BPS point-to-point link to moon
which<00:00:07.740> means<00:00:07.950> from<00:00:08.160> Earth<00:00:08.370> we<00:00:08.730> are<00:00:08.820> operating

00:00:09.020 --> 00:00:09.030 
which means from Earth we are operating

00:00:09.030 --> 00:00:11.930 
which means from Earth we are operating
to<00:00:09.480> the<00:00:09.599> moon<00:00:09.840> and<00:00:10.099> which<00:00:11.099> has<00:00:11.370> one-way

00:00:11.930 --> 00:00:11.940 
to the moon and which has one-way

00:00:11.940 --> 00:00:14.570 
to the moon and which has one-way
latency<00:00:12.599> which<00:00:13.019> is<00:00:13.170> one<00:00:13.799> with<00:00:13.950> latency<00:00:14.250> means

00:00:14.570 --> 00:00:14.580 
latency which is one with latency means

00:00:14.580 --> 00:00:16.790 
latency which is one with latency means
the<00:00:14.700> propagation<00:00:15.150> delay<00:00:15.420> one-way<00:00:16.260> latency<00:00:16.710> of

00:00:16.790 --> 00:00:16.800 
the propagation delay one-way latency of

00:00:16.800 --> 00:00:19.279 
the propagation delay one-way latency of
1.25<00:00:17.550> seconds<00:00:18.119> actually<00:00:18.300> it<00:00:18.630> is<00:00:18.750> a<00:00:18.779> practical

00:00:19.279 --> 00:00:19.289 
1.25 seconds actually it is a practical

00:00:19.289 --> 00:00:21.109 
1.25 seconds actually it is a practical
version<00:00:19.650> in<00:00:19.710> the<00:00:19.800> sense<00:00:20.010> whatever<00:00:20.609> value<00:00:21.060> is

00:00:21.109 --> 00:00:21.119 
version in the sense whatever value is

00:00:21.119 --> 00:00:23.150 
version in the sense whatever value is
given<00:00:21.240> here<00:00:21.630> they<00:00:21.869> are<00:00:21.930> all<00:00:22.020> right<00:00:22.289> so<00:00:22.560> one

00:00:23.150 --> 00:00:23.160 
given here they are all right so one

00:00:23.160 --> 00:00:24.859 
given here they are all right so one
point<00:00:23.430> two<00:00:23.550> five<00:00:23.699> seconds<00:00:24.119> means<00:00:24.330> if<00:00:24.570> you<00:00:24.660> send

00:00:24.859 --> 00:00:24.869 
point two five seconds means if you send

00:00:24.869 --> 00:00:27.140 
point two five seconds means if you send
a<00:00:24.960> light<00:00:25.140> light<00:00:25.560> wave<00:00:25.830> from<00:00:26.099> here<00:00:26.130> to<00:00:26.580> moon<00:00:26.849> it

00:00:27.140 --> 00:00:27.150 
a light light wave from here to moon it

00:00:27.150 --> 00:00:29.300 
a light light wave from here to moon it
will<00:00:27.300> take<00:00:27.510> one<00:00:27.750> point<00:00:28.019> two<00:00:28.260> five<00:00:28.500> seconds<00:00:29.160> so

00:00:29.300 --> 00:00:29.310 
will take one point two five seconds so

00:00:29.310 --> 00:00:32.389 
will take one point two five seconds so
one<00:00:29.970> point<00:00:30.179> two<00:00:30.420> five<00:00:30.630> seconds<00:00:31.289> assuming<00:00:32.219> that

00:00:32.389 --> 00:00:32.399 
one point two five seconds assuming that

00:00:32.399 --> 00:00:34.880 
one point two five seconds assuming that
each<00:00:32.610> frame<00:00:32.910> carries<00:00:33.329> one<00:00:33.660> KB<00:00:34.079> of<00:00:34.230> data<00:00:34.500> which

00:00:34.880 --> 00:00:34.890 
each frame carries one KB of data which

00:00:34.890 --> 00:00:37.910 
each frame carries one KB of data which
means<00:00:35.100> size<00:00:35.309> of<00:00:35.520> a<00:00:35.640> frame<00:00:35.910> is<00:00:36.059> one<00:00:36.480> KB<00:00:36.930> what<00:00:37.739> is

00:00:37.910 --> 00:00:37.920 
means size of a frame is one KB what is

00:00:37.920 --> 00:00:39.619 
means size of a frame is one KB what is
the<00:00:38.070> minimum<00:00:38.309> number<00:00:38.399> of<00:00:38.760> bits<00:00:38.969> required<00:00:39.030> for

00:00:39.619 --> 00:00:39.629 
the minimum number of bits required for

00:00:39.629 --> 00:00:41.660 
the minimum number of bits required for
sequence<00:00:40.140> number<00:00:40.440> field<00:00:40.739> and<00:00:41.219> I<00:00:41.370> told<00:00:41.550> you

00:00:41.660 --> 00:00:41.670 
sequence number field and I told you

00:00:41.670 --> 00:00:44.000 
sequence number field and I told you
that<00:00:41.850> the<00:00:42.270> number<00:00:42.570> of<00:00:42.600> bits<00:00:43.290> required<00:00:43.469> in

00:00:44.000 --> 00:00:44.010 
that the number of bits required in

00:00:44.010 --> 00:00:45.740 
that the number of bits required in
sequence<00:00:44.399> number<00:00:44.670> field<00:00:44.910> is<00:00:45.030> always<00:00:45.210> equal<00:00:45.539> to

00:00:45.740 --> 00:00:45.750 
sequence number field is always equal to

00:00:45.750 --> 00:00:48.110 
sequence number field is always equal to
the<00:00:45.960> center<00:00:46.680> window<00:00:46.860> size<00:00:47.129> and<00:00:47.370> the<00:00:47.820> center

00:00:48.110 --> 00:00:48.120 
the center window size and the center

00:00:48.120 --> 00:00:50.630 
the center window size and the center
window<00:00:48.239> size<00:00:48.510> is<00:00:48.750> 1<00:00:49.050> plus<00:00:49.289> 2<00:00:49.320> a<00:00:49.559> very<00:00:50.100> a<00:00:50.250> equal

00:00:50.630 --> 00:00:50.640 
window size is 1 plus 2 a very a equal

00:00:50.640 --> 00:00:54.350 
window size is 1 plus 2 a very a equal
to<00:00:50.879> TP<00:00:51.420> by<00:00:51.750> TT<00:00:52.260> right<00:00:52.559> so<00:00:53.070> just<00:00:53.309> watch<00:00:53.550> it<00:00:53.760> the

00:00:54.350 --> 00:00:54.360 
to TP by TT right so just watch it the

00:00:54.360 --> 00:00:57.020 
to TP by TT right so just watch it the
value<00:00:54.899> is<00:00:54.960> given<00:00:55.079> R<00:00:55.289> here<00:00:55.530> now<00:00:56.039> TP<00:00:56.520> is<00:00:56.610> given<00:00:56.879> as

00:00:57.020 --> 00:00:57.030 
value is given R here now TP is given as

00:00:57.030 --> 00:00:59.119 
value is given R here now TP is given as
1<00:00:57.239> point<00:00:57.449> two<00:00:57.690> five<00:00:57.840> seconds<00:00:58.320> so<00:00:58.739> what<00:00:58.920> they

00:00:59.119 --> 00:00:59.129 
1 point two five seconds so what they

00:00:59.129 --> 00:01:01.130 
1 point two five seconds so what they
give<00:00:59.340> is<00:00:59.489> one<00:00:59.879> way<00:01:00.030> delay<00:01:00.300> from<00:01:00.510> earth<00:01:00.690> to<00:01:00.930> moon

00:01:01.130 --> 00:01:01.140 
give is one way delay from earth to moon

00:01:01.140 --> 00:01:02.959 
give is one way delay from earth to moon
so<00:01:01.289> if<00:01:01.379> you<00:01:01.469> want<00:01:01.649> to<00:01:01.770> see<00:01:02.010> it<00:01:02.100> they<00:01:02.699> are<00:01:02.730> saying

00:01:02.959 --> 00:01:02.969 
so if you want to see it they are saying

00:01:02.969 --> 00:01:05.240 
so if you want to see it they are saying
that<00:01:03.270> you<00:01:03.719> are<00:01:03.750> in<00:01:03.989> earth<00:01:04.260> and<00:01:04.530> there<00:01:04.890> is<00:01:04.979> moon

00:01:05.240 --> 00:01:05.250 
that you are in earth and there is moon

00:01:05.250 --> 00:01:07.910 
that you are in earth and there is moon
and<00:01:05.519> now<00:01:06.330> the<00:01:06.750> distance<00:01:07.170> the<00:01:07.439> propagation

00:01:07.910 --> 00:01:07.920 
and now the distance the propagation

00:01:07.920 --> 00:01:10.490 
and now the distance the propagation
delay<00:01:08.130> is<00:01:08.299> 1.25<00:01:09.299> that<00:01:09.720> is<00:01:09.810> what<00:01:09.990> they<00:01:10.200> given

00:01:10.490 --> 00:01:10.500 
delay is 1.25 that is what they given

00:01:10.500 --> 00:01:12.800 
delay is 1.25 that is what they given
right<00:01:10.830> and<00:01:11.310> now<00:01:11.520> you<00:01:11.580> have<00:01:11.790> to<00:01:11.880> find<00:01:12.119> out<00:01:12.360> from

00:01:12.800 --> 00:01:12.810 
right and now you have to find out from

00:01:12.810 --> 00:01:14.899 
right and now you have to find out from
the<00:01:13.049> given<00:01:13.409> parameters<00:01:13.560> how<00:01:14.280> many<00:01:14.490> bits<00:01:14.729> are

00:01:14.899 --> 00:01:14.909 
the given parameters how many bits are

00:01:14.909 --> 00:01:16.370 
the given parameters how many bits are
required<00:01:14.939> in<00:01:15.330> this<00:01:15.450> sequence<00:01:15.840> number<00:01:16.140> feed

00:01:16.370 --> 00:01:16.380 
required in this sequence number feed

00:01:16.380 --> 00:01:18.289 
required in this sequence number feed
that<00:01:16.920> depends<00:01:17.310> on<00:01:17.400> the<00:01:17.520> number<00:01:17.790> of<00:01:17.820> packets

00:01:18.289 --> 00:01:18.299 
that depends on the number of packets

00:01:18.299 --> 00:01:19.820 
that depends on the number of packets
that<00:01:18.479> has<00:01:18.630> to<00:01:18.780> be<00:01:18.900> said<00:01:19.080> that<00:01:19.110> will<00:01:19.350> be<00:01:19.470> sent<00:01:19.710> in

00:01:19.820 --> 00:01:19.830 
that has to be said that will be sent in

00:01:19.830 --> 00:01:22.580 
that has to be said that will be sent in
one<00:01:20.070> window<00:01:20.280> so<00:01:21.060> just<00:01:21.299> watch<00:01:21.509> it<00:01:21.720> propagation

00:01:22.580 --> 00:01:22.590 
one window so just watch it propagation

00:01:22.590 --> 00:01:25.219 
one window so just watch it propagation
is<00:01:22.680> a<00:01:22.770> TP<00:01:23.130> equal<00:01:23.430> to<00:01:23.549> 1.25<00:01:24.210> seconds<00:01:24.840> that<00:01:25.110> is

00:01:25.219 --> 00:01:25.229 
is a TP equal to 1.25 seconds that is

00:01:25.229 --> 00:01:27.950 
is a TP equal to 1.25 seconds that is
that<00:01:25.799> is<00:01:25.890> already<00:01:26.070> given<00:01:26.430> and<00:01:26.610> T<00:01:27.210> T<00:01:27.360> equal<00:01:27.720> to<00:01:27.750> L

00:01:27.950 --> 00:01:27.960 
that is already given and T T equal to L

00:01:27.960 --> 00:01:29.899 
that is already given and T T equal to L
by<00:01:28.170> B<00:01:28.200> length<00:01:28.829> of<00:01:29.009> the<00:01:29.159> packet<00:01:29.340> divided<00:01:29.790> by

00:01:29.899 --> 00:01:29.909 
by B length of the packet divided by

00:01:29.909 --> 00:01:32.530 
by B length of the packet divided by
bandwidth<00:01:30.420> and<00:01:30.630> length<00:01:31.259> of<00:01:31.409> the<00:01:31.560> packet<00:01:31.740> is<00:01:32.009> 8

00:01:32.530 --> 00:01:32.540 
bandwidth and length of the packet is 8

00:01:32.540 --> 00:01:36.740 
bandwidth and length of the packet is 8
they<00:01:33.540> have<00:01:33.659> given<00:01:33.869> it<00:01:33.990> as<00:01:34.140> 8<00:01:34.380> KB<00:01:34.920> right<00:01:35.310> so<00:01:36.060> 8

00:01:36.740 --> 00:01:36.750 
they have given it as 8 KB right so 8

00:01:36.750 --> 00:01:38.390 
they have given it as 8 KB right so 8
length<00:01:37.409> of<00:01:37.560> the<00:01:37.650> path<00:01:37.799> for<00:01:37.979> each<00:01:38.009> length<00:01:38.250> of

00:01:38.390 --> 00:01:38.400 
length of the path for each length of

00:01:38.400 --> 00:01:41.060 
length of the path for each length of
the<00:01:38.490> packet<00:01:38.670> is<00:01:38.850> 1<00:01:39.090> KB<00:01:39.570> 1<00:01:39.900> KB<00:01:40.259> means<00:01:40.470> a<00:01:40.710> kilo

00:01:41.060 --> 00:01:41.070 
the packet is 1 KB 1 KB means a kilo

00:01:41.070 --> 00:01:42.800 
the packet is 1 KB 1 KB means a kilo
byte<00:01:41.310> converted<00:01:42.299> to<00:01:42.450> bits

00:01:42.800 --> 00:01:42.810 
byte converted to bits

00:01:42.810 --> 00:01:45.710 
byte converted to bits
see<00:01:43.560> this<00:01:43.710> convert<00:01:44.640> the<00:01:44.759> packet<00:01:45.299> into<00:01:45.509> bits

00:01:45.710 --> 00:01:45.720 
see this convert the packet into bits

00:01:45.720 --> 00:01:47.510 
see this convert the packet into bits
divided<00:01:46.110> by<00:01:46.290> bandwidth<00:01:46.710> therefore<00:01:47.250> you<00:01:47.340> got

00:01:47.510 --> 00:01:47.520 
divided by bandwidth therefore you got

00:01:47.520 --> 00:01:49.880 
divided by bandwidth therefore you got
TT<00:01:47.909> that<00:01:48.210> is<00:01:48.329> straight<00:01:48.570> forward<00:01:48.810> and<00:01:49.470> it<00:01:49.680> is<00:01:49.799> in

00:01:49.880 --> 00:01:49.890 
TT that is straight forward and it is in

00:01:49.890 --> 00:01:53.300 
TT that is straight forward and it is in
seconds<00:01:51.320> it<00:01:52.320> is<00:01:52.380> straight<00:01:52.680> forward<00:01:53.040> nothing

00:01:53.300 --> 00:01:53.310 
seconds it is straight forward nothing

00:01:53.310 --> 00:01:56.600 
seconds it is straight forward nothing
much<00:01:53.490> and<00:01:53.759> a<00:01:54.600> equal<00:01:54.840> to<00:01:55.079> TP<00:01:55.320> by<00:01:55.590> TT<00:01:55.979> so<00:01:56.250> you<00:01:56.310> take

00:01:56.600 --> 00:01:56.610 
much and a equal to TP by TT so you take

00:01:56.610 --> 00:02:00.200 
much and a equal to TP by TT so you take
TP<00:01:57.030> and<00:01:57.240> /<00:01:57.810> TT<00:01:58.020> you<00:01:58.229> are<00:01:58.290> going<00:01:58.530> to<00:01:58.649> get<00:01:58.770> a<00:01:58.829> +<00:01:59.250> 1<00:01:59.939> +

00:02:00.200 --> 00:02:00.210 
TP and / TT you are going to get a + 1 +

00:02:00.210 --> 00:02:02.090 
TP and / TT you are going to get a + 1 +
2<00:02:00.390> a<00:02:00.479> equal<00:02:00.810> to<00:02:00.899> 3<00:02:01.110> not<00:02:01.290> 6<00:02:01.560> what<00:02:01.920> did<00:02:02.040> you

00:02:02.090 --> 00:02:02.100 
2 a equal to 3 not 6 what did you

00:02:02.100 --> 00:02:04.550 
2 a equal to 3 not 6 what did you
understand<00:02:02.460> from<00:02:02.490> this<00:02:02.670> in<00:02:03.450> order<00:02:03.719> to<00:02:03.869> in

00:02:04.550 --> 00:02:04.560 
understand from this in order to in

00:02:04.560 --> 00:02:06.859 
understand from this in order to in
order<00:02:04.710> to<00:02:04.920> fool<00:02:05.189> the<00:02:05.549> capacity<00:02:06.329> of<00:02:06.360> the<00:02:06.540> static

00:02:06.859 --> 00:02:06.869 
order to fool the capacity of the static

00:02:06.869 --> 00:02:08.600 
order to fool the capacity of the static
window<00:02:07.079> protocol<00:02:07.530> we<00:02:08.039> have<00:02:08.069> to<00:02:08.220> send<00:02:08.429> at<00:02:08.580> least

00:02:08.600 --> 00:02:08.610 
window protocol we have to send at least

00:02:08.610 --> 00:02:11.059 
window protocol we have to send at least
3<00:02:09.030> not<00:02:09.209> 6<00:02:09.479> packets<00:02:09.899> if<00:02:10.170> we<00:02:10.349> have<00:02:10.470> to<00:02:10.560> send<00:02:10.770> 3<00:02:10.860> not

00:02:11.059 --> 00:02:11.069 
3 not 6 packets if we have to send 3 not

00:02:11.069 --> 00:02:13.760 
3 not 6 packets if we have to send 3 not
6<00:02:11.310> packets<00:02:11.670> then<00:02:11.940> how<00:02:12.120> many<00:02:12.260> sequence<00:02:13.260> numbers

00:02:13.760 --> 00:02:13.770 
6 packets then how many sequence numbers

00:02:13.770 --> 00:02:15.560 
6 packets then how many sequence numbers
have<00:02:13.980> at<00:02:14.430> least<00:02:14.700> three<00:02:14.880> not<00:02:15.030> sixty<00:02:15.360> class

00:02:15.560 --> 00:02:15.570 
have at least three not sixty class

00:02:15.570 --> 00:02:17.330 
have at least three not sixty class
members<00:02:15.900> you<00:02:15.990> should<00:02:16.140> have<00:02:16.320> right<00:02:16.650> therefore

00:02:17.330 --> 00:02:17.340 
members you should have right therefore

00:02:17.340 --> 00:02:20.210 
members you should have right therefore
we<00:02:17.700> are<00:02:17.730> going<00:02:17.820> to<00:02:18.120> find<00:02:18.530> the<00:02:19.530> number<00:02:19.830> of<00:02:19.860> bits

00:02:20.210 --> 00:02:20.220 
we are going to find the number of bits

00:02:20.220 --> 00:02:22.490 
we are going to find the number of bits
number<00:02:20.610> of<00:02:20.700> bits<00:02:20.910> is<00:02:21.030> nothing<00:02:21.360> but<00:02:21.510> these<00:02:22.170> for

00:02:22.490 --> 00:02:22.500 
number of bits is nothing but these for

00:02:22.500 --> 00:02:24.530 
number of bits is nothing but these for
these<00:02:22.680> many<00:02:22.890> packets<00:02:23.340> you<00:02:23.490> apply<00:02:23.760> log<00:02:23.970> to<00:02:24.270> then

00:02:24.530 --> 00:02:24.540 
these many packets you apply log to then

00:02:24.540 --> 00:02:26.210 
these many packets you apply log to then
we<00:02:24.690> get<00:02:24.810> the<00:02:24.960> number<00:02:25.200> of<00:02:25.230> bits<00:02:25.590> and<00:02:25.830> you<00:02:25.950> apply

00:02:26.210 --> 00:02:26.220 
we get the number of bits and you apply

00:02:26.220 --> 00:02:28.250 
we get the number of bits and you apply
this<00:02:26.280> seal<00:02:26.610> there<00:02:26.880> is<00:02:26.970> an<00:02:27.090> else<00:02:27.270> whenever<00:02:28.110> they

00:02:28.250 --> 00:02:28.260 
this seal there is an else whenever they

00:02:28.260 --> 00:02:29.960 
this seal there is an else whenever they
ask<00:02:28.380> you<00:02:28.560> for<00:02:28.710> the<00:02:28.830> minimum<00:02:29.190> you<00:02:29.370> go<00:02:29.520> for<00:02:29.700> seal

00:02:29.960 --> 00:02:29.970 
ask you for the minimum you go for seal

00:02:29.970 --> 00:02:31.490 
ask you for the minimum you go for seal
whenever<00:02:30.330> they<00:02:30.450> ask<00:02:30.570> you<00:02:30.720> for<00:02:30.750> the<00:02:30.960> maximum<00:02:31.410> we

00:02:31.490 --> 00:02:31.500 
whenever they ask you for the maximum we

00:02:31.500 --> 00:02:33.680 
whenever they ask you for the maximum we
go<00:02:31.650> for<00:02:31.860> floor<00:02:32.670> and<00:02:32.910> here<00:02:33.150> they<00:02:33.330> are<00:02:33.390> asking

00:02:33.680 --> 00:02:33.690 
go for floor and here they are asking

00:02:33.690 --> 00:02:35.270 
go for floor and here they are asking
you<00:02:33.810> for<00:02:33.960> the<00:02:34.140> minimum<00:02:34.500> minimum<00:02:34.920> number<00:02:35.190> of

00:02:35.270 --> 00:02:35.280 
you for the minimum minimum number of

00:02:35.280 --> 00:02:38.180 
you for the minimum minimum number of
bits<00:02:35.520> so<00:02:35.760> you<00:02:36.120> want<00:02:36.480> it<00:02:36.570> as<00:02:36.690> nine<00:02:36.990> so<00:02:37.740> nine<00:02:37.770> bits

00:02:38.180 --> 00:02:38.190 
bits so you want it as nine so nine bits

00:02:38.190 --> 00:02:39.590 
bits so you want it as nine so nine bits
are<00:02:38.370> required<00:02:38.730> in<00:02:38.820> this<00:02:38.940> sequence<00:02:39.300> number

00:02:39.590 --> 00:02:39.600 
are required in this sequence number

00:02:39.600 --> 00:02:42.410 
are required in this sequence number
field<00:02:39.900> right<00:02:40.260> so<00:02:40.800> obviously<00:02:40.920> right<00:02:41.310> so<00:02:41.850> with

00:02:42.410 --> 00:02:42.420 
field right so obviously right so with

00:02:42.420 --> 00:02:44.630 
field right so obviously right so with
eight<00:02:42.600> bits<00:02:42.870> we<00:02:43.050> get<00:02:43.170> only<00:02:43.380> 256<00:02:43.950> with<00:02:44.430> nine

00:02:44.630 --> 00:02:44.640 
eight bits we get only 256 with nine

00:02:44.640 --> 00:02:46.970 
eight bits we get only 256 with nine
bits<00:02:44.880> we<00:02:45.060> get<00:02:45.240> fight<00:02:45.840> well<00:02:46.110> no<00:02:46.350> problem<00:02:46.770> even

00:02:46.970 --> 00:02:46.980 
bits we get fight well no problem even

00:02:46.980 --> 00:02:49.010 
bits we get fight well no problem even
though<00:02:47.310> we<00:02:47.820> get<00:02:48.000> fight<00:02:48.240> well<00:02:48.510> we<00:02:48.690> can<00:02:48.840> use

00:02:49.010 --> 00:02:49.020 
though we get fight well we can use

00:02:49.020 --> 00:02:50.990 
though we get fight well we can use
three<00:02:49.200> not<00:02:49.470> six<00:02:49.740> or<00:02:49.950> whatever<00:02:50.310> is<00:02:50.460> required

00:02:50.990 --> 00:02:51.000 
three not six or whatever is required

00:02:51.000 --> 00:02:53.690 
three not six or whatever is required
and<00:02:51.390> then<00:02:51.600> the<00:02:51.750> remaining<00:02:52.050> we<00:02:52.290> can<00:02:52.440> we<00:02:53.070> can<00:02:53.280> we

00:02:53.690 --> 00:02:53.700 
and then the remaining we can we can we

00:02:53.700 --> 00:02:55.580 
and then the remaining we can we can we
need<00:02:53.850> not<00:02:54.030> use<00:02:54.210> one<00:02:54.900> more<00:02:55.080> thing<00:02:55.260> here<00:02:55.440> you

00:02:55.580 --> 00:02:55.590 
need not use one more thing here you

00:02:55.590 --> 00:02:58.010 
need not use one more thing here you
could<00:02:55.740> see<00:02:55.950> is<00:02:56.100> if<00:02:56.730> one<00:02:57.330> plus<00:02:57.570> two<00:02:57.750> is<00:02:57.780> three

00:02:58.010 --> 00:02:58.020 
could see is if one plus two is three

00:02:58.020 --> 00:02:59.810 
could see is if one plus two is three
not<00:02:58.380> six<00:02:58.620> point<00:02:58.860> one<00:02:59.040> seven<00:02:59.280> then<00:02:59.610> how<00:02:59.760> many

00:02:59.810 --> 00:02:59.820 
not six point one seven then how many

00:02:59.820 --> 00:03:01.640 
not six point one seven then how many
packets<00:03:00.120> I<00:03:00.450> could<00:03:00.630> send<00:03:00.870> it<00:03:01.110> is<00:03:01.230> saying<00:03:01.470> that

00:03:01.640 --> 00:03:01.650 
packets I could send it is saying that

00:03:01.650 --> 00:03:03.560 
packets I could send it is saying that
you<00:03:01.740> could<00:03:01.920> send<00:03:02.100> three<00:03:02.280> point<00:03:02.550> three<00:03:02.760> not<00:03:03.330> six

00:03:03.560 --> 00:03:03.570 
you could send three point three not six

00:03:03.570 --> 00:03:05.630 
you could send three point three not six
packets<00:03:04.020> to<00:03:04.440> not<00:03:04.590> six<00:03:04.830> frames<00:03:05.130> along<00:03:05.490> with

00:03:05.630 --> 00:03:05.640 
packets to not six frames along with

00:03:05.640 --> 00:03:07.490 
packets to not six frames along with
that<00:03:05.760> point<00:03:06.060> one<00:03:06.270> seven<00:03:06.480> frame<00:03:06.720> you<00:03:07.230> cannot

00:03:07.490 --> 00:03:07.500 
that point one seven frame you cannot

00:03:07.500 --> 00:03:09.950 
that point one seven frame you cannot
send<00:03:07.710> point<00:03:07.980> one<00:03:08.160> one<00:03:08.580> seven<00:03:08.760> therefore<00:03:09.630> three

00:03:09.950 --> 00:03:09.960 
send point one one seven therefore three

00:03:09.960 --> 00:03:11.720 
send point one one seven therefore three
not<00:03:10.140> six<00:03:10.470> so<00:03:10.650> either<00:03:10.770> you<00:03:10.980> put<00:03:11.190> three<00:03:11.340> not<00:03:11.520> six

00:03:11.720 --> 00:03:11.730 
not six so either you put three not six

00:03:11.730 --> 00:03:14.420 
not six so either you put three not six
here<00:03:12.030> or<00:03:12.480> three<00:03:12.810> not<00:03:12.960> 6.17<00:03:13.590> also<00:03:14.130> does<00:03:14.280> not

00:03:14.420 --> 00:03:14.430 
here or three not 6.17 also does not

00:03:14.430 --> 00:03:16.820 
here or three not 6.17 also does not
change<00:03:14.490> until<00:03:15.150> is<00:03:15.420> nine<00:03:15.630> bits<00:03:15.870> so<00:03:16.470> the<00:03:16.590> number

00:03:16.820 --> 00:03:16.830 
change until is nine bits so the number

00:03:16.830 --> 00:03:18.199 
change until is nine bits so the number
of<00:03:16.920> bits<00:03:17.100> in<00:03:17.220> required<00:03:17.550> in<00:03:17.640> sequence<00:03:17.970> number

00:03:18.199 --> 00:03:18.209 
of bits in required in sequence number

00:03:18.209 --> 00:03:21.560 
of bits in required in sequence number
of<00:03:18.240> alleles<00:03:18.540> nine<00:03:18.900> bits<00:03:19.170> right

