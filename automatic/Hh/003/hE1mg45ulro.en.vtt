WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.619 

hello<00:00:00.900> my<00:00:01.530> name<00:00:01.740> is<00:00:01.770> Baljeet<00:00:02.490> chinook<00:00:03.000> and<00:00:03.149> i'm

00:00:03.619 --> 00:00:03.629 
hello my name is Baljeet chinook and i'm

00:00:03.629 --> 00:00:05.780 
hello my name is Baljeet chinook and i'm
the<00:00:03.810> product<00:00:04.080> marketing<00:00:04.620> manager<00:00:04.650> of<00:00:05.279> timing

00:00:05.780 --> 00:00:05.790 
the product marketing manager of timing

00:00:05.790 --> 00:00:09.799 
the product marketing manager of timing
products<00:00:06.240> at<00:00:06.390> IDT<00:00:07.639> today<00:00:08.639> i<00:00:08.880> will<00:00:09.450> give<00:00:09.660> you<00:00:09.780> a

00:00:09.799 --> 00:00:09.809 
products at IDT today i will give you a

00:00:09.809 --> 00:00:12.589 
products at IDT today i will give you a
brief<00:00:10.230> introduction<00:00:10.769> of<00:00:11.099> our<00:00:11.490> new<00:00:11.759> low<00:00:12.330> power

00:00:12.589 --> 00:00:12.599 
brief introduction of our new low power

00:00:12.599 --> 00:00:17.200 
brief introduction of our new low power
programmable<00:00:13.200> clock<00:00:13.679> family<00:00:14.219> versaclock<00:00:15.030> 5

00:00:17.200 --> 00:00:17.210 

00:00:17.210 --> 00:00:20.330 

versaclock<00:00:18.210> 5<00:00:18.300> is<00:00:18.810> a<00:00:19.140> low<00:00:19.439> power<00:00:19.710> programmable

00:00:20.330 --> 00:00:20.340 
versaclock 5 is a low power programmable

00:00:20.340 --> 00:00:23.179 
versaclock 5 is a low power programmable
clock<00:00:20.789> generator<00:00:21.240> but<00:00:22.140> best-in-class<00:00:22.650> to<00:00:23.070> the

00:00:23.179 --> 00:00:23.189 
clock generator but best-in-class to the

00:00:23.189 --> 00:00:25.220 
clock generator but best-in-class to the
performance<00:00:23.699> with<00:00:23.970> less<00:00:24.240> than<00:00:24.449> point<00:00:24.720> 7

00:00:25.220 --> 00:00:25.230 
performance with less than point 7

00:00:25.230 --> 00:00:28.250 
performance with less than point 7
picosecond<00:00:26.039> rms<00:00:26.460> phase<00:00:26.730> jitter<00:00:26.939> from<00:00:27.720> 12<00:00:28.019> kilo

00:00:28.250 --> 00:00:28.260 
picosecond rms phase jitter from 12 kilo

00:00:28.260 --> 00:00:31.160 
picosecond rms phase jitter from 12 kilo
hertz<00:00:28.529> to<00:00:28.710> 20<00:00:28.890> megahertz<00:00:29.750> the<00:00:30.750> highly

00:00:31.160 --> 00:00:31.170 
hertz to 20 megahertz the highly

00:00:31.170 --> 00:00:34.130 
hertz to 20 megahertz the highly
integrated<00:00:31.619> device<00:00:32.630> consolidates<00:00:33.630> for

00:00:34.130 --> 00:00:34.140 
integrated device consolidates for

00:00:34.140 --> 00:00:37.010 
integrated device consolidates for
differential<00:00:34.890> or<00:00:35.100> eight<00:00:35.730> single-ended<00:00:36.719> clock

00:00:37.010 --> 00:00:37.020 
differential or eight single-ended clock

00:00:37.020 --> 00:00:39.830 
differential or eight single-ended clock
generators<00:00:37.590> and<00:00:37.829> can<00:00:38.700> store<00:00:39.030> up<00:00:39.210> to<00:00:39.300> four

00:00:39.830 --> 00:00:39.840 
generators and can store up to four

00:00:39.840 --> 00:00:42.350 
generators and can store up to four
different<00:00:40.170> configuration<00:00:41.070> settings<00:00:41.489> helping

00:00:42.350 --> 00:00:42.360 
different configuration settings helping

00:00:42.360 --> 00:00:44.420 
different configuration settings helping
to<00:00:42.570> minimize<00:00:42.960> both<00:00:43.260> space<00:00:43.590> and<00:00:43.620> bill<00:00:44.309> of

00:00:44.420 --> 00:00:44.430 
to minimize both space and bill of

00:00:44.430 --> 00:00:47.569 
to minimize both space and bill of
materials<00:00:44.960> it<00:00:45.960> also<00:00:46.320> has<00:00:46.920> a<00:00:47.160> buffered

00:00:47.569 --> 00:00:47.579 
materials it also has a buffered

00:00:47.579 --> 00:00:51.260 
materials it also has a buffered
reference<00:00:47.969> clock<00:00:48.090> output<00:00:50.090> the<00:00:51.090> high

00:00:51.260 --> 00:00:51.270 
reference clock output the high

00:00:51.270 --> 00:00:53.360 
reference clock output the high
performance<00:00:51.809> clock<00:00:52.020> generator<00:00:52.469> operates<00:00:53.160> at

00:00:53.360 --> 00:00:53.370 
performance clock generator operates at

00:00:53.370 --> 00:00:55.869 
performance clock generator operates at
less<00:00:53.789> than<00:00:53.820> 100<00:00:54.449> milliwatts<00:00:54.750> core<00:00:55.410> power

00:00:55.869 --> 00:00:55.879 
less than 100 milliwatts core power

00:00:55.879 --> 00:00:58.310 
less than 100 milliwatts core power
fifty<00:00:56.879> percent<00:00:57.120> lower<00:00:57.510> than<00:00:57.930> competing

00:00:58.310 --> 00:00:58.320 
fifty percent lower than competing

00:00:58.320 --> 00:01:01.340 
fifty percent lower than competing
devices<00:00:58.789> with<00:00:59.789> typical<00:01:00.270> total<00:01:00.750> device<00:01:01.020> power

00:01:01.340 --> 00:01:01.350 
devices with typical total device power

00:01:01.350 --> 00:01:03.889 
devices with typical total device power
of<00:01:01.649> 300<00:01:02.280> mil<00:01:02.399> awards<00:01:02.760> with<00:01:03.059> all<00:01:03.239> outputs

00:01:03.889 --> 00:01:03.899 
of 300 mil awards with all outputs

00:01:03.899 --> 00:01:06.530 
of 300 mil awards with all outputs
operational<00:01:04.619> helping<00:01:05.430> to<00:01:05.729> ease<00:01:05.760> system

00:01:06.530 --> 00:01:06.540 
operational helping to ease system

00:01:06.540 --> 00:01:09.469 
operational helping to ease system
thermal<00:01:06.930> constraints<00:01:07.560> and<00:01:07.880> reduce<00:01:08.880> operating

00:01:09.469 --> 00:01:09.479 
thermal constraints and reduce operating

00:01:09.479 --> 00:01:14.240 
thermal constraints and reduce operating
power<00:01:09.780> expenses<00:01:11.960> versaclock<00:01:12.960> 5<00:01:13.110> has<00:01:13.770> for

00:01:14.240 --> 00:01:14.250 
power expenses versaclock 5 has for

00:01:14.250 --> 00:01:17.030 
power expenses versaclock 5 has for
universal<00:01:14.880> output<00:01:15.299> pairs<00:01:15.540> each<00:01:15.780> output<00:01:16.650> pair

00:01:17.030 --> 00:01:17.040 
universal output pairs each output pair

00:01:17.040 --> 00:01:21.350 
universal output pairs each output pair
can<00:01:17.340> be<00:01:17.490> configured<00:01:17.820> as<00:01:18.119> HC<00:01:18.509> SL<00:01:19.110> lb<00:01:19.979> Pekel<00:01:20.400> lvds

00:01:21.350 --> 00:01:21.360 
can be configured as HC SL lb Pekel lvds

00:01:21.360 --> 00:01:25.609 
can be configured as HC SL lb Pekel lvds
or<00:01:21.570> two<00:01:22.140> lv<00:01:22.770> CMOS<00:01:23.100> outputs<00:01:24.020> versaclock<00:01:25.020> 5<00:01:25.140> is

00:01:25.609 --> 00:01:25.619 
or two lv CMOS outputs versaclock 5 is

00:01:25.619 --> 00:01:27.640 
or two lv CMOS outputs versaclock 5 is
in-system<00:01:26.159> programmable<00:01:26.850> clock<00:01:27.210> generator

00:01:27.640 --> 00:01:27.650 
in-system programmable clock generator

00:01:27.650 --> 00:01:31.819 
in-system programmable clock generator
yr<00:01:28.650> i<00:01:28.799> square<00:01:29.159> c<00:01:29.369> as<00:01:29.549> well<00:01:30.150> as<00:01:30.390> IDT<00:01:31.259> Simon

00:01:31.819 --> 00:01:31.829 
yr i square c as well as IDT Simon

00:01:31.829 --> 00:01:36.200 
yr i square c as well as IDT Simon
commanders<00:01:32.280> software<00:01:34.100> the<00:01:35.100> slide<00:01:35.430> shows<00:01:36.000> the

00:01:36.200 --> 00:01:36.210 
commanders software the slide shows the

00:01:36.210 --> 00:01:39.440 
commanders software the slide shows the
block<00:01:36.479> diagram<00:01:36.590> versaclock<00:01:37.590> 5<00:01:38.299> versaclock<00:01:39.299> 5

00:01:39.440 --> 00:01:39.450 
block diagram versaclock 5 versaclock 5

00:01:39.450 --> 00:01:43.370 
block diagram versaclock 5 versaclock 5
and<00:01:39.930> take<00:01:40.229> a<00:01:40.259> crystal<00:01:40.829> or<00:01:40.979> clock<00:01:41.549> input<00:01:42.020> it<00:01:43.020> has

00:01:43.370 --> 00:01:43.380 
and take a crystal or clock input it has

00:01:43.380 --> 00:01:45.950 
and take a crystal or clock input it has
for<00:01:43.799> fractional<00:01:44.399> output<00:01:44.790> dividers<00:01:45.240> which

00:01:45.950 --> 00:01:45.960 
for fractional output dividers which

00:01:45.960 --> 00:01:48.020 
for fractional output dividers which
allow<00:01:46.320> programming<00:01:46.950> of<00:01:47.130> four<00:01:47.399> independent

00:01:48.020 --> 00:01:48.030 
allow programming of four independent

00:01:48.030 --> 00:01:51.679 
allow programming of four independent
frequencies<00:01:48.960> up<00:01:49.170> to<00:01:49.229> 350<00:01:49.770> megahertz<00:01:50.450> the<00:01:51.450> for

00:01:51.679 --> 00:01:51.689 
frequencies up to 350 megahertz the for

00:01:51.689 --> 00:01:53.960 
frequencies up to 350 megahertz the for
universal<00:01:52.259> output<00:01:52.619> pairs<00:01:52.860> are<00:01:53.070> independently

00:01:53.960 --> 00:01:53.970 
universal output pairs are independently

00:01:53.970 --> 00:01:58.670 
universal output pairs are independently
configurable<00:01:54.720> as<00:01:54.899> HC<00:01:55.259> SL<00:01:55.979> lv<00:01:56.969> bekal<00:01:57.439> lvds<00:01:58.439> or

00:01:58.670 --> 00:01:58.680 
configurable as HC SL lv bekal lvds or

00:01:58.680 --> 00:02:03.080 
configurable as HC SL lv bekal lvds or
dual<00:01:59.460> lv<00:01:59.969> CMOS<00:02:00.299> outputs<00:02:00.890> it<00:02:01.890> also<00:02:02.250> features<00:02:02.909> a

00:02:03.080 --> 00:02:03.090 
dual lv CMOS outputs it also features a

00:02:03.090 --> 00:02:05.660 
dual lv CMOS outputs it also features a
reference<00:02:03.479> clock<00:02:03.600> output<00:02:04.159> the<00:02:05.159> fractional

00:02:05.660 --> 00:02:05.670 
reference clock output the fractional

00:02:05.670 --> 00:02:08.029 
reference clock output the fractional
output<00:02:06.090> dividers<00:02:06.570> driving<00:02:07.200> each<00:02:07.350> output<00:02:07.649> pair

00:02:08.029 --> 00:02:08.039 
output dividers driving each output pair

00:02:08.039 --> 00:02:10.430 
output dividers driving each output pair
are<00:02:08.250> easily<00:02:08.759> programmed<00:02:09.330> by<00:02:09.599> i<00:02:09.629> square<00:02:10.200> c

00:02:10.430 --> 00:02:10.440 
are easily programmed by i square c

00:02:10.440 --> 00:02:13.280 
are easily programmed by i square c
while<00:02:11.250> the<00:02:11.459> device<00:02:11.879> is<00:02:12.060> operating<00:02:12.510> in<00:02:12.750> the

00:02:13.280 --> 00:02:13.290 
while the device is operating in the

00:02:13.290 --> 00:02:16.039 
while the device is operating in the
enabling<00:02:14.250> system<00:02:14.909> tuning<00:02:15.269> and<00:02:15.420> margin

00:02:16.039 --> 00:02:16.049 
enabling system tuning and margin

00:02:16.049 --> 00:02:18.530 
enabling system tuning and margin
testing<00:02:17.000> unlimited<00:02:18.000> in<00:02:18.150> system

00:02:18.530 --> 00:02:18.540 
testing unlimited in system

00:02:18.540 --> 00:02:21.220 
testing unlimited in system
reprogramming<00:02:19.230> is<00:02:19.379> possible<00:02:19.950> why<00:02:20.219> i<00:02:20.489> square<00:02:20.849> c

00:02:21.220 --> 00:02:21.230 
reprogramming is possible why i square c

00:02:21.230 --> 00:02:23.509 
reprogramming is possible why i square c
whereas<00:02:22.230> for<00:02:22.590> banks<00:02:22.950> of<00:02:23.099> one-time

00:02:23.509 --> 00:02:23.519 
whereas for banks of one-time

00:02:23.519 --> 00:02:26.149 
whereas for banks of one-time
programmable<00:02:24.409> non-volatile<00:02:25.409> memory<00:02:25.469> provide

00:02:26.149 --> 00:02:26.159 
programmable non-volatile memory provide

00:02:26.159 --> 00:02:28.729 
programmable non-volatile memory provide
flexibility<00:02:26.969> for<00:02:27.329> multi-project<00:02:28.140> inventory

00:02:28.729 --> 00:02:28.739 
flexibility for multi-project inventory

00:02:28.739 --> 00:02:32.380 
flexibility for multi-project inventory
consolidation<00:02:29.549> or<00:02:29.670> design<00:02:30.510> changes<00:02:30.930> in<00:02:31.170> field

00:02:32.380 --> 00:02:32.390 
consolidation or design changes in field

00:02:32.390 --> 00:02:35.390 
consolidation or design changes in field
upon<00:02:33.390> request<00:02:33.709> devices<00:02:34.709> may<00:02:34.890> be<00:02:34.950> factory

00:02:35.390 --> 00:02:35.400 
upon request devices may be factory

00:02:35.400 --> 00:02:37.069 
upon request devices may be factory
programmed<00:02:35.819> to<00:02:36.090> customers<00:02:36.629> desired

00:02:37.069 --> 00:02:37.079 
programmed to customers desired

00:02:37.079 --> 00:02:42.770 
programmed to customers desired
configuration<00:02:40.519> north<00:02:41.519> o'clock<00:02:41.819> five<00:02:42.180> has

00:02:42.770 --> 00:02:42.780 
configuration north o'clock five has

00:02:42.780 --> 00:02:45.280 
configuration north o'clock five has
excellent<00:02:43.560> phase<00:02:44.219> jitter<00:02:44.430> performance<00:02:45.000> with

00:02:45.280 --> 00:02:45.290 
excellent phase jitter performance with

00:02:45.290 --> 00:02:48.619 
excellent phase jitter performance with
610<00:02:46.290> femtosecond<00:02:47.010> rms<00:02:47.489> phase<00:02:47.700> jitter<00:02:47.939> as

00:02:48.619 --> 00:02:48.629 
610 femtosecond rms phase jitter as

00:02:48.629 --> 00:02:52.580 
610 femtosecond rms phase jitter as
shown<00:02:49.230> on<00:02:49.409> the<00:02:49.500> phase<00:02:50.040> noise<00:02:50.250> plot<00:02:51.049> with<00:02:52.049> rms

00:02:52.580 --> 00:02:52.590 
shown on the phase noise plot with rms

00:02:52.590 --> 00:02:54.740 
shown on the phase noise plot with rms
phase<00:02:52.859> jitter<00:02:53.099> less<00:02:53.730> than<00:02:53.970> 0<00:02:54.120> point<00:02:54.359> seven

00:02:54.740 --> 00:02:54.750 
phase jitter less than 0 point seven

00:02:54.750 --> 00:02:57.470 
phase jitter less than 0 point seven
picoseconds<00:02:55.439> over<00:02:55.680> the<00:02:55.829> full<00:02:56.129> 12<00:02:56.879> kilo<00:02:57.150> hertz

00:02:57.470 --> 00:02:57.480 
picoseconds over the full 12 kilo hertz

00:02:57.480 --> 00:03:00.199 
picoseconds over the full 12 kilo hertz
to<00:02:57.780> 20<00:02:58.049> megahertz<00:02:58.470> integration<00:02:59.220> range<00:02:59.489> the

00:03:00.199 --> 00:03:00.209 
to 20 megahertz integration range the

00:03:00.209 --> 00:03:02.809 
to 20 megahertz integration range the
new<00:03:00.510> device<00:03:00.870> meets<00:03:01.799> the<00:03:02.099> stringent<00:03:02.430> data

00:03:02.809 --> 00:03:02.819 
new device meets the stringent data

00:03:02.819 --> 00:03:06.259 
new device meets the stringent data
requirements<00:03:03.450> of<00:03:03.569> pci<00:03:04.079> express<00:03:04.560> gen<00:03:04.680> 1<00:03:05.250> 10<00:03:06.030> 2

00:03:06.259 --> 00:03:06.269 
requirements of pci express gen 1 10 2

00:03:06.269 --> 00:03:11.059 
requirements of pci express gen 1 10 2
and<00:03:06.480> gen<00:03:07.139> 3<00:03:07.349> as<00:03:08.189> well<00:03:08.250> as<00:03:08.790> USB<00:03:09.299> 3<00:03:09.629> 0<00:03:09.659> and<00:03:10.200> 1<00:03:10.829> gig

00:03:11.059 --> 00:03:11.069 
and gen 3 as well as USB 3 0 and 1 gig

00:03:11.069 --> 00:03:16.280 
and gen 3 as well as USB 3 0 and 1 gig
10<00:03:11.430> gig<00:03:11.669> Ethernet<00:03:14.450> IDT's<00:03:15.450> mute<00:03:15.870> timing

00:03:16.280 --> 00:03:16.290 
10 gig Ethernet IDT's mute timing

00:03:16.290 --> 00:03:18.589 
10 gig Ethernet IDT's mute timing
commander<00:03:16.500> software<00:03:17.220> platform<00:03:18.120> enables

00:03:18.589 --> 00:03:18.599 
commander software platform enables

00:03:18.599 --> 00:03:20.990 
commander software platform enables
customers<00:03:18.930> to<00:03:19.430> configure<00:03:20.430> program

00:03:20.990 --> 00:03:21.000 
customers to configure program

00:03:21.000 --> 00:03:24.229 
customers to configure program
versaclock<00:03:21.810> 5<00:03:22.129> with<00:03:23.129> an<00:03:23.340> intuitive<00:03:24.060> and

00:03:24.229 --> 00:03:24.239 
versaclock 5 with an intuitive and

00:03:24.239 --> 00:03:27.349 
versaclock 5 with an intuitive and
flexible<00:03:25.139> graphical<00:03:25.889> user<00:03:25.919> interface<00:03:26.760> as<00:03:27.000> you

00:03:27.349 --> 00:03:27.359 
flexible graphical user interface as you

00:03:27.359 --> 00:03:30.979 
flexible graphical user interface as you
see<00:03:27.599> on<00:03:27.780> the<00:03:27.959> slide<00:03:28.400> you<00:03:29.400> can<00:03:29.639> program<00:03:29.909> the<00:03:30.780> for

00:03:30.979 --> 00:03:30.989 
see on the slide you can program the for

00:03:30.989 --> 00:03:33.110 
see on the slide you can program the for
fractional<00:03:31.470> output<00:03:31.829> dividers<00:03:32.280> providing<00:03:32.879> for

00:03:33.110 --> 00:03:33.120 
fractional output dividers providing for

00:03:33.120 --> 00:03:35.569 
fractional output dividers providing for
independent<00:03:33.720> output<00:03:34.049> frequencies<00:03:34.650> with<00:03:35.310> 0

00:03:35.569 --> 00:03:35.579 
independent output frequencies with 0

00:03:35.579 --> 00:03:38.990 
independent output frequencies with 0
ppm<00:03:35.970> error<00:03:36.709> you<00:03:37.709> can<00:03:37.919> configure<00:03:38.310> universal

00:03:38.990 --> 00:03:39.000 
ppm error you can configure universal

00:03:39.000 --> 00:03:41.990 
ppm error you can configure universal
output<00:03:39.329> pairs<00:03:39.599> as<00:03:39.810> differential<00:03:40.650> lvds<00:03:41.430> hcs

00:03:41.990 --> 00:03:42.000 
output pairs as differential lvds hcs

00:03:42.000 --> 00:03:45.140 
output pairs as differential lvds hcs
llv<00:03:42.419> bagel<00:03:42.780> or<00:03:42.900> two<00:03:43.560> single<00:03:43.949> n<00:03:44.069> it<00:03:44.159> outputs<00:03:44.549> as

00:03:45.140 --> 00:03:45.150 
llv bagel or two single n it outputs as

00:03:45.150 --> 00:03:48.580 
llv bagel or two single n it outputs as
well<00:03:45.599> as<00:03:45.750> program<00:03:46.470> each<00:03:47.459> output

00:03:48.580 --> 00:03:48.590 
well as program each output

00:03:48.590 --> 00:03:51.229 
well as program each output
independently<00:03:49.590> with<00:03:50.400> spread<00:03:50.669> spectrum<00:03:50.909> if

00:03:51.229 --> 00:03:51.239 
independently with spread spectrum if

00:03:51.239 --> 00:03:56.330 
independently with spread spectrum if
needed<00:03:53.269> versaclock<00:03:54.269> 5<00:03:54.389> is<00:03:55.129> useful<00:03:56.129> and

00:03:56.330 --> 00:03:56.340 
needed versaclock 5 is useful and

00:03:56.340 --> 00:03:58.610 
needed versaclock 5 is useful and
high-end<00:03:57.269> consumer<00:03:57.900> applications

00:03:58.610 --> 00:03:58.620 
high-end consumer applications

00:03:58.620 --> 00:04:01.189 
high-end consumer applications
networking<00:03:59.280> applications<00:04:00.199> computing

00:04:01.189 --> 00:04:01.199 
networking applications computing

00:04:01.199 --> 00:04:03.080 
networking applications computing
applications<00:04:01.430> industrial<00:04:02.430> communications

00:04:03.080 --> 00:04:03.090 
applications industrial communications

00:04:03.090 --> 00:04:07.479 
applications industrial communications
broadcast<00:04:03.599> video<00:04:03.810> and<00:04:04.109> medical<00:04:04.709> applications

00:04:07.479 --> 00:04:07.489 

00:04:07.489 --> 00:04:10.039 

the<00:04:08.489> block<00:04:08.729> diagram<00:04:09.180> shows<00:04:09.569> a<00:04:09.810> typical

00:04:10.039 --> 00:04:10.049 
the block diagram shows a typical

00:04:10.049 --> 00:04:13.580 
the block diagram shows a typical
application<00:04:10.919> of<00:04:11.069> versaclock<00:04:11.519> 5<00:04:11.810> which<00:04:12.810> has<00:04:13.169> a

00:04:13.580 --> 00:04:13.590 
application of versaclock 5 which has a

00:04:13.590 --> 00:04:16.399 
application of versaclock 5 which has a
125<00:04:14.579> lb<00:04:15.180> Beckel<00:04:15.479> output<00:04:15.840> for<00:04:16.049> gigabit

00:04:16.399 --> 00:04:16.409 
125 lb Beckel output for gigabit

00:04:16.409 --> 00:04:20.659 
125 lb Beckel output for gigabit
ethernet<00:04:16.530> a<00:04:17.070> 1<00:04:17.489> 56.25<00:04:18.409> megahertz<00:04:19.409> lvds<00:04:20.280> output

00:04:20.659 --> 00:04:20.669 
ethernet a 1 56.25 megahertz lvds output

00:04:20.669 --> 00:04:22.850 
ethernet a 1 56.25 megahertz lvds output
for<00:04:20.849> 10<00:04:21.060> gig<00:04:21.269> Ethernet<00:04:21.389> and<00:04:22.320> a<00:04:22.500> hundred

00:04:22.850 --> 00:04:22.860 
for 10 gig Ethernet and a hundred

00:04:22.860 --> 00:04:26.960 
for 10 gig Ethernet and a hundred
megahertz<00:04:23.130> hdsl<00:04:23.969> output<00:04:24.360> for<00:04:24.930> pcie<00:04:25.380> gen3<00:04:25.800> as

00:04:26.960 --> 00:04:26.970 
megahertz hdsl output for pcie gen3 as

00:04:26.970 --> 00:04:29.860 
megahertz hdsl output for pcie gen3 as
well<00:04:27.120> as<00:04:27.410> 25<00:04:28.410> megahertz<00:04:28.680> reference<00:04:29.490> output

00:04:29.860 --> 00:04:29.870 
well as 25 megahertz reference output

00:04:29.870 --> 00:04:33.220 
well as 25 megahertz reference output
with<00:04:30.870> all<00:04:31.080> the<00:04:31.830> different<00:04:32.520> outputs

00:04:33.220 --> 00:04:33.230 
with all the different outputs

00:04:33.230 --> 00:04:36.020 
with all the different outputs
operational<00:04:34.230> and<00:04:34.410> the<00:04:34.890> crosstalk<00:04:35.460> including

00:04:36.020 --> 00:04:36.030 
operational and the crosstalk including

00:04:36.030 --> 00:04:39.080 
operational and the crosstalk including
the<00:04:36.090> crosstalk<00:04:36.510> we<00:04:37.410> get<00:04:37.680> 700<00:04:38.310> femtosecond

00:04:39.080 --> 00:04:39.090 
the crosstalk we get 700 femtosecond

00:04:39.090 --> 00:04:41.300 
the crosstalk we get 700 femtosecond
integrated<00:04:39.480> created<00:04:39.930> from<00:04:40.170> 12<00:04:40.380> kilo<00:04:41.010> hertz<00:04:41.220> to

00:04:41.300 --> 00:04:41.310 
integrated created from 12 kilo hertz to

00:04:41.310 --> 00:04:44.420 
integrated created from 12 kilo hertz to
20<00:04:41.460> megahertz<00:04:42.560> the<00:04:43.560> key<00:04:43.740> application<00:04:44.310> issues

00:04:44.420 --> 00:04:44.430 
20 megahertz the key application issues

00:04:44.430 --> 00:04:47.180 
20 megahertz the key application issues
solved<00:04:45.120> by<00:04:45.360> versaclock<00:04:45.720> 5<00:04:45.810> are<00:04:46.290> shown<00:04:46.770> on<00:04:46.980> the

00:04:47.180 --> 00:04:47.190 
solved by versaclock 5 are shown on the

00:04:47.190 --> 00:04:53.210 
solved by versaclock 5 are shown on the
slide<00:04:49.370> in<00:04:50.370> summary<00:04:51.360> versaclock<00:04:52.170> 5<00:04:52.290> is<00:04:52.830> a<00:04:52.890> low

00:04:53.210 --> 00:04:53.220 
slide in summary versaclock 5 is a low

00:04:53.220 --> 00:04:55.010 
slide in summary versaclock 5 is a low
power<00:04:53.520> programmable<00:04:54.000> clock<00:04:54.330> generator<00:04:54.780> with

00:04:55.010 --> 00:04:55.020 
power programmable clock generator with

00:04:55.020 --> 00:04:56.540 
power programmable clock generator with
best-in-class<00:04:55.440> performance<00:04:55.710> and<00:04:56.370> design

00:04:56.540 --> 00:04:56.550 
best-in-class performance and design

00:04:56.550 --> 00:04:59.090 
best-in-class performance and design
flexibility<00:04:57.240> it<00:04:58.140> has<00:04:58.350> excellent<00:04:58.740> phase

00:04:59.090 --> 00:04:59.100 
flexibility it has excellent phase

00:04:59.100 --> 00:05:00.680 
flexibility it has excellent phase
jitter<00:04:59.250> performance<00:04:59.820> over<00:05:00.060> wide<00:05:00.300> range<00:05:00.600> of

00:05:00.680 --> 00:05:00.690 
jitter performance over wide range of

00:05:00.690 --> 00:05:03.170 
jitter performance over wide range of
frequencies<00:05:01.230> provides<00:05:01.830> design<00:05:02.550> flexibility

00:05:03.170 --> 00:05:03.180 
frequencies provides design flexibility

00:05:03.180 --> 00:05:06.200 
frequencies provides design flexibility
with<00:05:03.660> less<00:05:03.960> than<00:05:03.990> 0<00:05:04.620> point<00:05:04.890> 7<00:05:05.280> picosecond<00:05:05.850> rms

00:05:06.200 --> 00:05:06.210 
with less than 0 point 7 picosecond rms

00:05:06.210 --> 00:05:08.000 
with less than 0 point 7 picosecond rms
fugitive<00:05:06.720> from<00:05:07.020> 12<00:05:07.410> kilo<00:05:07.650> hertz<00:05:07.830> to<00:05:07.890> 20

00:05:08.000 --> 00:05:08.010 
fugitive from 12 kilo hertz to 20

00:05:08.010 --> 00:05:11.510 
fugitive from 12 kilo hertz to 20
megahertz<00:05:08.960> versaclock<00:05:09.960> 5<00:05:10.080> has<00:05:10.650> significantly

00:05:11.510 --> 00:05:11.520 
megahertz versaclock 5 has significantly

00:05:11.520 --> 00:05:14.030 
megahertz versaclock 5 has significantly
less<00:05:11.790> power<00:05:12.060> consumption<00:05:12.540> which<00:05:13.200> enables

00:05:14.030 --> 00:05:14.040 
less power consumption which enables

00:05:14.040 --> 00:05:16.660 
less power consumption which enables
easing<00:05:14.730> thermal<00:05:15.090> constraints<00:05:15.660> in<00:05:15.780> the<00:05:15.870> system

00:05:16.660 --> 00:05:16.670 
easing thermal constraints in the system

00:05:16.670 --> 00:05:19.310 
easing thermal constraints in the system
IDT<00:05:17.670> worse<00:05:17.940> about<00:05:18.210> 5<00:05:18.540> programmable<00:05:19.080> clocks

00:05:19.310 --> 00:05:19.320 
IDT worse about 5 programmable clocks

00:05:19.320 --> 00:05:21.200 
IDT worse about 5 programmable clocks
are<00:05:19.500> ideal<00:05:19.980> clocking<00:05:20.370> solutions<00:05:20.880> for<00:05:21.090> a<00:05:21.120> wide

00:05:21.200 --> 00:05:21.210 
are ideal clocking solutions for a wide

00:05:21.210 --> 00:05:23.780 
are ideal clocking solutions for a wide
range<00:05:21.419> of<00:05:21.780> applications<00:05:22.460> replacing<00:05:23.460> crystal

00:05:23.780 --> 00:05:23.790 
range of applications replacing crystal

00:05:23.790 --> 00:05:26.150 
range of applications replacing crystal
oscillators<00:05:24.330> clock<00:05:24.930> generators<00:05:25.500> allowing

00:05:26.150 --> 00:05:26.160 
oscillators clock generators allowing

00:05:26.160 --> 00:05:28.730 
oscillators clock generators allowing
for<00:05:26.520> in-system<00:05:26.940> programming<00:05:27.600> saving<00:05:28.500> bomb

00:05:28.730 --> 00:05:28.740 
for in-system programming saving bomb

00:05:28.740 --> 00:05:31.340 
for in-system programming saving bomb
and<00:05:28.980> board<00:05:29.340> space<00:05:29.580> as<00:05:30.270> well<00:05:30.690> as<00:05:30.840> improving

00:05:31.340 --> 00:05:31.350 
and board space as well as improving

00:05:31.350 --> 00:05:33.500 
and board space as well as improving
time<00:05:32.070> to<00:05:32.220> market<00:05:32.550> and<00:05:32.760> shortening<00:05:33.210> design

00:05:33.500 --> 00:05:33.510 
time to market and shortening design

00:05:33.510 --> 00:05:36.140 
time to market and shortening design
time<00:05:33.919> IDT<00:05:34.919> versaclock<00:05:35.430> 5<00:05:35.550> provides

00:05:36.140 --> 00:05:36.150 
time IDT versaclock 5 provides

00:05:36.150 --> 00:05:38.510 
time IDT versaclock 5 provides
industry's<00:05:36.870> most<00:05:37.140> versatile<00:05:37.770> low-power

00:05:38.510 --> 00:05:38.520 
industry's most versatile low-power

00:05:38.520 --> 00:05:40.610 
industry's most versatile low-power
clock<00:05:38.880> generation<00:05:39.300> solution<00:05:39.900> for<00:05:40.110> consumer

00:05:40.610 --> 00:05:40.620 
clock generation solution for consumer

00:05:40.620 --> 00:05:43.550 
clock generation solution for consumer
computing<00:05:41.550> industrial<00:05:42.360> communications<00:05:43.350> and

00:05:43.550 --> 00:05:43.560 
computing industrial communications and

00:05:43.560 --> 00:05:47.719 
computing industrial communications and
networking<00:05:44.460> applications<00:05:45.860> we<00:05:46.860> have<00:05:47.220> complete

00:05:47.719 --> 00:05:47.729 
networking applications we have complete

00:05:47.729 --> 00:05:50.690 
networking applications we have complete
product<00:05:48.030> support<00:05:48.510> for<00:05:49.020> versaclock<00:05:49.620> 5<00:05:49.740> we<00:05:50.580> have

00:05:50.690 --> 00:05:50.700 
product support for versaclock 5 we have

00:05:50.700 --> 00:05:52.190 
product support for versaclock 5 we have
a<00:05:50.729> product<00:05:50.970> brief<00:05:51.300> product<00:05:51.750> data<00:05:51.900> sheet

00:05:52.190 --> 00:05:52.200 
a product brief product data sheet

00:05:52.200 --> 00:05:53.990 
a product brief product data sheet
programming<00:05:52.710> guide<00:05:52.890> evaluation<00:05:53.580> board<00:05:53.790> with

00:05:53.990 --> 00:05:54.000 
programming guide evaluation board with

00:05:54.000 --> 00:05:56.150 
programming guide evaluation board with
user's<00:05:54.270> manual<00:05:54.690> timing<00:05:55.260> commander<00:05:55.440> software

00:05:56.150 --> 00:05:56.160 
user's manual timing commander software

00:05:56.160 --> 00:05:57.710 
user's manual timing commander software
with<00:05:56.460> user's<00:05:56.729> manual<00:05:57.120> product<00:05:57.419> video

00:05:57.710 --> 00:05:57.720 
with user's manual product video

00:05:57.720 --> 00:05:59.659 
with user's manual product video
reference<00:05:58.020> schematic<00:05:58.470> available<00:05:59.070> at<00:05:59.190> the

00:05:59.659 --> 00:05:59.669 
reference schematic available at the

00:05:59.669 --> 00:06:02.719 
reference schematic available at the
link<00:05:59.910> shown<00:06:00.090> on<00:06:00.510> the<00:06:00.810> slide<00:06:01.280> thank<00:06:02.280> you<00:06:02.430> for

00:06:02.719 --> 00:06:02.729 
link shown on the slide thank you for

00:06:02.729 --> 00:06:04.970 
link shown on the slide thank you for
your<00:06:02.790> time

