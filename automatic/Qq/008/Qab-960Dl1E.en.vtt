WEBVTT
Kind: captions
Language: en

00:00:01.379 --> 00:00:04.769 

hi<00:00:02.379> Liz<00:00:02.649> abou<00:00:02.830> here<00:00:03.100> again<00:00:03.370> with<00:00:03.580> my<00:00:03.779> Brielle

00:00:04.769 --> 00:00:04.779 
hi Liz abou here again with my Brielle

00:00:04.779 --> 00:00:08.160 
hi Liz abou here again with my Brielle
Altair<00:00:05.290> 8800<00:00:05.740> microcat<00:00:06.640> set<00:00:06.850> today<00:00:07.660> I'm<00:00:07.990> going

00:00:08.160 --> 00:00:08.170 
Altair 8800 microcat set today I'm going

00:00:08.170 --> 00:00:11.070 
Altair 8800 microcat set today I'm going
to<00:00:08.260> demonstrate<00:00:08.410> the<00:00:09.220> toggling<00:00:09.670> in<00:00:10.000> of<00:00:10.240> the

00:00:11.070 --> 00:00:11.080 
to demonstrate the toggling in of the

00:00:11.080 --> 00:00:14.130 
to demonstrate the toggling in of the
demo<00:00:11.290> program<00:00:11.500> from<00:00:12.010> the<00:00:12.210> 1975<00:00:13.210> Altair

00:00:14.130 --> 00:00:14.140 
demo program from the 1975 Altair

00:00:14.140 --> 00:00:18.380 
demo program from the 1975 Altair
operators<00:00:14.890> manual<00:00:15.040> so<00:00:16.620> you'll<00:00:17.620> notice<00:00:17.830> that

00:00:18.380 --> 00:00:18.390 
operators manual so you'll notice that

00:00:18.390 --> 00:00:21.180 
operators manual so you'll notice that
the<00:00:19.390> stop<00:00:19.720> run<00:00:19.930> switches<00:00:20.410> currently<00:00:20.860> in<00:00:21.039> the

00:00:21.180 --> 00:00:21.190 
the stop run switches currently in the

00:00:21.190 --> 00:00:22.680 
the stop run switches currently in the
stop<00:00:21.520> position<00:00:21.670> that'll<00:00:22.240> mean<00:00:22.360> that<00:00:22.510> it<00:00:22.570> won't

00:00:22.680 --> 00:00:22.690 
stop position that'll mean that it won't

00:00:22.690 --> 00:00:25.470 
stop position that'll mean that it won't
actually<00:00:23.020> execute<00:00:23.980> when<00:00:24.340> I<00:00:24.580> turn<00:00:25.090> the<00:00:25.210> machine

00:00:25.470 --> 00:00:25.480 
actually execute when I turn the machine

00:00:25.480 --> 00:00:27.900 
actually execute when I turn the machine
on<00:00:25.510> so<00:00:25.960> there<00:00:26.170> we<00:00:26.260> go<00:00:26.289> as<00:00:27.190> for<00:00:27.430> memory<00:00:27.670> check

00:00:27.900 --> 00:00:27.910 
on so there we go as for memory check

00:00:27.910 --> 00:00:31.980 
on so there we go as for memory check
and<00:00:28.180> it's<00:00:28.660> just<00:00:28.990> sitting<00:00:29.230> there<00:00:29.350> so<00:00:30.300> I'm<00:00:31.300> going

00:00:31.980 --> 00:00:31.990 
and it's just sitting there so I'm going

00:00:31.990 --> 00:00:35.399 
and it's just sitting there so I'm going
to<00:00:32.109> need<00:00:32.409> to<00:00:33.149> toggle<00:00:34.149> in<00:00:34.449> the<00:00:34.960> program<00:00:35.379> the

00:00:35.399 --> 00:00:35.409 
to need to toggle in the program the

00:00:35.409 --> 00:00:38.669 
to need to toggle in the program the
program<00:00:35.620> today<00:00:36.069> is<00:00:36.460> a<00:00:36.909> very<00:00:37.480> simple<00:00:37.899> 13<00:00:38.409> bike

00:00:38.669 --> 00:00:38.679 
program today is a very simple 13 bike

00:00:38.679 --> 00:00:41.790 
program today is a very simple 13 bike
program<00:00:39.010> that<00:00:39.789> takes<00:00:40.030> the<00:00:40.510> values<00:00:41.229> and<00:00:41.530> to

00:00:41.790 --> 00:00:41.800 
program that takes the values and to

00:00:41.800 --> 00:00:44.009 
program that takes the values and to
memory<00:00:42.129> locations<00:00:42.760> adds<00:00:43.059> them<00:00:43.359> together<00:00:43.539> and

00:00:44.009 --> 00:00:44.019 
memory locations adds them together and

00:00:44.019 --> 00:00:47.129 
memory locations adds them together and
stores<00:00:44.800> the<00:00:45.219> result<00:00:45.670> and<00:00:46.120> a<00:00:46.210> third<00:00:46.539> memory

00:00:47.129 --> 00:00:47.139 
stores the result and a third memory

00:00:47.139 --> 00:00:50.669 
stores the result and a third memory
location<00:00:47.859> so<00:00:48.460> it's<00:00:48.639> very<00:00:48.850> simple<00:00:49.260> it<00:00:50.260> loads<00:00:50.499> a

00:00:50.669 --> 00:00:50.679 
location so it's very simple it loads a

00:00:50.679 --> 00:00:52.889 
location so it's very simple it loads a
value<00:00:50.949> out<00:00:51.219> of<00:00:51.249> memory<00:00:51.609> into<00:00:52.120> the<00:00:52.269> accumulator

00:00:52.889 --> 00:00:52.899 
value out of memory into the accumulator

00:00:52.899 --> 00:00:55.619 
value out of memory into the accumulator
it<00:00:53.679> then<00:00:53.949> stores<00:00:54.339> that<00:00:54.609> and<00:00:54.850> the<00:00:54.909> B<00:00:55.059> register

00:00:55.619 --> 00:00:55.629 
it then stores that and the B register

00:00:55.629 --> 00:00:58.110 
it then stores that and the B register
then<00:00:56.019> loads<00:00:56.289> another<00:00:57.280> member<00:00:57.670> at<00:00:57.760> the<00:00:57.909> value

00:00:58.110 --> 00:00:58.120 
then loads another member at the value

00:00:58.120 --> 00:00:59.879 
then loads another member at the value
of<00:00:58.209> another<00:00:58.449> memory<00:00:58.749> location<00:00:59.319> into<00:00:59.769> the

00:00:59.879 --> 00:00:59.889 
of another memory location into the

00:00:59.889 --> 00:01:03.149 
of another memory location into the
accumulator<00:01:00.549> adds<00:01:01.149> the<00:01:01.809> accumulator<00:01:02.469> to<00:01:02.829> the

00:01:03.149 --> 00:01:03.159 
accumulator adds the accumulator to the

00:01:03.159 --> 00:01:05.039 
accumulator adds the accumulator to the
B<00:01:03.309> register<00:01:03.879> and<00:01:04.089> stalls<00:01:04.509> the<00:01:04.689> result

00:01:05.039 --> 00:01:05.049 
B register and stalls the result

00:01:05.049 --> 00:01:09.389 
B register and stalls the result
beckoned<00:01:05.590> into<00:01:06.280> memory<00:01:06.689> so<00:01:07.689> here<00:01:07.930> we<00:01:08.020> go<00:01:08.399> I'm

00:01:09.389 --> 00:01:09.399 
beckoned into memory so here we go I'm

00:01:09.399 --> 00:01:13.969 
beckoned into memory so here we go I'm
going<00:01:09.549> to<00:01:09.640> start<00:01:09.939> at<00:01:10.180> memory<00:01:11.170> location<00:01:11.799> 0

00:01:13.969 --> 00:01:13.979 
going to start at memory location 0

00:01:13.979 --> 00:01:17.010 
going to start at memory location 0
currently<00:01:14.979> has<00:01:15.280> this<00:01:15.729> value<00:01:16.149> in<00:01:16.299> it<00:01:16.420> the<00:01:16.869> value

00:01:17.010 --> 00:01:17.020 
currently has this value in it the value

00:01:17.020 --> 00:01:19.770 
currently has this value in it the value
we<00:01:17.380> want<00:01:17.649> on<00:01:17.859> that<00:01:17.890> is<00:01:18.340> the<00:01:18.700> load<00:01:19.539> a

00:01:19.770 --> 00:01:19.780 
we want on that is the load a

00:01:19.780 --> 00:01:26.039 
we want on that is the load a
instruction<00:01:20.590> of<00:01:20.740> 0<00:01:21.670> 0<00:01:22.000> 1<00:01:22.689> 1<00:01:23.079> 1<00:01:23.189> 0<00:01:24.189> 1<00:01:24.280> 0<00:01:24.960> then<00:01:25.960> I

00:01:26.039 --> 00:01:26.049 
instruction of 0 0 1 1 1 0 1 0 then I

00:01:26.049 --> 00:01:28.679 
instruction of 0 0 1 1 1 0 1 0 then I
click<00:01:27.039> the<00:01:27.219> deposits<00:01:27.700> which<00:01:27.880> to<00:01:28.119> deposit<00:01:28.659> that

00:01:28.679 --> 00:01:28.689 
click the deposits which to deposit that

00:01:28.689 --> 00:01:33.599 
click the deposits which to deposit that
value<00:01:29.289> into<00:01:29.530> memory<00:01:30.659> so<00:01:31.659> the<00:01:32.079> next<00:01:32.289> step<00:01:32.609> the

00:01:33.599 --> 00:01:33.609 
value into memory so the next step the

00:01:33.609 --> 00:01:35.910 
value into memory so the next step the
next<00:01:33.659> value<00:01:34.659> that<00:01:34.929> I<00:01:34.990> need<00:01:35.140> to<00:01:35.259> toggle<00:01:35.439> in<00:01:35.710> is

00:01:35.910 --> 00:01:35.920 
next value that I need to toggle in is

00:01:35.920 --> 00:01:38.099 
next value that I need to toggle in is
the<00:01:36.159> value<00:01:36.490> of<00:01:36.520> the<00:01:36.909> first<00:01:37.179> memory<00:01:37.600> location

00:01:38.099 --> 00:01:38.109 
the value of the first memory location

00:01:38.109 --> 00:01:39.719 
the value of the first memory location
which<00:01:38.259> in<00:01:38.439> this<00:01:38.530> case<00:01:38.590> is<00:01:38.799> going<00:01:39.189> to<00:01:39.310> be<00:01:39.549> for

00:01:39.719 --> 00:01:39.729 
which in this case is going to be for

00:01:39.729 --> 00:01:41.669 
which in this case is going to be for
the<00:01:39.759> sake<00:01:40.000> of<00:01:40.030> simplicity<00:01:40.409> the<00:01:41.409> memory

00:01:41.669 --> 00:01:41.679 
the sake of simplicity the memory

00:01:41.679 --> 00:01:49.380 
the sake of simplicity the memory
location<00:01:41.939> 128<00:01:46.170> with<00:01:47.170> the<00:01:47.320> high<00:01:47.469> byte<00:01:47.740> of<00:01:48.390> 0

00:01:49.380 --> 00:01:49.390 
location 128 with the high byte of 0

00:01:49.390 --> 00:01:56.099 
location 128 with the high byte of 0
because<00:01:49.929> this<00:01:50.710> uses<00:01:51.450> 16-bit<00:01:55.109> memory

00:01:56.099 --> 00:01:56.109 
because this uses 16-bit memory

00:01:56.109 --> 00:01:59.399 
because this uses 16-bit memory
addresses

00:01:59.399 --> 00:01:59.409 

00:01:59.409 --> 00:02:04.020 

next<00:02:00.159> instruction<00:02:00.670> is<00:02:01.829> move<00:02:02.829> accumulator<00:02:03.729> to

00:02:04.020 --> 00:02:04.030 
next instruction is move accumulator to

00:02:04.030 --> 00:02:12.530 
next instruction is move accumulator to
the<00:02:04.119> B<00:02:04.240> register<00:02:04.719> which<00:02:04.990> is<00:02:05.200> 0<00:02:05.560> 1<00:02:05.979> 0<00:02:06.249> 0<00:02:06.640> 0<00:02:07.890> 1<00:02:08.890> 1<00:02:08.920> 1

00:02:12.530 --> 00:02:12.540 

00:02:12.540 --> 00:02:17.070 

now<00:02:13.540> we<00:02:13.599> load<00:02:14.230> the<00:02:14.410> accumulator<00:02:14.950> again<00:02:15.519> 0<00:02:15.910> 0<00:02:16.599> 1

00:02:17.070 --> 00:02:17.080 
now we load the accumulator again 0 0 1

00:02:17.080 --> 00:02:26.070 
now we load the accumulator again 0 0 1
1<00:02:17.319> 1<00:02:17.459> 0<00:02:18.459> 1<00:02:18.790> 0<00:02:21.390> and<00:02:22.390> 2<00:02:23.049> memory<00:02:23.410> address<00:02:25.080> from

00:02:26.070 --> 00:02:26.080 
1 1 0 1 0 and 2 memory address from

00:02:26.080 --> 00:02:36.150 
1 1 0 1 0 and 2 memory address from
memory<00:02:26.500> address<00:02:30.450> 129<00:02:31.450> a<00:02:32.340> high<00:02:33.340> byte<00:02:33.610> of<00:02:34.079> 0<00:02:35.160> I'm

00:02:36.150 --> 00:02:36.160 
memory address 129 a high byte of 0 I'm

00:02:36.160 --> 00:02:39.509 
memory address 129 a high byte of 0 I'm
going<00:02:36.310> to<00:02:36.400> add<00:02:36.549> the<00:02:36.970> two<00:02:37.349> values<00:02:38.349> the<00:02:39.160> B

00:02:39.509 --> 00:02:39.519 
going to add the two values the B

00:02:39.519 --> 00:02:41.280 
going to add the two values the B
register<00:02:40.030> and<00:02:40.209> the<00:02:40.299> accumulator<00:02:40.810> which<00:02:41.049> are

00:02:41.280 --> 00:02:41.290 
register and the accumulator which are

00:02:41.290 --> 00:02:53.750 
register and the accumulator which are
10<00:02:44.250> 000<00:02:46.049> 000<00:02:49.440> and<00:02:50.640> we<00:02:51.640> store<00:02:52.269> the<00:02:52.450> result<00:02:52.870> in

00:02:53.750 --> 00:02:53.760 
10 000 000 and we store the result in

00:02:53.760 --> 00:02:56.729 
10 000 000 and we store the result in
two<00:02:54.760> of<00:02:55.390> the<00:02:55.599> accumulator<00:02:56.019> back<00:02:56.200> into<00:02:56.410> memory

00:02:56.729 --> 00:02:56.739 
two of the accumulator back into memory

00:02:56.739 --> 00:03:02.839 
two of the accumulator back into memory
so<00:02:56.980> this<00:02:57.190> is<00:02:57.370> 0<00:02:57.640> 0<00:02:58.030> 1<00:02:58.690> 1<00:02:58.989> 0<00:02:59.019> 0<00:02:59.560> 1<00:03:00.310> 0<00:03:01.379> to<00:03:02.379> memory

00:03:02.839 --> 00:03:02.849 
so this is 0 0 1 1 0 0 1 0 to memory

00:03:02.849 --> 00:03:13.940 
so this is 0 0 1 1 0 0 1 0 to memory
location<00:03:05.579> 130<00:03:09.900> with<00:03:10.900> a<00:03:10.930> high<00:03:11.170> byte<00:03:11.519> 0<00:03:12.569> and

00:03:13.940 --> 00:03:13.950 
location 130 with a high byte 0 and

00:03:13.950 --> 00:03:16.500 
location 130 with a high byte 0 and
finally<00:03:14.950> the<00:03:15.099> demo<00:03:15.310> program<00:03:15.519> jumps<00:03:16.060> back<00:03:16.299> to

00:03:16.500 --> 00:03:16.510 
finally the demo program jumps back to

00:03:16.510 --> 00:03:18.300 
finally the demo program jumps back to
the<00:03:16.599> zero<00:03:16.810> memory<00:03:17.079> location<00:03:17.799> so<00:03:17.980> the<00:03:18.069> jump

00:03:18.300 --> 00:03:18.310 
the zero memory location so the jump

00:03:18.310 --> 00:03:24.030 
the zero memory location so the jump
instruction<00:03:18.910> is<00:03:19.060> 1<00:03:19.299> 1<00:03:19.599> 0<00:03:20.139> 0<00:03:20.230> 0<00:03:20.680> 0<00:03:21.579> 1<00:03:22.540> 1<00:03:23.040> deposit

00:03:24.030 --> 00:03:24.040 
instruction is 1 1 0 0 0 0 1 1 deposit

00:03:24.040 --> 00:03:28.920 
instruction is 1 1 0 0 0 0 1 1 deposit
next<00:03:24.519> and<00:03:24.760> to<00:03:24.790> the<00:03:25.269> memory<00:03:25.630> location<00:03:26.400> 00<00:03:27.930> 000

00:03:28.920 --> 00:03:28.930 
next and to the memory location 00 000

00:03:28.930 --> 00:03:33.750 
next and to the memory location 00 000
000<00:03:29.849> 000<00:03:31.049> so<00:03:32.049> there<00:03:32.230> we<00:03:32.349> have<00:03:32.380> it<00:03:32.590> the<00:03:33.430> machine

00:03:33.750 --> 00:03:33.760 
000 000 so there we have it the machine

00:03:33.760 --> 00:03:37.099 
000 000 so there we have it the machine
is<00:03:33.790> now<00:03:35.040> loaded<00:03:36.040> with<00:03:36.340> our<00:03:36.579> small

00:03:37.099 --> 00:03:37.109 
is now loaded with our small

00:03:37.109 --> 00:03:39.210 
is now loaded with our small
demonstration<00:03:38.109> program<00:03:38.530> so<00:03:38.799> if<00:03:38.889> we<00:03:39.040> have<00:03:39.190> a

00:03:39.210 --> 00:03:39.220 
demonstration program so if we have a

00:03:39.220 --> 00:03:43.860 
demonstration program so if we have a
look<00:03:39.430> at<00:03:39.840> the<00:03:40.840> value<00:03:41.230> in<00:03:41.650> memory<00:03:42.400> address<00:03:42.730> 0<00:03:43.000> we

00:03:43.860 --> 00:03:43.870 
look at the value in memory address 0 we

00:03:43.870 --> 00:03:45.870 
look at the value in memory address 0 we
see<00:03:44.109> that<00:03:44.290> we<00:03:44.410> have<00:03:44.440> our<00:03:44.859> load<00:03:45.250> accumulator

00:03:45.870 --> 00:03:45.880 
see that we have our load accumulator

00:03:45.880 --> 00:03:48.930 
see that we have our load accumulator
instruction<00:03:46.510> there<00:03:46.720> if<00:03:47.620> we<00:03:47.919> have<00:03:48.250> a<00:03:48.280> look<00:03:48.549> at

00:03:48.930 --> 00:03:48.940 
instruction there if we have a look at

00:03:48.940 --> 00:03:53.370 
instruction there if we have a look at
the<00:03:49.359> value<00:03:49.510> in<00:03:49.840> 128<00:03:50.829> this<00:03:51.700> is<00:03:51.880> where<00:03:52.090> we<00:03:52.380> are

00:03:53.370 --> 00:03:53.380 
the value in 128 this is where we are

00:03:53.380 --> 00:03:56.849 
the value in 128 this is where we are
about<00:03:53.709> to<00:03:54.780> put<00:03:55.780> on<00:03:55.989> the<00:03:56.109> two<00:03:56.260> values<00:03:56.590> to<00:03:56.739> be

00:03:56.849 --> 00:03:56.859 
about to put on the two values to be

00:03:56.859 --> 00:03:59.190 
about to put on the two values to be
added<00:03:57.129> so<00:03:57.340> currently<00:03:57.760> there<00:03:57.819> 20<00:03:58.329> I'm<00:03:58.780> going<00:03:59.109> to

00:03:59.190 --> 00:03:59.200 
added so currently there 20 I'm going to

00:03:59.200 --> 00:04:02.129 
added so currently there 20 I'm going to
make<00:03:59.410> that<00:03:59.680> one<00:04:00.629> so<00:04:01.629> we're<00:04:01.750> going<00:04:01.870> to<00:04:01.989> add<00:04:02.109> one

00:04:02.129 --> 00:04:02.139 
make that one so we're going to add one

00:04:02.139 --> 00:04:05.900 
make that one so we're going to add one
to<00:04:03.129> another<00:04:03.340> memory<00:04:03.819> loke<00:04:04.540> ups<00:04:05.019> I've<00:04:05.379> just

00:04:05.900 --> 00:04:05.910 
to another memory loke ups I've just

00:04:05.910 --> 00:04:09.920 
to another memory loke ups I've just
made<00:04:06.910> that<00:04:07.180> one<00:04:07.840> 29<00:04:08.289> so<00:04:08.530> I'll<00:04:08.769> do<00:04:09.009> that<00:04:09.160> again

00:04:09.920 --> 00:04:09.930 
made that one 29 so I'll do that again

00:04:09.930 --> 00:04:13.140 
made that one 29 so I'll do that again
so<00:04:10.930> we<00:04:11.049> see<00:04:11.229> the<00:04:11.350> memory<00:04:11.680> address<00:04:11.889> location

00:04:13.140 --> 00:04:13.150 
so we see the memory address location

00:04:13.150 --> 00:04:17.460 
so we see the memory address location
128<00:04:13.840> currently<00:04:14.319> contains<00:04:14.799> the<00:04:15.280> value<00:04:15.400> 1<00:04:16.440> so<00:04:17.440> i

00:04:17.460 --> 00:04:17.470 
128 currently contains the value 1 so i

00:04:17.470 --> 00:04:21.150 
128 currently contains the value 1 so i
will<00:04:17.680> now<00:04:17.829> move<00:04:18.130> to<00:04:18.489> the<00:04:19.380> value<00:04:20.380> to<00:04:20.620> me

00:04:21.150 --> 00:04:21.160 
will now move to the value to me

00:04:21.160 --> 00:04:24.270 
will now move to the value to me
relocation<00:04:21.789> 129<00:04:22.570> we<00:04:23.050> see<00:04:23.320> 129<00:04:23.830> currently

00:04:24.270 --> 00:04:24.280 
relocation 129 we see 129 currently

00:04:24.280 --> 00:04:26.460 
relocation 129 we see 129 currently
contains<00:04:24.580> zero<00:04:24.880> and<00:04:25.360> i'm<00:04:25.720> going<00:04:25.900> to<00:04:25.960> make<00:04:26.199> that

00:04:26.460 --> 00:04:26.470 
contains zero and i'm going to make that

00:04:26.470 --> 00:04:37.920 
contains zero and i'm going to make that
contain<00:04:27.250> two<00:04:27.940> or<00:04:28.270> 10<00:04:30.780> and<00:04:36.090> as<00:04:37.090> stuff<00:04:37.630> to<00:04:37.780> that

00:04:37.920 --> 00:04:37.930 
contain two or 10 and as stuff to that

00:04:37.930 --> 00:04:43.200 
contain two or 10 and as stuff to that
hangul<00:04:40.199> memory<00:04:41.199> dress<00:04:41.440> 128<00:04:42.220> contains<00:04:42.910> one

00:04:43.200 --> 00:04:43.210 
hangul memory dress 128 contains one

00:04:43.210 --> 00:04:50.900 
hangul memory dress 128 contains one
memory<00:04:43.780> address<00:04:44.080> 129<00:04:44.949> I<00:04:46.350> want<00:04:47.350> to<00:04:47.470> contain<00:04:49.830> two

00:04:50.900 --> 00:04:50.910 
memory address 129 I want to contain two

00:04:50.910 --> 00:04:54.150 
memory address 129 I want to contain two
so<00:04:51.910> I<00:04:51.940> deposit<00:04:52.479> that<00:04:52.750> 70<00:04:53.680> these<00:04:53.830> memory

00:04:54.150 --> 00:04:54.160 
so I deposit that 70 these memory

00:04:54.160 --> 00:05:00.300 
so I deposit that 70 these memory
address<00:04:54.400> location<00:04:54.729> 120<00:04:58.050> yes<00:04:59.050> 129<00:04:59.800> contains

00:05:00.300 --> 00:05:00.310 
address location 120 yes 129 contains

00:05:00.310 --> 00:05:11.119 
address location 120 yes 129 contains
two<00:05:00.580> and

00:05:11.119 --> 00:05:11.129 

00:05:11.129 --> 00:05:14.389 

I<00:05:11.219> want<00:05:12.179> to<00:05:12.270> look<00:05:12.809> at<00:05:13.139> it<00:05:13.830> gets<00:05:14.069> very<00:05:14.129> confusing

00:05:14.389 --> 00:05:14.399 
I want to look at it gets very confusing

00:05:14.399 --> 00:05:16.279 
I want to look at it gets very confusing
when<00:05:14.909> you<00:05:15.029> trust<00:05:15.270> in<00:05:15.389> the<00:05:15.509> race<00:05:15.689> and<00:05:15.929> do<00:05:16.080> this

00:05:16.279 --> 00:05:16.289 
when you trust in the race and do this

00:05:16.289 --> 00:05:18.799 
when you trust in the race and do this
at<00:05:16.439> the<00:05:16.559> same<00:05:16.770> time<00:05:17.149> so<00:05:18.149> now<00:05:18.300> I<00:05:18.330> want<00:05:18.569> to<00:05:18.689> look

00:05:18.799 --> 00:05:18.809 
at the same time so now I want to look

00:05:18.809 --> 00:05:22.279 
at the same time so now I want to look
at<00:05:19.020> memory<00:05:19.349> location<00:05:19.919> 1<00:05:20.219> 30<00:05:20.639> which<00:05:21.029> is<00:05:21.289> that

00:05:22.279 --> 00:05:22.289 
at memory location 1 30 which is that

00:05:22.289 --> 00:05:26.619 
at memory location 1 30 which is that
there<00:05:22.529> and<00:05:22.830> it<00:05:22.919> currently<00:05:23.159> contains<00:05:24.619> zero<00:05:25.619> so

00:05:26.619 --> 00:05:26.629 
there and it currently contains zero so

00:05:26.629 --> 00:05:30.049 
there and it currently contains zero so
if<00:05:27.629> we<00:05:27.749> go<00:05:27.899> back<00:05:27.929> to<00:05:28.489> have<00:05:29.489> a<00:05:29.550> look<00:05:29.699> at<00:05:29.819> memory

00:05:30.049 --> 00:05:30.059 
if we go back to have a look at memory

00:05:30.059 --> 00:05:36.439 
if we go back to have a look at memory
location<00:05:30.539> 0<00:05:32.269> we<00:05:33.269> should<00:05:33.509> now<00:05:33.719> be<00:05:33.779> able<00:05:34.080> to<00:05:35.449> run

00:05:36.439 --> 00:05:36.449 
location 0 we should now be able to run

00:05:36.449 --> 00:05:46.399 
location 0 we should now be able to run
this<00:05:38.389> by<00:05:39.389> flicking<00:05:39.779> the<00:05:40.289> run<00:05:40.919> switch<00:05:45.409> right

00:05:46.399 --> 00:05:46.409 
this by flicking the run switch right

00:05:46.409 --> 00:05:49.939 
this by flicking the run switch right
now<00:05:47.149> by<00:05:48.149> Heather<00:05:48.569> log<00:05:48.839> by<00:05:49.169> examine<00:05:49.649> memory

00:05:49.939 --> 00:05:49.949 
now by Heather log by examine memory

00:05:49.949 --> 00:05:51.980 
now by Heather log by examine memory
location<00:05:50.459> 120x<00:05:51.149> that<00:05:51.449> should<00:05:51.599> have<00:05:51.719> our<00:05:51.839> first

00:05:51.980 --> 00:05:51.990 
location 120x that should have our first

00:05:51.990 --> 00:05:54.739 
location 120x that should have our first
value<00:05:52.259> of<00:05:52.469> one<00:05:52.649> if<00:05:52.800> I<00:05:52.979> examine<00:05:53.789> memory

00:05:54.739 --> 00:05:54.749 
value of one if I examine memory

00:05:54.749 --> 00:05:57.409 
value of one if I examine memory
location<00:05:55.409> 129<00:05:56.219> that<00:05:56.580> should<00:05:56.759> have<00:05:56.909> our<00:05:57.059> second

00:05:57.409 --> 00:05:57.419 
location 129 that should have our second

00:05:57.419 --> 00:06:00.799 
location 129 that should have our second
value<00:05:57.629> of<00:05:58.080> and<00:05:58.679> indeed<00:05:59.249> it<00:05:59.550> does<00:05:59.699> of<00:05:59.999> two<00:06:00.479> and

00:06:00.799 --> 00:06:00.809 
value of and indeed it does of two and

00:06:00.809 --> 00:06:03.589 
value of and indeed it does of two and
if<00:06:01.289> we<00:06:01.319> examine<00:06:01.769> them<00:06:02.069> locate<00:06:03.029> memory

00:06:03.589 --> 00:06:03.599 
if we examine them locate memory

00:06:03.599 --> 00:06:05.779 
if we examine them locate memory
location<00:06:04.019> 130<00:06:04.619> we<00:06:04.889> should<00:06:05.099> see<00:06:05.339> those<00:06:05.550> two

00:06:05.779 --> 00:06:05.789 
location 130 we should see those two

00:06:05.789 --> 00:06:11.719 
location 130 we should see those two
values<00:06:05.909> added<00:06:07.849> and<00:06:09.349> there<00:06:10.349> we<00:06:10.499> go<00:06:10.729> memory

00:06:11.719 --> 00:06:11.729 
values added and there we go memory

00:06:11.729 --> 00:06:14.540 
values added and there we go memory
location<00:06:12.239> 130<00:06:12.779> our<00:06:13.019> program<00:06:13.439> has<00:06:13.800> executed

00:06:14.540 --> 00:06:14.550 
location 130 our program has executed

00:06:14.550 --> 00:06:16.879 
location 130 our program has executed
successfully<00:06:15.089> and<00:06:15.779> I<00:06:15.869> now<00:06:16.079> have<00:06:16.319> the<00:06:16.349> value<00:06:16.740> of

00:06:16.879 --> 00:06:16.889 
successfully and I now have the value of

00:06:16.889 --> 00:06:22.189 
successfully and I now have the value of
0<00:06:17.129> 0<00:06:17.429> 0<00:06:17.550> 0<00:06:17.909> 0<00:06:18.269> 0<00:06:18.599> 1<00:06:19.199> 1<00:06:19.229> or<00:06:19.860> 3<00:06:20.569> in<00:06:21.569> the<00:06:21.929> memory

00:06:22.189 --> 00:06:22.199 
0 0 0 0 0 0 1 1 or 3 in the memory

00:06:22.199 --> 00:06:25.129 
0 0 0 0 0 0 1 1 or 3 in the memory
location<00:06:22.349> as<00:06:22.949> expected<00:06:23.610> and<00:06:24.089> if<00:06:24.869> you'll<00:06:25.050> be

00:06:25.129 --> 00:06:25.139 
location as expected and if you'll be

00:06:25.139 --> 00:06:26.719 
location as expected and if you'll be
watching<00:06:25.169> carefully<00:06:25.649> you<00:06:26.279> will<00:06:26.309> have<00:06:26.490> seen

00:06:26.719 --> 00:06:26.729 
watching carefully you will have seen

00:06:26.729 --> 00:06:28.249 
watching carefully you will have seen
that<00:06:26.849> I<00:06:26.969> examined<00:06:27.509> that<00:06:27.659> same<00:06:27.959> memory

00:06:28.249 --> 00:06:28.259 
that I examined that same memory

00:06:28.259 --> 00:06:30.109 
that I examined that same memory
location<00:06:28.289> earlier<00:06:29.069> and<00:06:29.369> it<00:06:29.519> had<00:06:29.699> the<00:06:29.849> value

00:06:30.109 --> 00:06:30.119 
location earlier and it had the value

00:06:30.119 --> 00:06:32.719 
location earlier and it had the value
zero<00:06:30.149> so<00:06:30.749> our<00:06:30.899> program<00:06:31.259> was<00:06:31.409> successful<00:06:31.979> this

00:06:32.719 --> 00:06:32.729 
zero so our program was successful this

00:06:32.729 --> 00:06:37.369 
zero so our program was successful this
is<00:06:34.969> quite<00:06:35.969> proud<00:06:36.269> moment<00:06:36.659> for<00:06:36.719> me<00:06:36.899> I've<00:06:37.079> now

00:06:37.369 --> 00:06:37.379 
is quite proud moment for me I've now

00:06:37.379 --> 00:06:40.549 
is quite proud moment for me I've now
toggled<00:06:37.860> in<00:06:38.059> successfully<00:06:39.059> or<00:06:39.809> successfully

00:06:40.549 --> 00:06:40.559 
toggled in successfully or successfully

00:06:40.559 --> 00:06:43.159 
toggled in successfully or successfully
toggled<00:06:40.919> in<00:06:41.039> an<00:06:41.279> Altair<00:06:41.819> 8800<00:06:42.269> program<00:06:42.929> for

00:06:43.159 --> 00:06:43.169 
toggled in an Altair 8800 program for

00:06:43.169 --> 00:06:44.929 
toggled in an Altair 8800 program for
the<00:06:43.259> very<00:06:43.559> first<00:06:43.769> time<00:06:43.949> though<00:06:44.699> actually

00:06:44.929 --> 00:06:44.939 
the very first time though actually

00:06:44.939 --> 00:06:48.439 
the very first time though actually
really<00:06:45.809> it's<00:06:45.990> an<00:06:46.139> 80<00:06:46.289> 80<00:06:46.589> program<00:06:47.369> the<00:06:47.879> LT<00:06:48.240> was

00:06:48.439 --> 00:06:48.449 
really it's an 80 80 program the LT was

00:06:48.449 --> 00:06:50.089 
really it's an 80 80 program the LT was
just<00:06:48.719> a<00:06:48.809> handy<00:06:49.110> way<00:06:49.229> of<00:06:49.259> getting<00:06:49.649> us<00:06:49.769> into<00:06:49.919> the

00:06:50.089 --> 00:06:50.099 
just a handy way of getting us into the

00:06:50.099 --> 00:06:53.749 
just a handy way of getting us into the
chip<00:06:50.309> thanks<00:06:51.240> for<00:06:51.360> watching

