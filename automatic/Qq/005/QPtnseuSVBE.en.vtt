WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.380
 in this video we will talk about other 

00:00:02.010 --> 00:00:07.350
 notions of table so the tables or 

00:00:04.380 --> 00:00:10.920
 stop in English are a type of 

00:00:07.350 --> 00:00:12.630
 variables that's pretty special so I 

00:00:10.920 --> 00:00:15.000
 already declared a new variable 

00:00:12.630 --> 00:00:17.190
 that I'm going to call art type array 

00:00:15.000 --> 00:00:19.970
 so it's not in string or whatever 

00:00:17.190 --> 00:00:22.890
 thing these stops and I'll say they 

00:00:19.970 --> 00:00:24.420
 that this is a new table so the 

00:00:22.890 --> 00:00:28.410
 content of my variable it's a new 

00:00:24.420 --> 00:00:31.140
 type array so a new array 

00:00:28.410 --> 00:00:34.280
 stops and inside we will be able 

00:00:31.140 --> 00:00:37.770
 put lots of values 

00:00:34.280 --> 00:00:41.940
 for example I could put here a 

00:00:37.770 --> 00:00:46.469
 torch I could put here a book I 

00:00:41.940 --> 00:00:50.190
 could put here maps or by 

00:00:46.469 --> 00:00:54.210
 example rather a water so I'm going 

00:00:50.190 --> 00:00:55.770
 explain to me a stop- type variable 

00:00:54.210 --> 00:00:59.670
 it's a variable that can contain 

00:00:55.770 --> 00:01:03.170
 several entities there you noticed that 

00:00:59.670 --> 00:01:06.330
 we have separated by a comma 

00:01:03.170 --> 00:01:07.350
 entities so for example the in to a 

00:01:06.330 --> 00:01:09.299
 string a string of 

00:01:07.350 --> 00:01:12.240
 characters 1 int a string of 

00:01:09.299 --> 00:01:16.409
 characters and all that is contained in 

00:01:12.240 --> 00:01:19.290
 the table variable so to explain 

00:01:16.409 --> 00:01:21.540
 in a simpler way we will be able to 

00:01:19.290 --> 00:01:24.689
 access to the different entities of the 

00:01:21.540 --> 00:01:26.759
 array via indexes and indexes is 

00:01:24.689 --> 00:01:29.939
 simply numbers that are 

00:01:26.759 --> 00:01:33.360
 associated with these different entities so 

00:01:29.939 --> 00:01:34.950
 for example, then it is necessary already 

00:01:33.360 --> 00:01:36.780
 understand one thing is that in index to 

00:01:34.950 --> 00:01:42.390
 from scratch ie torch 

00:01:36.780 --> 00:01:43.409
 has the number zero pounds 1 7 2 to 3 

00:01:42.390 --> 00:01:44.850
 etc., etc 

00:01:43.409 --> 00:01:47.009
 so we start from scratch so 

00:01:44.850 --> 00:01:50.189
 the first element of the array has 

00:01:47.009 --> 00:01:53.100
 index 0 so to access it 

00:01:50.189 --> 00:01:56.640
 already I put them in a print for 

00:01:53.100 --> 00:01:58.409
 access an index of the admitting table 

00:01:56.640 --> 00:02:00.060
 that I will access to my book and wine 

00:01:58.409 --> 00:02:03.560
 I will simply call malaria 

00:02:00.060 --> 00:02:07.799
 table and in brackets I'm going 

00:02:03.560 --> 00:02:11.370
 access index 2 to the index by which 

00:02:07.799 --> 00:02:12.340
 one that corresponds to the second element of the 

00:02:11.370 --> 00:02:14.690
 board 

00:02:12.340 --> 00:02:18.050
 so if I do that it's okay 

00:02:14.690 --> 00:02:20.720
 to show me book down in my status 

00:02:18.050 --> 00:02:21.830
 bar as you can see then I 

00:02:20.720 --> 00:02:25.400
 have to specify something quite 

00:02:21.830 --> 00:02:28.040
 interesting in multi is that the 

00:02:25.400 --> 00:02:31.970
 tables may contain different 

00:02:28.040 --> 00:02:34.940
 types of variables ie that there 

00:02:31.970 --> 00:02:36.320
 if I access go to the indexed item to 

00:02:34.940 --> 00:02:39.650
 two ie 7 

00:02:36.320 --> 00:02:42.560
 you notice it's down below 

00:02:39.650 --> 00:02:44.000
 this and it's an integer so we mix 

00:02:42.560 --> 00:02:45.760
 d integer the character strings on 

00:02:44.000 --> 00:02:47.989
 can mix streams of mills and c 

00:02:45.760 --> 00:02:49.160
 is actually really good 

00:02:47.989 --> 00:02:50.930
 because in other languages ​​of 

00:02:49.160 --> 00:02:53.120
 general programming is a table 

00:02:50.930 --> 00:02:55.700
 which is typed ie this table 

00:02:53.120 --> 00:02:58.580
 is only 2 int or that of strings and 

00:02:55.700 --> 00:03:02.480
 so now we're going to see some 

00:02:58.580 --> 00:03:06.670
 functions are the tables so we go 

00:03:02.480 --> 00:03:10.580
 at our table called the push function 

00:03:06.670 --> 00:03:13.640
 push that can we add so if we 

00:03:10.580 --> 00:03:15.140
 stop here we see little added a 

00:03:13.640 --> 00:03:16.940
 instance at the end of the array 

00:03:15.140 --> 00:03:18.200
 so here I'm going to say that at the end of 

00:03:16.940 --> 00:03:20.260
 table we will put a float by 

00:03:18.200 --> 00:03:24.670
 example 2008 

00:03:20.260 --> 00:03:27.860
 I save and there I will access 

00:03:24.670 --> 00:03:29.450
 then the normal eat only 3.1 of the purposes 

00:03:27.860 --> 00:03:31.459
 I can go up to the maximum index 3 

00:03:29.450 --> 00:03:33.530
 since j 4 values ​​but here I go 

00:03:31.459 --> 00:03:37.459
 try to call 4th value 

00:03:33.530 --> 00:03:41.000
 following the addition of a value here in the 

00:03:37.459 --> 00:03:43.160
 table if I test it will be fine 

00:03:41.000 --> 00:03:43.519
 displayed 2.8 because at the end of 

00:03:43.160 --> 00:03:50.299
 board 

00:03:43.519 --> 00:03:53.180
 I added 2.8 and that includes 

00:03:50.299 --> 00:03:56.989
 it's necessarily a float 

00:03:53.180 --> 00:04:00.590
 so let's say there are still others 

00:03:56.989 --> 00:04:06.590
 ways of using tables so this 

00:04:00.590 --> 00:04:08.870
 what I'm going to do is I'm going to 

00:04:06.590 --> 00:04:12.320
 think we'll stop here to avoid 

00:04:08.870 --> 00:04:14.510
 to complicate a little too much the task and we 

00:04:12.320 --> 00:04:17.269
 will be saying to you soon in an upcoming 

00:04:14.510 --> 00:04:20.859
 video in the hold we'll talk about 

00:04:17.269 --> 00:04:20.859
 function immediately 

