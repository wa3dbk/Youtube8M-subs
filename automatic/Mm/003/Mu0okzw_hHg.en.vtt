WEBVTT
Kind: captions
Language: en

00:00:00.319 --> 00:00:05.069
 have a nice day guys today 

00:00:02.550 --> 00:00:06.810
 they replace the prophets and since they are 

00:00:05.069 --> 00:00:08.130
 free to choose I would like to own 

00:00:06.810 --> 00:00:10.860
 talk about the numbering system 

00:00:08.130 --> 00:00:17.430
 binary also known as code 

00:00:10.860 --> 00:00:18.570
 track the wall where with the trains you know 

00:00:17.430 --> 00:00:21.090
 that you didn't go very far 

00:00:18.570 --> 00:00:22.740
 I died the binary code 

00:00:21.090 --> 00:00:24.900
 numbering used by all computers 

00:00:22.740 --> 00:00:27.240
 even those that regular modern trains 

00:00:24.900 --> 00:00:29.550
 but the reason why it is called binary e 

00:00:27.240 --> 00:00:32.790
 which uses only two numeric symbols 

00:00:29.550 --> 00:00:37.110
 the zero and them and is therefore a system of 

00:00:32.790 --> 00:00:38.969
 numbering based on two supposed are two 

00:00:37.110 --> 00:00:42.629
 numbers but a dream 

00:00:38.969 --> 00:00:44.280
 nothing for expressions km moretti me 

00:00:42.629 --> 00:00:45.930
 sorry to disappoint you but since yes 

00:00:44.280 --> 00:00:48.059
 use only two symbols for 

00:00:45.930 --> 00:00:49.620
 represent everything binary numbers 

00:00:48.059 --> 00:00:51.300
 they usually use sequences 

00:00:49.620 --> 00:00:52.710
 much longer than those 

00:00:51.300 --> 00:00:55.860
 we use habitually 

00:00:52.710 --> 00:00:58.260
 we from giulio dell'amat and see how 

00:00:55.860 --> 00:01:00.449
 convert a number from base 10 to base 2 

00:00:58.260 --> 00:01:02.340
 using the same methods you have 

00:01:00.449 --> 00:01:02.930
 already explained the prophets in the previous ones 

00:01:02.340 --> 00:01:05.250
 elections 

00:01:02.930 --> 00:01:07.290
 for example we use the graphic method 

00:01:05.250 --> 00:01:09.900
 to represent the number 19 

00:01:07.290 --> 00:01:11.670
 then 19 balls we gather there in 

00:01:09.900 --> 00:01:13.979
 groups of 2 and write the number of 

00:01:11.670 --> 00:01:15.600
 dots that remain outside in this 

00:01:13.979 --> 00:01:18.270
 case 1 

00:01:15.600 --> 00:01:20.159
 you see that they can be left out or 0 or 

00:01:18.270 --> 00:01:22.350
 1 which are precisely the two figures 

00:01:20.159 --> 00:01:24.930
 used to represent the number 

00:01:22.350 --> 00:01:26.430
 in binary system we now report a 

00:01:24.930 --> 00:01:29.909
 bullet for each complete group 

00:01:26.430 --> 00:01:32.490
 then 9 dots we form again i 

00:01:29.909 --> 00:01:33.780
 groups and ii and we score one again 

00:01:32.490 --> 00:01:36.329
 for each group 

00:01:33.780 --> 00:01:39.299
 we report a bullet then 4 e 

00:01:36.329 --> 00:01:41.189
 we form our base 2 groups this 

00:01:39.299 --> 00:01:43.920
 then no one is left out then 

00:01:41.189 --> 00:01:45.780
 we write 0 we write again a 

00:01:43.920 --> 00:01:48.540
 ball for each group previously 

00:01:45.780 --> 00:01:51.000
 completed two dots and group there 

00:01:48.540 --> 00:01:54.060
 even this time they are out 0 

00:01:51.000 --> 00:01:57.680
 finally only one bullet remains and therefore 

00:01:54.060 --> 00:02:00.700
 we write 1 then number 19 in base 10 

00:01:57.680 --> 00:02:05.110
 rewritten in base 2 will be one 

00:02:00.700 --> 00:02:08.200
 0 0 1 1 this is how we write about 

00:02:05.110 --> 00:02:10.899
 polynomial notation we will have 1x2 at 

00:02:08.200 --> 00:02:13.840
 fourth plus zero for two to the third plus 

00:02:10.899 --> 00:02:16.989
 zero for two squared plus 1x2 at 

00:02:13.840 --> 00:02:19.060
 one plus one for 2 to 0 in which i 

00:02:16.989 --> 00:02:20.980
 exponents of the base two have values 

00:02:19.060 --> 00:02:23.530
 starting from zero is increasing 

00:02:20.980 --> 00:02:25.599
 from left to right we carry out the 

00:02:23.530 --> 00:02:29.290
 powers and we make the products by obtaining 

00:02:25.599 --> 00:02:33.730
 16 p zero that 0 that two plus one that 

00:02:29.290 --> 00:02:36.040
 just wants to 19 closed just like 

00:02:33.730 --> 00:02:37.690
 the over of prof 

00:02:36.040 --> 00:02:39.819
 we come a more realistic application 

00:02:37.690 --> 00:02:42.489
 then it will have happened to you sometimes 

00:02:39.819 --> 00:02:44.319
 read on your mp3 players or on 

00:02:42.489 --> 00:02:47.049
 cards of your digital cameras 

00:02:44.319 --> 00:02:49.150
 memory expressed in gigabytes and then 

00:02:47.049 --> 00:02:50.500
 you will see that this did not correspond 

00:02:49.150 --> 00:02:53.500
 exactly the one you had a 

00:02:50.500 --> 00:02:55.239
 arrangement is true in my moon 

00:02:53.500 --> 00:02:56.470
 memory card is written above gods 

00:02:55.239 --> 00:02:58.599
 100 gigabytes 

00:02:56.470 --> 00:03:00.670
 but in reality if not less to understand 

00:02:58.599 --> 00:03:02.890
 why we see first what the unit of 

00:03:00.670 --> 00:03:04.420
 measurement of memory for computers e 

00:03:02.890 --> 00:03:06.519
 all electronic devices 

00:03:04.420 --> 00:03:08.340
 the information is stored in 

00:03:06.519 --> 00:03:11.709
 binary code in the form of bits 

00:03:08.340 --> 00:03:14.139
 from English binary digit every bit can 

00:03:11.709 --> 00:03:16.269
 assume a value of 0 or 1 

00:03:14.139 --> 00:03:19.480
 usually sequences of 8 are used 

00:03:16.269 --> 00:03:21.010
 bits called bytes the bite to a whole 

00:03:19.480 --> 00:03:23.680
 series of multiples that use 

00:03:21.010 --> 00:03:26.799
 same prefixes as the decimal system chi 

00:03:23.680 --> 00:03:30.069
 it stands for 10 to the third or a thousand megs 

00:03:26.799 --> 00:03:33.160
 10 to the sixth or one million and giga 10 

00:03:30.069 --> 00:03:35.049
 at 9 or 1 billion, however, given that yes 

00:03:33.160 --> 00:03:37.060
 it's a binary system of things 

00:03:35.049 --> 00:03:40.900
 in fact, they are a bit different 

00:03:37.060 --> 00:03:43.120
 kilobytes are two to 10 bytes ie 1024 

00:03:40.900 --> 00:03:45.670
 slightly greater than the decimal kg 

00:03:43.120 --> 00:03:48.280
 so also the mega byte and two to the 20 

00:03:45.670 --> 00:03:51.459
 greater than the decimal fee ed 

00:03:48.280 --> 00:03:53.230
 even the gigabyte that is two at 30 

00:03:51.459 --> 00:03:56.260
 see that that little difference of 

00:03:53.230 --> 00:03:58.599
 24 in kilobytes going up to gigabytes 

00:03:56.260 --> 00:03:59.739
 becomes a difference of over 73 

00:03:58.599 --> 00:04:01.359
 million bytes 

00:03:59.739 --> 00:04:04.000
 I don't really understand where they want 

00:04:01.359 --> 00:04:04.720
 arrive and therefore and this creates a bit of 

00:04:04.000 --> 00:04:06.250
 confusion 

00:04:04.720 --> 00:04:08.950
 if we have a device with one 

00:04:06.250 --> 00:04:11.260
 200 gigabyte memory ie 200 

00:04:08.950 --> 00:04:11.740
 billions of bytes dividing by value 

00:04:11.260 --> 00:04:14.020
 of the 

00:04:11.740 --> 00:04:16.510
 decimal jig prefix we will get as 

00:04:14.020 --> 00:04:18.459
 easy to expect again 200 should be given 

00:04:16.510 --> 00:04:20.080
 that the cabin in binary code is the right one 

00:04:18.459 --> 00:04:22.750
 operation would divide by the 

00:04:20.080 --> 00:04:27.610
 value in binary giga that is a billion 

00:04:22.750 --> 00:04:29.440
 to 73 million 741 thousand and 824 bytes from 

00:04:27.610 --> 00:04:34.210
 this division is seen that in reality i 

00:04:29.440 --> 00:04:36.730
 200 gigabytes are only 186 I understand in 

00:04:34.210 --> 00:04:38.800
 in reality there are 14 gigabytes of mine 

00:04:36.730 --> 00:04:40.900
 memory card but it's just 

00:04:38.800 --> 00:04:44.610
 a moderate to indicate them just like that 

00:04:40.900 --> 00:04:44.610
 all clear then 

