WEBVTT
Kind: captions
Language: en

00:00:22.099 --> 00:00:24.589 

hello<00:00:23.099> friends<00:00:23.279> this<00:00:23.730> is<00:00:23.789> satchel<00:00:24.300> and<00:00:24.449> this

00:00:24.589 --> 00:00:24.599 
hello friends this is satchel and this

00:00:24.599 --> 00:00:26.300 
hello friends this is satchel and this
time<00:00:24.779> around<00:00:24.929> we<00:00:25.230> will<00:00:25.349> be<00:00:25.470> reviewing<00:00:25.650> the<00:00:26.099> new

00:00:26.300 --> 00:00:26.310 
time around we will be reviewing the new

00:00:26.310 --> 00:00:29.749 
time around we will be reviewing the new
Ivy<00:00:26.730> Bridge<00:00:26.939> macbook<00:00:27.480> air<00:00:27.720> 11-inch<00:00:28.320> so<00:00:29.039> until

00:00:29.749 --> 00:00:29.759 
Ivy Bridge macbook air 11-inch so until

00:00:29.759 --> 00:00:31.159 
Ivy Bridge macbook air 11-inch so until
I<00:00:29.789> every<00:00:30.029> Bridge<00:00:30.180> architecture<00:00:30.689> has<00:00:30.809> arrived

00:00:31.159 --> 00:00:31.169 
I every Bridge architecture has arrived

00:00:31.169 --> 00:00:32.380 
I every Bridge architecture has arrived
and<00:00:31.470> brought<00:00:31.739> with<00:00:31.769> it<00:00:31.949> a<00:00:32.099> much-anticipated

00:00:32.380 --> 00:00:32.390 
and brought with it a much-anticipated

00:00:32.390 --> 00:00:35.150 
and brought with it a much-anticipated
refresh<00:00:33.390> to<00:00:33.570> apples<00:00:33.899> entire<00:00:34.260> macbook<00:00:34.739> line<00:00:34.920> as

00:00:35.150 --> 00:00:35.160 
refresh to apples entire macbook line as

00:00:35.160 --> 00:00:37.189 
refresh to apples entire macbook line as
you<00:00:35.699> can<00:00:35.820> see<00:00:36.030> the<00:00:36.269> form<00:00:36.480> factor<00:00:36.629> has<00:00:36.930> remained

00:00:37.189 --> 00:00:37.199 
you can see the form factor has remained

00:00:37.199 --> 00:00:39.200 
you can see the form factor has remained
the<00:00:37.290> same<00:00:37.500> wedge<00:00:37.769> bootie<00:00:38.129> as<00:00:38.190> last<00:00:38.430> year<00:00:38.699> the

00:00:39.200 --> 00:00:39.210 
the same wedge bootie as last year the

00:00:39.210 --> 00:00:40.610 
the same wedge bootie as last year the
only<00:00:39.390> thing<00:00:39.540> that<00:00:39.690> distinguishes<00:00:39.989> the<00:00:40.470> two

00:00:40.610 --> 00:00:40.620 
only thing that distinguishes the two

00:00:40.620 --> 00:00:42.439 
only thing that distinguishes the two
tiers<00:00:40.890> of<00:00:40.949> MacBook<00:00:41.370> Airs<00:00:41.579> is<00:00:41.820> a<00:00:41.850> solid-state

00:00:42.439 --> 00:00:42.449 
tiers of MacBook Airs is a solid-state

00:00:42.449 --> 00:00:44.780 
tiers of MacBook Airs is a solid-state
storage<00:00:42.659> when<00:00:43.409> being<00:00:43.620> 64<00:00:44.070> gig<00:00:44.309> the<00:00:44.489> other<00:00:44.640> one

00:00:44.780 --> 00:00:44.790 
storage when being 64 gig the other one

00:00:44.790 --> 00:00:47.660 
storage when being 64 gig the other one
128<00:00:45.329> all<00:00:45.540> other<00:00:46.260> specs<00:00:46.589> are<00:00:46.739> identical<00:00:47.190> with<00:00:47.640> a

00:00:47.660 --> 00:00:47.670 
128 all other specs are identical with a

00:00:47.670 --> 00:00:50.660 
128 all other specs are identical with a
1.7<00:00:48.420> gigahertz<00:00:48.659> core<00:00:49.079> i5<00:00:49.379> capable<00:00:50.070> of<00:00:50.190> a<00:00:50.250> turbo

00:00:50.660 --> 00:00:50.670 
1.7 gigahertz core i5 capable of a turbo

00:00:50.670 --> 00:00:53.509 
1.7 gigahertz core i5 capable of a turbo
boost<00:00:50.879> speed<00:00:51.149> of<00:00:51.360> 2.7<00:00:52.050> gigahertz<00:00:52.460> now<00:00:53.460> the

00:00:53.509 --> 00:00:53.519 
boost speed of 2.7 gigahertz now the

00:00:53.519 --> 00:00:55.369 
boost speed of 2.7 gigahertz now the
turbo<00:00:54.059> boost<00:00:54.269> feature<00:00:54.510> started<00:00:54.960> popping<00:00:55.260> up

00:00:55.369 --> 00:00:55.379 
turbo boost feature started popping up

00:00:55.379 --> 00:00:57.229 
turbo boost feature started popping up
on<00:00:55.530> apple's<00:00:55.890> website<00:00:55.920> and<00:00:56.579> it's<00:00:56.879> important<00:00:57.179> to

00:00:57.229 --> 00:00:57.239 
on apple's website and it's important to

00:00:57.239 --> 00:00:59.330 
on apple's website and it's important to
clarify<00:00:57.390> that<00:00:57.840> turbo<00:00:58.500> boost<00:00:58.679> isn't<00:00:59.160> like<00:00:59.309> a

00:00:59.330 --> 00:00:59.340 
clarify that turbo boost isn't like a

00:00:59.340 --> 00:01:01.340 
clarify that turbo boost isn't like a
manually<00:00:59.879> trigger<00:01:00.089> bull<00:01:00.329> nas<00:01:00.600> button<00:01:01.079> from

00:01:01.340 --> 00:01:01.350 
manually trigger bull nas button from

00:01:01.350 --> 00:01:03.259 
manually trigger bull nas button from
Fast<00:01:01.649> and<00:01:01.829> Furious<00:01:02.039> its<00:01:02.820> automated

00:01:03.259 --> 00:01:03.269 
Fast and Furious its automated

00:01:03.269 --> 00:01:06.230 
Fast and Furious its automated
overclocking<00:01:04.170> turbo<00:01:05.039> boost<00:01:05.220> monitors<00:01:06.060> the

00:01:06.230 --> 00:01:06.240 
overclocking turbo boost monitors the

00:01:06.240 --> 00:01:08.450 
overclocking turbo boost monitors the
current<00:01:06.509> usage<00:01:06.840> of<00:01:06.990> the<00:01:07.110> core<00:01:07.289> i5<00:01:07.380> or<00:01:07.619> core<00:01:07.920> i7

00:01:08.450 --> 00:01:08.460 
current usage of the core i5 or core i7

00:01:08.460 --> 00:01:10.430 
current usage of the core i5 or core i7
processor<00:01:09.030> to<00:01:09.479> determine<00:01:09.869> how<00:01:09.960> close<00:01:10.289> the

00:01:10.430 --> 00:01:10.440 
processor to determine how close the

00:01:10.440 --> 00:01:12.380 
processor to determine how close the
processor<00:01:10.950> is<00:01:10.979> to<00:01:11.310> the<00:01:11.580> maximum<00:01:11.970> amount<00:01:12.330> of

00:01:12.380 --> 00:01:12.390 
processor is to the maximum amount of

00:01:12.390 --> 00:01:14.749 
processor is to the maximum amount of
power<00:01:12.630> it's<00:01:12.810> supposed<00:01:13.080> to<00:01:13.170> use<00:01:13.380> if<00:01:14.369> it<00:01:14.520> sees

00:01:14.749 --> 00:01:14.759 
power it's supposed to use if it sees

00:01:14.759 --> 00:01:15.980 
power it's supposed to use if it sees
that<00:01:14.880> its<00:01:15.030> operating<00:01:15.479> well<00:01:15.659> within<00:01:15.840> its

00:01:15.980 --> 00:01:15.990 
that its operating well within its

00:01:15.990 --> 00:01:18.649 
that its operating well within its
limits<00:01:16.200> turbo<00:01:17.130> boost<00:01:17.310> kicks<00:01:17.550> in<00:01:17.729> we're<00:01:18.539> also

00:01:18.649 --> 00:01:18.659 
limits turbo boost kicks in we're also

00:01:18.659 --> 00:01:20.600 
limits turbo boost kicks in we're also
looking<00:01:18.869> at<00:01:19.140> four<00:01:19.440> gigs<00:01:19.619> of<00:01:19.800> RAM<00:01:19.979> and<00:01:20.190> Intel's

00:01:20.600 --> 00:01:20.610 
looking at four gigs of RAM and Intel's

00:01:20.610 --> 00:01:23.029 
looking at four gigs of RAM and Intel's
new<00:01:20.729> HD<00:01:21.300> graphics<00:01:21.720> 4000<00:01:22.440> integrated<00:01:22.920> graphics

00:01:23.029 --> 00:01:23.039 
new HD graphics 4000 integrated graphics

00:01:23.039 --> 00:01:25.100 
new HD graphics 4000 integrated graphics
which<00:01:23.819> is<00:01:23.940> supposed<00:01:24.179> to<00:01:24.270> perform<00:01:24.390> fifty

00:01:25.100 --> 00:01:25.110 
which is supposed to perform fifty

00:01:25.110 --> 00:01:26.810 
which is supposed to perform fifty
percent<00:01:25.409> better<00:01:25.619> than<00:01:25.890> its<00:01:26.040> predecessor<00:01:26.579> for

00:01:26.810 --> 00:01:26.820 
percent better than its predecessor for

00:01:26.820 --> 00:01:28.850 
percent better than its predecessor for
everything<00:01:27.390> video<00:01:27.689> oriented<00:01:28.320> apple's

00:01:28.850 --> 00:01:28.860 
everything video oriented apple's

00:01:28.860 --> 00:01:30.710 
everything video oriented apple's
proprietary<00:01:28.950> SSD<00:01:29.850> storage<00:01:29.909> is<00:01:30.329> supposed<00:01:30.659> to

00:01:30.710 --> 00:01:30.720 
proprietary SSD storage is supposed to

00:01:30.720 --> 00:01:32.960 
proprietary SSD storage is supposed to
perform<00:01:30.840> two<00:01:31.350> times<00:01:31.619> as<00:01:31.829> fast<00:01:32.009> as<00:01:32.310> well<00:01:32.490> i<00:01:32.759> put

00:01:32.960 --> 00:01:32.970 
perform two times as fast as well i put

00:01:32.970 --> 00:01:35.480 
perform two times as fast as well i put
the<00:01:33.090> boot<00:01:33.240> time<00:01:33.420> to<00:01:33.600> the<00:01:33.720> test<00:01:33.990> and<00:01:34.229> it<00:01:34.619> smoked

00:01:35.480 --> 00:01:35.490 
the boot time to the test and it smoked

00:01:35.490 --> 00:01:37.700 
the boot time to the test and it smoked
to<00:01:35.670> the<00:01:35.850> boot<00:01:36.060> time<00:01:36.270> of<00:01:36.450> even<00:01:36.780> my<00:01:36.869> iphone<00:01:37.320> with

00:01:37.700 --> 00:01:37.710 
to the boot time of even my iphone with

00:01:37.710 --> 00:01:40.670 
to the boot time of even my iphone with
a<00:01:37.740> boot<00:01:38.009> time<00:01:38.250> of<00:01:38.509> 13.3<00:01:39.509> seconds<00:01:39.869> another

00:01:40.670 --> 00:01:40.680 
a boot time of 13.3 seconds another

00:01:40.680 --> 00:01:42.740 
a boot time of 13.3 seconds another
performance<00:01:41.219> improvement<00:01:41.820> is<00:01:41.939> its<00:01:42.180> instant

00:01:42.740 --> 00:01:42.750 
performance improvement is its instant

00:01:42.750 --> 00:01:44.780 
performance improvement is its instant
on<00:01:42.899> state<00:01:43.320> from<00:01:43.500> sleep<00:01:43.799> it<00:01:44.310> was<00:01:44.640> never

00:01:44.780 --> 00:01:44.790 
on state from sleep it was never

00:01:44.790 --> 00:01:47.719 
on state from sleep it was never
actually<00:01:45.090> instantly<00:01:45.960> on<00:01:46.170> until<00:01:46.590> now<00:01:46.770> you<00:01:47.549> used

00:01:47.719 --> 00:01:47.729 
actually instantly on until now you used

00:01:47.729 --> 00:01:49.310 
actually instantly on until now you used
to<00:01:47.820> have<00:01:47.909> to<00:01:48.090> wait<00:01:48.270> a<00:01:48.329> few<00:01:48.570> seconds<00:01:48.990> for<00:01:49.110> the

00:01:49.310 --> 00:01:49.320 
to have to wait a few seconds for the

00:01:49.320 --> 00:01:51.170 
to have to wait a few seconds for the
mouse<00:01:49.469> to<00:01:49.500> catch<00:01:49.890> up<00:01:50.130> with<00:01:50.159> the<00:01:50.369> wake<00:01:50.549> but<00:01:50.880> that

00:01:51.170 --> 00:01:51.180 
mouse to catch up with the wake but that

00:01:51.180 --> 00:01:53.359 
mouse to catch up with the wake but that
is<00:01:51.360> no<00:01:51.539> more<00:01:51.750> one<00:01:52.289> unexpected<00:01:52.740> feature<00:01:53.070> is<00:01:53.340> the

00:01:53.359 --> 00:01:53.369 
is no more one unexpected feature is the

00:01:53.369 --> 00:01:55.520 
is no more one unexpected feature is the
magsafe<00:01:53.880> 2<00:01:53.909> connectivity<00:01:54.750> for<00:01:54.899> power<00:01:55.110> this

00:01:55.520 --> 00:01:55.530 
magsafe 2 connectivity for power this

00:01:55.530 --> 00:01:57.350 
magsafe 2 connectivity for power this
new<00:01:55.710> standard<00:01:56.130> is<00:01:56.280> thin<00:01:56.520> and<00:01:56.549> great<00:01:56.969> but<00:01:57.210> one

00:01:57.350 --> 00:01:57.360 
new standard is thin and great but one

00:01:57.360 --> 00:01:59.300 
new standard is thin and great but one
thing<00:01:57.539> I've<00:01:57.659> noticed<00:01:57.899> in<00:01:58.229> usage<00:01:58.590> is<00:01:58.979> how<00:01:59.159> much

00:01:59.300 --> 00:01:59.310 
thing I've noticed in usage is how much

00:01:59.310 --> 00:02:01.310 
thing I've noticed in usage is how much
easier<00:01:59.520> the<00:01:59.909> magsafe<00:02:00.390> will<00:02:00.600> snap<00:02:00.869> out<00:02:01.049> of<00:02:01.079> my

00:02:01.310 --> 00:02:01.320 
easier the magsafe will snap out of my

00:02:01.320 --> 00:02:03.830 
easier the magsafe will snap out of my
macbook<00:02:01.770> given<00:02:02.340> its<00:02:02.460> lost<00:02:02.759> surface<00:02:03.329> area<00:02:03.780> on

00:02:03.830 --> 00:02:03.840 
macbook given its lost surface area on

00:02:03.840 --> 00:02:05.569 
macbook given its lost surface area on
the<00:02:04.020> top<00:02:04.229> and<00:02:04.469> bottom<00:02:04.619> of<00:02:04.890> its<00:02:05.009> clamped<00:02:05.369> space

00:02:05.569 --> 00:02:05.579 
the top and bottom of its clamped space

00:02:05.579 --> 00:02:07.670 
the top and bottom of its clamped space
the<00:02:06.030> airs<00:02:06.210> feature<00:02:06.509> the<00:02:06.719> latest<00:02:06.750> HD<00:02:07.289> FaceTime

00:02:07.670 --> 00:02:07.680 
the airs feature the latest HD FaceTime

00:02:07.680 --> 00:02:10.520 
the airs feature the latest HD FaceTime
camera<00:02:08.160> as<00:02:08.489> well<00:02:08.820> as<00:02:09.060> the<00:02:09.179> long-awaited<00:02:09.570> USB<00:02:10.259> 3

00:02:10.520 --> 00:02:10.530 
camera as well as the long-awaited USB 3

00:02:10.530 --> 00:02:12.979 
camera as well as the long-awaited USB 3
I<00:02:10.560> oh<00:02:10.880> now<00:02:11.880> I<00:02:12.090> won't<00:02:12.359> waste<00:02:12.600> your<00:02:12.750> time

00:02:12.979 --> 00:02:12.989 
I oh now I won't waste your time

00:02:12.989 --> 00:02:15.080 
I oh now I won't waste your time
regurgitating<00:02:13.799> published<00:02:14.310> write<00:02:14.549> speeds<00:02:14.880> on

00:02:15.080 --> 00:02:15.090 
regurgitating published write speeds on

00:02:15.090 --> 00:02:16.910 
regurgitating published write speeds on
it<00:02:15.120> considering<00:02:15.900> projected<00:02:16.350> transfer<00:02:16.739> rates

00:02:16.910 --> 00:02:16.920 
it considering projected transfer rates

00:02:16.920 --> 00:02:19.610 
it considering projected transfer rates
are<00:02:17.070> almost<00:02:17.370> always<00:02:17.840> idealistically<00:02:18.840> maximum

00:02:19.610 --> 00:02:19.620 
are almost always idealistically maximum

00:02:19.620 --> 00:02:23.090 
are almost always idealistically maximum
potential<00:02:20.359> inflated<00:02:21.359> and<00:02:21.570> never<00:02:22.440> incorporate

00:02:23.090 --> 00:02:23.100 
potential inflated and never incorporate

00:02:23.100 --> 00:02:24.740 
potential inflated and never incorporate
the<00:02:23.220> slavemaster<00:02:23.820> overhead<00:02:24.239> that<00:02:24.420> takes<00:02:24.600> the

00:02:24.740 --> 00:02:24.750 
the slavemaster overhead that takes the

00:02:24.750 --> 00:02:27.500 
the slavemaster overhead that takes the
transfer<00:02:25.140> rate<00:02:25.290> down<00:02:25.470> I<00:02:25.799> did<00:02:26.640> do<00:02:26.850> a<00:02:26.880> write<00:02:27.180> test

00:02:27.500 --> 00:02:27.510 
transfer rate down I did do a write test

00:02:27.510 --> 00:02:30.349 
transfer rate down I did do a write test
and<00:02:27.810> the<00:02:27.959> USB<00:02:28.200> 2.0<00:02:28.560> took<00:02:29.280> forty<00:02:29.970> eight<00:02:30.090> point

00:02:30.349 --> 00:02:30.359 
and the USB 2.0 took forty eight point

00:02:30.359 --> 00:02:33.159 
and the USB 2.0 took forty eight point
five<00:02:30.480> seconds<00:02:31.049> to<00:02:31.169> copy<00:02:31.380> a<00:02:31.530> 1.6<00:02:32.250> gigabyte<00:02:32.699> file

00:02:33.159 --> 00:02:33.169 
five seconds to copy a 1.6 gigabyte file

00:02:33.169 --> 00:02:35.660 
five seconds to copy a 1.6 gigabyte file
over<00:02:34.169> USB<00:02:34.440> 3<00:02:34.889> it<00:02:35.070> took<00:02:35.310> only

00:02:35.660 --> 00:02:35.670 
over USB 3 it took only

00:02:35.670 --> 00:02:38.660 
over USB 3 it took only
18<00:02:36.030> seconds<00:02:36.680> finally<00:02:37.680> I<00:02:37.830> ran<00:02:38.130> some<00:02:38.160> geektool

00:02:38.660 --> 00:02:38.670 
18 seconds finally I ran some geektool

00:02:38.670 --> 00:02:40.490 
18 seconds finally I ran some geektool
tests<00:02:39.240> and<00:02:39.420> they<00:02:39.599> all<00:02:39.720> hover<00:02:39.959> around<00:02:40.140> the

00:02:40.490 --> 00:02:40.500 
tests and they all hover around the

00:02:40.500 --> 00:02:42.830 
tests and they all hover around the
stellar<00:02:40.800> score<00:02:41.250> for<00:02:41.550> an<00:02:41.610> ultraportable<00:02:42.000> if

00:02:42.830 --> 00:02:42.840 
stellar score for an ultraportable if

00:02:42.840 --> 00:02:44.030 
stellar score for an ultraportable if
you're<00:02:43.020> hankering<00:02:43.290> to<00:02:43.410> pull<00:02:43.620> the<00:02:43.709> trigger<00:02:43.950> on

00:02:44.030 --> 00:02:44.040 
you're hankering to pull the trigger on

00:02:44.040 --> 00:02:45.710 
you're hankering to pull the trigger on
a<00:02:44.130> sleek<00:02:44.520> speedy<00:02:44.910> machine<00:02:45.300> for<00:02:45.480> everyday

00:02:45.710 --> 00:02:45.720 
a sleek speedy machine for everyday

00:02:45.720 --> 00:03:00.110 
a sleek speedy machine for everyday
productivity<00:02:46.440> shoot<00:02:47.099> away<00:02:47.220> my<00:02:47.489> friend

00:03:00.110 --> 00:03:00.120 

00:03:00.120 --> 00:03:02.180 

you

