WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.840 

hi<00:00:00.960> my<00:00:01.170> name<00:00:01.290> is<00:00:01.319> Godfrey<00:00:01.530> Chang<00:00:01.890> of<00:00:02.040> AMD<00:00:02.370> today

00:00:02.840 --> 00:00:02.850 
hi my name is Godfrey Chang of AMD today

00:00:02.850 --> 00:00:03.710 
hi my name is Godfrey Chang of AMD today
we're<00:00:03.000> going<00:00:03.120> to<00:00:03.179> give<00:00:03.300> you<00:00:03.419> a<00:00:03.449> very<00:00:03.600> quick

00:00:03.710 --> 00:00:03.720 
we're going to give you a very quick

00:00:03.720 --> 00:00:07.430 
we're going to give you a very quick
demonstration<00:00:04.319> of<00:00:04.920> our<00:00:05.549> new<00:00:06.029> line<00:00:06.299> o<00:00:06.330> apu<00:00:06.870> vs

00:00:07.430 --> 00:00:07.440 
demonstration of our new line o apu vs

00:00:07.440 --> 00:00:12.080 
demonstration of our new line o apu vs
intel<00:00:08.370> sandy<00:00:08.820> bridge<00:00:09.030> cpu<00:00:10.429> over<00:00:11.429> the<00:00:11.519> past<00:00:11.759> 10

00:00:12.080 --> 00:00:12.090 
intel sandy bridge cpu over the past 10

00:00:12.090 --> 00:00:14.209 
intel sandy bridge cpu over the past 10
years<00:00:12.290> consumers<00:00:13.290> have<00:00:13.440> really<00:00:13.710> changed<00:00:13.950> how

00:00:14.209 --> 00:00:14.219 
years consumers have really changed how

00:00:14.219 --> 00:00:17.210 
years consumers have really changed how
they<00:00:14.400> use<00:00:14.549> our<00:00:14.730> pcs<00:00:15.379> Amy's<00:00:16.379> change<00:00:16.710> along<00:00:16.949> with

00:00:17.210 --> 00:00:17.220 
they use our pcs Amy's change along with

00:00:17.220 --> 00:00:18.740 
they use our pcs Amy's change along with
them<00:00:17.430> and<00:00:17.640> design<00:00:17.910> products<00:00:18.449> that<00:00:18.539> give<00:00:18.660> them

00:00:18.740 --> 00:00:18.750 
them and design products that give them

00:00:18.750 --> 00:00:21.560 
them and design products that give them
a<00:00:18.840> best<00:00:19.050> experience<00:00:19.939> consumers<00:00:20.939> esa<00:00:21.300> isn't

00:00:21.560 --> 00:00:21.570 
a best experience consumers esa isn't

00:00:21.570 --> 00:00:23.810 
a best experience consumers esa isn't
sure<00:00:21.810> they<00:00:21.990> still<00:00:22.230> work<00:00:22.380> in<00:00:22.529> excel<00:00:22.890> but<00:00:23.730> they

00:00:23.810 --> 00:00:23.820 
sure they still work in excel but they

00:00:23.820 --> 00:00:26.720 
sure they still work in excel but they
also<00:00:23.970> play<00:00:24.449> 3d<00:00:24.750> games<00:00:25.050> they<00:00:25.800> watch<00:00:25.980> videos<00:00:26.430> and

00:00:26.720 --> 00:00:26.730 
also play 3d games they watch videos and

00:00:26.730 --> 00:00:29.689 
also play 3d games they watch videos and
they<00:00:27.420> do<00:00:27.480> at<00:00:27.660> the<00:00:27.720> same<00:00:27.960> time<00:00:28.170> so<00:00:29.130> the<00:00:29.279> ability

00:00:29.689 --> 00:00:29.699 
they do at the same time so the ability

00:00:29.699 --> 00:00:31.609 
they do at the same time so the ability
to<00:00:29.820> multi-task<00:00:30.150> these<00:00:30.630> modern<00:00:31.050> workloads<00:00:31.439> is

00:00:31.609 --> 00:00:31.619 
to multi-task these modern workloads is

00:00:31.619 --> 00:00:34.010 
to multi-task these modern workloads is
critical<00:00:32.160> to<00:00:32.850> give<00:00:33.059> the<00:00:33.239> consumers<00:00:33.690> the<00:00:33.809> best

00:00:34.010 --> 00:00:34.020 
critical to give the consumers the best

00:00:34.020 --> 00:00:36.470 
critical to give the consumers the best
experience<00:00:34.820> let's<00:00:35.820> show<00:00:35.969> you<00:00:36.030> this<00:00:36.239> little

00:00:36.470 --> 00:00:36.480 
experience let's show you this little

00:00:36.480 --> 00:00:38.720 
experience let's show you this little
demo<00:00:36.690> now<00:00:36.899> we<00:00:37.739> have<00:00:37.950> the<00:00:38.040> Intel<00:00:38.370> sandybridge

00:00:38.720 --> 00:00:38.730 
demo now we have the Intel sandybridge

00:00:38.730 --> 00:00:40.729 
demo now we have the Intel sandybridge
on<00:00:39.030> the<00:00:39.120> left<00:00:39.329> side<00:00:39.480> and<00:00:39.809> then<00:00:40.079> we<00:00:40.260> have<00:00:40.530> the

00:00:40.729 --> 00:00:40.739 
on the left side and then we have the

00:00:40.739 --> 00:00:43.190 
on the left side and then we have the
aim<00:00:41.129> D<00:00:41.430> line<00:00:41.670> on<00:00:41.850> the<00:00:41.969> right<00:00:42.120> side<00:00:42.390> playing

00:00:43.190 --> 00:00:43.200 
aim D line on the right side playing

00:00:43.200 --> 00:00:45.889 
aim D line on the right side playing
this<00:00:43.379> Final<00:00:43.800> Fantasy<00:00:43.920> graphics<00:00:44.910> workload<00:00:45.390> you

00:00:45.889 --> 00:00:45.899 
this Final Fantasy graphics workload you

00:00:45.899 --> 00:00:48.020 
this Final Fantasy graphics workload you
see<00:00:46.079> Amy<00:00:46.379> really<00:00:46.710> smooth<00:00:47.039> very<00:00:47.489> even<00:00:47.820> power

00:00:48.020 --> 00:00:48.030 
see Amy really smooth very even power

00:00:48.030 --> 00:00:50.180 
see Amy really smooth very even power
draw<00:00:48.329> and<00:00:48.660> playing<00:00:48.930> back<00:00:49.140> very<00:00:49.530> smoothly<00:00:49.860> and

00:00:50.180 --> 00:00:50.190 
draw and playing back very smoothly and

00:00:50.190 --> 00:00:52.100 
draw and playing back very smoothly and
with<00:00:50.910> Sandy<00:00:51.270> Bridge<00:00:51.390> you<00:00:51.660> can<00:00:51.750> see<00:00:51.870> it<00:00:51.960> very

00:00:52.100 --> 00:00:52.110 
with Sandy Bridge you can see it very

00:00:52.110 --> 00:00:54.439 
with Sandy Bridge you can see it very
choppy<00:00:52.440> it<00:00:52.890> stutters<00:00:53.399> and<00:00:53.579> you<00:00:53.969> have<00:00:54.120> wild

00:00:54.439 --> 00:00:54.449 
choppy it stutters and you have wild

00:00:54.449 --> 00:00:56.930 
choppy it stutters and you have wild
fluctuations<00:00:54.690> with<00:00:55.559> power<00:00:55.890> draw<00:00:56.129> when<00:00:56.820> they

00:00:56.930 --> 00:00:56.940 
fluctuations with power draw when they

00:00:56.940 --> 00:00:58.819 
fluctuations with power draw when they
decide<00:00:57.329> to<00:00:57.360> render<00:00:57.840> that's<00:00:58.379> when<00:00:58.559> they<00:00:58.649> draw

00:00:58.819 --> 00:00:58.829 
decide to render that's when they draw

00:00:58.829 --> 00:01:00.229 
decide to render that's when they draw
the<00:00:58.890> power<00:00:59.190> and<00:00:59.460> then<00:00:59.730> when<00:00:59.879> they<00:00:59.969> stutter

00:01:00.229 --> 00:01:00.239 
the power and then when they stutter

00:01:00.239 --> 00:01:02.959 
the power and then when they stutter
they<00:01:00.480> draw<00:01:00.690> us<00:01:00.930> and<00:01:01.199> of<00:01:01.949> course<00:01:01.980> amy<00:01:02.850> has

00:01:02.959 --> 00:01:02.969 
they draw us and of course amy has

00:01:02.969 --> 00:01:04.549 
they draw us and of course amy has
always<00:01:03.059> been<00:01:03.329> known<00:01:03.510> for<00:01:03.539> our<00:01:03.690> graphics<00:01:04.170> but

00:01:04.549 --> 00:01:04.559 
always been known for our graphics but

00:01:04.559 --> 00:01:07.219 
always been known for our graphics but
we<00:01:04.710> also<00:01:04.890> have<00:01:05.129> a<00:01:05.189> great<00:01:05.369> x86<00:01:06.000> CPU<00:01:06.390> as<00:01:06.479> well<00:01:06.659> we

00:01:07.219 --> 00:01:07.229 
we also have a great x86 CPU as well we

00:01:07.229 --> 00:01:09.380 
we also have a great x86 CPU as well we
also<00:01:07.439> do<00:01:07.680> excel<00:01:08.070> and<00:01:08.250> in<00:01:08.580> this<00:01:08.729> sprite<00:01:09.060> sheet

00:01:09.380 --> 00:01:09.390 
also do excel and in this sprite sheet

00:01:09.390 --> 00:01:11.359 
also do excel and in this sprite sheet
we're<00:01:09.720> doing<00:01:09.930> 2200<00:01:10.560> calculations<00:01:11.130> every

00:01:11.359 --> 00:01:11.369 
we're doing 2200 calculations every

00:01:11.369 --> 00:01:13.010 
we're doing 2200 calculations every
second<00:01:11.790> and<00:01:11.909> as<00:01:12.150> you<00:01:12.270> can<00:01:12.390> see<00:01:12.420> where<00:01:12.720> it<00:01:12.810> adds

00:01:13.010 --> 00:01:13.020 
second and as you can see where it adds

00:01:13.020 --> 00:01:14.990 
second and as you can see where it adds
smooth<00:01:13.380> as<00:01:13.590> Intel<00:01:13.920> but<00:01:14.159> we're<00:01:14.310> also<00:01:14.460> smooth<00:01:14.880> in

00:01:14.990 --> 00:01:15.000 
smooth as Intel but we're also smooth in

00:01:15.000 --> 00:01:16.940 
smooth as Intel but we're also smooth in
the<00:01:15.119> background<00:01:15.570> with<00:01:15.780> the<00:01:15.990> 3d<00:01:16.290> graphics<00:01:16.710> too

00:01:16.940 --> 00:01:16.950 
the background with the 3d graphics too

00:01:16.950 --> 00:01:19.280 
the background with the 3d graphics too
so<00:01:17.909> let's<00:01:18.119> start<00:01:18.299> punishing<00:01:18.570> these<00:01:18.869> systems

00:01:19.280 --> 00:01:19.290 
so let's start punishing these systems

00:01:19.290 --> 00:01:21.649 
so let's start punishing these systems
let's<00:01:19.979> add<00:01:20.130> one<00:01:20.340> more<00:01:20.520> workload<00:01:21.000> let's<00:01:21.360> say

00:01:21.649 --> 00:01:21.659 
let's add one more workload let's say

00:01:21.659 --> 00:01:23.480 
let's add one more workload let's say
people<00:01:21.900> on<00:01:22.049> launch<00:01:22.290> videos<00:01:22.650> so<00:01:23.159> you'll<00:01:23.310> notice

00:01:23.480 --> 00:01:23.490 
people on launch videos so you'll notice

00:01:23.490 --> 00:01:25.460 
people on launch videos so you'll notice
here<00:01:23.729> we<00:01:23.759> added<00:01:24.180> video<00:01:24.479> and<00:01:24.720> on<00:01:25.200> the<00:01:25.320> right

00:01:25.460 --> 00:01:25.470 
here we added video and on the right

00:01:25.470 --> 00:01:27.109 
here we added video and on the right
side<00:01:25.740> you'll<00:01:26.100> notice<00:01:26.159> that<00:01:26.520> there's<00:01:26.759> a<00:01:26.820> split

00:01:27.109 --> 00:01:27.119 
side you'll notice that there's a split

00:01:27.119 --> 00:01:30.140 
side you'll notice that there's a split
screen<00:01:27.680> what<00:01:28.680> Amy<00:01:28.860> is<00:01:29.040> actually<00:01:29.400> doing<00:01:29.610> too<00:01:29.939> is

00:01:30.140 --> 00:01:30.150 
screen what Amy is actually doing too is

00:01:30.150 --> 00:01:31.670 
screen what Amy is actually doing too is
that<00:01:30.299> in<00:01:30.540> addition<00:01:30.900> to<00:01:31.110> playing<00:01:31.470> back<00:01:31.560> the

00:01:31.670 --> 00:01:31.680 
that in addition to playing back the

00:01:31.680 --> 00:01:33.319 
that in addition to playing back the
video<00:01:32.070> we're<00:01:32.700> all<00:01:32.759> students<00:01:33.119> something

00:01:33.319 --> 00:01:33.329 
video we're all students something

00:01:33.329 --> 00:01:34.819 
video we're all students something
called<00:01:33.509> post<00:01:33.720> processing<00:01:34.170> which<00:01:34.470> improves

00:01:34.819 --> 00:01:34.829 
called post processing which improves

00:01:34.829 --> 00:01:36.980 
called post processing which improves
video<00:01:35.189> quality<00:01:35.509> we're<00:01:36.509> doing<00:01:36.750> three

00:01:36.980 --> 00:01:36.990 
video quality we're doing three

00:01:36.990 --> 00:01:39.109 
video quality we're doing three
workloads<00:01:37.439> at<00:01:37.740> substantially<00:01:38.670> less<00:01:38.880> power

00:01:39.109 --> 00:01:39.119 
workloads at substantially less power

00:01:39.119 --> 00:01:40.940 
workloads at substantially less power
we're<00:01:39.540> doing<00:01:39.750> a<00:01:39.810> smoother<00:01:40.320> and<00:01:40.530> with<00:01:40.799> better

00:01:40.940 --> 00:01:40.950 
we're doing a smoother and with better

00:01:40.950 --> 00:01:43.880 
we're doing a smoother and with better
image<00:01:41.250> quality<00:01:42.170> all<00:01:43.170> right<00:01:43.350> let's<00:01:43.560> start<00:01:43.649> to

00:01:43.880 --> 00:01:43.890 
image quality all right let's start to

00:01:43.890 --> 00:01:45.980 
image quality all right let's start to
really<00:01:44.040> punish<00:01:44.340> these<00:01:44.640> systems<00:01:45.030> let's<00:01:45.780> just

00:01:45.980 --> 00:01:45.990 
really punish these systems let's just

00:01:45.990 --> 00:01:47.450 
really punish these systems let's just
say<00:01:46.079> you<00:01:46.140> want<00:01:46.320> to<00:01:46.409> do<00:01:46.500> some<00:01:46.740> 3d<00:01:47.159> model

00:01:47.450 --> 00:01:47.460 
say you want to do some 3d model

00:01:47.460 --> 00:01:49.760 
say you want to do some 3d model
creation<00:01:47.909> and<00:01:48.119> some<00:01:48.420> rendering<00:01:48.810> and<00:01:48.990> as<00:01:49.649> you

00:01:49.760 --> 00:01:49.770 
creation and some rendering and as you

00:01:49.770 --> 00:01:51.679 
creation and some rendering and as you
can<00:01:49.890> see<00:01:49.920> here<00:01:50.430> but<00:01:50.820> we're<00:01:50.970> nice<00:01:51.180> and<00:01:51.210> smooth

00:01:51.679 --> 00:01:51.689 
can see here but we're nice and smooth

00:01:51.689 --> 00:01:53.630 
can see here but we're nice and smooth
we<00:01:52.170> still<00:01:52.409> have<00:01:52.590> a<00:01:52.619> smooth<00:01:53.100> video<00:01:53.280> playback

00:01:53.630 --> 00:01:53.640 
we still have a smooth video playback

00:01:53.640 --> 00:01:55.490 
we still have a smooth video playback
the<00:01:54.270> game<00:01:54.509> is<00:01:54.659> still<00:01:54.750> running<00:01:55.020> smoothly<00:01:55.350> in

00:01:55.490 --> 00:01:55.500 
the game is still running smoothly in

00:01:55.500 --> 00:01:57.620 
the game is still running smoothly in
the<00:01:55.619> background<00:01:56.040> and<00:01:56.189> our<00:01:56.610> Excel<00:01:56.909> still<00:01:57.180> nice

00:01:57.620 --> 00:01:57.630 
the background and our Excel still nice

00:01:57.630 --> 00:01:59.510 
the background and our Excel still nice
and<00:01:57.659> smooth<00:01:58.079> but<00:01:58.710> you'll<00:01:58.860> also<00:01:59.040> notice<00:01:59.340> their

00:01:59.510 --> 00:01:59.520 
and smooth but you'll also notice their

00:01:59.520 --> 00:02:01.700 
and smooth but you'll also notice their
competitions<00:02:00.119> really<00:02:00.390> stalled<00:02:00.719> out<00:02:00.930> we<00:02:01.530> are

00:02:01.700 --> 00:02:01.710 
competitions really stalled out we are

00:02:01.710 --> 00:02:03.800 
competitions really stalled out we are
still<00:02:02.040> rendering<00:02:02.610> all<00:02:02.820> four<00:02:03.149> workloads<00:02:03.570> now

00:02:03.800 --> 00:02:03.810 
still rendering all four workloads now

00:02:03.810 --> 00:02:05.990 
still rendering all four workloads now
smooth<00:02:04.350> and<00:02:04.649> well<00:02:05.130> under<00:02:05.399> the<00:02:05.490> power<00:02:05.670> of<00:02:05.820> our

00:02:05.990 --> 00:02:06.000 
smooth and well under the power of our

00:02:06.000 --> 00:02:08.020 
smooth and well under the power of our
competitor<00:02:06.630> as<00:02:06.810> you<00:02:07.320> can<00:02:07.380> see<00:02:07.560> with<00:02:07.649> this<00:02:07.740> demo

00:02:08.020 --> 00:02:08.030 
competitor as you can see with this demo

00:02:08.030 --> 00:02:10.609 
competitor as you can see with this demo
AMD<00:02:09.030> lino<00:02:09.720> is<00:02:10.050> very

00:02:10.609 --> 00:02:10.619 
AMD lino is very

00:02:10.619 --> 00:02:13.699 
AMD lino is very
competitor<00:02:11.039> vs<00:02:11.430> intel<00:02:12.269> sandybridge<00:02:12.750> and<00:02:13.200> what

00:02:13.699 --> 00:02:13.709 
competitor vs intel sandybridge and what

00:02:13.709 --> 00:02:15.619 
competitor vs intel sandybridge and what
you'll<00:02:13.890> also<00:02:14.069> notice<00:02:14.430> here<00:02:14.819> is<00:02:14.909> with<00:02:15.480> these

00:02:15.619 --> 00:02:15.629 
you'll also notice here is with these

00:02:15.629 --> 00:02:17.539 
you'll also notice here is with these
modern<00:02:15.989> workloads<00:02:16.409> a<00:02:16.590> 3d<00:02:16.890> graphics<00:02:17.340> video

00:02:17.539 --> 00:02:17.549 
modern workloads a 3d graphics video

00:02:17.549 --> 00:02:20.180 
modern workloads a 3d graphics video
compute<00:02:18.269> we<00:02:18.840> actually<00:02:19.080> excel<00:02:19.650> versus<00:02:20.069> our

00:02:20.180 --> 00:02:20.190 
compute we actually excel versus our

00:02:20.190 --> 00:02:22.610 
compute we actually excel versus our
competitor<00:02:20.730> not<00:02:21.599> only<00:02:21.870> do<00:02:22.019> we<00:02:22.140> playback

00:02:22.610 --> 00:02:22.620 
competitor not only do we playback

00:02:22.620 --> 00:02:26.380 
competitor not only do we playback
smoother<00:02:23.220> but<00:02:24.150> we<00:02:24.269> also<00:02:24.420> do<00:02:24.659> it<00:02:24.750> lower<00:02:24.900> power

00:02:26.380 --> 00:02:26.390 
smoother but we also do it lower power

00:02:26.390 --> 00:02:28.910 
smoother but we also do it lower power
thank<00:02:27.390> you<00:02:27.480> very<00:02:27.510> much<00:02:27.720> and<00:02:28.079> we<00:02:28.620> hope<00:02:28.829> you

00:02:28.910 --> 00:02:28.920 
thank you very much and we hope you

00:02:28.920 --> 00:02:37.900 
thank you very much and we hope you
enjoyed<00:02:29.129> this<00:02:29.250> demo

00:02:37.900 --> 00:02:37.910 

00:02:37.910 --> 00:02:39.970 

you

