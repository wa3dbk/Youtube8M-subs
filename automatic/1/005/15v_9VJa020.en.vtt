WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.939 

MATLAB<00:00:00.690> can<00:00:00.870> solve<00:00:01.140> many<00:00:01.290> common<00:00:01.709> video

00:00:01.939 --> 00:00:01.949 
MATLAB can solve many common video

00:00:01.949 --> 00:00:03.830 
MATLAB can solve many common video
processing<00:00:02.370> challenges<00:00:02.639> from<00:00:03.330> importing

00:00:03.830 --> 00:00:03.840 
processing challenges from importing

00:00:03.840 --> 00:00:05.599 
processing challenges from importing
video<00:00:03.959> data<00:00:04.319> from<00:00:04.589> files<00:00:04.890> and<00:00:05.100> cameras<00:00:05.460> to

00:00:05.599 --> 00:00:05.609 
video data from files and cameras to

00:00:05.609 --> 00:00:07.670 
video data from files and cameras to
analyzing<00:00:06.540> and<00:00:06.779> processing<00:00:07.170> data<00:00:07.230> with

00:00:07.670 --> 00:00:07.680 
analyzing and processing data with

00:00:07.680 --> 00:00:10.580 
analyzing and processing data with
standard<00:00:08.069> algorithms<00:00:08.639> in<00:00:08.900> this<00:00:09.900> video<00:00:10.200> we

00:00:10.580 --> 00:00:10.590 
standard algorithms in this video we

00:00:10.590 --> 00:00:12.020 
standard algorithms in this video we
will<00:00:10.710> see<00:00:10.889> capabilities<00:00:11.519> for<00:00:11.790> video

00:00:12.020 --> 00:00:12.030 
will see capabilities for video

00:00:12.030 --> 00:00:14.270 
will see capabilities for video
processing<00:00:12.450> in<00:00:12.750> MATLAB<00:00:13.200> as<00:00:13.380> well<00:00:13.860> as<00:00:13.980> image

00:00:14.270 --> 00:00:14.280 
processing in MATLAB as well as image

00:00:14.280 --> 00:00:16.430 
processing in MATLAB as well as image
acquisition<00:00:14.460> toolbox<00:00:15.269> image<00:00:16.020> processing

00:00:16.430 --> 00:00:16.440 
acquisition toolbox image processing

00:00:16.440 --> 00:00:18.769 
acquisition toolbox image processing
toolbox<00:00:16.890> and<00:00:17.100> computer<00:00:18.090> vision<00:00:18.390> system

00:00:18.769 --> 00:00:18.779 
toolbox and computer vision system

00:00:18.779 --> 00:00:21.950 
toolbox and computer vision system
toolbox<00:00:20.060> computer<00:00:21.060> vision<00:00:21.300> system<00:00:21.630> toolbox

00:00:21.950 --> 00:00:21.960 
toolbox computer vision system toolbox

00:00:21.960 --> 00:00:24.200 
toolbox computer vision system toolbox
in<00:00:22.170> particular<00:00:22.740> supports<00:00:23.430> large<00:00:23.609> video<00:00:23.850> files

00:00:24.200 --> 00:00:24.210 
in particular supports large video files

00:00:24.210 --> 00:00:26.120 
in particular supports large video files
and<00:00:24.510> provides<00:00:25.170> a<00:00:25.320> library<00:00:25.500> of<00:00:25.890> video

00:00:26.120 --> 00:00:26.130 
and provides a library of video

00:00:26.130 --> 00:00:28.070 
and provides a library of video
processing<00:00:26.640> algorithms<00:00:27.180> for<00:00:27.449> tasks<00:00:27.689> such<00:00:27.810> as

00:00:28.070 --> 00:00:28.080 
processing algorithms for tasks such as

00:00:28.080 --> 00:00:30.800 
processing algorithms for tasks such as
motion<00:00:28.410> estimation<00:00:28.910> video<00:00:29.910> segmentation<00:00:30.570> and

00:00:30.800 --> 00:00:30.810 
motion estimation video segmentation and

00:00:30.810 --> 00:00:34.520 
motion estimation video segmentation and
object<00:00:31.590> tracking<00:00:32.840> the<00:00:33.840> first<00:00:34.079> challenge<00:00:34.410> to

00:00:34.520 --> 00:00:34.530 
object tracking the first challenge to

00:00:34.530 --> 00:00:36.139 
object tracking the first challenge to
working<00:00:34.800> with<00:00:34.920> video<00:00:35.130> in<00:00:35.309> MATLAB<00:00:35.700> is<00:00:35.880> to

00:00:36.139 --> 00:00:36.149 
working with video in MATLAB is to

00:00:36.149 --> 00:00:37.639 
working with video in MATLAB is to
access<00:00:36.329> data<00:00:36.719> from<00:00:36.899> a<00:00:37.050> variety<00:00:37.380> of<00:00:37.410> file

00:00:37.639 --> 00:00:37.649 
access data from a variety of file

00:00:37.649 --> 00:00:40.790 
access data from a variety of file
formats<00:00:38.070> and<00:00:38.219> codecs<00:00:38.610> to<00:00:39.260> read<00:00:40.260> video<00:00:40.530> into

00:00:40.790 --> 00:00:40.800 
formats and codecs to read video into

00:00:40.800 --> 00:00:43.250 
formats and codecs to read video into
MATLAB<00:00:40.980> you<00:00:41.489> can<00:00:41.640> use<00:00:41.820> video<00:00:42.000> reader<00:00:42.360> this

00:00:43.250 --> 00:00:43.260 
MATLAB you can use video reader this

00:00:43.260 --> 00:00:45.200 
MATLAB you can use video reader this
function<00:00:43.649> supports<00:00:44.070> formats<00:00:44.460> such<00:00:44.670> as<00:00:44.700> avi

00:00:45.200 --> 00:00:45.210 
function supports formats such as avi

00:00:45.210 --> 00:00:47.750 
function supports formats such as avi
and<00:00:45.480> MPEG<00:00:45.809> as<00:00:45.989> well<00:00:46.680> as<00:00:46.800> platform<00:00:47.250> specific

00:00:47.750 --> 00:00:47.760 
and MPEG as well as platform specific

00:00:47.760 --> 00:00:50.450 
and MPEG as well as platform specific
formats<00:00:48.149> such<00:00:48.539> as<00:00:48.570> WMV<00:00:49.260> on<00:00:49.379> Windows<00:00:49.710> QuickTime

00:00:50.450 --> 00:00:50.460 
formats such as WMV on Windows QuickTime

00:00:50.460 --> 00:00:52.010 
formats such as WMV on Windows QuickTime
on<00:00:50.610> Mac<00:00:50.789> and<00:00:51.030> OGG<00:00:51.570> Theora

00:00:52.010 --> 00:00:52.020 
on Mac and OGG Theora

00:00:52.020 --> 00:00:55.250 
on Mac and OGG Theora
on<00:00:52.170> Linux<00:00:52.910> to<00:00:53.910> use<00:00:54.059> video<00:00:54.360> reader<00:00:54.539> you<00:00:54.930> create

00:00:55.250 --> 00:00:55.260 
on Linux to use video reader you create

00:00:55.260 --> 00:00:56.990 
on Linux to use video reader you create
an<00:00:55.350> object<00:00:55.500> that<00:00:55.920> can<00:00:56.039> access<00:00:56.250> the<00:00:56.579> file<00:00:56.789> and

00:00:56.990 --> 00:00:57.000 
an object that can access the file and

00:00:57.000 --> 00:00:58.729 
an object that can access the file and
then<00:00:57.420> use<00:00:57.600> the<00:00:57.780> read<00:00:57.960> method<00:00:58.350> to<00:00:58.469> bring<00:00:58.590> the

00:00:58.729 --> 00:00:58.739 
then use the read method to bring the

00:00:58.739 --> 00:01:01.970 
then use the read method to bring the
data<00:00:58.890> into<00:00:59.190> MATLAB<00:01:00.140> to<00:01:01.140> display<00:01:01.469> you<00:01:01.680> can<00:01:01.710> use

00:01:01.970 --> 00:01:01.980 
data into MATLAB to display you can use

00:01:01.980 --> 00:01:03.110 
data into MATLAB to display you can use
the<00:01:02.129> video<00:01:02.250> viewer<00:01:02.699> called

00:01:03.110 --> 00:01:03.120 
the video viewer called

00:01:03.120 --> 00:01:07.920 
the video viewer called
I<00:01:03.210> M<00:01:03.449> play<00:01:03.750> and<00:01:03.989> image<00:01:04.530> processing<00:01:04.920> toolbox

00:01:07.920 --> 00:01:07.930 

00:01:07.930 --> 00:01:09.630 

exporting<00:01:08.350> video<00:01:08.440> data<00:01:08.710> has<00:01:09.070> different<00:01:09.460> sets

00:01:09.630 --> 00:01:09.640 
exporting video data has different sets

00:01:09.640 --> 00:01:11.910 
exporting video data has different sets
of<00:01:09.730> challenges<00:01:10.180> than<00:01:10.360> importing<00:01:10.870> data<00:01:11.050> for

00:01:11.910 --> 00:01:11.920 
of challenges than importing data for

00:01:11.920 --> 00:01:13.440 
of challenges than importing data for
example<00:01:12.010> you<00:01:12.580> may<00:01:12.700> want<00:01:12.940> to<00:01:13.000> specify<00:01:13.270> a

00:01:13.440 --> 00:01:13.450 
example you may want to specify a

00:01:13.450 --> 00:01:15.330 
example you may want to specify a
particular<00:01:13.600> codec<00:01:14.200> that<00:01:14.230> is<00:01:14.470> compatible<00:01:14.800> with

00:01:15.330 --> 00:01:15.340 
particular codec that is compatible with

00:01:15.340 --> 00:01:18.240 
particular codec that is compatible with
a<00:01:15.370> specific<00:01:15.910> application<00:01:16.260> then<00:01:17.260> you<00:01:17.920> may<00:01:18.040> want

00:01:18.240 --> 00:01:18.250 
a specific application then you may want

00:01:18.250 --> 00:01:19.800 
a specific application then you may want
to<00:01:18.310> change<00:01:18.490> the<00:01:18.700> compression<00:01:19.060> ratio<00:01:19.300> to

00:01:19.800 --> 00:01:19.810 
to change the compression ratio to

00:01:19.810 --> 00:01:21.600 
to change the compression ratio to
balance<00:01:20.080> between<00:01:20.200> file<00:01:20.620> size<00:01:20.920> and<00:01:21.220> video

00:01:21.600 --> 00:01:21.610 
balance between file size and video

00:01:21.610 --> 00:01:24.600 
balance between file size and video
quality<00:01:21.850> to<00:01:22.770> write<00:01:23.770> video<00:01:24.010> data<00:01:24.220> from<00:01:24.430> MATLAB

00:01:24.600 --> 00:01:24.610 
quality to write video data from MATLAB

00:01:24.610 --> 00:01:27.180 
quality to write video data from MATLAB
you<00:01:25.030> can<00:01:25.180> use<00:01:25.360> video<00:01:25.720> writer<00:01:26.110> which<00:01:26.770> supports

00:01:27.180 --> 00:01:27.190 
you can use video writer which supports

00:01:27.190 --> 00:01:29.100 
you can use video writer which supports
a<00:01:27.250> number<00:01:27.340> of<00:01:27.490> codecs<00:01:27.910> across<00:01:28.240> Windows<00:01:28.540> Mac

00:01:29.100 --> 00:01:29.110 
a number of codecs across Windows Mac

00:01:29.110 --> 00:01:32.130 
a number of codecs across Windows Mac
and<00:01:29.350> Linux<00:01:29.530> platforms<00:01:30.630> let's<00:01:31.630> use<00:01:31.810> the<00:01:31.930> video

00:01:32.130 --> 00:01:32.140 
and Linux platforms let's use the video

00:01:32.140 --> 00:01:34.109 
and Linux platforms let's use the video
from<00:01:32.290> my<00:01:32.350> last<00:01:32.650> example<00:01:33.040> and<00:01:33.369> export<00:01:34.030> the

00:01:34.109 --> 00:01:34.119 
from my last example and export the

00:01:34.119 --> 00:01:36.680 
from my last example and export the
difference<00:01:34.510> between<00:01:34.720> consecutive<00:01:35.260> frames

00:01:36.680 --> 00:01:36.690 
difference between consecutive frames

00:01:36.690 --> 00:01:39.570 
difference between consecutive frames
video<00:01:37.690> writer<00:01:37.900> creates<00:01:38.320> a<00:01:38.380> new<00:01:38.530> file<00:01:38.770> which<00:01:39.369> we

00:01:39.570 --> 00:01:39.580 
video writer creates a new file which we

00:01:39.580 --> 00:01:42.420 
video writer creates a new file which we
display<00:01:39.940> using<00:01:40.360> the<00:01:40.479> video<00:01:40.720> viewer<00:01:41.040> here<00:01:42.040> the

00:01:42.420 --> 00:01:42.430 
display using the video viewer here the

00:01:42.430 --> 00:01:43.859 
display using the video viewer here the
rubber<00:01:42.640> band<00:01:42.880> is<00:01:43.060> segmented<00:01:43.570> from<00:01:43.720> the

00:01:43.859 --> 00:01:43.869 
rubber band is segmented from the

00:01:43.869 --> 00:01:45.420 
rubber band is segmented from the
background

00:01:45.420 --> 00:01:45.430 
background

00:01:45.430 --> 00:01:47.850 
background
often<00:01:46.390> times<00:01:46.660> you<00:01:47.020> may<00:01:47.080> want<00:01:47.350> to<00:01:47.410> import<00:01:47.680> video

00:01:47.850 --> 00:01:47.860 
often times you may want to import video

00:01:47.860 --> 00:01:49.920 
often times you may want to import video
data<00:01:48.160> from<00:01:48.400> cameras<00:01:48.910> and<00:01:49.120> frame<00:01:49.510> grabbers

00:01:49.920 --> 00:01:49.930 
data from cameras and frame grabbers

00:01:49.930 --> 00:01:52.320 
data from cameras and frame grabbers
instead<00:01:50.440> of<00:01:50.530> files<00:01:51.120> image<00:01:52.120> acquisition

00:01:52.320 --> 00:01:52.330 
instead of files image acquisition

00:01:52.330 --> 00:01:54.270 
instead of files image acquisition
toolbox<00:01:53.080> enables<00:01:53.650> you<00:01:53.740> to<00:01:53.770> interact<00:01:54.220> with

00:01:54.270 --> 00:01:54.280 
toolbox enables you to interact with

00:01:54.280 --> 00:01:56.790 
toolbox enables you to interact with
video<00:01:54.640> devices<00:01:55.120> including<00:01:55.630> webcams<00:01:56.050> as<00:01:56.290> well

00:01:56.790 --> 00:01:56.800 
video devices including webcams as well

00:01:56.800 --> 00:01:59.940 
video devices including webcams as well
as<00:01:56.920> industrial<00:01:57.520> and<00:01:57.700> scientific<00:01:57.850> cameras<00:01:58.950> the

00:01:59.940 --> 00:01:59.950 
as industrial and scientific cameras the

00:01:59.950 --> 00:02:01.290 
as industrial and scientific cameras the
toolbox<00:02:00.340> offers<00:02:00.700> a<00:02:00.729> graphical<00:02:01.210> interface

00:02:01.290 --> 00:02:01.300 
toolbox offers a graphical interface

00:02:01.300 --> 00:02:03.630 
toolbox offers a graphical interface
called<00:02:01.780> iMac<00:02:02.229> tool<00:02:02.500> as<00:02:02.680> well<00:02:03.040> as<00:02:03.100> a<00:02:03.190> function

00:02:03.630 --> 00:02:03.640 
called iMac tool as well as a function

00:02:03.640 --> 00:02:07.680 
called iMac tool as well as a function
interface<00:02:04.060> called<00:02:04.330> video<00:02:04.840> input<00:02:06.540> for<00:02:07.540> many

00:02:07.680 --> 00:02:07.690 
interface called video input for many

00:02:07.690 --> 00:02:09.510 
interface called video input for many
video<00:02:07.990> sources<00:02:08.289> it<00:02:08.590> may<00:02:08.800> not<00:02:08.950> be<00:02:09.100> possible<00:02:09.280> to

00:02:09.510 --> 00:02:09.520 
video sources it may not be possible to

00:02:09.520 --> 00:02:11.040 
video sources it may not be possible to
load<00:02:09.700> all<00:02:09.880> of<00:02:10.000> your<00:02:10.119> video<00:02:10.360> into<00:02:10.600> the<00:02:10.750> MATLAB

00:02:11.040 --> 00:02:11.050 
load all of your video into the MATLAB

00:02:11.050 --> 00:02:12.810 
load all of your video into the MATLAB
workspace<00:02:11.230> since<00:02:11.950> it<00:02:12.040> may<00:02:12.100> not<00:02:12.250> fit<00:02:12.459> memory

00:02:12.810 --> 00:02:12.820 
workspace since it may not fit memory

00:02:12.820 --> 00:02:15.570 
workspace since it may not fit memory
for<00:02:13.780> example<00:02:13.840> high<00:02:14.530> resolution<00:02:15.070> frames<00:02:15.370> or

00:02:15.570 --> 00:02:15.580 
for example high resolution frames or

00:02:15.580 --> 00:02:17.400 
for example high resolution frames or
long<00:02:15.940> video<00:02:16.270> clips<00:02:16.540> of<00:02:16.690> uncompressed<00:02:17.290> video

00:02:17.400 --> 00:02:17.410 
long video clips of uncompressed video

00:02:17.410 --> 00:02:19.290 
long video clips of uncompressed video
can<00:02:18.040> quickly<00:02:18.250> result<00:02:18.670> in<00:02:18.850> an<00:02:18.970> out<00:02:19.120> of<00:02:19.150> memory

00:02:19.290 --> 00:02:19.300 
can quickly result in an out of memory

00:02:19.300 --> 00:02:22.830 
can quickly result in an out of memory
error<00:02:20.400> to<00:02:21.400> minimize<00:02:21.790> memory<00:02:22.090> use<00:02:22.239> you<00:02:22.600> want<00:02:22.780> to

00:02:22.830 --> 00:02:22.840 
error to minimize memory use you want to

00:02:22.840 --> 00:02:24.510 
error to minimize memory use you want to
process<00:02:23.230> only<00:02:23.440> a<00:02:23.530> handful<00:02:23.980> of<00:02:24.040> frames<00:02:24.310> at<00:02:24.489> a

00:02:24.510 --> 00:02:24.520 
process only a handful of frames at a

00:02:24.520 --> 00:02:26.540 
process only a handful of frames at a
time<00:02:24.760> rather<00:02:25.150> than<00:02:25.300> the<00:02:25.570> entire<00:02:25.690> video

00:02:26.540 --> 00:02:26.550 
time rather than the entire video

00:02:26.550 --> 00:02:29.280 
time rather than the entire video
computer<00:02:27.550> vision<00:02:27.970> system<00:02:28.300> toolbox<00:02:28.690> handles

00:02:29.280 --> 00:02:29.290 
computer vision system toolbox handles

00:02:29.290 --> 00:02:31.740 
computer vision system toolbox handles
this<00:02:29.440> with<00:02:29.709> system<00:02:30.100> objects<00:02:30.550> a<00:02:30.760> predefined

00:02:31.740 --> 00:02:31.750 
this with system objects a predefined

00:02:31.750 --> 00:02:33.780 
this with system objects a predefined
class<00:02:31.989> of<00:02:32.230> mallets<00:02:32.530> that<00:02:33.340> represent

00:02:33.780 --> 00:02:33.790 
class of mallets that represent

00:02:33.790 --> 00:02:36.090 
class of mallets that represent
algorithms<00:02:34.239> and<00:02:34.560> input/output<00:02:35.560> capabilities

00:02:36.090 --> 00:02:36.100 
algorithms and input/output capabilities

00:02:36.100 --> 00:02:39.150 
algorithms and input/output capabilities
that<00:02:36.250> process<00:02:36.640> data<00:02:36.790> frame<00:02:37.209> by<00:02:37.420> frame<00:02:37.450> in<00:02:38.160> this

00:02:39.150 --> 00:02:39.160 
that process data frame by frame in this

00:02:39.160 --> 00:02:41.400 
that process data frame by frame in this
example<00:02:39.520> we<00:02:40.090> use<00:02:40.120> system<00:02:40.660> objects<00:02:41.020> in<00:02:41.170> a<00:02:41.230> loop

00:02:41.400 --> 00:02:41.410 
example we use system objects in a loop

00:02:41.410 --> 00:02:42.990 
example we use system objects in a loop
to<00:02:41.680> read<00:02:41.860> and<00:02:42.010> display<00:02:42.160> each<00:02:42.459> frame<00:02:42.820> of<00:02:42.850> the

00:02:42.990 --> 00:02:43.000 
to read and display each frame of the

00:02:43.000 --> 00:02:45.330 
to read and display each frame of the
video<00:02:43.150> in<00:02:43.890> contrast<00:02:44.890> to<00:02:44.980> our<00:02:45.100> previous

00:02:45.330 --> 00:02:45.340 
video in contrast to our previous

00:02:45.340 --> 00:02:47.340 
video in contrast to our previous
example<00:02:45.489> memory<00:02:46.420> use<00:02:46.570> is<00:02:46.750> significantly

00:02:47.340 --> 00:02:47.350 
example memory use is significantly

00:02:47.350 --> 00:02:48.720 
example memory use is significantly
reduced<00:02:47.500> because<00:02:48.040> we<00:02:48.310> were<00:02:48.370> working<00:02:48.640> with

00:02:48.720 --> 00:02:48.730 
reduced because we were working with

00:02:48.730 --> 00:02:50.400 
reduced because we were working with
only<00:02:48.910> one<00:02:49.150> frame<00:02:49.420> at<00:02:49.540> a<00:02:49.570> time<00:02:49.660> instead<00:02:50.350> of

00:02:50.400 --> 00:02:50.410 
only one frame at a time instead of

00:02:50.410 --> 00:02:51.900 
only one frame at a time instead of
loading<00:02:50.620> the<00:02:50.830> entire<00:02:51.100> video<00:02:51.430> file<00:02:51.670> into

00:02:51.900 --> 00:02:51.910 
loading the entire video file into

00:02:51.910 --> 00:02:54.090 
loading the entire video file into
MATLAB<00:02:52.209> this<00:02:53.170> workflow<00:02:53.590> enables<00:02:53.980> you<00:02:54.070> to

00:02:54.090 --> 00:02:54.100 
MATLAB this workflow enables you to

00:02:54.100 --> 00:02:55.710 
MATLAB this workflow enables you to
process<00:02:54.430> extremely<00:02:55.150> large<00:02:55.360> videos

00:02:55.710 --> 00:02:55.720 
process extremely large videos

00:02:55.720 --> 00:02:57.370 
process extremely large videos
efficiently

00:02:57.370 --> 00:02:57.380 
efficiently

00:02:57.380 --> 00:02:59.380 
efficiently
many<00:02:58.040> video<00:02:58.340> processing<00:02:58.700> applications

00:02:59.380 --> 00:02:59.390 
many video processing applications

00:02:59.390 --> 00:03:01.480 
many video processing applications
require<00:02:59.840> you<00:02:59.990> to<00:03:00.080> estimate<00:03:00.350> motion<00:03:00.920> and<00:03:01.130> track

00:03:01.480 --> 00:03:01.490 
require you to estimate motion and track

00:03:01.490 --> 00:03:03.820 
require you to estimate motion and track
objects<00:03:02.030> these<00:03:02.900> scenarios<00:03:03.200> range<00:03:03.590> from

00:03:03.820 --> 00:03:03.830 
objects these scenarios range from

00:03:03.830 --> 00:03:06.280 
objects these scenarios range from
identifying<00:03:04.550> an<00:03:04.640> object<00:03:04.730> to<00:03:05.720> estimating

00:03:06.280 --> 00:03:06.290 
identifying an object to estimating

00:03:06.290 --> 00:03:09.760 
identifying an object to estimating
speed<00:03:06.590> to<00:03:07.310> video<00:03:07.580> encoding<00:03:08.470> computer<00:03:09.470> vision

00:03:09.760 --> 00:03:09.770 
speed to video encoding computer vision

00:03:09.770 --> 00:03:11.440 
speed to video encoding computer vision
system<00:03:10.100> toolbox<00:03:10.460> includes<00:03:10.880> many<00:03:11.120> algorithms

00:03:11.440 --> 00:03:11.450 
system toolbox includes many algorithms

00:03:11.450 --> 00:03:13.000 
system toolbox includes many algorithms
to<00:03:11.870> help<00:03:11.900> you<00:03:12.110> solve<00:03:12.350> motion<00:03:12.860> estimation

00:03:13.000 --> 00:03:13.010 
to help you solve motion estimation

00:03:13.010 --> 00:03:16.360 
to help you solve motion estimation
challenges<00:03:14.680> optical<00:03:15.680> flow<00:03:15.860> calculates

00:03:16.360 --> 00:03:16.370 
challenges optical flow calculates

00:03:16.370 --> 00:03:18.340 
challenges optical flow calculates
motion<00:03:16.700> for<00:03:16.880> each<00:03:17.000> pixel<00:03:17.540> in<00:03:17.690> the<00:03:17.840> video<00:03:18.050> over

00:03:18.340 --> 00:03:18.350 
motion for each pixel in the video over

00:03:18.350 --> 00:03:21.280 
motion for each pixel in the video over
multiple<00:03:18.770> frames<00:03:19.240> among<00:03:20.240> many<00:03:20.450> uses<00:03:20.660> optical

00:03:21.280 --> 00:03:21.290 
multiple frames among many uses optical

00:03:21.290 --> 00:03:23.080 
multiple frames among many uses optical
flow<00:03:21.470> can<00:03:21.680> be<00:03:21.710> used<00:03:21.980> to<00:03:22.100> find<00:03:22.280> moving<00:03:22.640> objects

00:03:23.080 --> 00:03:23.090 
flow can be used to find moving objects

00:03:23.090 --> 00:03:25.480 
flow can be used to find moving objects
using<00:03:23.990> the<00:03:24.110> shape<00:03:24.290> and<00:03:24.440> Serdar<00:03:24.650> system<00:03:25.040> object

00:03:25.480 --> 00:03:25.490 
using the shape and Serdar system object

00:03:25.490 --> 00:03:27.280 
using the shape and Serdar system object
we<00:03:26.180> can<00:03:26.330> visualize<00:03:26.690> the<00:03:26.840> motion<00:03:27.140> by

00:03:27.280 --> 00:03:27.290 
we can visualize the motion by

00:03:27.290 --> 00:03:28.600 
we can visualize the motion by
overlaying<00:03:27.770> a<00:03:27.980> grid<00:03:28.160> of<00:03:28.190> vectors

00:03:28.600 --> 00:03:28.610 
overlaying a grid of vectors

00:03:28.610 --> 00:03:31.020 
overlaying a grid of vectors
representing<00:03:29.420> the<00:03:29.540> optical<00:03:29.990> flow<00:03:30.170> field

00:03:31.020 --> 00:03:31.030 
representing the optical flow field

00:03:31.030 --> 00:03:33.370 
representing the optical flow field
using<00:03:32.030> threshold<00:03:32.450> anon<00:03:32.690> the<00:03:32.870> optical<00:03:33.230> flow

00:03:33.370 --> 00:03:33.380 
using threshold anon the optical flow

00:03:33.380 --> 00:03:38.050 
using threshold anon the optical flow
field<00:03:33.680> we<00:03:34.250> can<00:03:34.400> segment<00:03:34.700> and<00:03:35.060> detect<00:03:35.360> the<00:03:35.480> cars

00:03:38.050 --> 00:03:38.060 

00:03:38.060 --> 00:03:39.850 

to<00:03:38.180> detect<00:03:38.510> the<00:03:38.630> moving<00:03:38.870> cars<00:03:39.140> is<00:03:39.380> to<00:03:39.440> use<00:03:39.709> the

00:03:39.850 --> 00:03:39.860 
to detect the moving cars is to use the

00:03:39.860 --> 00:03:42.130 
to detect the moving cars is to use the
foreground<00:03:40.250> detector<00:03:40.790> system<00:03:41.180> object<00:03:41.600> which

00:03:42.130 --> 00:03:42.140 
foreground detector system object which

00:03:42.140 --> 00:03:43.780 
foreground detector system object which
uses<00:03:42.500> a<00:03:42.530> Gaussian<00:03:43.130> mixture<00:03:43.220> model<00:03:43.400> to

00:03:43.780 --> 00:03:43.790 
uses a Gaussian mixture model to

00:03:43.790 --> 00:03:47.140 
uses a Gaussian mixture model to
separate<00:03:44.150> objects<00:03:44.540> from<00:03:44.690> the<00:03:44.870> background<00:03:46.150> the

00:03:47.140 --> 00:03:47.150 
separate objects from the background the

00:03:47.150 --> 00:03:49.090 
separate objects from the background the
system<00:03:47.540> toolbox<00:03:47.870> includes<00:03:48.319> other<00:03:48.590> algorithms

00:03:49.090 --> 00:03:49.100 
system toolbox includes other algorithms

00:03:49.100 --> 00:03:51.160 
system toolbox includes other algorithms
for<00:03:49.400> detecting<00:03:49.850> motion<00:03:50.150> vectors<00:03:50.540> such<00:03:51.080> as

00:03:51.160 --> 00:03:51.170 
for detecting motion vectors such as

00:03:51.170 --> 00:03:53.130 
for detecting motion vectors such as
block<00:03:51.560> matching<00:03:52.010> and<00:03:52.190> template<00:03:52.670> matching

00:03:53.130 --> 00:03:53.140 
block matching and template matching

00:03:53.140 --> 00:03:55.360 
block matching and template matching
here<00:03:54.140> template<00:03:54.739> matching<00:03:54.980> is<00:03:55.100> used<00:03:55.250> to

00:03:55.360 --> 00:03:55.370 
here template matching is used to

00:03:55.370 --> 00:03:57.010 
here template matching is used to
calculate<00:03:55.610> motion<00:03:56.090> from<00:03:56.270> one<00:03:56.360> frame<00:03:56.750> to<00:03:56.810> the

00:03:57.010 --> 00:03:57.020 
calculate motion from one frame to the

00:03:57.020 --> 00:03:57.400 
calculate motion from one frame to the
next

00:03:57.400 --> 00:03:57.410 
next

00:03:57.410 --> 00:03:59.800 
next
namely<00:03:58.310> need<00:03:58.459> to<00:03:58.550> shift<00:03:58.790> and<00:03:59.060> stabilize<00:03:59.600> the

00:03:59.800 --> 00:03:59.810 
namely need to shift and stabilize the

00:03:59.810 --> 00:04:02.979 
namely need to shift and stabilize the
video<00:04:00.050> sequence<00:04:01.600> working<00:04:02.600> with<00:04:02.720> video

00:04:02.979 --> 00:04:02.989 
video sequence working with video

00:04:02.989 --> 00:04:04.510 
video sequence working with video
requires<00:04:03.319> a<00:04:03.500> number<00:04:03.890> of<00:04:03.980> standard<00:04:04.340> video

00:04:04.510 --> 00:04:04.520 
requires a number of standard video

00:04:04.520 --> 00:04:07.090 
requires a number of standard video
processing<00:04:05.180> algorithms<00:04:05.800> computer<00:04:06.800> vision

00:04:07.090 --> 00:04:07.100 
processing algorithms computer vision

00:04:07.100 --> 00:04:08.800 
processing algorithms computer vision
system<00:04:07.459> toolbox<00:04:07.850> provides<00:04:08.060> many<00:04:08.600> such

00:04:08.800 --> 00:04:08.810 
system toolbox provides many such

00:04:08.810 --> 00:04:10.990 
system toolbox provides many such
algorithms<00:04:09.319> for<00:04:09.950> example<00:04:10.010> you<00:04:10.670> can<00:04:10.820> use<00:04:10.850> the

00:04:10.990 --> 00:04:11.000 
algorithms for example you can use the

00:04:11.000 --> 00:04:13.360 
algorithms for example you can use the
demos<00:04:11.480> aook<00:04:11.720> system<00:04:12.050> object<00:04:12.470> to<00:04:12.769> interpolate

00:04:13.360 --> 00:04:13.370 
demos aook system object to interpolate

00:04:13.370 --> 00:04:16.870 
demos aook system object to interpolate
raw<00:04:13.550> data<00:04:13.790> from<00:04:14.030> an<00:04:14.180> image<00:04:14.450> sensor<00:04:15.730> you<00:04:16.730> can

00:04:16.870 --> 00:04:16.880 
raw data from an image sensor you can

00:04:16.880 --> 00:04:18.190 
raw data from an image sensor you can
find<00:04:17.090> lines<00:04:17.299> in<00:04:17.480> a<00:04:17.540> frame<00:04:17.720> using<00:04:17.989> the<00:04:18.049> hub

00:04:18.190 --> 00:04:18.200 
find lines in a frame using the hub

00:04:18.200 --> 00:04:20.690 
find lines in a frame using the hub
transform

00:04:20.690 --> 00:04:20.700 
transform

00:04:20.700 --> 00:04:22.880 
transform
transforms<00:04:21.330> between<00:04:21.630> images<00:04:22.050> using<00:04:22.410> a<00:04:22.590> corner

00:04:22.880 --> 00:04:22.890 
transforms between images using a corner

00:04:22.890 --> 00:04:24.950 
transforms between images using a corner
detector<00:04:23.370> and<00:04:23.520> geometric<00:04:24.480> transform

00:04:24.950 --> 00:04:24.960 
detector and geometric transform

00:04:24.960 --> 00:04:28.010 
detector and geometric transform
estimator<00:04:25.440> in<00:04:26.030> this<00:04:27.030> video<00:04:27.330> you've<00:04:27.630> seen<00:04:27.720> how

00:04:28.010 --> 00:04:28.020 
estimator in this video you've seen how

00:04:28.020 --> 00:04:29.720 
estimator in this video you've seen how
to<00:04:28.080> perform<00:04:28.410> video<00:04:28.740> processing<00:04:29.160> and<00:04:29.400> MATLAB

00:04:29.720 --> 00:04:29.730 
to perform video processing and MATLAB

00:04:29.730 --> 00:04:31.630 
to perform video processing and MATLAB
with<00:04:30.120> image<00:04:30.420> acquisition<00:04:30.600> tool<00:04:31.140> box<00:04:31.350> image

00:04:31.630 --> 00:04:31.640 
with image acquisition tool box image

00:04:31.640 --> 00:04:34.580 
with image acquisition tool box image
processing<00:04:32.640> toolbox<00:04:32.880> and<00:04:33.320> computer<00:04:34.320> vision

00:04:34.580 --> 00:04:34.590 
processing toolbox and computer vision

00:04:34.590 --> 00:04:37.010 
processing toolbox and computer vision
system<00:04:34.920> toolbox<00:04:35.360> to<00:04:36.360> learn<00:04:36.480> more<00:04:36.690> about<00:04:36.780> video

00:04:37.010 --> 00:04:37.020 
system toolbox to learn more about video

00:04:37.020 --> 00:04:38.570 
system toolbox to learn more about video
processing<00:04:37.590> in<00:04:37.680> MATLAB<00:04:38.010> and<00:04:38.190> to<00:04:38.370> experiment

00:04:38.570 --> 00:04:38.580 
processing in MATLAB and to experiment

00:04:38.580 --> 00:04:41.240 
processing in MATLAB and to experiment
with<00:04:38.880> code<00:04:39.090> download<00:04:39.870> a<00:04:39.900> trial<00:04:40.200> below<00:04:40.440> for

00:04:41.240 --> 00:04:41.250 
with code download a trial below for

00:04:41.250 --> 00:04:42.980 
with code download a trial below for
more<00:04:41.340> examples<00:04:41.490> see<00:04:42.120> demos<00:04:42.450> and<00:04:42.600> webinars

00:04:42.980 --> 00:04:42.990 
more examples see demos and webinars

00:04:42.990 --> 00:04:44.450 
more examples see demos and webinars
available<00:04:43.470> on<00:04:43.620> the<00:04:43.710> product<00:04:44.040> page<00:04:44.220> for

00:04:44.450 --> 00:04:44.460 
available on the product page for

00:04:44.460 --> 00:04:48.230 
available on the product page for
computer<00:04:45.120> vision<00:04:45.150> system<00:04:45.840> toolbox

