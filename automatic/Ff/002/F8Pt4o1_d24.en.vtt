WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
 Now you have completed the little exercises on factorials. 

00:00:03.000 --> 00:00:06.000
 You may feel that you should take a break - almost all 

00:00:06.000 --> 00:00:10.000
 But we still have to learn a little about the while loop. 

00:00:10.000 --> 00:00:12.000
 That is the break statement 

00:00:12.000 --> 00:00:17.000
 Break can let us interrupt the loop 

00:00:17.000 --> 00:00:18.000
 Even when the test condition is true 

00:00:18.000 --> 00:00:21.000
 Below is a typical structure of a loop with break 

00:00:21.000 --> 00:00:25.000
 Same as before, then while, then judge expression 

00:00:25.000 --> 00:00:27.000
 Then a colon 

00:00:27.000 --> 00:00:30.000
 The general while structure has a block here. 

00:00:30.000 --> 00:00:34.000
 Now we want to see the inside of this block 

00:00:34.000 --> 00:00:35.000
 What can it be? 

00:00:35.000 --> 00:00:38.000
 The following is an example of the contents of the block. 

00:00:38.000 --> 00:00:41.000
 Some code some Python statements 

00:00:41.000 --> 00:00:42.000
 Then an if statement 

00:00:42.000 --> 00:00:45.000
 Then another judgment expression 

00:00:45.000 --> 00:00:46.000
 We call it break test 

00:00:46.000 --> 00:00:49.000
 That is, use a text expression to check if it is interrupted. 

00:00:49.000 --> 00:00:55.000
 When the break test is true, we execute break 

00:00:55.000 --> 00:00:57.000
 This is what we need 

00:00:57.000 --> 00:01:00.000
 Break means stop executing the while loop 

00:01:00.000 --> 00:01:03.000
 Jump out of the code after the while loop continues 

00:01:03.000 --> 00:01:07.000
 That is the more code in the while block (more code) 

00:01:07.000 --> 00:01:12.000
 We will skip these codes 

00:01:12.000 --> 00:01:13.000
 Jump directly to the code after while 

00:01:13.000 --> 00:01:17.000
 So when we run a loop with break 

00:01:17.000 --> 00:01:19.000
 Itâ€™s actually like running a normal loop 

00:01:19.000 --> 00:01:21.000
 If the expression is true, we execute the code 

00:01:21.000 --> 00:01:25.000
 If the break test is false, we will not perform break 

00:01:25.000 --> 00:01:28.000
 More code after continuing execution 

00:01:28.000 --> 00:01:32.000
 We can go back to the loop judgment and test the judgment expression again. 

00:01:32.000 --> 00:01:35.000
 If it is true, we run the code 

00:01:35.000 --> 00:01:38.000
 If break is true we will break 

00:01:38.000 --> 00:01:41.000
 That is, jumping out of the loop 

00:01:41.000 --> 00:01:44.000
 Do not execute more code, no longer execute judgment expression 

00:01:44.000 --> 00:01:49.000
 If the break happens we will jump to the code after the while 

00:01:49.000 --> 00:01:52.000
 This allows us to jump out of the middle of the loop 

00:01:52.000 --> 00:01:54.000
 The following is an example of the application 

00:01:54.000 --> 00:01:58.000
 Before we defined print numbers (printing numbers) without using break 

00:01:58.000 --> 00:02:00.000
 We are so defined 

00:02:00.000 --> 00:02:01.000
 This is the code we wrote before. 

00:02:01.000 --> 00:02:04.000
 We can use break to write it again. 

00:02:04.000 --> 00:02:07.000
 Now we don't use the while test (while judgment) to terminate the loop. 

00:02:07.000 --> 00:02:08.000
 We let the while test be True 

00:02:08.000 --> 00:02:13.000
 True will never be false - that is, if there is no break 

00:02:13.000 --> 00:02:16.000
 The loop will execute forever but we will add a break 

00:02:16.000 --> 00:02:20.000
 We will use an if test (if judged) condition is 

00:02:20.000 --> 00:02:23.000
 Terminate once i is greater than n cycles 

00:02:23.000 --> 00:02:25.000
 The way to terminate is to use break 

00:02:25.000 --> 00:02:28.000
 If i is not greater than n we will continue 

00:02:28.000 --> 00:02:33.000
 We will print i and let i add 1 - this is the same as before 

00:02:33.000 --> 00:02:37.000
 The meaning of this cycle is exactly the same as before. 

00:02:37.000 --> 00:02:40.000
 The former is better in all respects. 

00:02:40.000 --> 00:02:42.000
 This is more complicated 

00:02:42.000 --> 00:02:43.000
 Used more coding 

00:02:43.000 --> 00:02:45.000
 But this shows how we can use break 

00:02:45.000 --> 00:02:47.000
 We don't want to write like this 

00:02:47.000 --> 00:02:48.000
 This is not the same as the previous one. 

00:02:48.000 --> 00:02:50.000
 We hope that the coding is simple and easy to understand. 

00:02:50.000 --> 00:02:53.000
 When we want to extract all the links on the page 

00:02:53.000 --> 00:02:56.000
 We will see some times 

00:02:56.000 --> 00:02:58.000
 Itâ€™s easier to write code with break 

00:02:58.000 --> 00:03:01.000
 Now we will have a small exercise 

00:03:01.000 --> 00:03:02.000
 See if you have mastered the while loop and break 

00:03:02.000 --> 00:03:05.000
 This exercise is more difficult 

00:03:05.000 --> 00:03:09.000
 You must think carefully about the definition of the while loop and the meaning of the break. 

00:03:09.000 --> 00:03:13.000
 The question is which of the following is always the same as 

00:03:13.000 --> 00:03:19.000
 While any judgment expression T block - any statement S 

00:03:19.000 --> 00:03:23.000
 T and S can be any code 

00:03:23.000 --> 00:03:25.000
 Your question is which of the following is equivalent to the while 

00:03:25.000 --> 00:03:27.000
 Here are four options 

00:03:27.000 --> 00:03:30.000
 The while loop of option one has a nested if 

00:03:30.000 --> 00:03:33.000
 The second loop of option two has an S statement and a break 

00:03:33.000 --> 00:03:36.000
 The three loop of option three has a nested if 

00:03:36.000 --> 00:03:40.000
 The four loop of option four has a nested if an else and a break 

00:03:40.000 --> 00:03:44.000
 Your task is to find all the options that are equivalent to while TS 

00:03:44.000 --> 00:03:48.000
 Here T and S 

00:03:48.000 --> 99:59:59.000
 Can be any judgment expression and any statement 

