WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.929
 glad to welcome you to this 

00:00:01.890 --> 00:00:07.820
 video in which they will teach you how 

00:00:03.929 --> 00:00:11.219
 generate the prime numbers from 1 to 100 

00:00:07.820 --> 00:00:13.040
 using the good cycle we are 

00:00:11.219 --> 00:00:16.400
 in pc 

00:00:13.040 --> 00:00:18.620
 and we are going to define three variables do not 

00:00:16.400 --> 00:00:20.120
 is going to call what 

00:00:18.620 --> 00:00:23.470
 He says 

00:00:20.120 --> 00:00:23.470
 as a whole 

00:00:24.810 --> 00:00:32.040
 now let's say that the variable that 

00:00:28.009 --> 00:00:36.440
 will be equal to 1 and we will start the 

00:00:32.040 --> 00:00:36.440
 cycle while yes 

00:00:36.490 --> 00:00:43.630
 be less than or equal to make 

00:00:40.810 --> 00:00:47.340
 what are we going to do, let's say that the 

00:00:43.630 --> 00:00:50.130
 variable will be equal to 1 

00:00:47.340 --> 00:00:52.910
 and I know that in this case we are going to occupy 

00:00:50.130 --> 00:00:56.130
 as a counter will be equal to zero 

00:00:52.910 --> 00:01:00.690
 let's open another cycle let's say 

00:00:56.130 --> 00:01:05.170
 while it is less or equal than it is 

00:01:00.690 --> 00:01:08.550
 less than or equal to g we are going to do 

00:01:05.170 --> 00:01:10.870
 in the following condition 

00:01:08.550 --> 00:01:14.710
 would be 

00:01:10.870 --> 00:01:17.049
 without forgiveness I said 

00:01:14.710 --> 00:01:19.210
 this good is like the way that what 

00:01:17.049 --> 00:01:20.190
 does is to return the residue of a 

00:01:19.210 --> 00:01:22.730
 division 

00:01:20.190 --> 00:01:27.380
 then if they want 

00:01:22.730 --> 00:01:28.580
 is not equal to zero then we are going to 

00:01:27.380 --> 00:01:32.340
 place the line 

00:01:28.580 --> 00:01:34.899
 of code for the counter 

00:01:32.340 --> 00:01:37.820
 it would be the following 

00:01:34.899 --> 00:01:41.620
 one 

00:01:37.820 --> 00:01:41.620
 if there is not the necessary 

00:01:41.700 --> 00:01:49.490
 when leaving the condition let's say 

00:01:44.189 --> 00:01:49.490
 that this will not be the same 

00:01:50.630 --> 00:01:55.470
 and that goes to add to that they go in 

00:01:53.630 --> 00:01:59.730
 increase 

00:01:55.470 --> 00:02:01.690
 end the cycle means if you are 

00:01:59.730 --> 00:02:03.250
 equal to 2 

00:02:01.690 --> 00:02:06.210
 so 

00:02:03.250 --> 00:02:06.210
 to write 

00:02:07.850 --> 00:02:13.910
 when we finish here we are going to tell you that 

00:02:11.540 --> 00:02:15.150
 to be equal to g1 so that it also goes on 

00:02:13.910 --> 00:02:16.920
 increase 

00:02:15.150 --> 00:02:19.720
 all right 

00:02:16.920 --> 00:02:23.320
 in this part of here 

00:02:19.720 --> 00:02:25.390
 we are saying that we are going to create a 

00:02:23.320 --> 00:02:28.900
 good cycle like this is going to be about 100 

00:02:25.390 --> 00:02:31.360
 this will go from 1 to the number not 

00:02:28.900 --> 00:02:34.270
 says is this cycle was going to go 

00:02:31.360 --> 00:02:37.610
 asking consecutively if by saying 

00:02:34.270 --> 00:02:40.340
 dividing this number by this one 

00:02:37.610 --> 00:02:43.040
 It gives as it receives a number zero as you know 

00:02:40.340 --> 00:02:45.080
 the theory of prime numbers says that 

00:02:43.040 --> 00:02:47.050
 the prime numbers are those that only 

00:02:45.080 --> 00:02:49.900
 they are divisible 

00:02:47.050 --> 00:02:52.960
 the same and the number one with divisible 

00:02:49.900 --> 00:02:56.950
 refers to that when dividing it from how 

00:02:52.960 --> 00:03:00.640
 remain a 0 then here ask that 

00:02:56.950 --> 00:03:02.740
 yes I know that it is the counter that this one is going to 

00:03:00.640 --> 00:03:05.110
 go counting how many times god 0 like 

00:03:02.740 --> 00:03:07.000
 remainder if I'm matched 

00:03:05.110 --> 00:03:08.350
 then you write the number because if 

00:03:07.000 --> 00:03:10.930
 stream 

00:03:08.350 --> 00:03:13.030
 this is so that it increases in 

00:03:10.930 --> 00:03:15.550
 this cycle and this is for you to go 

00:03:13.030 --> 00:03:18.460
 increasing in this cycle this is for 

00:03:15.550 --> 00:03:21.070
 that does not have the value of 1 and the 

00:03:18.460 --> 00:03:26.430
 counter again will have it again the 

00:03:21.070 --> 00:03:26.430
 value of being good let's try it 

00:03:27.860 --> 00:03:34.700
 and we see how it effectively gives 

00:03:31.070 --> 00:03:39.350
 numbers that are within the range of 1 

00:03:34.700 --> 00:03:42.770
 at 100 well I hope that this video will 

00:03:39.350 --> 00:03:44.900
 work that has been helpful and 

00:03:42.770 --> 00:03:46.790
 see you next time I hope you know 

00:03:44.900 --> 00:03:49.330
 subscribe please help in the 

00:03:46.790 --> 00:03:49.330
 next video 

