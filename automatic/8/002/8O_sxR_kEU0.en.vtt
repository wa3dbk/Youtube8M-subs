WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.419 

in<00:00:00.240> this<00:00:00.480> tutorial<00:00:00.780> I<00:00:01.260> will<00:00:01.290> explain<00:00:01.979> the<00:00:02.040> main

00:00:02.419 --> 00:00:02.429 
in this tutorial I will explain the main

00:00:02.429 --> 00:00:04.880 
in this tutorial I will explain the main
loop<00:00:02.669> and<00:00:03.210> well<00:00:03.600> that<00:00:04.140> is<00:00:04.259> actually<00:00:04.620> a<00:00:04.650> bad

00:00:04.880 --> 00:00:04.890 
loop and well that is actually a bad

00:00:04.890 --> 00:00:07.730 
loop and well that is actually a bad
accent<00:00:05.370> well<00:00:05.580> anyway<00:00:06.120> being<00:00:06.870> dutch<00:00:07.080> i<00:00:07.379> already

00:00:07.730 --> 00:00:07.740 
accent well anyway being dutch i already

00:00:07.740 --> 00:00:11.390 
accent well anyway being dutch i already
have<00:00:07.919> an<00:00:08.099> accent<00:00:08.460> so<00:00:08.670> whatever<00:00:09.150> right<00:00:09.929> so<00:00:10.889> this

00:00:11.390 --> 00:00:11.400 
have an accent so whatever right so this

00:00:11.400 --> 00:00:15.530 
have an accent so whatever right so this
tutorial<00:00:12.710> it<00:00:13.710> was<00:00:14.040> actually<00:00:14.400> kind<00:00:14.700> of<00:00:14.880> asked

00:00:15.530 --> 00:00:15.540 
tutorial it was actually kind of asked

00:00:15.540 --> 00:00:19.090 
tutorial it was actually kind of asked
me<00:00:15.809> to<00:00:16.049> do<00:00:16.230> lately<00:00:17.220> I've<00:00:17.460> been<00:00:17.730> receiving<00:00:18.150> many

00:00:19.090 --> 00:00:19.100 
me to do lately I've been receiving many

00:00:19.100 --> 00:00:22.370 
me to do lately I've been receiving many
pms<00:00:20.100> about<00:00:20.640> people<00:00:21.029> saying<00:00:21.300> that<00:00:21.900> they<00:00:22.080> don't

00:00:22.370 --> 00:00:22.380 
pms about people saying that they don't

00:00:22.380 --> 00:00:25.580 
pms about people saying that they don't
quite<00:00:22.710> get<00:00:23.130> the<00:00:23.310> tasking<00:00:23.880> thing<00:00:24.119> or<00:00:24.539> they<00:00:25.320> say

00:00:25.580 --> 00:00:25.590 
quite get the tasking thing or they say

00:00:25.590 --> 00:00:27.950 
quite get the tasking thing or they say
that<00:00:25.830> I<00:00:26.099> should<00:00:26.490> actually<00:00:26.760> use<00:00:27.210> main<00:00:27.510> looping

00:00:27.950 --> 00:00:27.960 
that I should actually use main looping

00:00:27.960 --> 00:00:30.740 
that I should actually use main looping
so<00:00:28.320> maybe<00:00:29.160> I<00:00:29.279> felt<00:00:29.640> like<00:00:29.820> well<00:00:30.090> let's<00:00:30.359> return

00:00:30.740 --> 00:00:30.750 
so maybe I felt like well let's return

00:00:30.750 --> 00:00:34.130 
so maybe I felt like well let's return
once<00:00:31.170> more<00:00:31.320> to<00:00:31.500> the<00:00:31.769> basics<00:00:32.579> of<00:00:32.820> danmaku<00:00:33.570> and

00:00:34.130 --> 00:00:34.140 
once more to the basics of danmaku and

00:00:34.140 --> 00:00:36.350 
once more to the basics of danmaku and
explain<00:00:34.920> the<00:00:35.070> main<00:00:35.250> loop<00:00:35.430> style<00:00:35.700> scripting

00:00:36.350 --> 00:00:36.360 
explain the main loop style scripting

00:00:36.360 --> 00:00:38.630 
explain the main loop style scripting
because<00:00:37.110> it<00:00:37.260> is<00:00:37.380> also<00:00:37.680> rather<00:00:37.829> important<00:00:38.489> for

00:00:38.630 --> 00:00:38.640 
because it is also rather important for

00:00:38.640 --> 00:00:41.180 
because it is also rather important for
people<00:00:38.820> who<00:00:39.210> want<00:00:39.360> to<00:00:39.570> do<00:00:39.690> that<00:00:39.899> so<00:00:40.500> here<00:00:41.070> it

00:00:41.180 --> 00:00:41.190 
people who want to do that so here it

00:00:41.190 --> 00:00:44.630 
people who want to do that so here it
goes<00:00:41.420> main<00:00:42.420> loop<00:00:42.570> vs<00:00:42.930> tasking<00:00:43.469> at<00:00:43.920> the<00:00:44.190> end<00:00:44.340> it

00:00:44.630 --> 00:00:44.640 
goes main loop vs tasking at the end it

00:00:44.640 --> 00:00:47.180 
goes main loop vs tasking at the end it
is<00:00:44.789> whatever<00:00:44.969> makes<00:00:45.329> you<00:00:45.480> happy<00:00:45.809> there<00:00:46.190> i'm

00:00:47.180 --> 00:00:47.190 
is whatever makes you happy there i'm

00:00:47.190 --> 00:00:48.650 
is whatever makes you happy there i'm
just<00:00:47.430> going<00:00:47.670> to<00:00:47.760> handle<00:00:48.210> in<00:00:48.329> this<00:00:48.450> tutorial

00:00:48.650 --> 00:00:48.660 
just going to handle in this tutorial

00:00:48.660 --> 00:00:51.459 
just going to handle in this tutorial
the<00:00:49.320> exclusive<00:00:49.890> main<00:00:50.160> loop<00:00:50.309> style<00:00:50.579> scripting

00:00:51.459 --> 00:00:51.469 
the exclusive main loop style scripting

00:00:51.469 --> 00:00:53.389 
the exclusive main loop style scripting
eventually<00:00:52.469> if<00:00:52.590> you're<00:00:52.739> smart<00:00:53.100> enough<00:00:53.219> you

00:00:53.389 --> 00:00:53.399 
eventually if you're smart enough you

00:00:53.399 --> 00:00:56.060 
eventually if you're smart enough you
can<00:00:53.730> combine<00:00:53.969> main<00:00:54.539> loop<00:00:54.719> and<00:00:54.989> tasking<00:00:55.890> or

00:00:56.060 --> 00:00:56.070 
can combine main loop and tasking or

00:00:56.070 --> 00:00:58.430 
can combine main loop and tasking or
micro<00:00:56.430> threading<00:00:56.789> at<00:00:56.910> the<00:00:57.059> same<00:00:57.239> time<00:00:57.480> but<00:00:57.899> it

00:00:58.430 --> 00:00:58.440 
micro threading at the same time but it

00:00:58.440 --> 00:01:00.729 
micro threading at the same time but it
will<00:00:58.680> be<00:00:58.829> just<00:00:59.010> handling<00:00:59.430> the<00:00:59.670> main<00:01:00.059> loop<00:01:00.210> here

00:01:00.729 --> 00:01:00.739 
will be just handling the main loop here

00:01:00.739 --> 00:01:03.889 
will be just handling the main loop here
if<00:01:01.739> you're<00:01:01.980> going<00:01:02.160> main<00:01:02.430> loop<00:01:02.609> style<00:01:02.940> first<00:01:03.750> of

00:01:03.889 --> 00:01:03.899 
if you're going main loop style first of

00:01:03.899 --> 00:01:06.260 
if you're going main loop style first of
all<00:01:04.019> delete<00:01:04.619> the<00:01:04.830> yield<00:01:05.070> just<00:01:05.309> destroy<00:01:06.090> it

00:01:06.260 --> 00:01:06.270 
all delete the yield just destroy it

00:01:06.270 --> 00:01:08.750 
all delete the yield just destroy it
erase<00:01:06.600> it<00:01:06.780> from<00:01:06.810> your<00:01:07.049> mind<00:01:07.439> remove<00:01:08.070> it<00:01:08.310> don't

00:01:08.750 --> 00:01:08.760 
erase it from your mind remove it don't

00:01:08.760 --> 00:01:11.960 
erase it from your mind remove it don't
use<00:01:09.390> it<00:01:09.689> I've<00:01:10.290> seen<00:01:10.619> many<00:01:10.830> people<00:01:11.250> trying<00:01:11.880> to

00:01:11.960 --> 00:01:11.970 
use it I've seen many people trying to

00:01:11.970 --> 00:01:14.270 
use it I've seen many people trying to
scrape<00:01:12.330> the<00:01:12.390> main<00:01:12.750> loop<00:01:12.930> and<00:01:13.229> adding<00:01:13.920> a<00:01:14.010> yield

00:01:14.270 --> 00:01:14.280 
scrape the main loop and adding a yield

00:01:14.280 --> 00:01:16.249 
scrape the main loop and adding a yield
and<00:01:14.490> then<00:01:14.580> complaining<00:01:15.060> about<00:01:15.270> something<00:01:15.720> but

00:01:16.249 --> 00:01:16.259 
and then complaining about something but

00:01:16.259 --> 00:01:19.010 
and then complaining about something but
it<00:01:16.500> is<00:01:16.680> just<00:01:16.920> being<00:01:17.100> ignorant<00:01:17.520> Joe<00:01:18.000> no<00:01:18.689> yield

00:01:19.010 --> 00:01:19.020 
it is just being ignorant Joe no yield

00:01:19.020 --> 00:01:21.200 
it is just being ignorant Joe no yield
at<00:01:19.290> all<00:01:19.560> in<00:01:19.770> the<00:01:19.890> main<00:01:20.100> loop<00:01:20.310> because<00:01:20.820> we<00:01:21.150> are

00:01:21.200 --> 00:01:21.210 
at all in the main loop because we are

00:01:21.210 --> 00:01:24.260 
at all in the main loop because we are
not<00:01:21.420> going<00:01:21.659> to<00:01:21.840> task<00:01:22.110> at<00:01:22.920> the<00:01:23.310> top<00:01:23.520> we're<00:01:24.119> going

00:01:24.260 --> 00:01:24.270 
not going to task at the top we're going

00:01:24.270 --> 00:01:27.380 
not going to task at the top we're going
to<00:01:24.420> create<00:01:24.689> a<00:01:24.900> counter<00:01:25.439> a<00:01:25.970> variable<00:01:26.970> which

00:01:27.380 --> 00:01:27.390 
to create a counter a variable which

00:01:27.390 --> 00:01:29.450 
to create a counter a variable which
starts<00:01:27.780> from<00:01:27.810> zero<00:01:28.290> and<00:01:28.560> we're<00:01:29.040> going<00:01:29.310> to

00:01:29.450 --> 00:01:29.460 
starts from zero and we're going to

00:01:29.460 --> 00:01:31.969 
starts from zero and we're going to
actually<00:01:29.640> handle<00:01:30.600> the<00:01:30.930> entire<00:01:31.259> script<00:01:31.710> based

00:01:31.969 --> 00:01:31.979 
actually handle the entire script based

00:01:31.979 --> 00:01:34.249 
actually handle the entire script based
on<00:01:32.250> this<00:01:32.400> counter<00:01:32.909> it<00:01:33.210> is<00:01:33.630> going<00:01:33.810> to<00:01:33.930> be<00:01:33.960> our

00:01:34.249 --> 00:01:34.259 
on this counter it is going to be our

00:01:34.259 --> 00:01:37.609 
on this counter it is going to be our
delaying<00:01:34.979> delaying<00:01:35.700> variable<00:01:36.509> in<00:01:36.689> tasking

00:01:37.609 --> 00:01:37.619 
delaying delaying variable in tasking

00:01:37.619 --> 00:01:39.560 
delaying delaying variable in tasking
you<00:01:37.650> would<00:01:37.890> use<00:01:38.100> the<00:01:38.340> weight<00:01:38.490> function<00:01:38.759> but

00:01:39.560 --> 00:01:39.570 
you would use the weight function but

00:01:39.570 --> 00:01:42.280 
you would use the weight function but
here<00:01:39.869> you<00:01:39.990> have<00:01:40.110> to<00:01:40.259> use<00:01:40.439> a<00:01:40.680> different<00:01:41.340> method

00:01:42.280 --> 00:01:42.290 
here you have to use a different method

00:01:42.290 --> 00:01:44.990 
here you have to use a different method
multiple<00:01:43.290> counters<00:01:43.740> can<00:01:44.040> be<00:01:44.189> used<00:01:44.430> but<00:01:44.670> we're

00:01:44.990 --> 00:01:45.000 
multiple counters can be used but we're

00:01:45.000 --> 00:01:46.639 
multiple counters can be used but we're
going<00:01:45.149> to<00:01:45.299> keep<00:01:45.479> it<00:01:45.570> simple<00:01:45.840> now<00:01:46.170> so<00:01:46.409> I'm<00:01:46.500> just

00:01:46.639 --> 00:01:46.649 
going to keep it simple now so I'm just

00:01:46.649 --> 00:01:49.550 
going to keep it simple now so I'm just
going<00:01:46.799> to<00:01:46.920> use<00:01:47.070> one<00:01:47.100> counter<00:01:48.290> back<00:01:49.290> in<00:01:49.470> the

00:01:49.550 --> 00:01:49.560 
going to use one counter back in the

00:01:49.560 --> 00:01:53.450 
going to use one counter back in the
main<00:01:49.740> loop<00:01:50.270> let's<00:01:51.270> add<00:01:51.570> count<00:01:52.110> +<00:01:52.649> +<00:01:53.040> which

00:01:53.450 --> 00:01:53.460 
main loop let's add count + + which

00:01:53.460 --> 00:01:56.270 
main loop let's add count + + which
means<00:01:53.759> counter<00:01:54.630> gets<00:01:54.840> increased<00:01:55.320> every<00:01:55.530> frame

00:01:56.270 --> 00:01:56.280 
means counter gets increased every frame

00:01:56.280 --> 00:01:58.219 
means counter gets increased every frame
or<00:01:56.490> every<00:01:57.180> time<00:01:57.390> the<00:01:57.570> main<00:01:57.750> loop<00:01:57.899> is<00:01:58.049> executed

00:01:58.219 --> 00:01:58.229 
or every time the main loop is executed

00:01:58.229 --> 00:02:00.139 
or every time the main loop is executed
as<00:01:58.860> you<00:01:59.009> know<00:01:59.159> the<00:01:59.310> main<00:01:59.490> loop<00:01:59.670> is<00:01:59.850> a<00:01:59.880> loop

00:02:00.139 --> 00:02:00.149 
as you know the main loop is a loop

00:02:00.149 --> 00:02:02.990 
as you know the main loop is a loop
itself<00:02:00.540> it<00:02:01.049> executes<00:02:01.619> constantly<00:02:02.159> meaning<00:02:02.880> it

00:02:02.990 --> 00:02:03.000 
itself it executes constantly meaning it

00:02:03.000 --> 00:02:05.810 
itself it executes constantly meaning it
keeps<00:02:03.509> looping<00:02:04.250> now<00:02:05.250> we're<00:02:05.430> going<00:02:05.640> to<00:02:05.759> add

00:02:05.810 --> 00:02:05.820 
keeps looping now we're going to add

00:02:05.820 --> 00:02:08.540 
keeps looping now we're going to add
something<00:02:06.329> that<00:02:06.630> resets<00:02:07.259> our<00:02:07.530> counter<00:02:08.069> after

00:02:08.540 --> 00:02:08.550 
something that resets our counter after

00:02:08.550 --> 00:02:12.350 
something that resets our counter after
a<00:02:08.580> certain<00:02:08.910> amount<00:02:09.270> of<00:02:10.229> values<00:02:11.099> in<00:02:11.430> this<00:02:12.090> case

00:02:12.350 --> 00:02:12.360 
a certain amount of values in this case

00:02:12.360 --> 00:02:13.180 
a certain amount of values in this case
six

00:02:13.180 --> 00:02:13.190 
six

00:02:13.190 --> 00:02:16.570 
six
count<00:02:14.060> is<00:02:14.300> 0<00:02:14.900> what<00:02:15.410> this<00:02:15.560> does<00:02:15.770> it<00:02:16.070> basically

00:02:16.570 --> 00:02:16.580 
count is 0 what this does it basically

00:02:16.580 --> 00:02:20.710 
count is 0 what this does it basically
is<00:02:16.940> after<00:02:17.660> 60<00:02:18.260> times<00:02:18.700> reset<00:02:19.700> the<00:02:19.730> count<00:02:20.150> back

00:02:20.710 --> 00:02:20.720 
is after 60 times reset the count back

00:02:20.720 --> 00:02:24.070 
is after 60 times reset the count back
to<00:02:20.960> 0<00:02:21.260> so<00:02:22.220> we<00:02:22.250> got<00:02:22.580> a<00:02:22.610> delay<00:02:23.090> of<00:02:23.120> one<00:02:23.540> second

00:02:24.070 --> 00:02:24.080 
to 0 so we got a delay of one second

00:02:24.080 --> 00:02:28.270 
to 0 so we got a delay of one second
here<00:02:24.290> now<00:02:24.700> in<00:02:25.700> this<00:02:26.450> one<00:02:26.750> second<00:02:27.230> period<00:02:27.650> or<00:02:27.800> 60

00:02:28.270 --> 00:02:28.280 
here now in this one second period or 60

00:02:28.280 --> 00:02:32.320 
here now in this one second period or 60
frames<00:02:28.960> we<00:02:29.960> can<00:02:30.140> make<00:02:30.350> stuff<00:02:31.070> shoe<00:02:31.550> to<00:02:31.790> move<00:02:32.000> or

00:02:32.320 --> 00:02:32.330 
frames we can make stuff shoe to move or

00:02:32.330 --> 00:02:34.990 
frames we can make stuff shoe to move or
whatever<00:02:32.990> you<00:02:33.170> want<00:02:33.550> it's<00:02:34.550> a<00:02:34.640> bit<00:02:34.790> awkward

00:02:34.990 --> 00:02:35.000 
whatever you want it's a bit awkward

00:02:35.000 --> 00:02:37.180 
whatever you want it's a bit awkward
method<00:02:35.630> especially<00:02:36.050> if<00:02:36.440> you<00:02:36.560> first<00:02:36.890> learn

00:02:37.180 --> 00:02:37.190 
method especially if you first learn

00:02:37.190 --> 00:02:39.130 
method especially if you first learn
tasking<00:02:37.820> and<00:02:37.970> suddenly<00:02:38.360> jumping<00:02:38.780> over<00:02:38.990> to

00:02:39.130 --> 00:02:39.140 
tasking and suddenly jumping over to

00:02:39.140 --> 00:02:42.100 
tasking and suddenly jumping over to
this<00:02:39.520> but<00:02:40.520> it<00:02:40.670> is<00:02:40.700> actually<00:02:40.970> quite<00:02:41.600> easy<00:02:41.720> to

00:02:42.100 --> 00:02:42.110 
this but it is actually quite easy to

00:02:42.110 --> 00:02:45.610 
this but it is actually quite easy to
manage<00:02:42.890> as<00:02:43.160> well<00:02:43.370> if<00:02:43.580> you<00:02:44.450> type<00:02:44.690> here<00:02:45.020> if<00:02:45.200> count

00:02:45.610 --> 00:02:45.620 
manage as well if you type here if count

00:02:45.620 --> 00:02:49.990 
manage as well if you type here if count
is<00:02:45.890> 30<00:02:46.570> that<00:02:47.570> means<00:02:47.780> after<00:02:47.960> 30<00:02:48.470> frames<00:02:49.000> this

00:02:49.990 --> 00:02:50.000 
is 30 that means after 30 frames this

00:02:50.000 --> 00:02:52.780 
is 30 that means after 30 frames this
section<00:02:50.450> will<00:02:50.480> be<00:02:50.630> executed<00:02:51.410> so<00:02:52.250> you<00:02:52.310> can<00:02:52.580> like

00:02:52.780 --> 00:02:52.790 
section will be executed so you can like

00:02:52.790 --> 00:02:55.630 
section will be executed so you can like
fire<00:02:53.120> a<00:02:53.150> bullet<00:02:53.480> inside<00:02:54.020> here<00:02:54.380> let's<00:02:55.280> just<00:02:55.400> do

00:02:55.630 --> 00:02:55.640 
fire a bullet inside here let's just do

00:02:55.640 --> 00:02:59.290 
fire a bullet inside here let's just do
that<00:02:55.670> now<00:02:56.170> let's<00:02:57.170> add<00:02:57.320> a<00:02:57.350> comment<00:02:57.770> if<00:02:58.300> the

00:02:59.290 --> 00:02:59.300 
that now let's add a comment if the

00:02:59.300 --> 00:03:03.120 
that now let's add a comment if the
counter<00:02:59.750> reaches<00:03:00.650> 30<00:03:01.100> frames<00:03:01.610> or<00:03:01.880> account<00:03:02.690> is

00:03:03.120 --> 00:03:03.130 
counter reaches 30 frames or account is

00:03:03.130 --> 00:03:07.090 
counter reaches 30 frames or account is
35<00:03:04.130> a<00:03:04.160> bullet<00:03:04.580> and<00:03:05.140> you<00:03:06.140> just<00:03:06.380> type<00:03:06.650> in<00:03:06.920> the

00:03:07.090 --> 00:03:07.100 
35 a bullet and you just type in the

00:03:07.100 --> 00:03:09.880 
35 a bullet and you just type in the
regular<00:03:07.520> create<00:03:07.910> short<00:03:08.240> 01<00:03:08.780> or<00:03:08.990> create<00:03:09.680> shots

00:03:09.880 --> 00:03:09.890 
regular create short 01 or create shots

00:03:09.890 --> 00:03:12.520 
regular create short 01 or create shots
a<00:03:10.100> or<00:03:10.550> whatever<00:03:10.940> you<00:03:11.060> want<00:03:11.270> because<00:03:12.140> it<00:03:12.410> will

00:03:12.520 --> 00:03:12.530 
a or whatever you want because it will

00:03:12.530 --> 00:03:15.880 
a or whatever you want because it will
be<00:03:12.680> executed<00:03:13.310> here<00:03:14.230> now<00:03:15.230> you<00:03:15.650> don't<00:03:15.830> need

00:03:15.880 --> 00:03:15.890 
be executed here now you don't need

00:03:15.890 --> 00:03:18.910 
be executed here now you don't need
anything<00:03:16.190> else<00:03:16.520> in<00:03:16.850> this<00:03:17.090> section<00:03:17.810> no<00:03:18.410> yields

00:03:18.910 --> 00:03:18.920 
anything else in this section no yields

00:03:18.920 --> 00:03:20.860 
anything else in this section no yields
no<00:03:19.130> loops<00:03:19.400> nothing<00:03:19.880> just<00:03:20.180> leave<00:03:20.510> it<00:03:20.660> like<00:03:20.840> this

00:03:20.860 --> 00:03:20.870 
no loops nothing just leave it like this

00:03:20.870 --> 00:03:23.500 
no loops nothing just leave it like this
because<00:03:21.739> every<00:03:22.310> time<00:03:22.340> it<00:03:22.820> will<00:03:23.030> get<00:03:23.180> executed

00:03:23.500 --> 00:03:23.510 
because every time it will get executed

00:03:23.510 --> 00:03:26.020 
because every time it will get executed
anyway<00:03:23.930> the<00:03:24.290> counter<00:03:24.650> which<00:03:24.770> is<00:03:24.890> 60<00:03:25.430> it<00:03:25.790> will

00:03:26.020 --> 00:03:26.030 
anyway the counter which is 60 it will

00:03:26.030 --> 00:03:28.510 
anyway the counter which is 60 it will
be<00:03:26.150> reset<00:03:26.600> and<00:03:26.870> when<00:03:27.170> it<00:03:27.260> reaches<00:03:27.530> 30<00:03:27.800> again<00:03:28.280> it

00:03:28.510 --> 00:03:28.520 
be reset and when it reaches 30 again it

00:03:28.520 --> 00:03:31.720 
be reset and when it reaches 30 again it
will<00:03:28.820> be<00:03:28.880> fired<00:03:29.650> so<00:03:30.650> let<00:03:30.890> me<00:03:31.010> repeat<00:03:31.190> that<00:03:31.400> once

00:03:31.720 --> 00:03:31.730 
will be fired so let me repeat that once

00:03:31.730 --> 00:03:35.470 
will be fired so let me repeat that once
more<00:03:32.090> the<00:03:33.080> count<00:03:33.350> starts<00:03:33.830> from<00:03:33.950> 0<00:03:34.370> it<00:03:35.090> starts

00:03:35.470 --> 00:03:35.480 
more the count starts from 0 it starts

00:03:35.480 --> 00:03:37.930 
more the count starts from 0 it starts
counting<00:03:35.720> up<00:03:35.959> each<00:03:36.170> frame<00:03:36.650> and<00:03:36.890> when<00:03:37.760> the

00:03:37.930 --> 00:03:37.940 
counting up each frame and when the

00:03:37.940 --> 00:03:39.820 
counting up each frame and when the
count<00:03:38.239> reaches<00:03:38.690> 30<00:03:38.930> this<00:03:39.320> section<00:03:39.739> is

00:03:39.820 --> 00:03:39.830 
count reaches 30 this section is

00:03:39.830 --> 00:03:42.430 
count reaches 30 this section is
executed<00:03:40.520> and<00:03:40.760> then<00:03:41.390> eventually<00:03:41.750> it<00:03:42.170> will

00:03:42.430 --> 00:03:42.440 
executed and then eventually it will

00:03:42.440 --> 00:03:44.890 
executed and then eventually it will
continue<00:03:42.800> looping<00:03:43.130> because<00:03:44.090> when<00:03:44.480> it<00:03:44.570> reaches

00:03:44.890 --> 00:03:44.900 
continue looping because when it reaches

00:03:44.900 --> 00:03:48.340 
continue looping because when it reaches
60<00:03:45.290> it<00:03:45.350> will<00:03:45.440> be<00:03:45.590> reset<00:03:46.010> back<00:03:46.370> to<00:03:46.670> 0<00:03:47.209> that's<00:03:48.140> the

00:03:48.340 --> 00:03:48.350 
60 it will be reset back to 0 that's the

00:03:48.350 --> 00:03:50.650 
60 it will be reset back to 0 that's the
whole<00:03:48.380> mechanism<00:03:48.800> of<00:03:49.489> actually<00:03:50.180> main<00:03:50.510> loop

00:03:50.650 --> 00:03:50.660 
whole mechanism of actually main loop

00:03:50.660 --> 00:03:53.199 
whole mechanism of actually main loop
style<00:03:50.930> scripting<00:03:51.590> let's<00:03:52.459> just<00:03:52.700> test<00:03:52.910> it<00:03:53.060> in

00:03:53.199 --> 00:03:53.209 
style scripting let's just test it in

00:03:53.209 --> 00:03:59.560 
style scripting let's just test it in
game<00:03:56.470> there's<00:03:57.470> children<00:03:57.860> off<00:03:58.070> and<00:03:58.330> as<00:03:59.330> you<00:03:59.420> can

00:03:59.560 --> 00:03:59.570 
game there's children off and as you can

00:03:59.570 --> 00:04:03.220 
game there's children off and as you can
see<00:03:59.600> that's<00:04:00.050> exactly<00:04:00.459> firing<00:04:01.459> a<00:04:01.610> bullet<00:04:02.230> every

00:04:03.220 --> 00:04:03.230 
see that's exactly firing a bullet every

00:04:03.230 --> 00:04:09.160 
see that's exactly firing a bullet every
30<00:04:03.620> frame<00:04:05.650> ok<00:04:06.650> now<00:04:07.220> let's<00:04:07.370> expand<00:04:08.060> our<00:04:08.239> code<00:04:08.540> by

00:04:09.160 --> 00:04:09.170 
30 frame ok now let's expand our code by

00:04:09.170 --> 00:04:10.810 
30 frame ok now let's expand our code by
adding<00:04:09.560> a<00:04:09.650> movement<00:04:10.100> function<00:04:10.459> as<00:04:10.580> well

00:04:10.810 --> 00:04:10.820 
adding a movement function as well

00:04:10.820 --> 00:04:13.600 
adding a movement function as well
within<00:04:11.450> the<00:04:11.660> same<00:04:11.900> loop<00:04:12.170> and<00:04:12.470> we're<00:04:13.280> going<00:04:13.489> to

00:04:13.600 --> 00:04:13.610 
within the same loop and we're going to

00:04:13.610 --> 00:04:17.530 
within the same loop and we're going to
add<00:04:13.760> the<00:04:14.570> movement<00:04:15.130> exactly<00:04:16.130> after<00:04:16.340> 60<00:04:17.239> frames

00:04:17.530 --> 00:04:17.540 
add the movement exactly after 60 frames

00:04:17.540 --> 00:04:19.840 
add the movement exactly after 60 frames
but<00:04:17.989> we<00:04:18.140> also<00:04:18.290> want<00:04:18.590> to<00:04:18.680> increase<00:04:19.040> the<00:04:19.100> count

00:04:19.840 --> 00:04:19.850 
but we also want to increase the count

00:04:19.850 --> 00:04:22.750 
but we also want to increase the count
delay<00:04:20.269> so<00:04:20.989> we're<00:04:21.260> going<00:04:21.470> to<00:04:21.650> first<00:04:21.890> change

00:04:22.750 --> 00:04:22.760 
delay so we're going to first change

00:04:22.760 --> 00:04:26.560 
delay so we're going to first change
this<00:04:23.030> number<00:04:23.240> into<00:04:23.600> 90<00:04:24.470> which<00:04:25.370> is<00:04:25.610> what<00:04:26.150> 90

00:04:26.560 --> 00:04:26.570 
this number into 90 which is what 90

00:04:26.570 --> 00:04:28.930 
this number into 90 which is what 90
frames<00:04:26.780> one<00:04:27.020> and<00:04:27.140> a<00:04:27.170> half<00:04:27.200> second<00:04:27.830> that's<00:04:28.700> just

00:04:28.930 --> 00:04:28.940 
frames one and a half second that's just

00:04:28.940 --> 00:04:32.200 
frames one and a half second that's just
a<00:04:29.030> comment<00:04:29.390> as<00:04:29.510> well<00:04:29.540> and<00:04:30.460> now<00:04:31.460> the<00:04:31.520> count<00:04:32.000> gets

00:04:32.200 --> 00:04:32.210 
a comment as well and now the count gets

00:04:32.210 --> 00:04:36.520 
a comment as well and now the count gets
reset<00:04:32.810> after<00:04:33.050> 90<00:04:33.920> frames<00:04:34.190> and<00:04:35.050> here<00:04:36.050> we're

00:04:36.520 --> 00:04:36.530 
reset after 90 frames and here we're

00:04:36.530 --> 00:04:39.400 
reset after 90 frames and here we're
going<00:04:36.710> to<00:04:36.860> type<00:04:37.190> if<00:04:37.460> the<00:04:37.670> counter<00:04:38.150> reaches<00:04:38.630> 60

00:04:39.400 --> 00:04:39.410 
going to type if the counter reaches 60

00:04:39.410 --> 00:04:44.610 
going to type if the counter reaches 60
so<00:04:39.770> after<00:04:39.980> 1<00:04:40.490> second<00:04:41.350> move<00:04:42.350> random<00:04:42.950> position

00:04:44.610 --> 00:04:44.620 
so after 1 second move random position

00:04:44.620 --> 00:04:47.470 
so after 1 second move random position
now<00:04:45.620> if<00:04:45.800> you<00:04:45.920> already<00:04:46.040> use<00:04:46.310> the<00:04:46.760> Move<00:04:46.970> random

00:04:47.470 --> 00:04:47.480 
now if you already use the Move random

00:04:47.480 --> 00:04:50.410 
now if you already use the Move random
position<00:04:48.170> 0<00:04:48.410> 1<00:04:48.620> that's<00:04:48.980> also<00:04:49.340> fine<00:04:49.550> I'm<00:04:50.120> going

00:04:50.410 --> 00:04:50.420 
position 0 1 that's also fine I'm going

00:04:50.420 --> 00:04:53.440 
position 0 1 that's also fine I'm going
to<00:04:50.540> use<00:04:50.660> a<00:04:51.340> second<00:04:52.340> approach<00:04:52.610> which<00:04:53.000> is<00:04:53.030> just

00:04:53.440 --> 00:04:53.450 
to use a second approach which is just

00:04:53.450 --> 00:04:58.840 
to use a second approach which is just
using<00:04:53.720> set<00:04:54.200> move<00:04:54.440> position<00:04:54.980> 0<00:04:55.280> 1<00:04:55.550> and<00:04:57.850> using

00:04:58.840 --> 00:04:58.850 
using set move position 0 1 and using

00:04:58.850 --> 00:05:01.900 
using set move position 0 1 and using
for<00:04:59.090> the<00:04:59.180> x<00:04:59.390> and<00:04:59.840> y<00:05:00.230> variables<00:05:00.950> i'm<00:05:01.520> going<00:05:01.820> to

00:05:01.900 --> 00:05:01.910 
for the x and y variables i'm going to

00:05:01.910 --> 00:05:08.110 
for the x and y variables i'm going to
use<00:05:02.470> random<00:05:03.470> int<00:05:03.710> a<00:05:04.010> random<00:05:04.910> integer<00:05:07.120> which

00:05:08.110 --> 00:05:08.120 
use random int a random integer which

00:05:08.120 --> 00:05:10.420 
use random int a random integer which
basically<00:05:08.630> automatically<00:05:09.470> selects<00:05:10.100> a<00:05:10.250> random

00:05:10.420 --> 00:05:10.430 
basically automatically selects a random

00:05:10.430 --> 00:05:12.760 
basically automatically selects a random
number<00:05:11.000> between<00:05:11.120> two<00:05:11.600> values<00:05:11.930> you<00:05:12.320> give<00:05:12.560> and

00:05:12.760 --> 00:05:12.770 
number between two values you give and

00:05:12.770 --> 00:05:16.840 
number between two values you give and
it<00:05:12.890> rounds<00:05:13.340> up<00:05:13.430> to<00:05:13.610> the<00:05:13.730> nearest<00:05:15.160> for<00:05:16.160> the<00:05:16.250> x1

00:05:16.840 --> 00:05:16.850 
it rounds up to the nearest for the x1

00:05:16.850 --> 00:05:22.150 
it rounds up to the nearest for the x1
it's<00:05:17.150> between<00:05:18.490> 100<00:05:19.490> and<00:05:19.550> 300<00:05:19.820> and<00:05:20.390> for<00:05:21.260> the<00:05:21.380> y

00:05:22.150 --> 00:05:22.160 
it's between 100 and 300 and for the y

00:05:22.160 --> 00:05:27.790 
it's between 100 and 300 and for the y
axis<00:05:22.850> it's<00:05:23.120> between<00:05:23.960> 120<00:05:24.830> and<00:05:25.600> 160<00:05:26.600> at<00:05:26.870> the

00:05:27.790 --> 00:05:27.800 
axis it's between 120 and 160 at the

00:05:27.800 --> 00:05:29.890 
axis it's between 120 and 160 at the
speed<00:05:28.100> of<00:05:28.250> three<00:05:28.520> so<00:05:28.760> tuna<00:05:29.120> will<00:05:29.360> move<00:05:29.690> to<00:05:29.870> a

00:05:29.890 --> 00:05:29.900 
speed of three so tuna will move to a

00:05:29.900 --> 00:05:35.790 
speed of three so tuna will move to a
random<00:05:30.140> position<00:05:30.710> now<00:05:33.580> after<00:05:34.580> 30<00:05:34.910> counts<00:05:35.420> or

00:05:35.790 --> 00:05:35.800 
random position now after 30 counts or

00:05:35.800 --> 00:05:40.180 
random position now after 30 counts or
after<00:05:36.800> 30<00:05:37.070> times<00:05:37.400> it<00:05:37.700> will<00:05:37.970> create<00:05:38.540> 01<00:05:39.230> @<00:05:39.440> count

00:05:40.180 --> 00:05:40.190 
after 30 times it will create 01 @ count

00:05:40.190 --> 00:05:42.960 
after 30 times it will create 01 @ count
60<00:05:40.820> it<00:05:41.030> will<00:05:41.330> move<00:05:41.660> to<00:05:41.840> a<00:05:41.870> random<00:05:42.080> position<00:05:42.710> it

00:05:42.960 --> 00:05:42.970 
60 it will move to a random position it

00:05:42.970 --> 00:05:46.330 
60 it will move to a random position it
will<00:05:43.970> then<00:05:44.120> wait<00:05:44.390> till<00:05:44.720> the<00:05:44.870> count<00:05:45.340> reaches

00:05:46.330 --> 00:05:46.340 
will then wait till the count reaches

00:05:46.340 --> 00:05:51.820 
will then wait till the count reaches
eventually<00:05:47.090> 90<00:05:47.630> and<00:05:50.080> then<00:05:51.080> it<00:05:51.230> will<00:05:51.410> reset

00:05:51.820 --> 00:05:51.830 
eventually 90 and then it will reset

00:05:51.830 --> 00:05:55.330 
eventually 90 and then it will reset
again<00:05:52.010> returning<00:05:52.910> to<00:05:53.000> 0<00:05:53.420> and<00:05:54.070> doing<00:05:55.070> the<00:05:55.190> loop

00:05:55.330 --> 00:05:55.340 
again returning to 0 and doing the loop

00:05:55.340 --> 00:05:58.600 
again returning to 0 and doing the loop
again<00:05:56.110> so<00:05:57.110> the<00:05:57.260> delay<00:05:57.620> between<00:05:57.830> firing<00:05:58.430> and

00:05:58.600 --> 00:05:58.610 
again so the delay between firing and

00:05:58.610 --> 00:06:01.360 
again so the delay between firing and
bullets<00:05:58.940> and<00:05:59.150> movement<00:05:59.690> is<00:05:59.780> 30<00:06:00.080> frames<00:06:00.470> which

00:06:01.360 --> 00:06:01.370 
bullets and movement is 30 frames which

00:06:01.370 --> 00:06:03.750 
bullets and movement is 30 frames which
is<00:06:01.550> half<00:06:01.760> a<00:06:01.910> second<00:06:02.330> and<00:06:02.420> a<00:06:03.140> delay<00:06:03.500> between

00:06:03.750 --> 00:06:03.760 
is half a second and a delay between

00:06:03.760 --> 00:06:06.460 
is half a second and a delay between
moving<00:06:04.760> and<00:06:04.910> resetting<00:06:05.480> is<00:06:05.600> also<00:06:05.870> 30<00:06:06.140> frames

00:06:06.460 --> 00:06:06.470 
moving and resetting is also 30 frames

00:06:06.470 --> 00:06:08.980 
moving and resetting is also 30 frames
which<00:06:06.830> is<00:06:07.070> half<00:06:07.490> a<00:06:07.640> second<00:06:07.940> as<00:06:08.030> well<00:06:08.210> so<00:06:08.720> the

00:06:08.980 --> 00:06:08.990 
which is half a second as well so the

00:06:08.990 --> 00:06:12.670 
which is half a second as well so the
total<00:06:09.290> delay<00:06:09.770> is<00:06:10.010> 1<00:06:10.610> and<00:06:11.050> until<00:06:12.050> it<00:06:12.230> starts

00:06:12.670 --> 00:06:12.680 
total delay is 1 and until it starts

00:06:12.680 --> 00:06:14.920 
total delay is 1 and until it starts
again<00:06:12.890> it's<00:06:13.370> 30<00:06:13.940> which<00:06:14.240> is<00:06:14.330> another<00:06:14.510> half<00:06:14.810> a

00:06:14.920 --> 00:06:14.930 
again it's 30 which is another half a

00:06:14.930 --> 00:06:19.060 
again it's 30 which is another half a
second<00:06:15.290> so<00:06:15.440> a<00:06:15.470> total<00:06:15.710> of<00:06:16.000> 1.5<00:06:17.000> seconds<00:06:18.070> just

00:06:19.060 --> 00:06:19.070 
second so a total of 1.5 seconds just

00:06:19.070 --> 00:06:23.110 
second so a total of 1.5 seconds just
let's<00:06:19.340> show<00:06:19.520> the<00:06:19.580> in-game<00:06:20.290> and<00:06:22.000> there<00:06:23.000> you<00:06:23.090> can

00:06:23.110 --> 00:06:23.120 
let's show the in-game and there you can

00:06:23.120 --> 00:06:25.570 
let's show the in-game and there you can
see<00:06:23.270> fire<00:06:23.870> bullets<00:06:24.350> move<00:06:24.680> around<00:06:24.950> fire<00:06:25.550> a

00:06:25.570 --> 00:06:25.580 
see fire bullets move around fire a

00:06:25.580 --> 00:06:28.690 
see fire bullets move around fire a
bullet<00:06:25.880> move<00:06:26.690> around<00:06:27.040> now<00:06:28.040> the<00:06:28.100> only<00:06:28.310> thing<00:06:28.430> we

00:06:28.690 --> 00:06:28.700 
bullet move around now the only thing we

00:06:28.700 --> 00:06:30.370 
bullet move around now the only thing we
are<00:06:28.790> missing<00:06:28.820> here<00:06:29.510> is<00:06:29.630> our<00:06:30.080> collision

00:06:30.370 --> 00:06:30.380 
are missing here is our collision

00:06:30.380 --> 00:06:31.330 
are missing here is our collision
detection

00:06:31.330 --> 00:06:31.340 
detection

00:06:31.340 --> 00:06:35.290 
detection
see<00:06:31.940> there<00:06:32.780> is<00:06:32.870> no<00:06:33.020> collision<00:06:33.470> detection<00:06:34.300> so

00:06:35.290 --> 00:06:35.300 
see there is no collision detection so

00:06:35.300 --> 00:06:39.340 
see there is no collision detection so
let's<00:06:35.600> add<00:06:35.810> that<00:06:36.139> as<00:06:36.320> well<00:06:37.780> normally<00:06:38.780> you

00:06:39.340 --> 00:06:39.350 
let's add that as well normally you

00:06:39.350 --> 00:06:41.110 
let's add that as well normally you
would<00:06:39.500> add<00:06:39.650> it<00:06:39.830> somewhere<00:06:40.160> at<00:06:40.280> the<00:06:40.310> bottom<00:06:40.610> you

00:06:41.110 --> 00:06:41.120 
would add it somewhere at the bottom you

00:06:41.120 --> 00:06:44.200 
would add it somewhere at the bottom you
think<00:06:42.070> like<00:06:43.070> we're<00:06:43.250> going<00:06:43.430> to<00:06:43.550> do<00:06:43.729> it<00:06:43.880> at<00:06:44.030> the

00:06:44.200 --> 00:06:44.210 
think like we're going to do it at the

00:06:44.210 --> 00:06:49.960 
think like we're going to do it at the
top<00:06:44.479> just<00:06:45.020> in<00:06:45.229> case<00:06:48.340> it<00:06:49.340> doesn't<00:06:49.610> matter<00:06:49.910> it

00:06:49.960 --> 00:06:49.970 
top just in case it doesn't matter it

00:06:49.970 --> 00:06:51.850 
top just in case it doesn't matter it
will<00:06:50.090> get<00:06:50.300> executed<00:06:50.660> anyway<00:06:51.080> but<00:06:51.470> just<00:06:51.680> for

00:06:51.850 --> 00:06:51.860 
will get executed anyway but just for

00:06:51.860 --> 00:06:53.800 
will get executed anyway but just for
the<00:06:51.889> overview<00:06:52.430> it's<00:06:52.639> more<00:06:52.940> handy<00:06:53.360> to<00:06:53.510> have<00:06:53.540> it

00:06:53.800 --> 00:06:53.810 
the overview it's more handy to have it

00:06:53.810 --> 00:06:55.540 
the overview it's more handy to have it
at<00:06:53.900> the<00:06:53.990> top<00:06:54.229> at<00:06:54.770> least<00:06:54.979> is<00:06:55.160> just<00:06:55.400> my<00:06:55.520> personal

00:06:55.540 --> 00:06:55.550 
at the top at least is just my personal

00:06:55.550 --> 00:06:59.939 
at the top at least is just my personal
opinion<00:06:56.080> so<00:06:57.080> set<00:06:57.470> collision<00:06:57.949> a<00:06:58.070> get<00:06:58.910> X<00:06:59.150> get<00:06:59.479> why

00:06:59.939 --> 00:06:59.949 
opinion so set collision a get X get why

00:06:59.949 --> 00:07:08.020 
opinion so set collision a get X get why
the<00:07:00.949> radius<00:07:01.479> and<00:07:03.940> set<00:07:04.940> collision<00:07:05.419> be<00:07:06.760> get<00:07:07.760> X

00:07:08.020 --> 00:07:08.030 
the radius and set collision be get X

00:07:08.030 --> 00:07:12.600 
the radius and set collision be get X
get<00:07:08.330> Y<00:07:08.570> and<00:07:08.840> the<00:07:09.320> radius<00:07:09.650> number<00:07:09.979> as<00:07:10.130> well<00:07:10.160> a

00:07:12.600 --> 00:07:12.610 
get Y and the radius number as well a

00:07:12.610 --> 00:07:18.159 
get Y and the radius number as well a
quick<00:07:13.610> checkup<00:07:13.910> in<00:07:14.150> game<00:07:14.330> again<00:07:17.169> collision

00:07:18.159 --> 00:07:18.169 
quick checkup in game again collision

00:07:18.169 --> 00:07:22.000 
quick checkup in game again collision
okay<00:07:18.800> cheer<00:07:19.639> you're<00:07:19.760> not<00:07:19.880> okay<00:07:20.300> so<00:07:21.200> what<00:07:21.979> is

00:07:22.000 --> 00:07:22.010 
okay cheer you're not okay so what is

00:07:22.010 --> 00:07:25.029 
okay cheer you're not okay so what is
next<00:07:22.280> well<00:07:23.060> I'm<00:07:23.600> not<00:07:23.900> going<00:07:24.169> to<00:07:24.380> actually

00:07:25.029 --> 00:07:25.039 
next well I'm not going to actually

00:07:25.039 --> 00:07:27.340 
next well I'm not going to actually
design<00:07:25.400> more<00:07:25.669> tutorials<00:07:26.270> for<00:07:26.570> main<00:07:27.139> loop

00:07:27.340 --> 00:07:27.350 
design more tutorials for main loop

00:07:27.350 --> 00:07:29.950 
design more tutorials for main loop
first<00:07:27.650> style<00:07:28.190> scripting<00:07:28.850> now<00:07:29.270> from<00:07:29.510> here<00:07:29.539> I

00:07:29.950 --> 00:07:29.960 
first style scripting now from here I

00:07:29.960 --> 00:07:32.140 
first style scripting now from here I
hope<00:07:30.110> you<00:07:30.500> can<00:07:30.710> make<00:07:30.740> a<00:07:30.949> certain<00:07:31.460> choice<00:07:31.850> in

00:07:32.140 --> 00:07:32.150 
hope you can make a certain choice in

00:07:32.150 --> 00:07:34.719 
hope you can make a certain choice in
which<00:07:32.840> scripting<00:07:33.380> style<00:07:33.680> you<00:07:33.800> want<00:07:33.979> there<00:07:34.610> is

00:07:34.719 --> 00:07:34.729 
which scripting style you want there is

00:07:34.729 --> 00:07:36.940 
which scripting style you want there is
no<00:07:34.850> real<00:07:35.150> reason<00:07:35.450> to<00:07:35.720> stick<00:07:36.169> to<00:07:36.410> a<00:07:36.440> certain

00:07:36.940 --> 00:07:36.950 
no real reason to stick to a certain

00:07:36.950 --> 00:07:39.670 
no real reason to stick to a certain
style<00:07:37.310> it's<00:07:37.550> really<00:07:38.330> totally<00:07:38.810> subjective<00:07:39.080> I

00:07:39.670 --> 00:07:39.680 
style it's really totally subjective I

00:07:39.680 --> 00:07:42.550 
style it's really totally subjective I
personally<00:07:40.520> just<00:07:40.610> find<00:07:41.169> tasking<00:07:42.169> easier

00:07:42.550 --> 00:07:42.560 
personally just find tasking easier

00:07:42.560 --> 00:07:44.529 
personally just find tasking easier
because<00:07:42.770> it<00:07:43.039> gives<00:07:43.190> me<00:07:43.460> more<00:07:43.669> overview<00:07:44.360> and

00:07:44.529 --> 00:07:44.539 
because it gives me more overview and

00:07:44.539 --> 00:07:47.529 
because it gives me more overview and
basically<00:07:45.470> using<00:07:46.460> the<00:07:46.580> weight<00:07:46.760> function<00:07:47.030> just

00:07:47.529 --> 00:07:47.539 
basically using the weight function just

00:07:47.539 --> 00:07:50.230 
basically using the weight function just
makes<00:07:47.810> my<00:07:48.080> life<00:07:48.289> easier<00:07:48.889> at<00:07:49.430> least<00:07:49.669> but<00:07:50.000> I've

00:07:50.230 --> 00:07:50.240 
makes my life easier at least but I've

00:07:50.240 --> 00:07:52.089 
makes my life easier at least but I've
seen<00:07:50.510> also<00:07:50.660> plenty<00:07:51.080> of<00:07:51.320> other<00:07:51.500> very<00:07:51.889> good

00:07:52.089 --> 00:07:52.099 
seen also plenty of other very good

00:07:52.099 --> 00:07:55.180 
seen also plenty of other very good
scripters<00:07:52.639> who<00:07:53.330> are<00:07:53.690> using<00:07:53.990> the<00:07:54.710> main<00:07:55.039> loop

00:07:55.180 --> 00:07:55.190 
scripters who are using the main loop

00:07:55.190 --> 00:07:58.480 
scripters who are using the main loop
style<00:07:55.490> at<00:07:56.410> recent<00:07:57.410> one<00:07:57.740> i<00:07:57.770> can<00:07:58.070> mention<00:07:58.220> is

00:07:58.480 --> 00:07:58.490 
style at recent one i can mention is

00:07:58.490 --> 00:08:01.150 
style at recent one i can mention is
actually<00:07:58.820> premiers<00:07:59.300> koishi<00:08:00.110> hell<00:08:00.289> he's<00:08:00.919> one

00:08:01.150 --> 00:08:01.160 
actually premiers koishi hell he's one

00:08:01.160 --> 00:08:03.040 
actually premiers koishi hell he's one
of<00:08:01.280> the<00:08:01.430> few<00:08:01.820> scriptures<00:08:02.210> that<00:08:02.389> is<00:08:02.630> actually

00:08:03.040 --> 00:08:03.050 
of the few scriptures that is actually

00:08:03.050 --> 00:08:05.320 
of the few scriptures that is actually
using<00:08:03.289> just<00:08:03.889> the<00:08:04.039> regular<00:08:04.430> loop<00:08:04.729> instead<00:08:05.180> of

00:08:05.320 --> 00:08:05.330 
using just the regular loop instead of

00:08:05.330 --> 00:08:07.690 
using just the regular loop instead of
tasking<00:08:05.840> and<00:08:05.960> it's<00:08:06.440> just<00:08:06.710> your<00:08:06.860> choice<00:08:07.130> have

00:08:07.690 --> 00:08:07.700 
tasking and it's just your choice have

00:08:07.700 --> 00:08:09.970 
tasking and it's just your choice have
fun

