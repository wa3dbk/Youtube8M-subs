WEBVTT
Kind: captions
Language: en

00:00:00.199 --> 00:00:03.020 

hello<00:00:01.199> this<00:00:01.949> presentation<00:00:02.550> is<00:00:02.909> about

00:00:03.020 --> 00:00:03.030 
hello this presentation is about

00:00:03.030 --> 00:00:06.380 
hello this presentation is about
operating<00:00:03.810> systems<00:00:04.759> specifically<00:00:05.759> the

00:00:06.380 --> 00:00:06.390 
operating systems specifically the

00:00:06.390 --> 00:00:08.330 
operating systems specifically the
process<00:00:06.779> manager<00:00:07.290> and<00:00:07.500> its<00:00:07.740> rule<00:00:08.010> in

00:00:08.330 --> 00:00:08.340 
process manager and its rule in

00:00:08.340 --> 00:00:12.230 
process manager and its rule in
scheduling<00:00:09.410> you<00:00:10.410> may<00:00:10.530> be<00:00:10.590> asking<00:00:11.160> what<00:00:11.969> is

00:00:12.230 --> 00:00:12.240 
scheduling you may be asking what is

00:00:12.240 --> 00:00:15.499 
scheduling you may be asking what is
shedding<00:00:12.809> shedding<00:00:13.519> is<00:00:14.519> the<00:00:14.639> activity<00:00:15.210> of<00:00:15.330> the

00:00:15.499 --> 00:00:15.509 
shedding shedding is the activity of the

00:00:15.509 --> 00:00:18.290 
shedding shedding is the activity of the
process<00:00:15.870> manager<00:00:16.440> that<00:00:17.190> handles<00:00:17.640> the<00:00:17.820> removal

00:00:18.290 --> 00:00:18.300 
process manager that handles the removal

00:00:18.300 --> 00:00:20.900 
process manager that handles the removal
of<00:00:18.330> the<00:00:18.600> running<00:00:18.900> process<00:00:19.140> from<00:00:19.650> the<00:00:19.770> CPU<00:00:20.340> and

00:00:20.900 --> 00:00:20.910 
of the running process from the CPU and

00:00:20.910 --> 00:00:24.080 
of the running process from the CPU and
selection<00:00:21.600> of<00:00:21.750> another<00:00:22.199> process<00:00:22.640> releases<00:00:23.640> of

00:00:24.080 --> 00:00:24.090 
selection of another process releases of

00:00:24.090 --> 00:00:26.839 
selection of another process releases of
a<00:00:24.180> particular<00:00:24.600> strategy<00:00:25.279> in<00:00:26.279> other<00:00:26.490> words

00:00:26.839 --> 00:00:26.849 
a particular strategy in other words

00:00:26.849 --> 00:00:28.970 
a particular strategy in other words
they<00:00:27.510> decide<00:00:27.869> to<00:00:27.900> shove<00:00:28.320> the<00:00:28.439> practices<00:00:28.949> in

00:00:28.970 --> 00:00:28.980 
they decide to shove the practices in

00:00:28.980 --> 00:00:31.009 
they decide to shove the practices in
the<00:00:29.279> ready<00:00:29.490> queue<00:00:29.730> is<00:00:30.029> to<00:00:30.269> be<00:00:30.420> allocated<00:00:30.990> to

00:00:31.009 --> 00:00:31.019 
the ready queue is to be allocated to

00:00:31.019 --> 00:00:37.069 
the ready queue is to be allocated to
the<00:00:31.199> CPU<00:00:32.360> so<00:00:33.360> why<00:00:33.600> do<00:00:33.660> we<00:00:33.899> need<00:00:34.260> shadowing<00:00:36.079> it

00:00:37.069 --> 00:00:37.079 
the CPU so why do we need shadowing it

00:00:37.079 --> 00:00:41.260 
the CPU so why do we need shadowing it
maximizes<00:00:37.739> system<00:00:39.170> it's<00:00:40.170> fair<00:00:40.469> to<00:00:40.620> all<00:00:40.829> users

00:00:41.260 --> 00:00:41.270 
maximizes system it's fair to all users

00:00:41.270 --> 00:00:45.470 
maximizes system it's fair to all users
provide<00:00:42.270> colorburst<00:00:43.140> and<00:00:44.480> performance

00:00:45.470 --> 00:00:45.480 
provide colorburst and performance

00:00:45.480 --> 00:00:47.900 
provide colorburst and performance
gracefully<00:00:46.079> and<00:00:46.860> is<00:00:46.980> consistent<00:00:47.670> and

00:00:47.900 --> 00:00:47.910 
gracefully and is consistent and

00:00:47.910 --> 00:00:52.779 
gracefully and is consistent and
predictable<00:00:49.940> criteria<00:00:50.940> for<00:00:51.180> Sheridan<00:00:51.750> our

00:00:52.779 --> 00:00:52.789 
predictable criteria for Sheridan our

00:00:52.789 --> 00:00:56.180 
predictable criteria for Sheridan our
priority<00:00:53.789> assigned<00:00:54.180> to<00:00:54.360> process<00:00:54.949> class<00:00:55.949> of

00:00:56.180 --> 00:00:56.190 
priority assigned to process class of

00:00:56.190 --> 00:00:59.869 
priority assigned to process class of
child<00:00:56.840> resource<00:00:57.840> requirements<00:00:58.559> whether<00:00:59.550> it

00:00:59.869 --> 00:00:59.879 
child resource requirements whether it

00:00:59.879 --> 00:01:02.260 
child resource requirements whether it
is<00:01:00.059> IO<00:01:00.390> bar<00:01:00.840> cpu-bound

00:01:02.260 --> 00:01:02.270 
is IO bar cpu-bound

00:01:02.270 --> 00:01:05.719 
is IO bar cpu-bound
resources<00:01:03.270> used<00:01:03.539> to<00:01:03.840> be<00:01:04.140> a<00:01:04.470> meeting<00:01:04.949> time<00:01:05.369> to

00:01:05.719 --> 00:01:05.729 
resources used to be a meeting time to

00:01:05.729 --> 00:01:07.710 
resources used to be a meeting time to
date

00:01:07.710 --> 00:01:07.720 
date

00:01:07.720 --> 00:01:10.830 
date
if<00:01:08.320> scheduling<00:01:08.950> is<00:01:09.190> pre-empting<00:01:09.880> the<00:01:10.240> shitty

00:01:10.830 --> 00:01:10.840 
if scheduling is pre-empting the shitty

00:01:10.840 --> 00:01:13.020 
if scheduling is pre-empting the shitty
learn<00:01:11.110> moves<00:01:11.560> a<00:01:11.710> process<00:01:12.130> from<00:01:12.310> the<00:01:12.490> processor

00:01:13.020 --> 00:01:13.030 
learn moves a process from the processor

00:01:13.030 --> 00:01:15.990 
learn moves a process from the processor
so<00:01:13.480> another<00:01:13.780> process<00:01:14.290> can<00:01:14.530> run<00:01:14.770> while<00:01:15.730> if<00:01:15.910> it

00:01:15.990 --> 00:01:16.000 
so another process can run while if it

00:01:16.000 --> 00:01:18.990 
so another process can run while if it
is<00:01:16.060> not<00:01:16.480> pre-empting<00:01:17.280> processed<00:01:18.280> only<00:01:18.550> stops

00:01:18.990 --> 00:01:19.000 
is not pre-empting processed only stops

00:01:19.000 --> 00:01:21.600 
is not pre-empting processed only stops
running<00:01:19.330> gift<00:01:19.720> of<00:01:19.960> terminated<00:01:20.830> bar<00:01:21.100> in<00:01:21.280> fact

00:01:21.600 --> 00:01:21.610 
running gift of terminated bar in fact

00:01:21.610 --> 00:01:26.820 
running gift of terminated bar in fact
and<00:01:21.850> I<00:01:22.090> believe<00:01:22.480> a<00:01:23.970> good<00:01:24.970> number<00:01:25.960> of<00:01:26.170> passes

00:01:26.820 --> 00:01:26.830 
and I believe a good number of passes

00:01:26.830 --> 00:01:30.270 
and I believe a good number of passes
completed<00:01:27.370> per<00:01:27.730> unit<00:01:28.060> time<00:01:29.070> turnaround<00:01:30.070> time

00:01:30.270 --> 00:01:30.280 
completed per unit time turnaround time

00:01:30.280 --> 00:01:33.530 
completed per unit time turnaround time
time<00:01:31.150> in<00:01:31.570> competition<00:01:32.320> and<00:01:32.560> Submission

00:01:33.530 --> 00:01:33.540 
time in competition and Submission

00:01:33.540 --> 00:01:37.440 
time in competition and Submission
waiting<00:01:34.540> time<00:01:34.980> total<00:01:35.980> little<00:01:36.730> time<00:01:36.970> in<00:01:37.210> ready

00:01:37.440 --> 00:01:37.450 
waiting time total little time in ready

00:01:37.450 --> 00:01:40.470 
waiting time total little time in ready
queue<00:01:38.130> response<00:01:39.130> time<00:01:39.430> time<00:01:40.270> between

00:01:40.470 --> 00:01:40.480 
queue response time time between

00:01:40.480 --> 00:01:43.320 
queue response time time between
submission<00:01:41.290> and<00:01:41.470> first<00:01:41.830> response<00:01:42.340> the

00:01:43.320 --> 00:01:43.330 
submission and first response the

00:01:43.330 --> 00:01:45.990 
submission and first response the
scheduling<00:01:43.720> policies<00:01:44.260> are<00:01:44.470> first<00:01:45.370> come<00:01:45.670> first

00:01:45.990 --> 00:01:46.000 
scheduling policies are first come first

00:01:46.000 --> 00:01:49.380 
scheduling policies are first come first
serve<00:01:46.590> shortest<00:01:47.590> job<00:01:47.710> first<00:01:48.390> priority

00:01:49.380 --> 00:01:49.390 
serve shortest job first priority

00:01:49.390 --> 00:01:52.560 
serve shortest job first priority
scheduling<00:01:49.830> round-robin<00:01:51.060> voltage<00:01:52.060> of<00:01:52.180> accuse

00:01:52.560 --> 00:01:52.570 
scheduling round-robin voltage of accuse

00:01:52.570 --> 00:01:57.600 
scheduling round-robin voltage of accuse
and<00:01:53.020> multi-level<00:01:53.860> feedback<00:01:54.100> tools<00:01:56.580> the<00:01:57.580> first

00:01:57.600 --> 00:01:57.610 
and multi-level feedback tools the first

00:01:57.610 --> 00:02:00.750 
and multi-level feedback tools the first
come<00:01:58.390> first<00:01:58.720> serve<00:01:59.020> process<00:01:59.890> that<00:02:00.250> requests

00:02:00.750 --> 00:02:00.760 
come first serve process that requests

00:02:00.760 --> 00:02:04.080 
come first serve process that requests
the<00:02:00.850> CPU<00:02:01.479> gets<00:02:01.600> it<00:02:01.810> first<00:02:02.400> it<00:02:03.400> is<00:02:03.610> implemented

00:02:04.080 --> 00:02:04.090 
the CPU gets it first it is implemented

00:02:04.090 --> 00:02:08.180 
the CPU gets it first it is implemented
as<00:02:04.450> a<00:02:04.600> to<00:02:04.810> your<00:02:04.990> Q<00:02:05.290> and<00:02:05.560> is<00:02:06.250> non<00:02:06.820> pre-emptive

00:02:08.180 --> 00:02:08.190 
as a to your Q and is non pre-emptive

00:02:08.190 --> 00:02:11.970 
as a to your Q and is non pre-emptive
this<00:02:09.190> is<00:02:09.340> bad<00:02:09.670> for<00:02:10.360> time-sharing<00:02:10.929> systems<00:02:11.470> and

00:02:11.970 --> 00:02:11.980 
this is bad for time-sharing systems and

00:02:11.980 --> 00:02:14.280 
this is bad for time-sharing systems and
disasters<00:02:12.820> when<00:02:13.150> there<00:02:13.390> is<00:02:13.540> a<00:02:13.570> large<00:02:13.930> process

00:02:14.280 --> 00:02:14.290 
disasters when there is a large process

00:02:14.290 --> 00:02:17.570 
disasters when there is a large process
at<00:02:15.130> the<00:02:15.340> head<00:02:15.610> of<00:02:15.820> the<00:02:16.030> queue

00:02:17.570 --> 00:02:17.580 
at the head of the queue

00:02:17.580 --> 00:02:21.200 
at the head of the queue
in<00:02:17.880> shortest<00:02:18.450> job<00:02:18.750> first<00:02:19.080> the<00:02:19.950> processes<00:02:20.520> from

00:02:21.200 --> 00:02:21.210 
in shortest job first the processes from

00:02:21.210 --> 00:02:23.810 
in shortest job first the processes from
the<00:02:21.420> ridicule<00:02:21.990> are<00:02:22.290> organized<00:02:22.890> based<00:02:23.520> on

00:02:23.810 --> 00:02:23.820 
the ridicule are organized based on

00:02:23.820 --> 00:02:27.770 
the ridicule are organized based on
estimated<00:02:24.330> one<00:02:24.750> type<00:02:25.050> rcq<00:02:25.950> burst<00:02:26.600> which<00:02:27.600> is<00:02:27.750> a

00:02:27.770 --> 00:02:27.780 
estimated one type rcq burst which is a

00:02:27.780 --> 00:02:30.050 
estimated one type rcq burst which is a
priority<00:02:28.380> scheme<00:02:28.650> and<00:02:29.430> primarily

00:02:30.050 --> 00:02:30.060 
priority scheme and primarily

00:02:30.060 --> 00:02:33.170 
priority scheme and primarily
non-preemptive<00:02:31.100> the<00:02:32.100> shortest<00:02:32.610> processes

00:02:33.170 --> 00:02:33.180 
non-preemptive the shortest processes

00:02:33.180 --> 00:02:37.220 
non-preemptive the shortest processes
are<00:02:33.420> dealt<00:02:33.690> with<00:02:33.810> first<00:02:35.690> this<00:02:36.690> priority

00:02:37.220 --> 00:02:37.230 
are dealt with first this priority

00:02:37.230 --> 00:02:39.410 
are dealt with first this priority
scheduling<00:02:37.610> different<00:02:38.610> internal<00:02:39.120> and

00:02:39.410 --> 00:02:39.420 
scheduling different internal and

00:02:39.420 --> 00:02:41.660 
scheduling different internal and
external<00:02:39.510> criteria<00:02:40.200> are<00:02:40.890> used<00:02:41.220> to<00:02:41.370> determine

00:02:41.660 --> 00:02:41.670 
external criteria are used to determine

00:02:41.670 --> 00:02:44.690 
external criteria are used to determine
this<00:02:42.030> task<00:02:42.390> goes<00:02:42.660> first<00:02:43.280> it<00:02:44.280> can<00:02:44.550> be

00:02:44.690 --> 00:02:44.700 
this task goes first it can be

00:02:44.700 --> 00:02:47.390 
this task goes first it can be
pre-emptive<00:02:45.000> or<00:02:45.570> not<00:02:45.780> preempted<00:02:46.160> this<00:02:47.160> may

00:02:47.390 --> 00:02:47.400 
pre-emptive or not preempted this may

00:02:47.400 --> 00:02:49.430 
pre-emptive or not preempted this may
lead<00:02:47.460> to<00:02:47.670> becoming<00:02:47.880> alluded<00:02:48.660> to<00:02:48.810> earlier<00:02:48.990> of

00:02:49.430 --> 00:02:49.440 
lead to becoming alluded to earlier of

00:02:49.440 --> 00:02:52.820 
lead to becoming alluded to earlier of
starvation<00:02:50.360> increasing<00:02:51.360> priority<00:02:51.870> or<00:02:52.230> aging

00:02:52.820 --> 00:02:52.830 
starvation increasing priority or aging

00:02:52.830 --> 00:02:58.460 
starvation increasing priority or aging
is<00:02:53.490> used<00:02:53.760> to<00:02:54.090> deal<00:02:54.240> with<00:02:54.450> this<00:02:56.450> old<00:02:57.450> Robin<00:02:57.750> is

00:02:58.460 --> 00:02:58.470 
is used to deal with this old Robin is

00:02:58.470 --> 00:03:02.030 
is used to deal with this old Robin is
where<00:02:58.920> the<00:02:59.070> CPU<00:02:59.600> is<00:03:00.600> allocated<00:03:01.410> to<00:03:01.560> a<00:03:01.620> process

00:03:02.030 --> 00:03:02.040 
where the CPU is allocated to a process

00:03:02.040 --> 00:03:05.900 
where the CPU is allocated to a process
based<00:03:02.340> on<00:03:02.550> time<00:03:03.060> slice<00:03:03.420> or<00:03:03.690> time<00:03:03.930> quantum<00:03:04.910> it

00:03:05.900 --> 00:03:05.910 
based on time slice or time quantum it

00:03:05.910 --> 00:03:08.650 
based on time slice or time quantum it
is<00:03:06.060> necessary<00:03:06.630> for<00:03:06.930> a<00:03:06.990> time<00:03:07.260> sharing<00:03:07.680> system

00:03:08.650 --> 00:03:08.660 
is necessary for a time sharing system

00:03:08.660 --> 00:03:11.870 
is necessary for a time sharing system
the<00:03:09.660> process<00:03:10.110> is<00:03:10.380> interrupted<00:03:10.830> and<00:03:11.430> sent<00:03:11.670> back

00:03:11.870 --> 00:03:11.880 
the process is interrupted and sent back

00:03:11.880 --> 00:03:15.050 
the process is interrupted and sent back
to<00:03:11.940> the<00:03:12.120> red<00:03:12.390> key<00:03:13.070> preemption<00:03:14.070> occurs<00:03:14.370> at<00:03:14.940> the

00:03:15.050 --> 00:03:15.060 
to the red key preemption occurs at the

00:03:15.060 --> 00:03:19.280 
to the red key preemption occurs at the
end<00:03:15.210> of<00:03:15.840> the<00:03:16.110> time<00:03:16.410> quantum<00:03:18.260> without<00:03:19.260> a

00:03:19.280 --> 00:03:19.290 
end of the time quantum without a

00:03:19.290 --> 00:03:22.640 
end of the time quantum without a
ridiculous<00:03:20.010> ready<00:03:20.880> queue<00:03:21.150> and<00:03:21.660> divided<00:03:22.320> into

00:03:22.640 --> 00:03:22.650 
ridiculous ready queue and divided into

00:03:22.650 --> 00:03:25.970 
ridiculous ready queue and divided into
several<00:03:23.040> queues<00:03:23.640> or<00:03:23.959> trustees<00:03:24.959> do<00:03:25.500> not<00:03:25.709> move

00:03:25.970 --> 00:03:25.980 
several queues or trustees do not move

00:03:25.980 --> 00:03:30.250 
several queues or trustees do not move
from<00:03:26.040> -<00:03:26.490> to<00:03:26.850> killed<00:03:28.400> back

00:03:30.250 --> 00:03:30.260 
from - to killed back

00:03:30.260 --> 00:03:33.100 
from - to killed back
from<00:03:30.980> multilevel<00:03:31.459> Q's<00:03:31.849> because<00:03:32.510> there<00:03:32.989> is

00:03:33.100 --> 00:03:33.110 
from multilevel Q's because there is

00:03:33.110 --> 00:03:35.860 
from multilevel Q's because there is
feedback<00:03:33.379> between<00:03:33.739> Q's<00:03:34.250> so<00:03:34.909> that<00:03:35.150> palaces<00:03:35.569> can

00:03:35.860 --> 00:03:35.870 
feedback between Q's so that palaces can

00:03:35.870 --> 00:03:39.339 
feedback between Q's so that palaces can
move<00:03:36.079> from<00:03:36.290> acute<00:03:36.799> to<00:03:36.980> human<00:03:38.140> processes<00:03:39.140> are

00:03:39.339 --> 00:03:39.349 
move from acute to human processes are

00:03:39.349 --> 00:03:40.360 
move from acute to human processes are
placed<00:03:39.709> in<00:03:39.829> queues

00:03:40.360 --> 00:03:40.370 
placed in queues

00:03:40.370 --> 00:03:43.899 
placed in queues
based<00:03:40.849> on<00:03:41.000> cpu<00:03:41.299> bursts<00:03:42.310> aging<00:03:43.310> is<00:03:43.519> used<00:03:43.760> to

00:03:43.899 --> 00:03:43.909 
based on cpu bursts aging is used to

00:03:43.909 --> 00:03:46.300 
based on cpu bursts aging is used to
mean<00:03:44.060> your<00:03:44.299> verdict<00:03:44.840> practices<00:03:45.590> the<00:03:46.129> high

00:03:46.300 --> 00:03:46.310 
mean your verdict practices the high

00:03:46.310 --> 00:03:50.410 
mean your verdict practices the high
priority<00:03:46.849> if<00:03:47.390> they<00:03:47.659> were<00:03:47.720> to<00:03:48.230> not<00:03:49.120> this<00:03:50.120> has

00:03:50.410 --> 00:03:50.420 
priority if they were to not this has

00:03:50.420 --> 00:03:54.190 
priority if they were to not this has
been<00:03:50.540> a<00:03:50.599> presentation<00:03:50.780> on<00:03:51.470> sharing<00:03:53.200> using

00:03:54.190 --> 00:03:54.200 
been a presentation on sharing using

00:03:54.200 --> 00:03:56.799 
been a presentation on sharing using
powtoon

