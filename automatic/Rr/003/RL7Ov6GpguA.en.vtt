WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.030 

hey<00:00:00.599> guys<00:00:00.780> proper<00:00:01.230> English<00:00:01.439> here<00:00:01.650> and<00:00:01.860> today

00:00:02.030 --> 00:00:02.040 
hey guys proper English here and today

00:00:02.040 --> 00:00:03.439 
hey guys proper English here and today
I've<00:00:02.190> got<00:00:02.220> some<00:00:02.490> more<00:00:02.610> signal<00:00:03.090> strength

00:00:03.439 --> 00:00:03.449 
I've got some more signal strength

00:00:03.449 --> 00:00:05.390 
I've got some more signal strength
memory<00:00:03.959> for<00:00:04.290> you<00:00:04.380> the<00:00:04.529> last<00:00:04.799> time<00:00:05.069> I<00:00:05.130> showed

00:00:05.390 --> 00:00:05.400 
memory for you the last time I showed

00:00:05.400 --> 00:00:07.010 
memory for you the last time I showed
you<00:00:05.520> some<00:00:05.700> signal<00:00:06.029> strength<00:00:06.270> memory<00:00:06.629> it<00:00:06.839> was

00:00:07.010 --> 00:00:07.020 
you some signal strength memory it was

00:00:07.020 --> 00:00:10.070 
you some signal strength memory it was
Ram<00:00:07.350> now<00:00:07.710> remember<00:00:08.220> Ram<00:00:08.700> has<00:00:09.030> a<00:00:09.389> right

00:00:10.070 --> 00:00:10.080 
Ram now remember Ram has a right

00:00:10.080 --> 00:00:12.049 
Ram now remember Ram has a right
function<00:00:10.500> which<00:00:10.769> is<00:00:10.800> saving<00:00:11.550> the<00:00:11.580> data<00:00:11.849> which

00:00:12.049 --> 00:00:12.059 
function which is saving the data which

00:00:12.059 --> 00:00:14.299 
function which is saving the data which
we<00:00:12.210> have<00:00:12.389> here<00:00:12.719> I<00:00:12.870> flip<00:00:13.469> this<00:00:13.590> lever<00:00:13.799> we<00:00:14.130> see

00:00:14.299 --> 00:00:14.309 
we have here I flip this lever we see

00:00:14.309 --> 00:00:16.880 
we have here I flip this lever we see
our<00:00:14.429> data<00:00:14.670> gets<00:00:15.120> saved<00:00:15.540> and<00:00:15.780> that's<00:00:16.320> the<00:00:16.619> same

00:00:16.880 --> 00:00:16.890 
our data gets saved and that's the same

00:00:16.890 --> 00:00:19.490 
our data gets saved and that's the same
exact<00:00:17.250> logic<00:00:17.550> that<00:00:17.910> I<00:00:17.970> used<00:00:18.300> in<00:00:18.539> my<00:00:18.600> Ram<00:00:19.140> cell

00:00:19.490 --> 00:00:19.500 
exact logic that I used in my Ram cell

00:00:19.500 --> 00:00:22.279 
exact logic that I used in my Ram cell
but<00:00:20.369> unlike<00:00:20.730> the<00:00:20.760> RAM<00:00:21.090> cell<00:00:21.390> we<00:00:21.570> see<00:00:21.900> our

00:00:22.279 --> 00:00:22.289 
but unlike the RAM cell we see our

00:00:22.289 --> 00:00:25.189 
but unlike the RAM cell we see our
output<00:00:23.010> immediately<00:00:24.000> right<00:00:24.180> in<00:00:24.359> RAM<00:00:24.930> you<00:00:25.170> have

00:00:25.189 --> 00:00:25.199 
output immediately right in RAM you have

00:00:25.199 --> 00:00:28.040 
output immediately right in RAM you have
a<00:00:25.529> read<00:00:25.890> which<00:00:26.220> controls<00:00:26.820> when<00:00:27.539> the<00:00:27.660> output<00:00:27.840> is

00:00:28.040 --> 00:00:28.050 
a read which controls when the output is

00:00:28.050 --> 00:00:31.220 
a read which controls when the output is
on<00:00:28.320> and<00:00:28.820> so<00:00:29.820> this<00:00:30.210> is<00:00:30.359> a<00:00:30.390> bit<00:00:30.630> different<00:00:30.840> it's

00:00:31.220 --> 00:00:31.230 
on and so this is a bit different it's

00:00:31.230 --> 00:00:33.229 
on and so this is a bit different it's
actually<00:00:31.949> two<00:00:32.099> white<00:00:32.250> I'll<00:00:32.489> buy<00:00:32.700> set<00:00:32.940> this<00:00:33.059> up

00:00:33.229 --> 00:00:33.239 
actually two white I'll buy set this up

00:00:33.239 --> 00:00:35.959 
actually two white I'll buy set this up
so<00:00:33.300> that<00:00:33.630> it<00:00:33.840> stacks<00:00:34.290> up<00:00:34.469> nice<00:00:35.280> and<00:00:35.309> neat<00:00:35.640> and

00:00:35.959 --> 00:00:35.969 
so that it stacks up nice and neat and

00:00:35.969 --> 00:00:38.810 
so that it stacks up nice and neat and
it's<00:00:36.960> pretty<00:00:37.200> compact<00:00:37.829> the<00:00:38.430> other<00:00:38.550> thing

00:00:38.810 --> 00:00:38.820 
it's pretty compact the other thing

00:00:38.820 --> 00:00:40.400 
it's pretty compact the other thing
that's<00:00:38.969> kind<00:00:39.180> of<00:00:39.300> cool<00:00:39.480> about<00:00:39.719> this<00:00:39.930> is<00:00:40.079> we

00:00:40.400 --> 00:00:40.410 
that's kind of cool about this is we

00:00:40.410 --> 00:00:42.889 
that's kind of cool about this is we
have<00:00:40.620> a<00:00:40.829> reset<00:00:41.760> so<00:00:42.059> I<00:00:42.090> can<00:00:42.300> clear<00:00:42.629> out<00:00:42.750> the

00:00:42.889 --> 00:00:42.899 
have a reset so I can clear out the

00:00:42.899 --> 00:00:46.190 
have a reset so I can clear out the
memory<00:00:43.200> cells<00:00:43.440> very<00:00:44.160> easily<00:00:44.690> now<00:00:45.690> there's<00:00:46.140> one

00:00:46.190 --> 00:00:46.200 
memory cells very easily now there's one

00:00:46.200 --> 00:00:48.470 
memory cells very easily now there's one
more<00:00:46.559> feature<00:00:46.800> that<00:00:47.309> I'll<00:00:47.550> point<00:00:47.850> out<00:00:48.090> before

00:00:48.470 --> 00:00:48.480 
more feature that I'll point out before

00:00:48.480 --> 00:00:52.100 
more feature that I'll point out before
we<00:00:48.570> get<00:00:48.719> into<00:00:49.170> how<00:00:49.379> this<00:00:49.620> works<00:00:49.950> if<00:00:50.449> I<00:00:51.449> want<00:00:51.870> to

00:00:52.100 --> 00:00:52.110 
we get into how this works if I want to

00:00:52.110 --> 00:00:55.189 
we get into how this works if I want to
change<00:00:52.289> this<00:00:53.010> memory<00:00:53.460> so<00:00:53.699> its<00:00:53.940> basic<00:00:54.510> on/off

00:00:55.189 --> 00:00:55.199 
change this memory so its basic on/off

00:00:55.199 --> 00:00:57.200 
change this memory so its basic on/off
memory<00:00:55.710> instead<00:00:56.129> of<00:00:56.250> signal<00:00:56.610> strength<00:00:56.879> memory

00:00:57.200 --> 00:00:57.210 
memory instead of signal strength memory

00:00:57.210 --> 00:00:59.599 
memory instead of signal strength memory
all<00:00:57.420> I<00:00:57.449> need<00:00:57.690> to<00:00:57.719> do<00:00:57.960> is<00:00:58.199> throw<00:00:58.500> a<00:00:58.770> repeater

00:00:59.599 --> 00:00:59.609 
all I need to do is throw a repeater

00:00:59.609 --> 00:01:01.639 
all I need to do is throw a repeater
right<00:00:59.969> in<00:01:00.090> there<00:01:00.300> instead<00:01:00.809> of<00:01:00.870> a<00:01:01.050> comparator

00:01:01.639 --> 00:01:01.649 
right in there instead of a comparator

00:01:01.649 --> 00:01:06.080 
right in there instead of a comparator
and<00:01:01.829> now<00:01:02.789> when<00:01:03.329> I<00:01:03.359> save<00:01:03.809> the<00:01:03.989> data<00:01:04.460> it's<00:01:05.460> simple

00:01:06.080 --> 00:01:06.090 
and now when I save the data it's simple

00:01:06.090 --> 00:01:08.480 
and now when I save the data it's simple
on/off<00:01:06.900> right<00:01:07.530> we're<00:01:07.920> not<00:01:07.950> worrying<00:01:08.369> about

00:01:08.480 --> 00:01:08.490 
on/off right we're not worrying about

00:01:08.490 --> 00:01:10.969 
on/off right we're not worrying about
signal<00:01:09.000> strength<00:01:09.299> in<00:01:09.510> this<00:01:10.020> cell<00:01:10.350> anymore<00:01:10.680> but

00:01:10.969 --> 00:01:10.979 
signal strength in this cell anymore but

00:01:10.979 --> 00:01:13.700 
signal strength in this cell anymore but
we<00:01:11.070> still<00:01:11.310> have<00:01:11.700> this<00:01:12.330> really<00:01:12.630> nice<00:01:12.840> cell<00:01:13.170> with

00:01:13.700 --> 00:01:13.710 
we still have this really nice cell with

00:01:13.710 --> 00:01:17.420 
we still have this really nice cell with
an<00:01:13.920> easy<00:01:14.520> reset<00:01:15.180> so<00:01:15.780> it's<00:01:16.110> pretty<00:01:16.350> cool<00:01:16.619> now

00:01:17.420 --> 00:01:17.430 
an easy reset so it's pretty cool now

00:01:17.430 --> 00:01:19.490 
an easy reset so it's pretty cool now
one<00:01:17.850> of<00:01:17.880> the<00:01:18.060> reasons<00:01:18.420> that<00:01:18.479> I<00:01:18.630> wanted<00:01:19.080> to<00:01:19.170> show

00:01:19.490 --> 00:01:19.500 
one of the reasons that I wanted to show

00:01:19.500 --> 00:01:21.590 
one of the reasons that I wanted to show
this<00:01:19.710> to<00:01:19.950> you<00:01:20.040> is<00:01:20.220> because<00:01:20.430> there<00:01:21.180> are<00:01:21.360> a<00:01:21.420> few

00:01:21.590 --> 00:01:21.600 
this to you is because there are a few

00:01:21.600 --> 00:01:23.240 
this to you is because there are a few
things<00:01:21.810> that<00:01:22.080> I<00:01:22.110> did<00:01:22.470> that<00:01:22.710> I<00:01:22.740> think<00:01:23.009> are<00:01:23.159> a

00:01:23.240 --> 00:01:23.250 
things that I did that I think are a

00:01:23.250 --> 00:01:25.760 
things that I did that I think are a
little<00:01:23.729> interesting<00:01:24.390> in<00:01:24.479> terms<00:01:24.509> of<00:01:24.960> design

00:01:25.760 --> 00:01:25.770 
little interesting in terms of design

00:01:25.770 --> 00:01:28.789 
little interesting in terms of design
with<00:01:26.040> comparators<00:01:26.610> so<00:01:27.240> let's<00:01:28.110> review<00:01:28.320> the

00:01:28.789 --> 00:01:28.799 
with comparators so let's review the

00:01:28.799 --> 00:01:31.010 
with comparators so let's review the
logic<00:01:29.340> for<00:01:29.369> building<00:01:29.909> a<00:01:30.060> signal<00:01:30.630> strength

00:01:31.010 --> 00:01:31.020 
logic for building a signal strength

00:01:31.020 --> 00:01:33.499 
logic for building a signal strength
memory<00:01:31.530> cell<00:01:31.860> and<00:01:32.100> we'll<00:01:32.700> take<00:01:32.970> a<00:01:33.030> look<00:01:33.270> at

00:01:33.499 --> 00:01:33.509 
memory cell and we'll take a look at

00:01:33.509 --> 00:01:35.450 
memory cell and we'll take a look at
some<00:01:33.780> of<00:01:33.840> the<00:01:34.140> tricks<00:01:34.619> that<00:01:34.770> I<00:01:34.890> use<00:01:35.100> to<00:01:35.130> make

00:01:35.450 --> 00:01:35.460 
some of the tricks that I use to make

00:01:35.460 --> 00:01:39.260 
some of the tricks that I use to make
this<00:01:35.640> too<00:01:36.390> wide<00:01:36.720> and<00:01:37.049> stackable<00:01:38.060> alright<00:01:39.060> so

00:01:39.260 --> 00:01:39.270 
this too wide and stackable alright so

00:01:39.270 --> 00:01:41.420 
this too wide and stackable alright so
like<00:01:39.630> I<00:01:39.750> said<00:01:39.810> this<00:01:40.320> memory<00:01:40.680> uses<00:01:41.040> the<00:01:41.189> same

00:01:41.420 --> 00:01:41.430 
like I said this memory uses the same

00:01:41.430 --> 00:01:43.639 
like I said this memory uses the same
exact<00:01:41.790> system<00:01:42.030> for<00:01:42.390> saving<00:01:42.780> data<00:01:42.960> that<00:01:43.320> my<00:01:43.439> ram

00:01:43.639 --> 00:01:43.649 
exact system for saving data that my ram

00:01:43.649 --> 00:01:45.889 
exact system for saving data that my ram
did<00:01:43.890> you<00:01:44.369> can<00:01:44.520> see<00:01:44.729> we've<00:01:44.880> got<00:01:45.060> a<00:01:45.210> comparator

00:01:45.889 --> 00:01:45.899 
did you can see we've got a comparator

00:01:45.899 --> 00:01:48.260 
did you can see we've got a comparator
feeding<00:01:46.409> into<00:01:46.740> another<00:01:47.310> comparator<00:01:47.909> this<00:01:48.090> one

00:01:48.260 --> 00:01:48.270 
feeding into another comparator this one

00:01:48.270 --> 00:01:50.149 
feeding into another comparator this one
is<00:01:48.360> set<00:01:48.540> to<00:01:48.659> subtract<00:01:49.140> and<00:01:49.350> that<00:01:49.619> feeds<00:01:49.950> back

00:01:50.149 --> 00:01:50.159 
is set to subtract and that feeds back

00:01:50.159 --> 00:01:53.359 
is set to subtract and that feeds back
into<00:01:50.220> our<00:01:50.970> original<00:01:51.590> comparator<00:01:52.590> creating

00:01:53.359 --> 00:01:53.369 
into our original comparator creating

00:01:53.369 --> 00:01:55.730 
into our original comparator creating
the<00:01:53.670> memory<00:01:54.030> loop<00:01:54.299> now<00:01:54.960> we've<00:01:55.110> also<00:01:55.380> got<00:01:55.710> a

00:01:55.730 --> 00:01:55.740 
the memory loop now we've also got a

00:01:55.740 --> 00:01:57.950 
the memory loop now we've also got a
comparator<00:01:56.340> on<00:01:56.520> the<00:01:56.700> input<00:01:56.939> this<00:01:57.329> one<00:01:57.540> sets<00:01:57.840> a

00:01:57.950 --> 00:01:57.960 
comparator on the input this one sets a

00:01:57.960 --> 00:02:00.889 
comparator on the input this one sets a
subtract<00:01:58.409> and<00:01:58.649> we're<00:01:58.770> subtracting<00:01:59.040> 15<00:01:59.899> from

00:02:00.889 --> 00:02:00.899 
subtract and we're subtracting 15 from

00:02:00.899 --> 00:02:04.340 
subtract and we're subtracting 15 from
our<00:02:01.140> data<00:02:01.409> input<00:02:01.920> that<00:02:02.820> reduces<00:02:03.719> the<00:02:04.110> data

00:02:04.340 --> 00:02:04.350 
our data input that reduces the data

00:02:04.350 --> 00:02:06.830 
our data input that reduces the data
input<00:02:04.799> to<00:02:05.040> 0<00:02:05.369> so<00:02:05.700> that<00:02:05.729> it<00:02:05.969> doesn't<00:02:06.240> mess<00:02:06.810> with

00:02:06.830 --> 00:02:06.840 
input to 0 so that it doesn't mess with

00:02:06.840 --> 00:02:09.770 
input to 0 so that it doesn't mess with
our<00:02:07.320> memory<00:02:07.799> cell<00:02:08.160> unless<00:02:09.060> we<00:02:09.270> want<00:02:09.509> to<00:02:09.599> save

00:02:09.770 --> 00:02:09.780 
our memory cell unless we want to save

00:02:09.780 --> 00:02:12.530 
our memory cell unless we want to save
data<00:02:10.080> now<00:02:10.860> when<00:02:11.400> I<00:02:11.430> want<00:02:11.819> to<00:02:11.910> save<00:02:12.060> data<00:02:12.300> and<00:02:12.480> I

00:02:12.530 --> 00:02:12.540 
data now when I want to save data and I

00:02:12.540 --> 00:02:12.980 
data now when I want to save data and I
flipped

00:02:12.980 --> 00:02:12.990 
flipped

00:02:12.990 --> 00:02:14.450 
flipped
is<00:02:13.050> lever<00:02:13.320> two<00:02:13.620> things<00:02:13.920> happen<00:02:14.310> the<00:02:14.430> first

00:02:14.450 --> 00:02:14.460 
is lever two things happen the first

00:02:14.460 --> 00:02:17.750 
is lever two things happen the first
thing<00:02:15.030> that<00:02:15.060> happens<00:02:15.540> is<00:02:15.690> we<00:02:15.960> subtract<00:02:16.760> 15

00:02:17.750 --> 00:02:17.760 
thing that happens is we subtract 15

00:02:17.760 --> 00:02:20.300 
thing that happens is we subtract 15
from<00:02:18.150> what<00:02:18.300> was<00:02:18.480> already<00:02:18.720> in<00:02:19.200> the<00:02:19.770> memory<00:02:20.130> cell

00:02:20.300 --> 00:02:20.310 
from what was already in the memory cell

00:02:20.310 --> 00:02:22.520 
from what was already in the memory cell
that<00:02:20.490> clears<00:02:20.820> it<00:02:21.000> out<00:02:21.210> the<00:02:21.930> other<00:02:22.140> thing<00:02:22.500> that

00:02:22.520 --> 00:02:22.530 
that clears it out the other thing that

00:02:22.530 --> 00:02:24.650 
that clears it out the other thing that
happens<00:02:23.070> is<00:02:23.220> we<00:02:23.490> turn<00:02:23.760> this<00:02:24.000> torch<00:02:24.300> off<00:02:24.480> so

00:02:24.650 --> 00:02:24.660 
happens is we turn this torch off so

00:02:24.660 --> 00:02:27.230 
happens is we turn this torch off so
we're<00:02:24.810> no<00:02:25.020> longer<00:02:25.250> subtracting<00:02:26.250> 15<00:02:26.430> from<00:02:27.030> our

00:02:27.230 --> 00:02:27.240 
we're no longer subtracting 15 from our

00:02:27.240 --> 00:02:30.050 
we're no longer subtracting 15 from our
data<00:02:27.630> input<00:02:28.140> that<00:02:28.740> allows<00:02:29.100> the<00:02:29.340> data<00:02:29.610> to<00:02:29.880> move

00:02:30.050 --> 00:02:30.060 
data input that allows the data to move

00:02:30.060 --> 00:02:32.350 
data input that allows the data to move
right<00:02:30.510> through<00:02:30.540> into<00:02:31.020> this<00:02:31.320> memory<00:02:31.740> cell<00:02:31.980> and

00:02:32.350 --> 00:02:32.360 
right through into this memory cell and

00:02:32.360 --> 00:02:34.610 
right through into this memory cell and
we<00:02:33.360> can<00:02:33.510> save<00:02:33.780> it<00:02:33.930> there<00:02:34.050> now<00:02:34.200> the<00:02:34.260> nice<00:02:34.590> thing

00:02:34.610 --> 00:02:34.620 
we can save it there now the nice thing

00:02:34.620 --> 00:02:37.490 
we can save it there now the nice thing
is<00:02:34.920> this<00:02:35.700> moves<00:02:36.000> immediately<00:02:36.750> through<00:02:37.260> the

00:02:37.490 --> 00:02:37.500 
is this moves immediately through the

00:02:37.500 --> 00:02:39.320 
is this moves immediately through the
memory<00:02:37.800> cell<00:02:38.040> so<00:02:38.220> we<00:02:38.310> can<00:02:38.460> see<00:02:38.700> our<00:02:38.940> data

00:02:39.320 --> 00:02:39.330 
memory cell so we can see our data

00:02:39.330 --> 00:02:42.320 
memory cell so we can see our data
output<00:02:39.840> without<00:02:40.500> much<00:02:40.920> delay<00:02:41.100> now<00:02:42.090> when<00:02:42.300> I

00:02:42.320 --> 00:02:42.330 
output without much delay now when I

00:02:42.330 --> 00:02:44.480 
output without much delay now when I
come<00:02:42.600> down<00:02:42.780> here<00:02:42.960> and<00:02:43.170> I<00:02:43.350> flip<00:02:43.770> this<00:02:44.280> lever

00:02:44.480 --> 00:02:44.490 
come down here and I flip this lever

00:02:44.490 --> 00:02:47.240 
come down here and I flip this lever
turn<00:02:45.210> it<00:02:45.360> off<00:02:45.570> again<00:02:45.870> two<00:02:46.620> things<00:02:46.860> happen

00:02:47.240 --> 00:02:47.250 
turn it off again two things happen

00:02:47.250 --> 00:02:50.360 
turn it off again two things happen
first<00:02:47.610> we<00:02:48.330> stop<00:02:48.690> subtracting<00:02:49.440> 15<00:02:49.680> from<00:02:50.250> our

00:02:50.360 --> 00:02:50.370 
first we stop subtracting 15 from our

00:02:50.370 --> 00:02:52.370 
first we stop subtracting 15 from our
memory<00:02:50.700> cell<00:02:50.910> so<00:02:51.090> now<00:02:51.240> the<00:02:51.300> data<00:02:51.690> can<00:02:51.960> be<00:02:51.990> saved

00:02:52.370 --> 00:02:52.380 
memory cell so now the data can be saved

00:02:52.380 --> 00:02:56.210 
memory cell so now the data can be saved
in<00:02:52.800> the<00:02:53.610> comparator<00:02:54.270> loop<00:02:54.480> we<00:02:54.990> also<00:02:55.260> resume

00:02:56.210 --> 00:02:56.220 
in the comparator loop we also resume

00:02:56.220 --> 00:03:00.230 
in the comparator loop we also resume
subtracting<00:02:57.030> 15<00:02:57.260> from<00:02:58.260> our<00:02:58.530> data<00:02:59.160> input<00:02:59.760> so

00:03:00.230 --> 00:03:00.240 
subtracting 15 from our data input so

00:03:00.240 --> 00:03:03.800 
subtracting 15 from our data input so
now<00:03:00.540> a<00:03:00.840> new<00:03:01.290> input<00:03:01.740> will<00:03:02.010> not<00:03:02.250> overwrite<00:03:02.940> the

00:03:03.800 --> 00:03:03.810 
now a new input will not overwrite the

00:03:03.810 --> 00:03:06.470 
now a new input will not overwrite the
old<00:03:03.840> input<00:03:04.560> we<00:03:04.830> get<00:03:05.070> the<00:03:05.340> same<00:03:05.670> output<00:03:06.180> because

00:03:06.470 --> 00:03:06.480 
old input we get the same output because

00:03:06.480 --> 00:03:08.510 
old input we get the same output because
we're<00:03:06.960> not<00:03:07.080> saving<00:03:07.410> anything<00:03:07.710> right<00:03:08.070> now<00:03:08.100> and

00:03:08.510 --> 00:03:08.520 
we're not saving anything right now and

00:03:08.520 --> 00:03:12.170 
we're not saving anything right now and
so<00:03:09.450> as<00:03:09.690> I<00:03:10.260> showed<00:03:10.530> you<00:03:10.560> before<00:03:10.800> we've<00:03:11.280> also<00:03:11.550> got

00:03:12.170 --> 00:03:12.180 
so as I showed you before we've also got

00:03:12.180 --> 00:03:15.830 
so as I showed you before we've also got
this<00:03:12.390> neat<00:03:13.220> reset<00:03:14.220> function<00:03:14.550> and<00:03:15.000> so<00:03:15.330> the<00:03:15.660> way

00:03:15.830 --> 00:03:15.840 
this neat reset function and so the way

00:03:15.840 --> 00:03:18.830 
this neat reset function and so the way
this<00:03:16.020> works<00:03:16.080> is<00:03:16.530> when<00:03:17.070> i<00:03:17.310> turn<00:03:18.000> the<00:03:18.180> reset<00:03:18.630> on

00:03:18.830 --> 00:03:18.840 
this works is when i turn the reset on

00:03:18.840 --> 00:03:22.610 
this works is when i turn the reset on
we<00:03:19.770> subtract<00:03:20.400> 15<00:03:21.000> from<00:03:21.300> the<00:03:21.360> memory<00:03:21.660> cell<00:03:22.050> but

00:03:22.610 --> 00:03:22.620 
we subtract 15 from the memory cell but

00:03:22.620 --> 00:03:25.400 
we subtract 15 from the memory cell but
we're<00:03:22.800> not<00:03:23.130> turning<00:03:23.790> off<00:03:24.180> the<00:03:24.480> subtraction

00:03:25.400 --> 00:03:25.410 
we're not turning off the subtraction

00:03:25.410 --> 00:03:28.880 
we're not turning off the subtraction
from<00:03:25.980> our<00:03:26.340> input<00:03:27.000> control<00:03:27.480> alright<00:03:28.350> so<00:03:28.680> that

00:03:28.880 --> 00:03:28.890 
from our input control alright so that

00:03:28.890 --> 00:03:31.640 
from our input control alright so that
means<00:03:29.580> no<00:03:29.790> new<00:03:30.180> data<00:03:30.420> is<00:03:30.600> coming<00:03:30.780> in<00:03:31.080> but<00:03:31.470> were

00:03:31.640 --> 00:03:31.650 
means no new data is coming in but were

00:03:31.650 --> 00:03:34.250 
means no new data is coming in but were
deleting<00:03:32.520> the<00:03:32.730> data<00:03:32.970> that<00:03:33.390> was<00:03:33.510> already<00:03:33.960> in

00:03:34.250 --> 00:03:34.260 
deleting the data that was already in

00:03:34.260 --> 00:03:36.560 
deleting the data that was already in
the<00:03:34.290> comparator<00:03:35.010> loop<00:03:35.190> and<00:03:35.430> so<00:03:36.210> now<00:03:36.360> that

00:03:36.560 --> 00:03:36.570 
the comparator loop and so now that

00:03:36.570 --> 00:03:38.390 
the comparator loop and so now that
we've<00:03:36.660> gone<00:03:36.870> through<00:03:37.260> the<00:03:37.590> logic<00:03:38.100> for<00:03:38.280> how

00:03:38.390 --> 00:03:38.400 
we've gone through the logic for how

00:03:38.400 --> 00:03:40.730 
we've gone through the logic for how
this<00:03:38.610> thing<00:03:38.850> works<00:03:38.930> let's<00:03:39.930> take<00:03:40.140> a<00:03:40.170> look<00:03:40.500> at

00:03:40.730 --> 00:03:40.740 
this thing works let's take a look at

00:03:40.740 --> 00:03:44.210 
this thing works let's take a look at
one<00:03:41.220> neat<00:03:41.760> little<00:03:42.120> design<00:03:42.870> feature<00:03:43.290> that

00:03:44.210 --> 00:03:44.220 
one neat little design feature that

00:03:44.220 --> 00:03:47.960 
one neat little design feature that
allows<00:03:44.520> this<00:03:44.940> to<00:03:45.210> be<00:03:45.420> too<00:03:46.050> wide<00:03:46.230> tileable<00:03:46.970> nice

00:03:47.960 --> 00:03:47.970 
allows this to be too wide tileable nice

00:03:47.970 --> 00:03:50.150 
allows this to be too wide tileable nice
and<00:03:48.180> compact<00:03:48.410> one<00:03:49.410> of<00:03:49.500> the<00:03:49.590> things<00:03:49.830> that<00:03:49.950> can

00:03:50.150 --> 00:03:50.160 
and compact one of the things that can

00:03:50.160 --> 00:03:52.850 
and compact one of the things that can
be<00:03:50.220> both<00:03:50.430> very<00:03:50.940> useful<00:03:51.660> and<00:03:51.840> very<00:03:51.930> frustrating

00:03:52.850 --> 00:03:52.860 
be both very useful and very frustrating

00:03:52.860 --> 00:03:54.920 
be both very useful and very frustrating
about<00:03:52.980> the<00:03:53.250> comparator<00:03:53.790> block<00:03:54.030> is<00:03:54.300> it<00:03:54.780> can

00:03:54.920 --> 00:03:54.930 
about the comparator block is it can

00:03:54.930 --> 00:03:57.290 
about the comparator block is it can
take<00:03:55.110> a<00:03:55.290> be<00:03:55.590> input<00:03:56.040> from<00:03:56.280> both<00:03:56.340> sides<00:03:57.000> of<00:03:57.180> the

00:03:57.290 --> 00:03:57.300 
take a be input from both sides of the

00:03:57.300 --> 00:04:00.050 
take a be input from both sides of the
block<00:03:57.510> in<00:03:57.780> this<00:03:58.530> case<00:03:58.860> it's<00:03:59.250> very<00:03:59.820> useful

00:04:00.050 --> 00:04:00.060 
block in this case it's very useful

00:04:00.060 --> 00:04:02.270 
block in this case it's very useful
because<00:04:00.300> we've<00:04:01.230> got<00:04:01.410> eight<00:04:01.590> bits<00:04:01.860> here<00:04:02.040> but

00:04:02.270 --> 00:04:02.280 
because we've got eight bits here but

00:04:02.280 --> 00:04:04.340 
because we've got eight bits here but
because<00:04:02.400> the<00:04:02.910> comparator<00:04:03.510> block<00:04:03.720> takes<00:04:04.170> an

00:04:04.340 --> 00:04:04.350 
because the comparator block takes an

00:04:04.350 --> 00:04:07.850 
because the comparator block takes an
input<00:04:04.530> from<00:04:04.860> both<00:04:04.920> sides<00:04:05.430> we<00:04:06.180> only<00:04:06.480> need<00:04:06.960> four

00:04:07.850 --> 00:04:07.860 
input from both sides we only need four

00:04:07.860 --> 00:04:10.640 
input from both sides we only need four
lines<00:04:08.430> coming<00:04:08.820> off<00:04:09.000> of<00:04:09.060> our<00:04:09.300> control<00:04:09.810> line<00:04:10.020> all

00:04:10.640 --> 00:04:10.650 
lines coming off of our control line all

00:04:10.650 --> 00:04:12.440 
lines coming off of our control line all
right<00:04:10.770> so<00:04:10.890> that<00:04:11.040> makes<00:04:11.250> this<00:04:11.340> really<00:04:11.850> easy<00:04:12.150> to

00:04:12.440 --> 00:04:12.450 
right so that makes this really easy to

00:04:12.450 --> 00:04:14.480 
right so that makes this really easy to
stack<00:04:12.690> up<00:04:12.870> because<00:04:12.900> anytime<00:04:13.740> we're<00:04:14.130> turning

00:04:14.480 --> 00:04:14.490 
stack up because anytime we're turning

00:04:14.490 --> 00:04:17.270 
stack up because anytime we're turning
this<00:04:14.910> line<00:04:15.240> off<00:04:15.480> over<00:04:15.810> here<00:04:15.990> well<00:04:16.560> this<00:04:17.100> one's

00:04:17.270 --> 00:04:17.280 
this line off over here well this one's

00:04:17.280 --> 00:04:19.070 
this line off over here well this one's
being<00:04:17.459> affected<00:04:17.940> this<00:04:18.299> one's<00:04:18.540> being<00:04:18.690> affected

00:04:19.070 --> 00:04:19.080 
being affected this one's being affected

00:04:19.080 --> 00:04:21.530 
being affected this one's being affected
all<00:04:19.200> of<00:04:19.260> them<00:04:19.770> are<00:04:19.890> being<00:04:20.100> affected<00:04:20.190> so<00:04:20.760> we<00:04:21.330> can

00:04:21.530 --> 00:04:21.540 
all of them are being affected so we can

00:04:21.540 --> 00:04:24.240 
all of them are being affected so we can
control<00:04:21.900> multiple<00:04:22.350> bits<00:04:22.770> with

00:04:24.240 --> 00:04:24.250 
control multiple bits with

00:04:24.250 --> 00:04:27.120 
control multiple bits with
one<00:04:24.370> line<00:04:24.610> and<00:04:24.910> that's<00:04:25.540> nice<00:04:26.080> and<00:04:26.320> simple<00:04:26.500> like

00:04:27.120 --> 00:04:27.130 
one line and that's nice and simple like

00:04:27.130 --> 00:04:29.250 
one line and that's nice and simple like
I<00:04:27.250> said<00:04:27.460> sometimes<00:04:27.490> this<00:04:28.300> gets<00:04:28.600> in<00:04:28.840> the<00:04:29.020> way

00:04:29.250 --> 00:04:29.260 
I said sometimes this gets in the way

00:04:29.260 --> 00:04:31.470 
I said sometimes this gets in the way
because<00:04:29.650> we'll<00:04:30.400> need<00:04:30.520> to<00:04:30.700> do<00:04:30.820> some<00:04:31.030> funky

00:04:31.470 --> 00:04:31.480 
because we'll need to do some funky

00:04:31.480 --> 00:04:33.990 
because we'll need to do some funky
staggering<00:04:32.020> but<00:04:32.260> other<00:04:32.620> times<00:04:33.040> it's<00:04:33.700> really

00:04:33.990 --> 00:04:34.000 
staggering but other times it's really

00:04:34.000 --> 00:04:35.910 
staggering but other times it's really
useful<00:04:34.150> this<00:04:34.450> is<00:04:34.600> one<00:04:34.750> of<00:04:34.780> those<00:04:34.960> times<00:04:35.020> and<00:04:35.530> I

00:04:35.910 --> 00:04:35.920 
useful this is one of those times and I

00:04:35.920 --> 00:04:37.950 
useful this is one of those times and I
like<00:04:36.100> simple<00:04:36.340> things<00:04:36.490> so<00:04:36.880> I'm<00:04:37.090> pretty<00:04:37.660> happy

00:04:37.950 --> 00:04:37.960 
like simple things so I'm pretty happy

00:04:37.960 --> 00:04:40.260 
like simple things so I'm pretty happy
with<00:04:38.110> this<00:04:38.400> anyway<00:04:39.400> I<00:04:39.430> just<00:04:39.580> wanted<00:04:40.000> to<00:04:40.060> show

00:04:40.260 --> 00:04:40.270 
with this anyway I just wanted to show

00:04:40.270 --> 00:04:42.990 
with this anyway I just wanted to show
you<00:04:40.300> another<00:04:40.840> design<00:04:41.320> for<00:04:41.800> some<00:04:42.220> memory<00:04:42.580> this

00:04:42.990 --> 00:04:43.000 
you another design for some memory this

00:04:43.000 --> 00:04:44.940 
you another design for some memory this
one's<00:04:43.240> arranged<00:04:43.780> differently<00:04:43.960> it's<00:04:44.380> used

00:04:44.940 --> 00:04:44.950 
one's arranged differently it's used

00:04:44.950 --> 00:04:46.530 
one's arranged differently it's used
differently<00:04:45.460> and<00:04:45.700> at<00:04:45.820> some<00:04:46.090> point<00:04:46.360> I'm

00:04:46.530 --> 00:04:46.540 
differently and at some point I'm

00:04:46.540 --> 00:04:48.690 
differently and at some point I'm
probably<00:04:46.960> going<00:04:47.200> to<00:04:47.290> get<00:04:47.440> into<00:04:47.830> some<00:04:48.460> of<00:04:48.580> the

00:04:48.690 --> 00:04:48.700 
probably going to get into some of the

00:04:48.700 --> 00:04:50.880 
probably going to get into some of the
uses<00:04:48.910> for<00:04:49.150> all<00:04:49.600> these<00:04:50.170> different<00:04:50.440> types<00:04:50.740> of

00:04:50.880 --> 00:04:50.890 
uses for all these different types of

00:04:50.890 --> 00:04:53.760 
uses for all these different types of
memory<00:04:51.300> anyway<00:04:52.300> thanks<00:04:52.810> for<00:04:52.840> watching<00:04:53.290> and<00:04:53.440> I

00:04:53.760 --> 00:04:53.770 
memory anyway thanks for watching and I

00:04:53.770 --> 00:04:57.030 
memory anyway thanks for watching and I
will<00:04:53.800> see<00:04:53.980> you<00:04:54.250> guys<00:04:54.340> next<00:04:54.520> time

