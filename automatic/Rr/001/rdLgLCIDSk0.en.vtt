WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:04.820 

this<00:00:00.780> is<00:00:01.140> a<00:00:01.589> lattice<00:00:02.720> fpga<00:00:03.720> evaluation<00:00:04.560> board

00:00:04.820 --> 00:00:04.830 
this is a lattice fpga evaluation board

00:00:04.830 --> 00:00:10.100 
this is a lattice fpga evaluation board
and<00:00:06.020> it<00:00:07.020> comes<00:00:07.379> with<00:00:07.680> a<00:00:08.480> bunch<00:00:09.480> of<00:00:09.690> lattice

00:00:10.100 --> 00:00:10.110 
and it comes with a bunch of lattice

00:00:10.110 --> 00:00:12.919 
and it comes with a bunch of lattice
tools<00:00:10.500> if<00:00:11.099> you<00:00:11.429> want<00:00:11.610> to<00:00:11.730> use<00:00:11.910> those<00:00:12.150> but

00:00:12.919 --> 00:00:12.929 
tools if you want to use those but

00:00:12.929 --> 00:00:15.259 
tools if you want to use those but
thanks<00:00:13.530> to<00:00:13.650> the<00:00:13.769> people<00:00:13.920> over<00:00:14.460> a<00:00:14.519> project<00:00:14.849> I

00:00:15.259 --> 00:00:15.269 
thanks to the people over a project I

00:00:15.269 --> 00:00:18.740 
thanks to the people over a project I
still<00:00:15.809> you<00:00:16.410> can<00:00:16.619> now<00:00:16.859> run<00:00:17.820> an<00:00:17.970> open-source

00:00:18.740 --> 00:00:18.750 
still you can now run an open-source

00:00:18.750 --> 00:00:23.390 
still you can now run an open-source
tool<00:00:19.020> chain<00:00:19.320> to<00:00:19.770> compile<00:00:20.630> very<00:00:21.630> log<00:00:22.039> of<00:00:23.039> for

00:00:23.390 --> 00:00:23.400 
tool chain to compile very log of for

00:00:23.400 --> 00:00:27.080 
tool chain to compile very log of for
this<00:00:23.580> FPGA<00:00:24.119> so<00:00:24.750> you<00:00:24.810> get<00:00:25.519> very<00:00:26.519> low<00:00:26.699> compiler

00:00:27.080 --> 00:00:27.090 
this FPGA so you get very low compiler

00:00:27.090 --> 00:00:29.120 
this FPGA so you get very low compiler
and<00:00:27.630> all<00:00:28.019> the<00:00:28.140> tools<00:00:28.349> to<00:00:28.529> download<00:00:28.859> it<00:00:28.980> onto

00:00:29.120 --> 00:00:29.130 
and all the tools to download it onto

00:00:29.130 --> 00:00:32.240 
and all the tools to download it onto
the<00:00:29.310> FPGA<00:00:29.900> what<00:00:30.900> better<00:00:31.230> thing<00:00:31.529> to<00:00:31.560> do<00:00:31.830> with<00:00:32.099> an

00:00:32.240 --> 00:00:32.250 
the FPGA what better thing to do with an

00:00:32.250 --> 00:00:34.880 
the FPGA what better thing to do with an
open-source<00:00:32.759> tool<00:00:33.030> chain<00:00:33.300> than<00:00:33.600> to<00:00:33.840> build<00:00:34.079> an

00:00:34.880 --> 00:00:34.890 
open-source tool chain than to build an

00:00:34.890 --> 00:00:37.370 
open-source tool chain than to build an
open-source<00:00:35.460> cpu<00:00:35.910> for<00:00:36.120> it<00:00:36.239> and<00:00:36.630> run<00:00:36.899> some<00:00:37.110> open

00:00:37.370 --> 00:00:37.380 
open-source cpu for it and run some open

00:00:37.380 --> 00:00:46.299 
open-source cpu for it and run some open
source<00:00:37.500> software<00:00:37.710> on<00:00:38.070> it<00:00:38.300> here<00:00:39.300> it<00:00:39.390> is<00:00:42.500> so<00:00:43.500> here

00:00:46.299 --> 00:00:46.309 

00:00:46.309 --> 00:00:56.479 

is<00:00:47.309> the<00:00:49.190> barrel<00:00:50.190> lock<00:00:50.340> code<00:00:53.239> for<00:00:54.239> the<00:00:54.360> CPU<00:00:55.489> this

00:00:56.479 --> 00:00:56.489 
is the barrel lock code for the CPU this

00:00:56.489 --> 00:01:04.520 
is the barrel lock code for the CPU this
is<00:00:57.440> 16<00:00:58.440> bit<00:00:58.649> j1<00:00:59.399> CPU<00:01:01.460> it's<00:01:02.460> not<00:01:02.670> a<00:01:02.699> big<00:01:03.500> piece<00:01:04.500> of

00:01:04.520 --> 00:01:04.530 
is 16 bit j1 CPU it's not a big piece of

00:01:04.530 --> 00:01:09.770 
is 16 bit j1 CPU it's not a big piece of
error<00:01:04.860> log<00:01:05.100> I<00:01:07.820> already<00:01:08.820> had<00:01:08.939> it<00:01:09.060> compiled<00:01:09.390> so

00:01:09.770 --> 00:01:09.780 
error log I already had it compiled so

00:01:09.780 --> 00:01:13.700 
error log I already had it compiled so
we're<00:01:10.110> going<00:01:10.380> to<00:01:10.500> do<00:01:11.510> is<00:01:12.510> send<00:01:13.110> it<00:01:13.260> down<00:01:13.439> to<00:01:13.470> the

00:01:13.700 --> 00:01:13.710 
we're going to do is send it down to the

00:01:13.710 --> 00:01:21.950 
we're going to do is send it down to the
hardware

00:01:21.950 --> 00:01:21.960 

00:01:21.960 --> 00:01:24.830 

there<00:01:22.380> we<00:01:22.470> go<00:01:22.730> it's<00:01:23.730> the<00:01:23.850> download<00:01:24.240> it's<00:01:24.690> all

00:01:24.830 --> 00:01:24.840 
there we go it's the download it's all

00:01:24.840 --> 00:01:35.150 
there we go it's the download it's all
set<00:01:26.000> and<00:01:27.000> then<00:01:32.930> connect<00:01:33.930> to<00:01:33.990> it<00:01:34.140> so<00:01:34.979> this<00:01:35.100> is

00:01:35.150 --> 00:01:35.160 
set and then connect to it so this is

00:01:35.160 --> 00:01:37.880 
set and then connect to it so this is
the<00:01:35.280> j1<00:01:35.790> that's<00:01:36.000> running<00:01:36.240> on<00:01:36.510> the<00:01:36.870> FPGA<00:01:37.440> and

00:01:37.880 --> 00:01:37.890 
the j1 that's running on the FPGA and

00:01:37.890 --> 00:01:40.430 
the j1 that's running on the FPGA and
it's<00:01:38.790> running<00:01:39.000> swap<00:01:39.540> fourth<00:01:39.810> which<00:01:40.080> is<00:01:40.380> a

00:01:40.430 --> 00:01:40.440 
it's running swap fourth which is a

00:01:40.440 --> 00:01:42.590 
it's running swap fourth which is a
small<00:01:41.160> fourth<00:01:41.490> implementation<00:01:42.300> it<00:01:42.420> takes

00:01:42.590 --> 00:01:42.600 
small fourth implementation it takes

00:01:42.600 --> 00:01:45.680 
small fourth implementation it takes
about<00:01:42.750> five<00:01:43.110> k<00:01:43.380> total<00:01:44.210> which<00:01:45.210> gives<00:01:45.479> an

00:01:45.680 --> 00:01:45.690 
about five k total which gives an

00:01:45.690 --> 00:01:47.780 
about five k total which gives an
interactive<00:01:46.290> development<00:01:46.650> environment<00:01:47.190> here

00:01:47.780 --> 00:01:47.790 
interactive development environment here

00:01:47.790 --> 00:01:50.840 
interactive development environment here
I'm<00:01:47.970> running<00:01:48.270> a<00:01:48.330> shell<00:01:48.630> on<00:01:48.930> the<00:01:49.380> PC<00:01:49.800> all<00:01:50.580> it

00:01:50.840 --> 00:01:50.850 
I'm running a shell on the PC all it

00:01:50.850 --> 00:01:52.310 
I'm running a shell on the PC all it
does<00:01:50.970> is<00:01:51.150> send<00:01:51.330> commands<00:01:51.660> back<00:01:51.930> to<00:01:52.080> that<00:01:52.229> you

00:01:52.310 --> 00:01:52.320 
does is send commands back to that you

00:01:52.320 --> 00:01:54.080 
does is send commands back to that you
are<00:01:52.470> just<00:01:52.770> another<00:01:53.070> housekeeping<00:01:53.850> things

00:01:54.080 --> 00:01:54.090 
are just another housekeeping things

00:01:54.090 --> 00:01:56.990 
are just another housekeeping things
everything<00:01:54.990> you<00:01:55.080> see<00:01:55.259> here<00:01:55.500> is<00:01:55.710> running<00:01:56.190> on

00:01:56.990 --> 00:01:57.000 
everything you see here is running on

00:01:57.000 --> 00:02:00.999 
everything you see here is running on
the<00:01:57.810> FPGA<00:01:58.649> itself

00:02:00.999 --> 00:02:01.009 
the FPGA itself

00:02:01.009 --> 00:02:06.020 
the FPGA itself
it's<00:02:02.009> a<00:02:02.130> fourth<00:02:03.500> find<00:02:04.500> out<00:02:04.680> what<00:02:05.460> its<00:02:05.640> symbols

00:02:06.020 --> 00:02:06.030 
it's a fourth find out what its symbols

00:02:06.030 --> 00:02:10.910 
it's a fourth find out what its symbols
are<00:02:08.119> this<00:02:09.119> particular<00:02:09.690> hardware<00:02:10.470> version

00:02:10.910 --> 00:02:10.920 
are this particular hardware version

00:02:10.920 --> 00:02:14.240 
are this particular hardware version
it's<00:02:11.160> hooked<00:02:11.489> up<00:02:11.670> to<00:02:11.910> the<00:02:12.030> LEDs<00:02:12.660> so<00:02:13.650> for

00:02:14.240 --> 00:02:14.250 
it's hooked up to the LEDs so for

00:02:14.250 --> 00:02:22.310 
it's hooked up to the LEDs so for
example<00:02:14.760> I<00:02:15.230> can<00:02:16.230> switch<00:02:16.890> them<00:02:17.070> on<00:02:20.390> and<00:02:21.390> switch

00:02:22.310 --> 00:02:22.320 
example I can switch them on and switch

00:02:22.320 --> 00:02:36.020 
example I can switch them on and switch
them<00:02:22.440> off<00:02:25.820> vicious<00:02:32.390> word<00:02:33.390> here<00:02:34.430> to<00:02:35.430> counter<00:02:35.790> 30

00:02:36.020 --> 00:02:36.030 
them off vicious word here to counter 30

00:02:36.030 --> 00:02:44.390 
them off vicious word here to counter 30
to<00:02:39.170> send<00:02:40.170> the<00:02:40.290> counter<00:02:40.709> to<00:02:40.860> the<00:02:40.980> enemy's<00:02:43.400> delay

00:02:44.390 --> 00:02:44.400 
to send the counter to the enemy's delay

00:02:44.400 --> 00:02:51.530 
to send the counter to the enemy's delay
a<00:02:45.980> tenth<00:02:46.980> of<00:02:47.100> a<00:02:47.190> second<00:02:50.030> so<00:02:51.030> now<00:02:51.150> I've<00:02:51.299> made<00:02:51.480> a

00:02:51.530 --> 00:02:51.540 
a tenth of a second so now I've made a

00:02:51.540 --> 00:02:59.260 
a tenth of a second so now I've made a
new<00:02:51.780> word<00:02:52.019> blink<00:02:54.350> run<00:02:55.350> it

00:02:59.260 --> 00:02:59.270 

00:02:59.270 --> 00:03:02.949 

go

00:03:02.949 --> 00:03:02.959 

00:03:02.959 --> 00:03:13.539 

got<00:03:03.620> some<00:03:03.769> other<00:03:03.980> demos<00:03:04.400> here<00:03:04.700> is<00:03:12.549> Easter

00:03:13.539 --> 00:03:13.549 
got some other demos here is Easter

00:03:13.549 --> 00:03:18.160 
got some other demos here is Easter
calculation<00:03:14.209> demo<00:03:16.750> looking<00:03:17.750> at<00:03:18.019> the

00:03:18.160 --> 00:03:18.170 
calculation demo looking at the

00:03:18.170 --> 00:03:20.349 
calculation demo looking at the
available<00:03:18.620> words<00:03:18.890> we've<00:03:19.129> now<00:03:19.310> got<00:03:19.609> a<00:03:19.819> new<00:03:20.120> word

00:03:20.349 --> 00:03:20.359 
available words we've now got a new word

00:03:20.359 --> 00:03:27.490 
available words we've now got a new word
Easter<00:03:21.010> which<00:03:22.209> will<00:03:23.209> tell<00:03:23.450> us<00:03:26.109> when<00:03:27.109> the<00:03:27.319> date

00:03:27.490 --> 00:03:27.500 
Easter which will tell us when the date

00:03:27.500 --> 00:03:34.179 
Easter which will tell us when the date
of<00:03:27.680> Easter<00:03:28.159> is<00:03:28.750> in<00:03:29.750> 2016<00:03:30.709> amazing<00:03:33.040> so<00:03:34.040> this

00:03:34.179 --> 00:03:34.189 
of Easter is in 2016 amazing so this

00:03:34.189 --> 00:03:36.970 
of Easter is in 2016 amazing so this
board<00:03:34.519> is<00:03:34.849> hooked<00:03:35.810> up<00:03:35.959> to<00:03:36.079> the<00:03:36.170> you<00:03:36.319> are<00:03:36.500> it's

00:03:36.970 --> 00:03:36.980 
board is hooked up to the you are it's

00:03:36.980 --> 00:03:40.509 
board is hooked up to the you are it's
got<00:03:37.190> the<00:03:37.459> LEDs<00:03:37.940> hooked<00:03:38.209> up<00:03:38.420> it<00:03:39.230> also<00:03:39.680> has<00:03:40.159> the

00:03:40.509 --> 00:03:40.519 
got the LEDs hooked up it also has the

00:03:40.519 --> 00:03:45.460 
got the LEDs hooked up it also has the
pin<00:03:41.359> header<00:03:41.629> here<00:03:41.930> connected<00:03:42.709> and<00:03:44.440> plug<00:03:45.440> a

00:03:45.460 --> 00:03:45.470 
pin header here connected and plug a

00:03:45.470 --> 00:03:52.460 
pin header here connected and plug a
probe<00:03:45.859> in<00:03:46.190> onto<00:03:46.909> that<00:03:47.060> header

00:03:52.460 --> 00:03:52.470 

00:03:52.470 --> 00:03:57.920 

good<00:03:53.100> then<00:03:53.900> make<00:03:56.360> let<00:03:57.360> me<00:03:57.450> free<00:03:57.660> up<00:03:57.780> some

00:03:57.920 --> 00:03:57.930 
good then make let me free up some

00:03:57.930 --> 00:04:08.750 
good then make let me free up some
memory<00:04:05.090> start<00:04:06.090> an<00:04:06.300> infinite<00:04:06.690> loop<00:04:06.840> and<00:04:07.830> the

00:04:08.750 --> 00:04:08.760 
memory start an infinite loop and the

00:04:08.760 --> 00:04:14.180 
memory start an infinite loop and the
pin<00:04:09.510> header<00:04:09.780> is<00:04:10.080> on<00:04:11.270> port<00:04:12.270> number<00:04:12.570> two<00:04:13.070> so<00:04:14.070> I'll

00:04:14.180 --> 00:04:14.190 
pin header is on port number two so I'll

00:04:14.190 --> 00:04:18.979 
pin header is on port number two so I'll
write<00:04:14.370> a<00:04:14.400> zero<00:04:14.730> two<00:04:15.030> and<00:04:17.390> then<00:04:18.390> write<00:04:18.630> a<00:04:18.660> one

00:04:18.979 --> 00:04:18.989 
write a zero two and then write a one

00:04:18.989 --> 00:04:23.440 
write a zero two and then write a one
for<00:04:19.260> it<00:04:21.440> and<00:04:22.440> just<00:04:22.620> repeat<00:04:22.890> indefinitely

00:04:23.440 --> 00:04:23.450 
for it and just repeat indefinitely

00:04:23.450 --> 00:04:28.430 
for it and just repeat indefinitely
that's<00:04:24.450> made<00:04:24.630> a<00:04:24.660> new<00:04:24.840> work<00:04:25.020> toggle<00:04:25.530> I<00:04:27.440> can

00:04:28.430 --> 00:04:28.440 
that's made a new work toggle I can

00:04:28.440 --> 00:04:32.620 
that's made a new work toggle I can
execute<00:04:28.710> it

00:04:32.620 --> 00:04:32.630 

00:04:32.630 --> 00:04:37.310 

there<00:04:33.630> you<00:04:33.720> see<00:04:34.220> nice<00:04:35.220> clean<00:04:35.640> square<00:04:36.060> wave<00:04:36.320> one

00:04:37.310 --> 00:04:37.320 
there you see nice clean square wave one

00:04:37.320 --> 00:04:39.410 
there you see nice clean square wave one
megahertz<00:04:37.650> so<00:04:38.280> it's<00:04:38.430> a<00:04:38.520> twelve<00:04:38.850> the<00:04:39.030> CPU<00:04:39.360> is

00:04:39.410 --> 00:04:39.420 
megahertz so it's a twelve the CPU is

00:04:39.420 --> 00:04:41.360 
megahertz so it's a twelve the CPU is
running<00:04:39.450> on<00:04:39.720> a<00:04:39.750> 12<00:04:40.050> minutes<00:04:40.470> clock<00:04:40.680> and<00:04:41.220> it

00:04:41.360 --> 00:04:41.370 
running on a 12 minutes clock and it

00:04:41.370 --> 00:04:43.370 
running on a 12 minutes clock and it
takes<00:04:41.550> 12<00:04:41.850> cycles<00:04:42.180> to<00:04:42.570> it<00:04:42.690> to<00:04:42.810> keep<00:04:42.960> that<00:04:42.990> loop

00:04:43.370 --> 00:04:43.380 
takes 12 cycles to it to keep that loop

00:04:43.380 --> 00:04:47.600 
takes 12 cycles to it to keep that loop
total<00:04:44.000> so<00:04:45.000> you<00:04:45.060> get<00:04:45.360> one<00:04:46.260> megahertz<00:04:46.950> as<00:04:47.550> a

00:04:47.600 --> 00:04:47.610 
total so you get one megahertz as a

00:04:47.610 --> 00:04:51.190 
total so you get one megahertz as a
square<00:04:47.940> wave<00:04:48.230> that's

00:04:51.190 --> 00:04:51.200 
square wave that's

00:04:51.200 --> 00:04:53.620 
square wave that's
open-source<00:04:51.950> software<00:04:52.250> stack<00:04:52.700> running<00:04:53.210> on<00:04:53.510> an

00:04:53.620 --> 00:04:53.630 
open-source software stack running on an

00:04:53.630 --> 00:04:56.530 
open-source software stack running on an
open-source<00:04:54.140> CPU<00:04:54.710> built<00:04:55.520> using<00:04:55.790> open-source

00:04:56.530 --> 00:04:56.540 
open-source CPU built using open-source

00:04:56.540 --> 00:05:01.030 
open-source CPU built using open-source
tools<00:04:57.290> for<00:04:57.950> the<00:04:58.040> first<00:04:58.220> time<00:04:58.520> on<00:04:59.170> an<00:05:00.170> FPGA

00:05:01.030 --> 00:05:01.040 
tools for the first time on an FPGA

00:05:01.040 --> 00:05:04.060 
tools for the first time on an FPGA
that's<00:05:01.700> very<00:05:01.910> much

