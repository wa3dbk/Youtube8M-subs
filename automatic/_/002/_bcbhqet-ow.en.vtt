WEBVTT
Kind: captions
Language: en

00:00:00.380 --> 00:00:03.139 

welcome<00:00:01.380> to<00:00:01.530> lethal<00:00:02.250> hammers<00:00:02.669> YouTube

00:00:03.139 --> 00:00:03.149 
welcome to lethal hammers YouTube

00:00:03.149 --> 00:00:04.550 
welcome to lethal hammers YouTube
channel<00:00:03.510> today<00:00:03.899> we're<00:00:04.110> going<00:00:04.230> to<00:00:04.319> be<00:00:04.410> looking

00:00:04.550 --> 00:00:04.560 
channel today we're going to be looking

00:00:04.560 --> 00:00:08.179 
channel today we're going to be looking
at<00:00:04.830> the<00:00:04.950> 980<00:00:05.520> X<00:00:06.109> processor<00:00:07.109> from<00:00:07.350> Intel<00:00:07.830> the

00:00:08.179 --> 00:00:08.189 
at the 980 X processor from Intel the

00:00:08.189 --> 00:00:11.060 
at the 980 X processor from Intel the
newest<00:00:08.460> six<00:00:08.700> core<00:00:08.940> processor<00:00:09.920> what<00:00:10.920> we're

00:00:11.060 --> 00:00:11.070 
newest six core processor what we're

00:00:11.070 --> 00:00:12.830 
newest six core processor what we're
going<00:00:11.190> to<00:00:11.219> be<00:00:11.370> doing<00:00:11.550> is<00:00:11.940> showing<00:00:12.240> you<00:00:12.660> how<00:00:12.780> to

00:00:12.830 --> 00:00:12.840 
going to be doing is showing you how to

00:00:12.840 --> 00:00:14.900 
going to be doing is showing you how to
overclock<00:00:13.349> this<00:00:13.740> chip<00:00:14.009> to<00:00:14.040> four<00:00:14.370> point<00:00:14.639> four

00:00:14.900 --> 00:00:14.910 
overclock this chip to four point four

00:00:14.910 --> 00:00:17.689 
overclock this chip to four point four
four<00:00:15.120> gigahertz<00:00:16.250> today<00:00:17.250> we're<00:00:17.430> going<00:00:17.520> to<00:00:17.609> be

00:00:17.689 --> 00:00:17.699 
four gigahertz today we're going to be

00:00:17.699 --> 00:00:22.340 
four gigahertz today we're going to be
using<00:00:17.910> the<00:00:18.119> EVGA<00:00:18.480> x58<00:00:19.939> 3-way<00:00:20.939> SLI<00:00:21.350> classified

00:00:22.340 --> 00:00:22.350 
using the EVGA x58 3-way SLI classified

00:00:22.350 --> 00:00:27.589 
using the EVGA x58 3-way SLI classified
board<00:00:23.060> typically<00:00:24.060> known<00:00:24.269> as<00:00:24.300> the<00:00:24.600> e<00:00:24.920> 760<00:00:26.599> very

00:00:27.589 --> 00:00:27.599 
board typically known as the e 760 very

00:00:27.599 --> 00:00:30.950 
board typically known as the e 760 very
solid<00:00:27.990> board<00:00:28.260> and<00:00:28.699> runs<00:00:29.699> and<00:00:30.119> plays<00:00:30.330> very

00:00:30.950 --> 00:00:30.960 
solid board and runs and plays very

00:00:30.960 --> 00:00:33.950 
solid board and runs and plays very
nicely<00:00:31.289> with<00:00:31.619> this<00:00:31.800> chip<00:00:32.420> so<00:00:33.420> let's<00:00:33.780> jump

00:00:33.950 --> 00:00:33.960 
nicely with this chip so let's jump

00:00:33.960 --> 00:00:35.389 
nicely with this chip so let's jump
right<00:00:34.020> in<00:00:34.260> here<00:00:34.500> what<00:00:34.800> a<00:00:34.829> work<00:00:35.040> what<00:00:35.370> I

00:00:35.389 --> 00:00:35.399 
right in here what a work what I

00:00:35.399 --> 00:00:37.430 
right in here what a work what I
typically<00:00:35.760> do<00:00:36.000> is<00:00:36.030> as<00:00:36.899> you<00:00:37.020> can<00:00:37.140> see<00:00:37.260> we're<00:00:37.410> in

00:00:37.430 --> 00:00:37.440 
typically do is as you can see we're in

00:00:37.440 --> 00:00:39.920 
typically do is as you can see we're in
the<00:00:37.500> BIOS<00:00:37.829> already<00:00:38.190> on<00:00:39.059> this<00:00:39.270> specific<00:00:39.719> board

00:00:39.920 --> 00:00:39.930 
the BIOS already on this specific board

00:00:39.930 --> 00:00:41.600 
the BIOS already on this specific board
hit<00:00:40.079> the<00:00:40.200> Delete<00:00:40.469> key<00:00:40.500> during<00:00:40.950> post<00:00:41.219> brings

00:00:41.600 --> 00:00:41.610 
hit the Delete key during post brings

00:00:41.610 --> 00:00:43.670 
hit the Delete key during post brings
you<00:00:41.700> right<00:00:41.820> in<00:00:42.050> but<00:00:43.050> what<00:00:43.170> I<00:00:43.200> like<00:00:43.350> to<00:00:43.440> do<00:00:43.559> is

00:00:43.670 --> 00:00:43.680 
you right in but what I like to do is

00:00:43.680 --> 00:00:44.840 
you right in but what I like to do is
just<00:00:43.860> go<00:00:43.980> through<00:00:44.010> the<00:00:44.250> power<00:00:44.460> management

00:00:44.840 --> 00:00:44.850 
just go through the power management

00:00:44.850 --> 00:00:46.819 
just go through the power management
setup<00:00:45.180> get<00:00:45.989> rid<00:00:46.110> of<00:00:46.230> anything<00:00:46.440> that's<00:00:46.680> gonna

00:00:46.819 --> 00:00:46.829 
setup get rid of anything that's gonna

00:00:46.829 --> 00:00:49.250 
setup get rid of anything that's gonna
cause<00:00:47.100> problems<00:00:47.510> while<00:00:48.510> overclocking

00:00:49.250 --> 00:00:49.260 
cause problems while overclocking

00:00:49.260 --> 00:00:51.020 
cause problems while overclocking
typically<00:00:49.739> you<00:00:49.829> don't<00:00:50.010> want<00:00:50.190> to<00:00:50.280> have<00:00:50.670> sleep

00:00:51.020 --> 00:00:51.030 
typically you don't want to have sleep

00:00:51.030 --> 00:00:53.840 
typically you don't want to have sleep
mode<00:00:51.270> and<00:00:51.570> stuff<00:00:51.840> like<00:00:51.960> that<00:00:52.170> enabled<00:00:52.850> can

00:00:53.840 --> 00:00:53.850 
mode and stuff like that enabled can

00:00:53.850 --> 00:00:55.430 
mode and stuff like that enabled can
just<00:00:54.059> cause<00:00:54.239> problems<00:00:54.750> down<00:00:54.840> the<00:00:55.110> road<00:00:55.140> with

00:00:55.430 --> 00:00:55.440 
just cause problems down the road with

00:00:55.440 --> 00:00:57.470 
just cause problems down the road with
your<00:00:55.559> overclock<00:00:56.129> or<00:00:56.430> not<00:00:56.789> letting<00:00:57.360> your

00:00:57.470 --> 00:00:57.480 
your overclock or not letting your

00:00:57.480 --> 00:01:00.080 
your overclock or not letting your
system<00:00:57.840> wake<00:00:58.020> back<00:00:58.260> out<00:00:58.559> I<00:00:59.399> usually<00:00:59.760> like<00:01:00.000> to

00:01:00.080 --> 00:01:00.090 
system wake back out I usually like to

00:01:00.090 --> 00:01:02.840 
system wake back out I usually like to
go<00:01:00.210> in<00:01:00.390> as<00:01:00.539> well<00:01:00.570> and<00:01:01.109> boost<00:01:01.739> the<00:01:02.430> maximum

00:01:02.840 --> 00:01:02.850 
go in as well and boost the maximum

00:01:02.850 --> 00:01:06.950 
go in as well and boost the maximum
payload<00:01:03.090> signs<00:01:03.539> for<00:01:03.960> PCI<00:01:04.619> Express<00:01:04.979> slots<00:01:05.960> and

00:01:06.950 --> 00:01:06.960 
payload signs for PCI Express slots and

00:01:06.960 --> 00:01:08.570 
payload signs for PCI Express slots and
along<00:01:07.260> with<00:01:07.290> that<00:01:07.470> make<00:01:07.979> sure<00:01:08.159> our<00:01:08.189> boot

00:01:08.570 --> 00:01:08.580 
along with that make sure our boot

00:01:08.580 --> 00:01:11.300 
along with that make sure our boot
priorities<00:01:09.060> are<00:01:09.270> PCI<00:01:09.689> Express<00:01:10.070> for<00:01:11.070> a<00:01:11.100> niche

00:01:11.300 --> 00:01:11.310 
priorities are PCI Express for a niche

00:01:11.310 --> 00:01:15.679 
priorities are PCI Express for a niche
display<00:01:12.439> pretty<00:01:13.439> basic<00:01:13.860> settings<00:01:14.570> some<00:01:15.570> will

00:01:15.679 --> 00:01:15.689 
display pretty basic settings some will

00:01:15.689 --> 00:01:17.179 
display pretty basic settings some will
jump<00:01:15.930> into<00:01:16.080> is<00:01:16.350> a<00:01:16.380> frequency<00:01:16.799> and<00:01:17.040> voltage

00:01:17.179 --> 00:01:17.189 
jump into is a frequency and voltage

00:01:17.189 --> 00:01:19.910 
jump into is a frequency and voltage
control<00:01:18.049> we<00:01:19.049> already<00:01:19.259> know<00:01:19.380> that<00:01:19.409> we<00:01:19.680> want<00:01:19.890> to

00:01:19.910 --> 00:01:19.920 
control we already know that we want to

00:01:19.920 --> 00:01:22.340 
control we already know that we want to
get<00:01:20.130> to<00:01:20.540> roughly<00:01:21.540> around<00:01:21.630> four<00:01:21.900> point<00:01:22.140> four

00:01:22.340 --> 00:01:22.350 
get to roughly around four point four

00:01:22.350 --> 00:01:26.120 
get to roughly around four point four
four<00:01:22.560> gigs<00:01:23.119> on<00:01:24.119> the<00:01:24.600> processor<00:01:25.290> clock<00:01:25.560> so

00:01:26.120 --> 00:01:26.130 
four gigs on the processor clock so

00:01:26.130 --> 00:01:28.580 
four gigs on the processor clock so
let's<00:01:26.400> see<00:01:26.610> what<00:01:26.850> we<00:01:27.000> can<00:01:27.180> get<00:01:27.590> thirty-one

00:01:28.580 --> 00:01:28.590 
let's see what we can get thirty-one

00:01:28.590 --> 00:01:32.560 
let's see what we can get thirty-one
brings<00:01:29.009> us<00:01:29.159> at<00:01:29.340> four<00:01:29.549> point<00:01:29.820> one<00:01:30.710> thirty<00:01:31.710> three

00:01:32.560 --> 00:01:32.570 
brings us at four point one thirty three

00:01:32.570 --> 00:01:35.270 
brings us at four point one thirty three
should<00:01:33.570> get<00:01:33.720> us<00:01:33.840> close<00:01:34.439> we're<00:01:34.860> gonna<00:01:35.009> bump

00:01:35.270 --> 00:01:35.280 
should get us close we're gonna bump

00:01:35.280 --> 00:01:37.700 
should get us close we're gonna bump
that<00:01:35.460> up<00:01:35.520> here<00:01:36.119> I<00:01:36.329> think<00:01:37.020> it's<00:01:37.170> pretty<00:01:37.470> close

00:01:37.700 --> 00:01:37.710 
that up here I think it's pretty close

00:01:37.710 --> 00:01:41.539 
that up here I think it's pretty close
four<00:01:38.310> point<00:01:38.579> four<00:01:38.970> six<00:01:39.540> six<00:01:40.250> as<00:01:41.250> you<00:01:41.340> can<00:01:41.460> see

00:01:41.539 --> 00:01:41.549 
four point four six six as you can see

00:01:41.549 --> 00:01:43.130 
four point four six six as you can see
our<00:01:41.640> memory<00:01:41.939> is<00:01:41.970> not<00:01:42.180> exactly<00:01:42.570> where<00:01:42.810> we<00:01:42.960> would

00:01:43.130 --> 00:01:43.140 
our memory is not exactly where we would

00:01:43.140 --> 00:01:46.030 
our memory is not exactly where we would
want<00:01:43.560> it<00:01:44.060> I'll<00:01:45.060> say<00:01:45.240> here<00:01:45.450> we<00:01:45.540> are<00:01:45.570> running

00:01:46.030 --> 00:01:46.040 
want it I'll say here we are running

00:01:46.040 --> 00:01:48.380 
want it I'll say here we are running
1866<00:01:47.040> memory<00:01:47.399> in<00:01:47.460> this<00:01:47.640> case<00:01:47.880> so<00:01:48.119> we<00:01:48.149> would

00:01:48.380 --> 00:01:48.390 
1866 memory in this case so we would

00:01:48.390 --> 00:01:50.530 
1866 memory in this case so we would
like<00:01:48.479> to<00:01:48.630> get<00:01:48.720> as<00:01:48.840> close<00:01:49.140> to<00:01:49.200> that<00:01:49.380> as<00:01:49.470> possible

00:01:50.530 --> 00:01:50.540 
like to get as close to that as possible

00:01:50.540 --> 00:01:53.179 
like to get as close to that as possible
Sumer<00:01:51.540> the<00:01:51.689> server<00:01:52.350> a<00:01:52.380> divider<00:01:52.770> of<00:01:52.979> two

00:01:53.179 --> 00:01:53.189 
Sumer the server a divider of two

00:01:53.189 --> 00:01:57.109 
Sumer the server a divider of two
fourteen<00:01:53.670> lands<00:01:54.060> us<00:01:54.380> 1894<00:01:55.549> well<00:01:56.549> within<00:01:56.729> spec

00:01:57.109 --> 00:01:57.119 
fourteen lands us 1894 well within spec

00:01:57.119 --> 00:01:58.429 
fourteen lands us 1894 well within spec
on<00:01:57.299> this<00:01:57.450> memory<00:01:57.869> we<00:01:58.020> are<00:01:58.110> running<00:01:58.290> the

00:01:58.429 --> 00:01:58.439 
on this memory we are running the

00:01:58.439 --> 00:02:02.389 
on this memory we are running the
Corsair<00:01:58.860> dominators<00:02:00.229> so<00:02:01.229> they're<00:02:01.469> very<00:02:01.890> nice

00:02:02.389 --> 00:02:02.399 
Corsair dominators so they're very nice

00:02:02.399 --> 00:02:04.520 
Corsair dominators so they're very nice
I<00:02:02.939> don't<00:02:03.450> typically<00:02:03.780> mess<00:02:04.020> with<00:02:04.200> the<00:02:04.259> memory

00:02:04.520 --> 00:02:04.530 
I don't typically mess with the memory

00:02:04.530 --> 00:02:07.399 
I don't typically mess with the memory
lo<00:02:04.680> gap<00:02:04.890> I<00:02:05.100> know<00:02:05.219> some<00:02:05.520> people<00:02:05.640> have<00:02:06.409> good

00:02:07.399 --> 00:02:07.409 
lo gap I know some people have good

00:02:07.409 --> 00:02:09.229 
lo gap I know some people have good
results<00:02:07.829> with<00:02:07.979> it<00:02:08.129> but<00:02:08.429> I<00:02:08.489> typically<00:02:09.060> don't

00:02:09.229 --> 00:02:09.239 
results with it but I typically don't

00:02:09.239 --> 00:02:10.380 
results with it but I typically don't
mess<00:02:09.450> with<00:02:09.479> it

00:02:10.380 --> 00:02:10.390 
mess with it

00:02:10.390 --> 00:02:12.810 
mess with it
specific<00:02:11.170> settings<00:02:11.560> on<00:02:11.890> these<00:02:12.100> chips<00:02:12.520> are

00:02:12.810 --> 00:02:12.820 
specific settings on these chips are

00:02:12.820 --> 00:02:16.560 
specific settings on these chips are
nine<00:02:13.120> nine<00:02:13.360> nine<00:02:13.590> twenty<00:02:14.590> four<00:02:15.010> but<00:02:15.850> knowing

00:02:16.560 --> 00:02:16.570 
nine nine nine twenty four but knowing

00:02:16.570 --> 00:02:19.500 
nine nine nine twenty four but knowing
that<00:02:16.830> my<00:02:17.830> settings<00:02:18.280> from<00:02:18.610> before<00:02:19.030> that<00:02:19.360> I<00:02:19.390> do

00:02:19.500 --> 00:02:19.510 
that my settings from before that I do

00:02:19.510 --> 00:02:22.230 
that my settings from before that I do
hit<00:02:19.960> stable<00:02:20.440> for<00:02:20.680> a<00:02:20.920> nice<00:02:21.190> four<00:02:21.430> point<00:02:21.700> four<00:02:22.000> I

00:02:22.230 --> 00:02:22.240 
hit stable for a nice four point four I

00:02:22.240 --> 00:02:24.540 
hit stable for a nice four point four I
have<00:02:23.020> to<00:02:23.140> leave<00:02:23.320> these<00:02:23.530> settings<00:02:24.070> pretty

00:02:24.540 --> 00:02:24.550 
have to leave these settings pretty

00:02:24.550 --> 00:02:26.310 
have to leave these settings pretty
loose<00:02:24.820> so<00:02:25.000> I'm<00:02:25.060> gonna<00:02:25.180> leave<00:02:25.360> my<00:02:25.570> auto<00:02:25.810> for<00:02:26.200> now

00:02:26.310 --> 00:02:26.320 
loose so I'm gonna leave my auto for now

00:02:26.320 --> 00:02:28.620 
loose so I'm gonna leave my auto for now
and<00:02:27.250> if<00:02:27.340> we<00:02:27.490> run<00:02:27.670> into<00:02:27.790> any<00:02:27.880> issues<00:02:28.060> we<00:02:28.510> can

00:02:28.620 --> 00:02:28.630 
and if we run into any issues we can

00:02:28.630 --> 00:02:31.440 
and if we run into any issues we can
come<00:02:28.780> back<00:02:28.960> and<00:02:29.020> adjust<00:02:29.230> us<00:02:29.680> as<00:02:29.890> needed<00:02:30.450> the

00:02:31.440 --> 00:02:31.450 
come back and adjust us as needed the

00:02:31.450 --> 00:02:33.120 
come back and adjust us as needed the
next<00:02:31.660> thing<00:02:31.780> I<00:02:31.900> always<00:02:32.080> do<00:02:32.380> is<00:02:32.410> I<00:02:32.560> go<00:02:32.770> into<00:02:32.920> our

00:02:33.120 --> 00:02:33.130 
next thing I always do is I go into our

00:02:33.130 --> 00:02:36.450 
next thing I always do is I go into our
voltage<00:02:33.520> settings<00:02:34.030> I<00:02:34.420> always<00:02:35.100> go<00:02:36.100> without

00:02:36.450 --> 00:02:36.460 
voltage settings I always go without

00:02:36.460 --> 00:02:38.610 
voltage settings I always go without
Vedra<00:02:36.970> this<00:02:37.330> allows<00:02:37.660> you<00:02:37.930> to<00:02:38.080> set<00:02:38.290> your<00:02:38.320> system

00:02:38.610 --> 00:02:38.620 
Vedra this allows you to set your system

00:02:38.620 --> 00:02:42.120 
Vedra this allows you to set your system
up<00:02:38.950> to<00:02:38.980> pole<00:02:39.670> or<00:02:40.230> you<00:02:41.230> know<00:02:41.350> plus<00:02:41.620> or<00:02:41.800> minus

00:02:42.120 --> 00:02:42.130 
up to pole or you know plus or minus

00:02:42.130 --> 00:02:46.100 
up to pole or you know plus or minus
extra<00:02:42.850> voltage<00:02:43.240> as<00:02:43.420> needed<00:02:44.730> typically<00:02:45.730> to<00:02:45.850> get

00:02:46.100 --> 00:02:46.110 
extra voltage as needed typically to get

00:02:46.110 --> 00:02:48.360 
extra voltage as needed typically to get
4.4<00:02:47.110> on<00:02:47.260> this<00:02:47.410> chip<00:02:47.710> you're<00:02:47.890> gonna<00:02:47.980> need<00:02:48.190> at

00:02:48.360 --> 00:02:48.370 
4.4 on this chip you're gonna need at

00:02:48.370 --> 00:02:52.470 
4.4 on this chip you're gonna need at
least<00:02:48.400> one<00:02:48.850> point<00:02:49.060> four<00:02:49.540> five<00:02:51.210> volts<00:02:52.210> on<00:02:52.330> your

00:02:52.470 --> 00:02:52.480 
least one point four five volts on your

00:02:52.480 --> 00:02:55.200 
least one point four five volts on your
V<00:02:52.750> core<00:02:53.190> but<00:02:54.190> the<00:02:54.250> nice<00:02:54.400> thing<00:02:54.430> is<00:02:54.700> is<00:02:54.910> you<00:02:55.090> can

00:02:55.200 --> 00:02:55.210 
V core but the nice thing is is you can

00:02:55.210 --> 00:02:58.650 
V core but the nice thing is is you can
play<00:02:55.450> around<00:02:55.570> with<00:02:55.720> the<00:02:55.870> CPU<00:02:56.290> BTT<00:02:56.950> voltage<00:02:57.660> and

00:02:58.650 --> 00:02:58.660 
play around with the CPU BTT voltage and

00:02:58.660 --> 00:03:01.560 
play around with the CPU BTT voltage and
get<00:02:58.810> it<00:02:58.930> to<00:02:59.020> fluctuate<00:02:59.500> around<00:02:59.830> as<00:03:00.580> needed<00:03:00.640> so

00:03:01.560 --> 00:03:01.570 
get it to fluctuate around as needed so

00:03:01.570 --> 00:03:03.180 
get it to fluctuate around as needed so
usually<00:03:01.960> I'll<00:03:02.050> send<00:03:02.260> it<00:03:02.350> around<00:03:02.410> one<00:03:02.980> point

00:03:03.180 --> 00:03:03.190 
usually I'll send it around one point

00:03:03.190 --> 00:03:06.090 
usually I'll send it around one point
four<00:03:03.520> three<00:03:03.940> seven<00:03:04.210> five<00:03:04.630> and<00:03:05.020> I'll<00:03:05.770> get<00:03:05.920> my

00:03:06.090 --> 00:03:06.100 
four three seven five and I'll get my

00:03:06.100 --> 00:03:11.550 
four three seven five and I'll get my
vtt<00:03:06.730> a<00:03:06.760> nice<00:03:07.060> plus<00:03:07.750> 250<00:03:10.020> nice<00:03:11.020> thing<00:03:11.260> again

00:03:11.550 --> 00:03:11.560 
vtt a nice plus 250 nice thing again

00:03:11.560 --> 00:03:14.340 
vtt a nice plus 250 nice thing again
these<00:03:11.950> are<00:03:12.220> the<00:03:12.430> 32<00:03:12.850> nanometer<00:03:13.540> processors

00:03:14.340 --> 00:03:14.350 
these are the 32 nanometer processors

00:03:14.350 --> 00:03:16.350 
these are the 32 nanometer processors
that<00:03:14.380> run<00:03:14.709> really<00:03:15.010> cool<00:03:15.250> actually<00:03:15.910> use<00:03:16.060> a<00:03:16.090> lot

00:03:16.350 --> 00:03:16.360 
that run really cool actually use a lot

00:03:16.360 --> 00:03:19.650 
that run really cool actually use a lot
less<00:03:16.390> power<00:03:17.220> the<00:03:18.220> 45<00:03:18.640> nanometers<00:03:19.150> require<00:03:19.510> at

00:03:19.650 --> 00:03:19.660 
less power the 45 nanometers require at

00:03:19.660 --> 00:03:22.260 
less power the 45 nanometers require at
least<00:03:19.720> one<00:03:20.110> point<00:03:20.350> eight<00:03:20.650> on<00:03:20.890> the<00:03:21.220> PLL<00:03:21.670> at<00:03:21.970> our

00:03:22.260 --> 00:03:22.270 
least one point eight on the PLL at our

00:03:22.270 --> 00:03:26.250 
least one point eight on the PLL at our
CPU<00:03:22.840> PLL<00:03:23.110> IOH<00:03:23.950> PLL<00:03:24.750> nice<00:03:25.750> thing<00:03:25.959> is<00:03:26.080> we<00:03:26.230> can

00:03:26.250 --> 00:03:26.260 
CPU PLL IOH PLL nice thing is we can

00:03:26.260 --> 00:03:29.730 
CPU PLL IOH PLL nice thing is we can
drop<00:03:26.560> down<00:03:26.709> to<00:03:26.770> one<00:03:27.040> point<00:03:27.190> four<00:03:27.550> to<00:03:27.790> five<00:03:28.740> in

00:03:29.730 --> 00:03:29.740 
drop down to one point four to five in

00:03:29.740 --> 00:03:32.310 
drop down to one point four to five in
this<00:03:30.580> case<00:03:30.910> so<00:03:31.150> it's<00:03:31.300> actually<00:03:31.450> using<00:03:31.930> less

00:03:32.310 --> 00:03:32.320 
this case so it's actually using less

00:03:32.320 --> 00:03:35.010 
this case so it's actually using less
power<00:03:32.620> than<00:03:33.250> the<00:03:33.370> 45<00:03:33.820> nanometer<00:03:34.330> counterparts

00:03:35.010 --> 00:03:35.020 
power than the 45 nanometer counterparts

00:03:35.020 --> 00:03:38.490 
power than the 45 nanometer counterparts
usually<00:03:35.980> like<00:03:36.070> to<00:03:36.190> bump<00:03:36.340> up<00:03:36.520> my<00:03:36.550> QP<00:03:37.030> I<00:03:37.350> keep<00:03:38.350> it

00:03:38.490 --> 00:03:38.500 
usually like to bump up my QP I keep it

00:03:38.500 --> 00:03:41.390 
usually like to bump up my QP I keep it
in<00:03:38.590> line<00:03:38.940> around<00:03:39.940> one<00:03:40.090> point<00:03:40.360> two<00:03:40.540> seven<00:03:40.570> five

00:03:41.390 --> 00:03:41.400 
in line around one point two seven five

00:03:41.400 --> 00:03:44.850 
in line around one point two seven five
it's<00:03:42.400> usually<00:03:42.550> a<00:03:42.760> little<00:03:43.209> bit<00:03:43.330> better<00:03:43.650> to<00:03:44.650> run

00:03:44.850 --> 00:03:44.860 
it's usually a little bit better to run

00:03:44.860 --> 00:03:46.620 
it's usually a little bit better to run
it<00:03:44.950> at<00:03:45.070> those<00:03:45.190> higher<00:03:45.760> settings<00:03:46.209> than<00:03:46.390> the<00:03:46.480> one

00:03:46.620 --> 00:03:46.630 
it at those higher settings than the one

00:03:46.630 --> 00:03:48.720 
it at those higher settings than the one
point<00:03:46.900> one<00:03:47.050> then<00:03:47.200> it<00:03:47.320> comes<00:03:47.560> with<00:03:47.800> just<00:03:48.040> allows

00:03:48.720 --> 00:03:48.730 
point one then it comes with just allows

00:03:48.730 --> 00:03:50.610 
point one then it comes with just allows
a<00:03:48.760> little<00:03:49.300> bit<00:03:49.390> more<00:03:49.540> stability<00:03:49.900> across<00:03:50.200> the

00:03:50.610 --> 00:03:50.620 
a little bit more stability across the

00:03:50.620 --> 00:03:53.510 
a little bit more stability across the
board<00:03:50.890> obviously<00:03:51.850> I<00:03:52.300> always<00:03:52.480> set<00:03:52.780> the<00:03:52.930> dim

00:03:53.510 --> 00:03:53.520 
board obviously I always set the dim

00:03:53.520 --> 00:03:56.010 
board obviously I always set the dim
voltage<00:03:54.520> to<00:03:54.880> what<00:03:55.270> the<00:03:55.360> manufacturer<00:03:55.930> is

00:03:56.010 --> 00:03:56.020 
voltage to what the manufacturer is

00:03:56.020 --> 00:03:58.860 
voltage to what the manufacturer is
requiring<00:03:56.790> get<00:03:57.790> the<00:03:57.880> best<00:03:58.090> results<00:03:58.540> that<00:03:58.600> way

00:03:58.860 --> 00:03:58.870 
requiring get the best results that way

00:03:58.870 --> 00:04:01.550 
requiring get the best results that way
and<00:03:59.080> the<00:03:59.709> iov<00:04:00.160> core<00:04:00.400> I<00:04:00.459> don't<00:04:00.490> touch<00:04:00.880> the<00:04:01.360> i/o

00:04:01.550 --> 00:04:01.560 
and the iov core I don't touch the i/o

00:04:01.560 --> 00:04:05.670 
and the iov core I don't touch the i/o
IC<00:04:02.560> h<00:04:02.709> io<00:04:03.100> voltage<00:04:03.730> and<00:04:04.060> I<00:04:04.180> I<00:04:04.540> see<00:04:04.959> it<00:04:05.110> UV<00:04:05.380> core

00:04:05.670 --> 00:04:05.680 
IC h io voltage and I I see it UV core

00:04:05.680 --> 00:04:08.490 
IC h io voltage and I I see it UV core
those<00:04:06.459> are<00:04:06.580> all<00:04:06.870> things<00:04:07.870> I<00:04:08.080> don't<00:04:08.260> touch

00:04:08.490 --> 00:04:08.500 
those are all things I don't touch

00:04:08.500 --> 00:04:10.710 
those are all things I don't touch
unless<00:04:08.770> I'm<00:04:08.950> running<00:04:09.190> SLI<00:04:09.760> in<00:04:10.000> this<00:04:10.390> case<00:04:10.600> I

00:04:10.710 --> 00:04:10.720 
unless I'm running SLI in this case I

00:04:10.720 --> 00:04:11.970 
unless I'm running SLI in this case I
only<00:04:10.810> have<00:04:10.900> one<00:04:11.110> graphics<00:04:11.500> card<00:04:11.770> in<00:04:11.890> the

00:04:11.970 --> 00:04:11.980 
only have one graphics card in the

00:04:11.980 --> 00:04:14.550 
only have one graphics card in the
system<00:04:12.570> if<00:04:13.570> you<00:04:13.900> are<00:04:14.020> running<00:04:14.170> multiple

00:04:14.550 --> 00:04:14.560 
system if you are running multiple

00:04:14.560 --> 00:04:15.700 
system if you are running multiple
sometimes<00:04:15.220> you'd<00:04:15.370> be

00:04:15.700 --> 00:04:15.710 
sometimes you'd be

00:04:15.710 --> 00:04:19.210 
sometimes you'd be
just<00:04:15.920> ice<00:04:16.100> eh<00:04:16.340> and<00:04:16.640> IOH<00:04:16.940> beak<00:04:17.540> or<00:04:18.220> accordingly

00:04:19.210 --> 00:04:19.220 
just ice eh and IOH beak or accordingly

00:04:19.220 --> 00:04:21.400 
just ice eh and IOH beak or accordingly
usually<00:04:19.760> one<00:04:19.910> point<00:04:20.210> two<00:04:20.390> five<00:04:20.630> one<00:04:20.930> point<00:04:21.230> two

00:04:21.400 --> 00:04:21.410 
usually one point two five one point two

00:04:21.410 --> 00:04:24.970 
usually one point two five one point two
seven<00:04:21.440> five<00:04:22.570> usually<00:04:23.570> do<00:04:23.750> it<00:04:23.870> but<00:04:24.560> in<00:04:24.890> this

00:04:24.970 --> 00:04:24.980 
seven five usually do it but in this

00:04:24.980 --> 00:04:28.270 
seven five usually do it but in this
case<00:04:25.160> also<00:04:25.400> we<00:04:25.520> have<00:04:25.670> the<00:04:25.790> VTT<00:04:26.180> in<00:04:26.480> the<00:04:26.570> cpu<00:04:27.280> pwm

00:04:28.270 --> 00:04:28.280 
case also we have the VTT in the cpu pwm

00:04:28.280 --> 00:04:30.580 
case also we have the VTT in the cpu pwm
frequencies<00:04:29.050> since<00:04:30.050> we<00:04:30.170> are<00:04:30.320> going<00:04:30.380> to<00:04:30.500> be

00:04:30.580 --> 00:04:30.590 
frequencies since we are going to be

00:04:30.590 --> 00:04:32.260 
frequencies since we are going to be
pushing<00:04:31.010> the<00:04:31.130> system<00:04:31.490> quite<00:04:31.790> far<00:04:32.060> I'd<00:04:32.180> you

00:04:32.260 --> 00:04:32.270 
pushing the system quite far I'd you

00:04:32.270 --> 00:04:35.350 
pushing the system quite far I'd you
like<00:04:32.420> to<00:04:32.540> boost<00:04:32.750> those<00:04:32.930> up<00:04:33.370> the<00:04:34.370> CPU<00:04:34.550> PWM

00:04:35.350 --> 00:04:35.360 
like to boost those up the CPU PWM

00:04:35.360 --> 00:04:38.280 
like to boost those up the CPU PWM
frequency<00:04:35.530> you<00:04:36.530> can<00:04:36.650> either<00:04:36.860> go<00:04:36.950> 12<00:04:37.340> 10<00:04:37.790> hour

00:04:38.280 --> 00:04:38.290 
frequency you can either go 12 10 hour

00:04:38.290 --> 00:04:40.960 
frequency you can either go 12 10 hour
1333<00:04:39.290> depending<00:04:40.130> on<00:04:40.250> your<00:04:40.370> chip<00:04:40.670> that<00:04:40.850> you're

00:04:40.960 --> 00:04:40.970 
1333 depending on your chip that you're

00:04:40.970 --> 00:04:44.890 
1333 depending on your chip that you're
working<00:04:41.150> with<00:04:42.670> will<00:04:43.670> the<00:04:43.820> you<00:04:44.330> know<00:04:44.450> depict

00:04:44.890 --> 00:04:44.900 
working with will the you know depict

00:04:44.900 --> 00:04:46.870 
working with will the you know depict
what<00:04:45.530> you<00:04:45.650> really<00:04:45.860> want<00:04:46.100> to<00:04:46.190> go<00:04:46.310> with<00:04:46.520> but<00:04:46.760> in

00:04:46.870 --> 00:04:46.880 
what you really want to go with but in

00:04:46.880 --> 00:04:48.360 
what you really want to go with but in
this<00:04:46.940> case<00:04:47.150> we're<00:04:47.360> gonna<00:04:47.450> go<00:04:47.540> with<00:04:47.660> the<00:04:47.750> 12<00:04:48.020> 10

00:04:48.360 --> 00:04:48.370 
this case we're gonna go with the 12 10

00:04:48.370 --> 00:04:51.370 
this case we're gonna go with the 12 10
as<00:04:49.370> I<00:04:49.580> know<00:04:49.640> that<00:04:49.880> runs<00:04:50.150> fairly<00:04:50.720> staple<00:04:51.320> on

00:04:51.370 --> 00:04:51.380 
as I know that runs fairly staple on

00:04:51.380 --> 00:04:54.850 
as I know that runs fairly staple on
this<00:04:51.590> specific<00:04:52.460> ship<00:04:53.470> next<00:04:54.470> thing<00:04:54.590> we<00:04:54.680> want<00:04:54.830> to

00:04:54.850 --> 00:04:54.860 
this specific ship next thing we want to

00:04:54.860 --> 00:04:57.280 
this specific ship next thing we want to
jump<00:04:55.070> into<00:04:55.190> the<00:04:55.340> CPU<00:04:55.700> features<00:04:56.240> I'd<00:04:56.870> like<00:04:56.930> to

00:04:57.280 --> 00:04:57.290 
jump into the CPU features I'd like to

00:04:57.290 --> 00:05:00.610 
jump into the CPU features I'd like to
disable<00:04:57.860> all<00:04:58.010> the<00:04:58.190> extra<00:04:58.520> features<00:04:59.620> turbo

00:05:00.610 --> 00:05:00.620 
disable all the extra features turbo

00:05:00.620 --> 00:05:02.680 
disable all the extra features turbo
mode<00:05:00.800> function<00:05:01.010> seems<00:05:01.490> to<00:05:01.730> be<00:05:01.850> Auto<00:05:02.060> enabled

00:05:02.680 --> 00:05:02.690 
mode function seems to be Auto enabled

00:05:02.690 --> 00:05:06.070 
mode function seems to be Auto enabled
before<00:05:03.560> the<00:05:03.890> last<00:05:04.040> BIOS<00:05:04.400> update<00:05:04.730> this<00:05:05.000> was<00:05:05.210> you

00:05:06.070 --> 00:05:06.080 
before the last BIOS update this was you

00:05:06.080 --> 00:05:08.350 
before the last BIOS update this was you
could<00:05:06.290> disable<00:05:06.590> it<00:05:06.890> I<00:05:07.130> don't<00:05:08.030> know<00:05:08.120> if<00:05:08.240> it's

00:05:08.350 --> 00:05:08.360 
could disable it I don't know if it's

00:05:08.360 --> 00:05:09.940 
could disable it I don't know if it's
something<00:05:08.570> that<00:05:08.780> ties<00:05:08.990> to<00:05:09.230> the<00:05:09.320> turbo<00:05:09.710> mode

00:05:09.940 --> 00:05:09.950 
something that ties to the turbo mode

00:05:09.950 --> 00:05:12.310 
something that ties to the turbo mode
this<00:05:10.820> outside<00:05:11.390> one<00:05:11.600> but<00:05:11.780> that's<00:05:11.990> art<00:05:12.260> that's

00:05:12.310 --> 00:05:12.320 
this outside one but that's art that's

00:05:12.320 --> 00:05:14.890 
this outside one but that's art that's
disabled<00:05:13.130> in<00:05:13.220> the<00:05:13.310> other<00:05:13.430> section<00:05:13.910> the<00:05:14.570> qpi

00:05:14.890 --> 00:05:14.900 
disabled in the other section the qpi

00:05:14.900 --> 00:05:17.650 
disabled in the other section the qpi
frequency<00:05:15.470> I<00:05:15.740> like<00:05:15.980> to<00:05:16.130> boost<00:05:16.310> the<00:05:16.520> 6.4<00:05:17.240> these

00:05:17.650 --> 00:05:17.660 
frequency I like to boost the 6.4 these

00:05:17.660 --> 00:05:20.380 
frequency I like to boost the 6.4 these
chips<00:05:17.960> love<00:05:18.350> to<00:05:18.560> have<00:05:18.710> a<00:05:19.340> pretty<00:05:20.180> high

00:05:20.380 --> 00:05:20.390 
chips love to have a pretty high

00:05:20.390 --> 00:05:24.100 
chips love to have a pretty high
frequency<00:05:21.350> on<00:05:21.470> that<00:05:21.500> channel<00:05:21.950> so<00:05:22.840> but<00:05:23.840> outside

00:05:24.100 --> 00:05:24.110 
frequency on that channel so but outside

00:05:24.110 --> 00:05:26.170 
frequency on that channel so but outside
of<00:05:24.170> that<00:05:24.260> setting<00:05:25.160> this<00:05:25.280> look<00:05:25.460> okay<00:05:25.850> at<00:05:25.910> this

00:05:26.170 --> 00:05:26.180 
of that setting this look okay at this

00:05:26.180 --> 00:05:29.290 
of that setting this look okay at this
point<00:05:26.770> we<00:05:27.770> have<00:05:27.890> the<00:05:27.980> CPU<00:05:28.370> in<00:05:28.550> core<00:05:28.790> frequency

00:05:29.290 --> 00:05:29.300 
point we have the CPU in core frequency

00:05:29.300 --> 00:05:30.310 
point we have the CPU in core frequency
which<00:05:29.510> we<00:05:29.660> definitely<00:05:29.810> want<00:05:30.140> to<00:05:30.170> make<00:05:30.260> sure

00:05:30.310 --> 00:05:30.320 
which we definitely want to make sure

00:05:30.320 --> 00:05:33.370 
which we definitely want to make sure
it's<00:05:30.560> running<00:05:30.620> at<00:05:30.800> least<00:05:30.980> 2x<00:05:31.460> times<00:05:31.790> more<00:05:32.380> hour

00:05:33.370 --> 00:05:33.380 
it's running at least 2x times more hour

00:05:33.380 --> 00:05:35.410 
it's running at least 2x times more hour
at<00:05:33.530> least<00:05:33.770> two<00:05:34.010> times<00:05:34.310> our<00:05:34.700> target<00:05:35.240> memory

00:05:35.410 --> 00:05:35.420 
at least two times our target memory

00:05:35.420 --> 00:05:37.780 
at least two times our target memory
frequency<00:05:36.110> so<00:05:36.290> in<00:05:36.380> this<00:05:36.470> case<00:05:36.680> we'll<00:05:36.890> go<00:05:36.920> 20<00:05:37.550> X

00:05:37.780 --> 00:05:37.790 
frequency so in this case we'll go 20 X

00:05:37.790 --> 00:05:41.140 
frequency so in this case we'll go 20 X
which<00:05:38.750> puts<00:05:39.020> us<00:05:39.110> at<00:05:39.290> 30<00:05:39.560> 789<00:05:40.100> it's<00:05:40.790> actually<00:05:41.060> a

00:05:41.140 --> 00:05:41.150 
which puts us at 30 789 it's actually a

00:05:41.150 --> 00:05:45.280 
which puts us at 30 789 it's actually a
little<00:05:41.660> under<00:05:41.960> but<00:05:42.800> uh<00:05:43.720> I'm<00:05:44.720> gonna<00:05:44.870> say<00:05:45.080> that

00:05:45.280 --> 00:05:45.290 
little under but uh I'm gonna say that

00:05:45.290 --> 00:05:47.860 
little under but uh I'm gonna say that
28<00:05:45.710> again<00:05:46.580> another<00:05:47.060> item<00:05:47.300> that<00:05:47.510> you<00:05:47.570> can<00:05:47.720> play

00:05:47.860 --> 00:05:47.870 
28 again another item that you can play

00:05:47.870 --> 00:05:49.030 
28 again another item that you can play
around<00:05:48.020> with<00:05:48.230> if<00:05:48.440> you're<00:05:48.590> getting<00:05:48.920> a

00:05:49.030 --> 00:05:49.040 
around with if you're getting a

00:05:49.040 --> 00:05:52.180 
around with if you're getting a
stability<00:05:49.790> problems<00:05:50.680> but<00:05:51.680> outside<00:05:52.010> of<00:05:52.070> that

00:05:52.180 --> 00:05:52.190 
stability problems but outside of that

00:05:52.190 --> 00:05:55.570 
stability problems but outside of that
everything<00:05:52.400> is<00:05:52.850> set<00:05:53.630> and<00:05:53.990> we'll<00:05:54.920> save<00:05:55.160> an<00:05:55.280> exit

00:05:55.570 --> 00:05:55.580 
everything is set and we'll save an exit

00:05:55.580 --> 00:05:58.000 
everything is set and we'll save an exit
restart

