WEBVTT
Kind: captions
Language: en

00:00:00.570 --> 00:00:03.420
 The task of this video is to meet you 

00:00:03.420 --> 00:00:06.830
 with a very common class of rows. 

00:00:06.830 --> 00:00:11.630
 That is, arithmetic progressions. 

00:00:11.630 --> 00:00:13.890
 They are usually very easy to spot. 

00:00:13.890 --> 00:00:17.290
 These are rows where each member is larger 

00:00:17.290 --> 00:00:18.920
 by the member before it with a constant number. 

00:00:18.920 --> 00:00:21.820
 My purpose is to determine which of these ranks 

00:00:21.820 --> 00:00:23.259
 are arithmetic progressions. 

00:00:23.259 --> 00:00:25.050
 And then, to get some experience 

00:00:25.050 --> 00:00:26.680
 with some of the row marks, 

00:00:26.680 --> 00:00:30.220
 I want to define them either as functions, 

00:00:30.220 --> 00:00:32.880
 set forth clearly for the member we are looking for, 

00:00:32.880 --> 00:00:35.110
 or as recurring definitions. 

00:00:35.110 --> 00:00:37.500
 First, it is given that for an arithmetical progression 

00:00:37.500 --> 00:00:40.540
 each member is larger than the previous one with a fixed magnitude, 

00:00:40.540 --> 00:00:45.790
 then which of these arrays are arithmetic progressions? 

00:00:45.790 --> 00:00:47.940
 Let's take a look at this first loop here. 

00:00:47.940 --> 00:00:52.470
 To go from minus 5 to minus 3, we need to add 2. 

00:00:52.470 --> 00:00:56.780
 Then, to go from minus 3 to minus 1, we need to add 2. 

00:00:56.780 --> 00:01:00.490
 Then, to go from minus 1 to 1, we need to add 2. 

00:01:00.490 --> 00:01:02.810
 So this is obviously an arithmetical progression. 

00:01:02.810 --> 00:01:04.669
 We add the same quantity each time. 

00:01:04.669 --> 00:01:07.210
 There are several ways we can define the row. 

00:01:07.210 --> 00:01:10.022
 We can say that it has index n. 

00:01:10.022 --> 00:01:11.480
 There is no need to always use k. 

00:01:11.480 --> 00:01:14.360
 This time I will use n to mark the index. 

00:01:14.360 --> 00:01:17.609
 From n equals 1 to infinity - 

00:01:17.609 --> 00:01:20.300
 there are two ways to define it. 

00:01:20.300 --> 00:01:21.520
 We can define it or set it open, 

00:01:21.520 --> 00:01:23.070
 or by asking it recurrently. 

00:01:23.070 --> 00:01:24.910
 So, to make it clear, 

00:01:24.910 --> 00:01:29.070
 we record with an index n equal to what is the first member. 

00:01:29.070 --> 00:01:33.290
 In this case, the first member is minus 5. 

00:01:33.290 --> 00:01:36.340
 It is equal to minus 5, plus - 

00:01:36.340 --> 00:01:40.530
 we will add 2 times less than the number of the member. 

00:01:40.530 --> 00:01:42.290
 For the second article, add 2 once. 

00:01:42.290 --> 00:01:44.620
 For the third article, add 2 times. 

00:01:44.620 --> 00:01:49.000
 For the fourth member to the first article add 2 three times. 

00:01:49.000 --> 00:01:51.150
 So we'll add 2. 

00:01:51.150 --> 00:01:54.890
 We add plus 2 with one time less than the index of the member, 

00:01:54.890 --> 00:01:58.380
 we look at - n minus 1. 

00:01:58.380 --> 00:02:03.260
 This is the clearly defined definition of this arithmetic progression. 

00:02:03.260 --> 00:02:04.950
 If we want to present it through a recurring formula, 

00:02:04.950 --> 00:02:10.910
 then I say that a with index 1 is equal to minus 5. 

00:02:10.910 --> 00:02:14.490
 And then each successive member, for index 2 and older, 

00:02:14.490 --> 00:02:20.780
 we say that a with index n is equal to a with index n minus 1 plus 3. 

00:02:20.780 --> 00:02:25.790
 Each member is equal to the previous one - oh, here is not 3 but is plus 2. 

00:02:25.790 --> 00:02:31.230
 This is for n greater than or equal to 2. 

00:02:31.230 --> 00:02:34.030
 So, both ways are complete 

00:02:34.030 --> 00:02:39.420
 correct ways to determine arithmetic progression, 

00:02:39.420 --> 00:02:40.230
 which we have here. 

00:02:40.230 --> 00:02:44.950
 We can ask it either explicitly or recurrently. 

00:02:44.950 --> 00:02:46.330
 Now let's look at this line. 

00:02:46.330 --> 00:02:48.950
 Is it an arithmetic progression? 

00:02:48.950 --> 00:02:52.252
 We go from 100 and add 7. 

00:02:52.252 --> 00:02:54.976
 107 to 114, add 7. 

00:02:54.976 --> 00:02:58.440
 114 to 121, add 7. 

00:02:58.440 --> 00:03:00.760
 So it's really an arithmetic progression. 

00:03:00.760 --> 00:03:03.240
 Just to be clear, this is one 

00:03:03.240 --> 00:03:05.300
 and this one here. 

00:03:05.300 --> 00:03:09.840
 We can write that this is the row a with index n, 

00:03:09.840 --> 00:03:14.800
 n being from 1 to infinity, 

00:03:14.800 --> 00:03:17.610
 for the row a with an index n to make it clear, 

00:03:17.610 --> 00:03:23.190
 write: is equal to 100 plus 7 each time. 

00:03:23.190 --> 00:03:26.330
 And then each member - for the second member we add 7 once. 

00:03:26.330 --> 00:03:28.280
 The third article - we add 7 twice. 

00:03:28.280 --> 00:03:32.430
 For the nth member we will add 7 n minus 1 times. 

00:03:32.430 --> 00:03:34.340
 This is the definition of an explicit set of the row, 

00:03:34.340 --> 00:03:37.380
 but we can also recite it. 

00:03:38.000 --> 00:03:41.033
 Just to clarify, this is one definition, 

00:03:41.040 --> 00:03:43.160
 where we write it this way, 

00:03:43.260 --> 00:03:45.353
 or we can write it as 

00:03:45.360 --> 00:03:48.460
 but with index n, n is equal to 1 to infinity. 

00:03:48.540 --> 00:03:53.836
 In either case, I should write "at". 

00:03:53.836 --> 00:03:55.460
 To define it by asking it recurrently, 

00:03:55.460 --> 00:03:58.950
 I say that a with index 1 is equal to 100. 

00:03:58.950 --> 00:04:04.170
 And then for anyone larger than 1 member, for each index above 1, 

00:04:04.170 --> 00:04:09.560
 but with index n is equal to the previous article plus 7. 

00:04:09.560 --> 00:04:10.822
 And so we are ready. 

00:04:10.822 --> 00:04:12.280
 This is another way to define it. 

00:04:12.280 --> 00:04:14.920
 If you want a generalized way 

00:04:14.920 --> 00:04:18.149
 how to notice or define an arithmetic progression, 

00:04:18.149 --> 00:04:20.680
 you could say an arithmetic progression 

00:04:20.680 --> 00:04:22.858
 will be of the type a with an index n, 

00:04:22.858 --> 00:04:26.930
 if we are talking about an infinite line - from n to 1 to infinity. 

00:04:26.930 --> 00:04:28.460
 If you want to define it by explicitly assigning it, 

00:04:28.460 --> 00:04:33.540
 you can say that a with index n is equal to a constant, which 

00:04:33.540 --> 00:04:35.790
 is the first member, 

00:04:35.790 --> 00:04:41.480
 there will be some constant plus some number that increases, 

00:04:41.480 --> 00:04:45.089
 - but this can also be a negative number - or decreases - 

00:04:45.089 --> 00:04:47.670
 n minus 1. 

00:04:47.670 --> 00:04:51.380
 So, this is one of the ways to determine arithmetic progression. 

00:04:51.380 --> 00:04:54.000
 In this case, d was 2. 

00:04:54.000 --> 00:04:55.160
 In this case, d is 7. 

00:04:55.160 --> 00:04:57.350
 That's how much you add each time. 

00:04:57.350 --> 00:05:02.280
 In this case k is minus 5 and in this case k is 100. 

00:05:02.280 --> 00:05:04.850
 The other way if I wanted to determine 

00:05:04.850 --> 00:05:08.000
 the arithmetic array generally by recursively assigning the members, 

00:05:08.000 --> 00:05:12.180
 you can say that with index 1 is equal to k, 

00:05:12.180 --> 00:05:16.270
 then: a with index n is equal to a with index n minus 1 plus d. 

00:05:16.270 --> 00:05:18.180
 A member is equal to the previous article plus d 

00:05:18.180 --> 00:05:22.250
 for n greater than or equal to 2. 

00:05:22.250 --> 00:05:24.110
 Once again, this is clearly set the line. 

00:05:24.110 --> 00:05:26.110
 This is the recurring way to define it. 

00:05:26.110 --> 00:05:28.140
 And we'll just write there "at". 

00:05:28.140 --> 00:05:30.780
 The last question is whether this line here 

00:05:30.780 --> 00:05:32.630
 is arithmetic progression? 

00:05:32.630 --> 00:05:34.730
 Well let's check it out. 

00:05:34.730 --> 00:05:35.860
 We start with 1. 

00:05:35.860 --> 00:05:37.910
 Then add 2. 

00:05:37.910 --> 00:05:38.929
 Then add 3. 

00:05:38.929 --> 00:05:40.970
 This immediately tells us that it is not 

00:05:40.970 --> 00:05:41.970
 arithmetic progression. 

00:05:41.970 --> 00:05:43.470
 Now we add 4. 

00:05:43.470 --> 00:05:46.780
 We add a different dimension each time. 

00:05:46.780 --> 00:05:51.140
 So this array is not an arithmetical progression. 

00:05:52.000 --> 00:05:56.139
 But how can we define it after 

00:05:56.140 --> 00:05:59.380
 are we trying to define these ranks? 

00:05:59.860 --> 00:06:05.220
 Let's say we want to define it by recursively assigning it. 

00:06:05.220 --> 00:06:07.220
 We can say that this is equal to a with index n, 

00:06:07.220 --> 00:06:13.830
 where n starts at 1 and goes to infinity, 

00:06:13.830 --> 00:06:20.100
 for example, the base case - and index 1 is equal to 1. 

00:06:20.100 --> 00:06:22.777
 And then, when n is 2 or greater, 

00:06:22.777 --> 00:06:25.400
 but the index n will be equal to what? 

00:06:25.400 --> 00:06:28.752
 and index 2 is the previous article plus 2. 

00:06:28.752 --> 00:06:29.820
 but with index 3 is the previous article plus 3. 

00:06:29.820 --> 00:06:34.200
 but with index 4 is the previous article plus 4. 

00:06:34.200 --> 00:06:40.220
 So we will have the previous member plus as much as the member's index. 

00:06:40.780 --> 00:06:42.780
 This seems close, but notice, 

00:06:42.780 --> 00:06:46.640
 that here we change the value we add 

00:06:46.640 --> 00:06:47.765
 based on what the index is. 

00:06:47.765 --> 00:06:50.090
 Add the value of the index to the previous member. 

00:06:50.090 --> 00:06:53.340
 So, this is for n greater than or equal to 2. 

00:06:53.340 --> 00:06:55.000
 For an arithmetical progression 

00:06:55.000 --> 00:06:57.351
 we add the same value, 

00:06:57.351 --> 00:06:59.900
 regardless of what the index is. 

00:06:59.900 --> 00:07:01.800
 Here we add the index itself. 

00:07:01.800 --> 00:07:02.300
 So this is not an arithmetic progression, 

00:07:02.300 --> 00:07:05.970
 but it is still an interesting line. 

