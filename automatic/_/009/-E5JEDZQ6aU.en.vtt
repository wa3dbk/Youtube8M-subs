WEBVTT
Kind: captions
Language: en

00:00:02.970 --> 00:00:04.880 

if<00:00:03.419> you've<00:00:03.659> ever<00:00:03.840> installed<00:00:04.200> a<00:00:04.410> program<00:00:04.740> on<00:00:04.859> a

00:00:04.880 --> 00:00:04.890 
if you've ever installed a program on a

00:00:04.890 --> 00:00:06.470 
if you've ever installed a program on a
computer<00:00:04.950> chances<00:00:05.730> are<00:00:05.850> you've<00:00:06.029> come<00:00:06.060> into

00:00:06.470 --> 00:00:06.480 
computer chances are you've come into

00:00:06.480 --> 00:00:09.530 
computer chances are you've come into
the<00:00:06.629> 32<00:00:07.049> or<00:00:07.080> 64-bit<00:00:07.830> installer<00:00:08.189> options<00:00:09.000> to<00:00:09.389> go

00:00:09.530 --> 00:00:09.540 
the 32 or 64-bit installer options to go

00:00:09.540 --> 00:00:12.560 
the 32 or 64-bit installer options to go
with<00:00:09.690> your<00:00:09.780> 32-bit<00:00:10.410> or<00:00:10.590> 64-bit<00:00:10.940> CPU<00:00:11.940> then

00:00:12.560 --> 00:00:12.570 
with your 32-bit or 64-bit CPU then

00:00:12.570 --> 00:00:13.850 
with your 32-bit or 64-bit CPU then
you've<00:00:12.719> jumped<00:00:12.929> on<00:00:13.080> the<00:00:13.200> googles<00:00:13.530> to<00:00:13.679> see

00:00:13.850 --> 00:00:13.860 
you've jumped on the googles to see

00:00:13.860 --> 00:00:15.530 
you've jumped on the googles to see
which<00:00:14.190> one's<00:00:14.400> better<00:00:14.670> and<00:00:14.940> what's<00:00:15.179> better<00:00:15.420> a

00:00:15.530 --> 00:00:15.540 
which one's better and what's better a

00:00:15.540 --> 00:00:18.500 
which one's better and what's better a
32<00:00:15.990> or<00:00:16.170> 64-bit<00:00:16.800> CPU<00:00:17.340> and<00:00:17.520> you<00:00:17.880> found<00:00:18.150> millions

00:00:18.500 --> 00:00:18.510 
32 or 64-bit CPU and you found millions

00:00:18.510 --> 00:00:21.170 
32 or 64-bit CPU and you found millions
of<00:00:18.869> answers<00:00:19.320> to<00:00:19.350> your<00:00:19.800> question<00:00:20.340> but<00:00:20.490> what<00:00:21.029> is

00:00:21.170 --> 00:00:21.180 
of answers to your question but what is

00:00:21.180 --> 00:00:23.120 
of answers to your question but what is
the<00:00:21.390> difference<00:00:21.600> well<00:00:22.410> first<00:00:22.619> off<00:00:22.769> we<00:00:22.800> need<00:00:23.039> to

00:00:23.120 --> 00:00:23.130 
the difference well first off we need to

00:00:23.130 --> 00:00:24.710 
the difference well first off we need to
break<00:00:23.279> it<00:00:23.430> down<00:00:23.460> actually<00:00:23.910> understand<00:00:24.449> what<00:00:24.689> a

00:00:24.710 --> 00:00:24.720 
break it down actually understand what a

00:00:24.720 --> 00:00:26.990 
break it down actually understand what a
single<00:00:25.140> bit<00:00:25.470> is<00:00:25.650> to<00:00:25.830> understand<00:00:26.310> what<00:00:26.490> 32<00:00:26.880> or

00:00:26.990 --> 00:00:27.000 
single bit is to understand what 32 or

00:00:27.000 --> 00:00:29.779 
single bit is to understand what 32 or
64<00:00:27.539> of<00:00:27.689> them<00:00:27.900> are<00:00:28.109> a<00:00:28.529> single<00:00:29.130> bit<00:00:29.279> just<00:00:29.460> refers

00:00:29.779 --> 00:00:29.789 
64 of them are a single bit just refers

00:00:29.789 --> 00:00:32.060 
64 of them are a single bit just refers
to<00:00:29.820> one<00:00:30.240> or<00:00:30.420> zero<00:00:30.480> in<00:00:31.019> a<00:00:31.109> line<00:00:31.349> of<00:00:31.529> binary<00:00:31.949> code

00:00:32.060 --> 00:00:32.070 
to one or zero in a line of binary code

00:00:32.070 --> 00:00:34.520 
to one or zero in a line of binary code
that<00:00:32.790> one<00:00:33.030> bit<00:00:33.300> can<00:00:33.510> represent<00:00:33.809> up<00:00:34.230> to<00:00:34.350> two

00:00:34.520 --> 00:00:34.530 
that one bit can represent up to two

00:00:34.530 --> 00:00:36.979 
that one bit can represent up to two
values<00:00:34.950> either<00:00:34.980> again<00:00:35.640> being<00:00:35.880> 1<00:00:36.030> or<00:00:36.149> 0<00:00:36.360> with<00:00:36.780> 2

00:00:36.979 --> 00:00:36.989 
values either again being 1 or 0 with 2

00:00:36.989 --> 00:00:39.350 
values either again being 1 or 0 with 2
bit<00:00:37.170> being<00:00:37.469> output<00:00:37.860> Express<00:00:38.190> up<00:00:38.309> to<00:00:38.430> 4<00:00:38.670> 3<00:00:39.210> bit

00:00:39.350 --> 00:00:39.360 
bit being output Express up to 4 3 bit

00:00:39.360 --> 00:00:41.180 
bit being output Express up to 4 3 bit
up<00:00:39.540> to<00:00:39.660> 8<00:00:39.870> and<00:00:40.110> so<00:00:40.290> on<00:00:40.320> and<00:00:40.590> so<00:00:40.710> forth<00:00:40.950> but<00:00:41.100> it

00:00:41.180 --> 00:00:41.190 
up to 8 and so on and so forth but it

00:00:41.190 --> 00:00:43.250 
up to 8 and so on and so forth but it
doesn't<00:00:41.430> really<00:00:41.520> scale<00:00:41.879> 1<00:00:42.390> to<00:00:42.750> 2<00:00:42.930> and<00:00:42.960> all

00:00:43.250 --> 00:00:43.260 
doesn't really scale 1 to 2 and all

00:00:43.260 --> 00:00:44.690 
doesn't really scale 1 to 2 and all
those<00:00:43.410> kind<00:00:43.649> of<00:00:43.680> things<00:00:43.829> like<00:00:43.980> that<00:00:44.010> bit<00:00:44.520> more

00:00:44.690 --> 00:00:44.700 
those kind of things like that bit more

00:00:44.700 --> 00:00:46.880 
those kind of things like that bit more
math<00:00:44.879> for<00:00:45.120> quiet<00:00:45.360> ok<00:00:46.110> so<00:00:46.170> we<00:00:46.379> understand<00:00:46.770> what

00:00:46.880 --> 00:00:46.890 
math for quiet ok so we understand what

00:00:46.890 --> 00:00:47.779 
math for quiet ok so we understand what
they<00:00:47.010> are<00:00:47.039> but<00:00:47.280> what's<00:00:47.430> the<00:00:47.520> difference

00:00:47.779 --> 00:00:47.789 
they are but what's the difference

00:00:47.789 --> 00:00:50.420 
they are but what's the difference
between<00:00:47.879> a<00:00:48.120> 32-bit<00:00:48.719> CPU<00:00:49.140> and<00:00:49.289> a<00:00:49.379> 64-bit<00:00:49.920> CPU

00:00:50.420 --> 00:00:50.430 
between a 32-bit CPU and a 64-bit CPU

00:00:50.430 --> 00:00:52.700 
between a 32-bit CPU and a 64-bit CPU
and<00:00:50.579> how<00:00:51.120> come<00:00:51.329> I<00:00:51.480> can<00:00:51.690> choose<00:00:51.930> an<00:00:52.110> installer<00:00:52.620> I

00:00:52.700 --> 00:00:52.710 
and how come I can choose an installer I

00:00:52.710 --> 00:00:54.290 
and how come I can choose an installer I
just<00:00:52.980> want<00:00:53.160> to<00:00:53.219> install<00:00:53.520> my<00:00:53.699> game

00:00:54.290 --> 00:00:54.300 
just want to install my game

00:00:54.300 --> 00:00:56.540 
just want to install my game
ok<00:00:54.570> so<00:00:54.629> for<00:00:54.989> that<00:00:55.289> answer<00:00:55.559> really<00:00:55.980> quickly<00:00:56.399> a

00:00:56.540 --> 00:00:56.550 
ok so for that answer really quickly a

00:00:56.550 --> 00:00:59.869 
ok so for that answer really quickly a
32<00:00:57.239> bit<00:00:57.390> processor<00:00:57.449> can<00:00:58.199> address<00:00:58.949> 4<00:00:59.460> gigabytes

00:00:59.869 --> 00:00:59.879 
32 bit processor can address 4 gigabytes

00:00:59.879 --> 00:01:02.180 
32 bit processor can address 4 gigabytes
of<00:01:00.030> RAM<00:01:00.239> and<00:01:00.420> a<00:01:00.809> 64-bit<00:01:01.530> one<00:01:01.710> can<00:01:01.949> address

00:01:02.180 --> 00:01:02.190 
of RAM and a 64-bit one can address

00:01:02.190 --> 00:01:05.539 
of RAM and a 64-bit one can address
about<00:01:02.670> 16<00:01:03.210> billion<00:01:03.690> gigabytes<00:01:04.309> now<00:01:05.309> with<00:01:05.460> that

00:01:05.539 --> 00:01:05.549 
about 16 billion gigabytes now with that

00:01:05.549 --> 00:01:07.340 
about 16 billion gigabytes now with that
out<00:01:05.610> the<00:01:05.880> way<00:01:06.000> it<00:01:06.299> goes<00:01:06.659> a<00:01:06.720> bit<00:01:06.810> deeper<00:01:06.960> than

00:01:07.340 --> 00:01:07.350 
out the way it goes a bit deeper than

00:01:07.350 --> 00:01:09.530 
out the way it goes a bit deeper than
that<00:01:07.560> but<00:01:07.890> in<00:01:08.100> all<00:01:08.250> it's<00:01:08.549> sort<00:01:09.090> of<00:01:09.150> how<00:01:09.360> much

00:01:09.530 --> 00:01:09.540 
that but in all it's sort of how much

00:01:09.540 --> 00:01:11.000 
that but in all it's sort of how much
RAM<00:01:09.780> they<00:01:09.930> can<00:01:10.080> address<00:01:10.350> not<00:01:10.619> really<00:01:10.890> the

00:01:11.000 --> 00:01:11.010 
RAM they can address not really the

00:01:11.010 --> 00:01:13.609 
RAM they can address not really the
performance<00:01:11.610> now<00:01:12.119> if<00:01:12.420> you<00:01:12.570> think<00:01:12.750> that<00:01:12.990> more

00:01:13.609 --> 00:01:13.619 
performance now if you think that more

00:01:13.619 --> 00:01:15.920 
performance now if you think that more
ram<00:01:13.860> equals<00:01:14.280> more<00:01:14.520> performance<00:01:15.000> you're<00:01:15.479> kind

00:01:15.920 --> 00:01:15.930 
ram equals more performance you're kind

00:01:15.930 --> 00:01:18.050 
ram equals more performance you're kind
of<00:01:16.080> wrong<00:01:16.320> and<00:01:16.650> i'm<00:01:16.860> sorry<00:01:17.130> to<00:01:17.250> say<00:01:17.369> but<00:01:17.580> you're

00:01:18.050 --> 00:01:18.060 
of wrong and i'm sorry to say but you're

00:01:18.060 --> 00:01:19.789 
of wrong and i'm sorry to say but you're
not<00:01:18.299> really<00:01:18.600> right<00:01:18.930> yeah<00:01:19.140> we<00:01:19.290> actually<00:01:19.619> did<00:01:19.770> a

00:01:19.789 --> 00:01:19.799 
not really right yeah we actually did a

00:01:19.799 --> 00:01:21.560 
not really right yeah we actually did a
video<00:01:19.920> explaining<00:01:20.549> whether<00:01:21.030> more<00:01:21.360> RAM

00:01:21.560 --> 00:01:21.570 
video explaining whether more RAM

00:01:21.570 --> 00:01:23.330 
video explaining whether more RAM
actually<00:01:21.900> increases<00:01:22.259> performance<00:01:22.409> but<00:01:23.220> in

00:01:23.330 --> 00:01:23.340 
actually increases performance but in

00:01:23.340 --> 00:01:24.920 
actually increases performance but in
all<00:01:23.490> it<00:01:23.729> doesn't<00:01:24.090> really<00:01:24.180> help<00:01:24.360> unless<00:01:24.780> you're

00:01:24.920 --> 00:01:24.930 
all it doesn't really help unless you're

00:01:24.930 --> 00:01:26.690 
all it doesn't really help unless you're
doing<00:01:25.020> something<00:01:25.320> like<00:01:25.439> rendering<00:01:26.009> or<00:01:26.310> video

00:01:26.690 --> 00:01:26.700 
doing something like rendering or video

00:01:26.700 --> 00:01:28.609 
doing something like rendering or video
editing<00:01:26.759> where<00:01:27.479> more<00:01:27.750> ram<00:01:27.960> will<00:01:28.140> obviously

00:01:28.609 --> 00:01:28.619 
editing where more ram will obviously

00:01:28.619 --> 00:01:30.109 
editing where more ram will obviously
equal<00:01:28.829> more<00:01:29.220> performance

00:01:30.109 --> 00:01:30.119 
equal more performance

00:01:30.119 --> 00:01:32.120 
equal more performance
ok<00:01:30.509> so<00:01:30.570> whilst<00:01:31.229> I've<00:01:31.439> been<00:01:31.470> googling<00:01:31.829> I've

00:01:32.120 --> 00:01:32.130 
ok so whilst I've been googling I've

00:01:32.130 --> 00:01:35.210 
ok so whilst I've been googling I've
also<00:01:32.310> found<00:01:32.610> that<00:01:32.790> 64<00:01:33.600> bit<00:01:33.810> CPUs<00:01:34.290> are<00:01:34.530> just

00:01:35.210 --> 00:01:35.220 
also found that 64 bit CPUs are just

00:01:35.220 --> 00:01:37.069 
also found that 64 bit CPUs are just
faster<00:01:36.000> and<00:01:36.119> so<00:01:36.299> much<00:01:36.329> better<00:01:36.630> than<00:01:36.869> their

00:01:37.069 --> 00:01:37.079 
faster and so much better than their

00:01:37.079 --> 00:01:39.710 
faster and so much better than their
32-bit<00:01:37.770> counterparts<00:01:38.430> hence<00:01:38.909> why<00:01:39.180> Apple<00:01:39.600> has

00:01:39.710 --> 00:01:39.720 
32-bit counterparts hence why Apple has

00:01:39.720 --> 00:01:41.359 
32-bit counterparts hence why Apple has
gone<00:01:39.900> ahead<00:01:40.020> and<00:01:40.290> moved<00:01:40.470> their<00:01:40.619> iPhone<00:01:40.950> 6<00:01:41.250> and

00:01:41.359 --> 00:01:41.369 
gone ahead and moved their iPhone 6 and

00:01:41.369 --> 00:01:44.090 
gone ahead and moved their iPhone 6 and
6-plus<00:01:41.640> to<00:01:42.030> 64-bit<00:01:42.869> now<00:01:43.380> whilst<00:01:43.680> you<00:01:43.890> may<00:01:44.040> be

00:01:44.090 --> 00:01:44.100 
6-plus to 64-bit now whilst you may be

00:01:44.100 --> 00:01:45.980 
6-plus to 64-bit now whilst you may be
right<00:01:44.460> that<00:01:44.490> the<00:01:44.670> iPhone<00:01:45.030> 6<00:01:45.329> and<00:01:45.420> 6<00:01:45.630> plus<00:01:45.689> are

00:01:45.980 --> 00:01:45.990 
right that the iPhone 6 and 6 plus are

00:01:45.990 --> 00:01:48.080 
right that the iPhone 6 and 6 plus are
on<00:01:46.079> 64-bit<00:01:46.649> the<00:01:47.250> thing<00:01:47.490> you're<00:01:47.670> missing<00:01:47.939> out

00:01:48.080 --> 00:01:48.090 
on 64-bit the thing you're missing out

00:01:48.090 --> 00:01:50.210 
on 64-bit the thing you're missing out
is<00:01:48.329> that<00:01:48.630> the<00:01:48.840> G<00:01:49.079> bit<00:01:49.259> chips<00:01:49.530> are<00:01:49.710> generally

00:01:50.210 --> 00:01:50.220 
is that the G bit chips are generally

00:01:50.220 --> 00:01:52.310 
is that the G bit chips are generally
based<00:01:50.430> on<00:01:50.610> last<00:01:50.850> gen<00:01:51.000> so<00:01:51.270> anything<00:01:51.659> that<00:01:51.689> 64

00:01:52.310 --> 00:01:52.320 
based on last gen so anything that 64

00:01:52.320 --> 00:01:54.530 
based on last gen so anything that 64
been<00:01:52.829> compared<00:01:53.220> to<00:01:53.280> 32<00:01:53.670> is<00:01:53.880> gonna<00:01:54.270> be

00:01:54.530 --> 00:01:54.540 
been compared to 32 is gonna be

00:01:54.540 --> 00:01:56.090 
been compared to 32 is gonna be
different<00:01:55.200> generation<00:01:55.710> so<00:01:55.829> we'll<00:01:55.950> give<00:01:56.070> you

00:01:56.090 --> 00:01:56.100 
different generation so we'll give you

00:01:56.100 --> 00:01:57.620 
different generation so we'll give you
an<00:01:56.250> example<00:01:56.579> for<00:01:56.850> this<00:01:56.969> a<00:01:57.030> very<00:01:57.450> hypothetical

00:01:57.620 --> 00:01:57.630 
an example for this a very hypothetical

00:01:57.630 --> 00:02:01.249 
an example for this a very hypothetical
one<00:01:58.259> if<00:01:58.500> we<00:01:58.890> take<00:01:59.040> an<00:01:59.189> Intel<00:01:59.490> Core<00:01:59.640> i5<00:02:00.020> 4570<00:02:01.049> and

00:02:01.249 --> 00:02:01.259 
one if we take an Intel Core i5 4570 and

00:02:01.259 --> 00:02:04.910 
one if we take an Intel Core i5 4570 and
with<00:02:01.920> the<00:02:02.040> new<00:02:02.189> HD<00:02:02.670> graphics<00:02:03.200> 4600<00:02:04.200> which<00:02:04.710> is

00:02:04.910 --> 00:02:04.920 
with the new HD graphics 4600 which is

00:02:04.920 --> 00:02:06.170 
with the new HD graphics 4600 which is
obviously<00:02:05.219> going<00:02:05.340> to<00:02:05.430> be<00:02:05.549> faster<00:02:05.909> than<00:02:05.939> the

00:02:06.170 --> 00:02:06.180 
obviously going to be faster than the

00:02:06.180 --> 00:02:09.619 
obviously going to be faster than the
older<00:02:06.600> I<00:02:06.750> 535<00:02:07.409> 70<00:02:07.770> with<00:02:07.920> older<00:02:08.340> HD<00:02:08.789> 2500

00:02:09.619 --> 00:02:09.629 
older I 535 70 with older HD 2500

00:02:09.629 --> 00:02:11.390 
older I 535 70 with older HD 2500
graphics<00:02:09.989> obviously<00:02:10.649> that<00:02:10.830> new<00:02:11.009> one<00:02:11.160> one's

00:02:11.390 --> 00:02:11.400 
graphics obviously that new one one's

00:02:11.400 --> 00:02:12.950 
graphics obviously that new one one's
going<00:02:11.700> to<00:02:11.730> be<00:02:11.879> faster<00:02:12.270> but<00:02:12.450> it's<00:02:12.569> not

00:02:12.950 --> 00:02:12.960 
going to be faster but it's not

00:02:12.960 --> 00:02:14.720 
going to be faster but it's not
actual<00:02:13.290> graphics<00:02:13.860> that<00:02:14.070> are<00:02:14.220> actually<00:02:14.550> making

00:02:14.720 --> 00:02:14.730 
actual graphics that are actually making

00:02:14.730 --> 00:02:16.970 
actual graphics that are actually making
it<00:02:14.970> any<00:02:15.150> faster<00:02:15.720> in<00:02:15.960> fact<00:02:16.410> it's<00:02:16.590> actually<00:02:16.710> the

00:02:16.970 --> 00:02:16.980 
it any faster in fact it's actually the

00:02:16.980 --> 00:02:19.460 
it any faster in fact it's actually the
architecture<00:02:17.700> of<00:02:17.880> the<00:02:18.120> CPU<00:02:18.450> design<00:02:19.020> that's

00:02:19.460 --> 00:02:19.470 
architecture of the CPU design that's

00:02:19.470 --> 00:02:20.960 
architecture of the CPU design that's
going<00:02:19.650> to<00:02:19.770> make<00:02:19.890> it<00:02:20.010> faster<00:02:20.340> so<00:02:20.490> let's<00:02:20.670> say<00:02:20.820> we

00:02:20.960 --> 00:02:20.970 
going to make it faster so let's say we

00:02:20.970 --> 00:02:23.630 
going to make it faster so let's say we
put<00:02:21.210> both<00:02:21.390> of<00:02:21.540> them<00:02:21.690> with<00:02:21.870> HD<00:02:22.410> graphics<00:02:22.640> 2500

00:02:23.630 --> 00:02:23.640 
put both of them with HD graphics 2500

00:02:23.640 --> 00:02:25.160 
put both of them with HD graphics 2500
we're<00:02:24.030> still<00:02:24.240> going<00:02:24.390> to<00:02:24.480> see<00:02:24.630> a<00:02:24.660> performance

00:02:25.160 --> 00:02:25.170 
we're still going to see a performance

00:02:25.170 --> 00:02:27.170 
we're still going to see a performance
increase<00:02:25.350> in<00:02:25.650> the<00:02:25.740> newer<00:02:25.890> CPU<00:02:26.400> because<00:02:26.970> of<00:02:27.090> the

00:02:27.170 --> 00:02:27.180 
increase in the newer CPU because of the

00:02:27.180 --> 00:02:28.640 
increase in the newer CPU because of the
fact<00:02:27.360> that<00:02:27.480> the<00:02:27.690> CPUs<00:02:28.050> are<00:02:28.230> just<00:02:28.440> better

00:02:28.640 --> 00:02:28.650 
fact that the CPUs are just better

00:02:28.650 --> 00:02:30.920 
fact that the CPUs are just better
overall<00:02:29.130> rather<00:02:29.490> than<00:02:29.730> the<00:02:29.910> actual<00:02:30.060> graphics

00:02:30.920 --> 00:02:30.930 
overall rather than the actual graphics

00:02:30.930 --> 00:02:32.810 
overall rather than the actual graphics
and<00:02:31.140> that's<00:02:31.500> how<00:02:31.680> the<00:02:31.740> bits<00:02:32.130> actually<00:02:32.340> work

00:02:32.810 --> 00:02:32.820 
and that's how the bits actually work

00:02:32.820 --> 00:02:35.450 
and that's how the bits actually work
the<00:02:33.270> amount<00:02:33.480> of<00:02:33.630> bits<00:02:33.870> so<00:02:34.080> 64<00:02:34.650> 32<00:02:34.860> doesn't

00:02:35.450 --> 00:02:35.460 
the amount of bits so 64 32 doesn't

00:02:35.460 --> 00:02:37.190 
the amount of bits so 64 32 doesn't
actually<00:02:35.790> really<00:02:36.240> affect<00:02:36.690> the<00:02:36.840> amount<00:02:37.020> of

00:02:37.190 --> 00:02:37.200 
actually really affect the amount of

00:02:37.200 --> 00:02:38.390 
actually really affect the amount of
performance<00:02:37.440> you're<00:02:37.770> getting<00:02:38.040> out<00:02:38.220> of<00:02:38.250> that

00:02:38.390 --> 00:02:38.400 
performance you're getting out of that

00:02:38.400 --> 00:02:40.280 
performance you're getting out of that
chip<00:02:38.760> most<00:02:39.270> people<00:02:39.540> just<00:02:39.570> compare<00:02:40.080> them

00:02:40.280 --> 00:02:40.290 
chip most people just compare them

00:02:40.290 --> 00:02:42.140 
chip most people just compare them
because<00:02:40.500> they're<00:02:41.070> same<00:02:41.490> different<00:02:41.940> things

00:02:42.140 --> 00:02:42.150 
because they're same different things

00:02:42.150 --> 00:02:44.450 
because they're same different things
and<00:02:42.390> the<00:02:42.630> generations<00:02:43.410> are<00:02:43.590> a<00:02:43.620> bit<00:02:43.890> different

00:02:44.450 --> 00:02:44.460 
and the generations are a bit different

00:02:44.460 --> 00:02:46.580 
and the generations are a bit different
okay<00:02:44.700> so<00:02:45.060> I'm<00:02:45.240> this<00:02:45.450> far<00:02:45.690> into<00:02:45.870> the<00:02:45.960> video<00:02:46.170> and

00:02:46.580 --> 00:02:46.590 
okay so I'm this far into the video and

00:02:46.590 --> 00:02:48.230 
okay so I'm this far into the video and
you<00:02:46.830> really<00:02:47.250> haven't<00:02:47.520> given<00:02:47.700> me<00:02:47.850> a<00:02:47.880> straight

00:02:48.230 --> 00:02:48.240 
you really haven't given me a straight

00:02:48.240 --> 00:02:52.550 
you really haven't given me a straight
answer<00:02:48.270> what<00:02:49.230> is<00:02:49.260> better<00:02:49.590> 32<00:02:50.340> or<00:02:50.550> 64<00:02:51.510> well<00:02:52.050> most

00:02:52.550 --> 00:02:52.560 
answer what is better 32 or 64 well most

00:02:52.560 --> 00:02:54.650 
answer what is better 32 or 64 well most
of<00:02:52.680> the<00:02:52.800> case<00:02:53.010> that<00:02:53.310> doesn't<00:02:53.820> really<00:02:54.060> get<00:02:54.300> left

00:02:54.650 --> 00:02:54.660 
of the case that doesn't really get left

00:02:54.660 --> 00:02:57.140 
of the case that doesn't really get left
up<00:02:54.900> to<00:02:55.050> you<00:02:55.230> to<00:02:55.380> choose<00:02:55.620> 64<00:02:56.460> or<00:02:56.580> 32<00:02:56.610> it's

00:02:57.140 --> 00:02:57.150 
up to you to choose 64 or 32 it's

00:02:57.150 --> 00:02:59.300 
up to you to choose 64 or 32 it's
generally<00:02:57.480> up<00:02:57.600> to<00:02:57.630> manufactures<00:02:58.500> but<00:02:58.680> for

00:02:59.300 --> 00:02:59.310 
generally up to manufactures but for

00:02:59.310 --> 00:03:01.700 
generally up to manufactures but for
sort<00:02:59.730> of<00:02:59.820> a<00:02:59.940> baseline<00:03:00.540> and<00:03:00.810> kind<00:03:01.170> of<00:03:01.260> ideal

00:03:01.700 --> 00:03:01.710 
sort of a baseline and kind of ideal

00:03:01.710 --> 00:03:04.370 
sort of a baseline and kind of ideal
level<00:03:02.070> for<00:03:02.610> gigs<00:03:02.820> of<00:03:02.970> ram<00:03:03.090> or<00:03:03.270> less<00:03:03.450> 32<00:03:04.050> more

00:03:04.370 --> 00:03:04.380 
level for gigs of ram or less 32 more

00:03:04.380 --> 00:03:06.500 
level for gigs of ram or less 32 more
than<00:03:04.560> for<00:03:04.920> gigs<00:03:05.160> is<00:03:05.370> 64<00:03:06.030> and<00:03:06.150> that's<00:03:06.270> sort<00:03:06.390> of

00:03:06.500 --> 00:03:06.510 
than for gigs is 64 and that's sort of

00:03:06.510 --> 00:03:08.570 
than for gigs is 64 and that's sort of
the<00:03:06.570> general<00:03:06.960> rule<00:03:07.170> of<00:03:07.200> thumb<00:03:07.380> now<00:03:08.100> the<00:03:08.160> reason

00:03:08.570 --> 00:03:08.580 
the general rule of thumb now the reason

00:03:08.580 --> 00:03:09.980 
the general rule of thumb now the reason
why<00:03:08.700> the<00:03:08.760> programs<00:03:09.270> will<00:03:09.510> give<00:03:09.660> you<00:03:09.780> an<00:03:09.870> option

00:03:09.980 --> 00:03:09.990 
why the programs will give you an option

00:03:09.990 --> 00:03:12.530 
why the programs will give you an option
for<00:03:10.320> 32<00:03:10.740> or<00:03:10.860> 64<00:03:11.370> is<00:03:11.550> because<00:03:11.880> some<00:03:12.120> people<00:03:12.450> are

00:03:12.530 --> 00:03:12.540 
for 32 or 64 is because some people are

00:03:12.540 --> 00:03:14.690 
for 32 or 64 is because some people are
still<00:03:12.690> using<00:03:12.990> older<00:03:13.350> systems<00:03:13.770> with<00:03:14.220> 32-bit

00:03:14.690 --> 00:03:14.700 
still using older systems with 32-bit

00:03:14.700 --> 00:03:17.720 
still using older systems with 32-bit
CPUs<00:03:15.450> and<00:03:15.630> modern<00:03:16.530> games<00:03:16.770> are<00:03:17.220> even<00:03:17.400> now

00:03:17.720 --> 00:03:17.730 
CPUs and modern games are even now

00:03:17.730 --> 00:03:19.760 
CPUs and modern games are even now
coming<00:03:18.000> out<00:03:18.120> with<00:03:18.180> only<00:03:18.630> 64-bit<00:03:19.110> options<00:03:19.620> but

00:03:19.760 --> 00:03:19.770 
coming out with only 64-bit options but

00:03:19.770 --> 00:03:22.130 
coming out with only 64-bit options but
still<00:03:20.010> lots<00:03:20.190> of<00:03:20.310> them<00:03:20.460> do<00:03:20.730> offer<00:03:21.030> a<00:03:21.150> 32-bit

00:03:22.130 --> 00:03:22.140 
still lots of them do offer a 32-bit

00:03:22.140 --> 00:03:24.230 
still lots of them do offer a 32-bit
section<00:03:23.100> of<00:03:23.280> the<00:03:23.490> installer

00:03:24.230 --> 00:03:24.240 
section of the installer

00:03:24.240 --> 00:03:26.240 
section of the installer
so<00:03:24.360> in<00:03:24.480> all<00:03:24.600> bits<00:03:24.900> refer<00:03:25.200> to<00:03:25.350> how<00:03:25.500> much<00:03:25.650> RAM<00:03:26.040> the

00:03:26.240 --> 00:03:26.250 
so in all bits refer to how much RAM the

00:03:26.250 --> 00:03:27.680 
so in all bits refer to how much RAM the
CPU<00:03:26.610> can<00:03:26.730> address<00:03:27.060> and<00:03:27.270> doesn't<00:03:27.540> really

00:03:27.680 --> 00:03:27.690 
CPU can address and doesn't really

00:03:27.690 --> 00:03:29.690 
CPU can address and doesn't really
affect<00:03:28.050> on<00:03:28.230> how<00:03:28.530> much<00:03:28.710> performance<00:03:29.250> that<00:03:29.460> chip

00:03:29.690 --> 00:03:29.700 
affect on how much performance that chip

00:03:29.700 --> 00:03:32.810 
affect on how much performance that chip
has<00:03:29.970> with<00:03:30.660> most<00:03:30.900> people<00:03:31.230> comparing<00:03:31.800> all<00:03:32.100> gen

00:03:32.810 --> 00:03:32.820 
has with most people comparing all gen

00:03:32.820 --> 00:03:35.390 
has with most people comparing all gen
CPUs<00:03:33.540> with<00:03:33.690> new<00:03:33.900> ones<00:03:34.080> with<00:03:34.290> 32<00:03:34.650> and<00:03:34.830> 64<00:03:35.280> it's

00:03:35.390 --> 00:03:35.400 
CPUs with new ones with 32 and 64 it's

00:03:35.400 --> 00:03:37.310 
CPUs with new ones with 32 and 64 it's
really<00:03:35.700> hard<00:03:35.940> to<00:03:36.120> get<00:03:36.240> a<00:03:36.300> baseline<00:03:36.750> because

00:03:37.310 --> 00:03:37.320 
really hard to get a baseline because

00:03:37.320 --> 00:03:39.110 
really hard to get a baseline because
not<00:03:37.650> many<00:03:37.740> companies<00:03:38.190> coming<00:03:38.490> out<00:03:38.670> with<00:03:38.850> 2

00:03:39.110 --> 00:03:39.120 
not many companies coming out with 2

00:03:39.120 --> 00:03:41.090 
not many companies coming out with 2
different<00:03:39.300> SKUs<00:03:39.750> of<00:03:39.870> the<00:03:40.320> exact<00:03:40.620> same<00:03:40.830> process

00:03:41.090 --> 00:03:41.100 
different SKUs of the exact same process

00:03:41.100 --> 00:03:45.170 
different SKUs of the exact same process
that's<00:03:41.490> either<00:03:41.640> 32<00:03:42.180> or<00:03:42.570> 64<00:03:43.250> no<00:03:44.250> more<00:03:44.490> to<00:03:44.970> find

00:03:45.170 --> 00:03:45.180 
that's either 32 or 64 no more to find

00:03:45.180 --> 00:03:47.960 
that's either 32 or 64 no more to find
out<00:03:45.360> what<00:03:45.600> your<00:03:45.900> CPU<00:03:46.500> is<00:03:46.650> with<00:03:46.860> 32<00:03:47.340> or<00:03:47.460> 64

00:03:47.960 --> 00:03:47.970 
out what your CPU is with 32 or 64

00:03:47.970 --> 00:03:49.700 
out what your CPU is with 32 or 64
there's<00:03:48.360> a<00:03:48.510> few<00:03:48.690> things<00:03:48.900> you<00:03:49.050> can<00:03:49.200> do<00:03:49.350> that<00:03:49.530> one

00:03:49.700 --> 00:03:49.710 
there's a few things you can do that one

00:03:49.710 --> 00:03:51.350 
there's a few things you can do that one
of<00:03:49.800> the<00:03:49.860> easiest<00:03:50.190> thing<00:03:50.370> is<00:03:50.490> to<00:03:50.520> check<00:03:50.880> the<00:03:51.090> box

00:03:51.350 --> 00:03:51.360 
of the easiest thing is to check the box

00:03:51.360 --> 00:03:52.760 
of the easiest thing is to check the box
that<00:03:51.450> your<00:03:51.660> computer<00:03:52.050> came<00:03:52.260> in<00:03:52.380> or<00:03:52.500> the<00:03:52.590> CPU

00:03:52.760 --> 00:03:52.770 
that your computer came in or the CPU

00:03:52.770 --> 00:03:54.830 
that your computer came in or the CPU
came<00:03:53.190> in<00:03:53.340> generally<00:03:54.030> they'll<00:03:54.240> tell<00:03:54.450> you<00:03:54.600> what

00:03:54.830 --> 00:03:54.840 
came in generally they'll tell you what

00:03:54.840 --> 00:03:56.600 
came in generally they'll tell you what
bit<00:03:55.050> they<00:03:55.200> if<00:03:55.350> they<00:03:55.590> don't<00:03:55.920> you<00:03:56.280> can<00:03:56.400> go<00:03:56.520> ahead

00:03:56.600 --> 00:03:56.610 
bit they if they don't you can go ahead

00:03:56.610 --> 00:03:58.160 
bit they if they don't you can go ahead
and<00:03:56.790> take<00:03:56.910> that<00:03:56.940> model<00:03:57.420> number<00:03:57.690> chuck<00:03:57.930> it<00:03:58.050> in

00:03:58.160 --> 00:03:58.170 
and take that model number chuck it in

00:03:58.170 --> 00:03:59.840 
and take that model number chuck it in
Google<00:03:58.470> and<00:03:58.620> give<00:03:58.800> you<00:03:58.890> there<00:03:59.070> or<00:03:59.280> you<00:03:59.640> can<00:03:59.730> go

00:03:59.840 --> 00:03:59.850 
Google and give you there or you can go

00:03:59.850 --> 00:04:01.700 
Google and give you there or you can go
ahead<00:03:59.970> and<00:04:00.090> find<00:04:00.390> the<00:04:00.510> properties<00:04:00.930> in<00:04:01.110> Windows

00:04:01.700 --> 00:04:01.710 
ahead and find the properties in Windows

00:04:01.710 --> 00:04:03.020 
ahead and find the properties in Windows
and<00:04:01.740> go<00:04:02.130> ahead<00:04:02.400> and<00:04:02.550> tell<00:04:02.700> you<00:04:02.790> there<00:04:02.940> if

00:04:03.020 --> 00:04:03.030 
and go ahead and tell you there if

00:04:03.030 --> 00:04:04.610 
and go ahead and tell you there if
you're<00:04:03.120> running<00:04:03.270> Mac<00:04:03.570> it's<00:04:03.870> just<00:04:04.290> in<00:04:04.440> about

00:04:04.610 --> 00:04:04.620 
you're running Mac it's just in about

00:04:04.620 --> 00:04:06.770 
you're running Mac it's just in about
this<00:04:05.040> Mac<00:04:05.340> and<00:04:05.550> a<00:04:05.610> bit<00:04:05.790> of<00:04:05.910> digging<00:04:06.420> is

00:04:06.770 --> 00:04:06.780 
this Mac and a bit of digging is

00:04:06.780 --> 00:04:09.410 
this Mac and a bit of digging is
required<00:04:07.260> there<00:04:07.650> as<00:04:07.950> always<00:04:08.730> guys<00:04:08.940> like<00:04:09.240> or

00:04:09.410 --> 00:04:09.420 
required there as always guys like or

00:04:09.420 --> 00:04:11.150 
required there as always guys like or
dislike<00:04:09.540> the<00:04:09.840> video<00:04:09.960> accordingly<00:04:10.500> let<00:04:11.010> me

00:04:11.150 --> 00:04:11.160 
dislike the video accordingly let me

00:04:11.160 --> 00:04:13.970 
dislike the video accordingly let me
know<00:04:11.280> what<00:04:11.460> you<00:04:11.580> think<00:04:11.760> 64<00:04:12.480> 32<00:04:13.080> is<00:04:13.590> it<00:04:13.710> just<00:04:13.920> a

00:04:13.970 --> 00:04:13.980 
know what you think 64 32 is it just a

00:04:13.980 --> 00:04:16.160 
know what you think 64 32 is it just a
conspiracy<00:04:14.280> overall<00:04:15.060> and<00:04:15.270> as<00:04:15.720> always<00:04:16.049> guys

00:04:16.160 --> 00:04:16.170 
conspiracy overall and as always guys

00:04:16.170 --> 00:04:17.780 
conspiracy overall and as always guys
give<00:04:16.470> us<00:04:16.590> a<00:04:16.710> sub<00:04:16.859> if<00:04:17.010> you<00:04:17.130> like<00:04:17.340> this<00:04:17.460> kind<00:04:17.700> of

00:04:17.780 --> 00:04:17.790 
give us a sub if you like this kind of

00:04:17.790 --> 00:04:19.039 
give us a sub if you like this kind of
content<00:04:18.120> and<00:04:18.270> I'll<00:04:18.390> see<00:04:18.570> you<00:04:18.630> guys<00:04:18.750> next<00:04:18.900> time

00:04:19.039 --> 00:04:19.049 
content and I'll see you guys next time

00:04:19.049 --> 00:04:22.460 
content and I'll see you guys next time
for<00:04:19.230> another<00:04:19.290> video<00:04:19.560> thank<00:04:20.100> you<00:04:20.190> for

