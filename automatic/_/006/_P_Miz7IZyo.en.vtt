WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:03.080 

hey<00:00:00.780> everybody<00:00:01.140> this<00:00:01.350> is<00:00:01.410> Paul<00:00:01.740> so<00:00:02.639> most<00:00:03.000> of

00:00:03.080 --> 00:00:03.090 
hey everybody this is Paul so most of

00:00:03.090 --> 00:00:04.460 
hey everybody this is Paul so most of
you<00:00:03.210> guys<00:00:03.330> probably<00:00:03.840> already<00:00:03.990> know<00:00:04.290> this

00:00:04.460 --> 00:00:04.470 
you guys probably already know this

00:00:04.470 --> 00:00:06.320 
you guys probably already know this
maybe<00:00:05.069> some<00:00:05.339> of<00:00:05.430> you<00:00:05.549> guys<00:00:05.700> don't<00:00:05.940> know<00:00:06.150> this

00:00:06.320 --> 00:00:06.330 
maybe some of you guys don't know this

00:00:06.330 --> 00:00:09.500 
maybe some of you guys don't know this
but<00:00:06.660> I<00:00:07.049> have<00:00:07.680> two<00:00:07.950> YouTube<00:00:08.490> channels<00:00:08.519> the

00:00:09.500 --> 00:00:09.510 
but I have two YouTube channels the

00:00:09.510 --> 00:00:11.690 
but I have two YouTube channels the
first<00:00:09.690> one<00:00:09.900> is<00:00:10.139> learn<00:00:10.530> math<00:00:10.769> tutorials<00:00:11.490> where

00:00:11.690 --> 00:00:11.700 
first one is learn math tutorials where

00:00:11.700 --> 00:00:14.870 
first one is learn math tutorials where
I<00:00:11.730> just<00:00:11.880> simply<00:00:12.360> do<00:00:12.480> math<00:00:12.780> tutorials<00:00:13.559> and<00:00:13.880> the

00:00:14.870 --> 00:00:14.880 
I just simply do math tutorials and the

00:00:14.880 --> 00:00:17.090 
I just simply do math tutorials and the
other<00:00:15.000> one<00:00:15.240> is<00:00:15.540> Paul<00:00:16.080> programming<00:00:16.800> where<00:00:16.980> I<00:00:17.010> do

00:00:17.090 --> 00:00:17.100 
other one is Paul programming where I do

00:00:17.100 --> 00:00:20.000 
other one is Paul programming where I do
computer<00:00:17.670> programming<00:00:17.720> tutorials<00:00:18.720> and<00:00:19.050> the

00:00:20.000 --> 00:00:20.010 
computer programming tutorials and the

00:00:20.010 --> 00:00:21.769 
computer programming tutorials and the
topic<00:00:20.310> I'm<00:00:20.430> going<00:00:20.460> to<00:00:20.730> cover<00:00:20.939> today<00:00:21.090> I<00:00:21.359> thought

00:00:21.769 --> 00:00:21.779 
topic I'm going to cover today I thought

00:00:21.779 --> 00:00:25.580 
topic I'm going to cover today I thought
was<00:00:22.170> a<00:00:22.740> topic<00:00:23.519> that<00:00:23.930> would<00:00:24.930> be<00:00:25.050> good<00:00:25.199> for<00:00:25.439> both

00:00:25.580 --> 00:00:25.590 
was a topic that would be good for both

00:00:25.590 --> 00:00:28.880 
was a topic that would be good for both
of<00:00:25.830> my<00:00:25.949> channels<00:00:26.400> and<00:00:27.289> so<00:00:28.289> basically<00:00:28.590> what<00:00:28.769> I'm

00:00:28.880 --> 00:00:28.890 
of my channels and so basically what I'm

00:00:28.890 --> 00:00:30.710 
of my channels and so basically what I'm
going<00:00:28.980> to<00:00:29.070> be<00:00:29.189> talking<00:00:29.340> about<00:00:29.670> today<00:00:29.939> is<00:00:30.300> we're

00:00:30.710 --> 00:00:30.720 
going to be talking about today is we're

00:00:30.720 --> 00:00:33.110 
going to be talking about today is we're
going<00:00:30.840> to<00:00:31.040> determine<00:00:32.040> whether<00:00:32.489> or<00:00:32.610> not<00:00:32.790> a

00:00:33.110 --> 00:00:33.120 
going to determine whether or not a

00:00:33.120 --> 00:00:36.049 
going to determine whether or not a
number<00:00:33.480> is<00:00:33.690> prime<00:00:33.719> and<00:00:34.500> we're<00:00:35.309> going<00:00:35.520> to<00:00:35.579> do

00:00:36.049 --> 00:00:36.059 
number is prime and we're going to do

00:00:36.059 --> 00:00:41.240 
number is prime and we're going to do
that<00:00:36.270> by<00:00:36.480> writing<00:00:36.840> a<00:00:37.460> C++<00:00:38.460> program<00:00:39.410> so<00:00:40.410> I<00:00:40.739> made

00:00:41.240 --> 00:00:41.250 
that by writing a C++ program so I made

00:00:41.250 --> 00:00:43.940 
that by writing a C++ program so I made
a<00:00:41.280> video<00:00:41.489> a<00:00:41.670> while<00:00:41.940> back<00:00:42.290> on<00:00:43.290> my<00:00:43.500> learn<00:00:43.710> math

00:00:43.940 --> 00:00:43.950 
a video a while back on my learn math

00:00:43.950 --> 00:00:47.959 
a video a while back on my learn math
tutorials<00:00:44.640> channel<00:00:45.030> and<00:00:46.430> basically<00:00:47.430> I<00:00:47.520> show

00:00:47.959 --> 00:00:47.969 
tutorials channel and basically I show

00:00:47.969 --> 00:00:50.029 
tutorials channel and basically I show
you<00:00:48.000> guys<00:00:48.300> how<00:00:48.719> to<00:00:48.750> determine<00:00:49.649> whether<00:00:49.800> or<00:00:49.920> not

00:00:50.029 --> 00:00:50.039 
you guys how to determine whether or not

00:00:50.039 --> 00:00:53.209 
you guys how to determine whether or not
a<00:00:50.309> number<00:00:50.640> is<00:00:50.760> prime<00:00:51.030> and<00:00:51.480> so<00:00:52.199> I've<00:00:52.829> got<00:00:52.980> a<00:00:53.010> few

00:00:53.209 --> 00:00:53.219 
a number is prime and so I've got a few

00:00:53.219 --> 00:00:55.189 
a number is prime and so I've got a few
comments<00:00:53.460> back<00:00:53.969> saying<00:00:54.420> okay<00:00:54.809> that's<00:00:55.020> really

00:00:55.189 --> 00:00:55.199 
comments back saying okay that's really

00:00:55.199 --> 00:00:57.439 
comments back saying okay that's really
great<00:00:55.469> and<00:00:55.530> everything<00:00:56.070> but<00:00:56.239> how<00:00:57.239> do<00:00:57.300> we

00:00:57.439 --> 00:00:57.449 
great and everything but how do we

00:00:57.449 --> 00:00:59.689 
great and everything but how do we
determine<00:00:57.930> whether<00:00:58.289> a<00:00:58.620> really<00:00:59.309> large<00:00:59.609> number

00:00:59.689 --> 00:00:59.699 
determine whether a really large number

00:00:59.699 --> 00:01:03.799 
determine whether a really large number
is<00:01:00.270> prime<00:01:00.629> or<00:01:00.870> not<00:01:00.899> and<00:01:02.090> the<00:01:03.090> way<00:01:03.210> I<00:01:03.239> would<00:01:03.660> do

00:01:03.799 --> 00:01:03.809 
is prime or not and the way I would do

00:01:03.809 --> 00:01:05.420 
is prime or not and the way I would do
that<00:01:03.840> if<00:01:04.170> I<00:01:04.350> was<00:01:04.530> to<00:01:04.559> actually<00:01:04.979> do<00:01:05.129> the<00:01:05.250> work

00:01:05.420 --> 00:01:05.430 
that if I was to actually do the work

00:01:05.430 --> 00:01:07.700 
that if I was to actually do the work
and<00:01:05.700> not<00:01:05.760> just<00:01:06.119> look<00:01:06.299> it<00:01:06.420> up<00:01:06.510> somewhere<00:01:06.990> if<00:01:07.560> I

00:01:07.700 --> 00:01:07.710 
and not just look it up somewhere if I

00:01:07.710 --> 00:01:08.870 
and not just look it up somewhere if I
was<00:01:07.860> to<00:01:07.950> do<00:01:08.070> the<00:01:08.189> work<00:01:08.340> I<00:01:08.520> would<00:01:08.670> write<00:01:08.850> a

00:01:08.870 --> 00:01:08.880 
was to do the work I would write a

00:01:08.880 --> 00:01:11.000 
was to do the work I would write a
computer<00:01:09.240> program<00:01:09.390> to<00:01:09.780> determine<00:01:10.260> whether<00:01:10.710> a

00:01:11.000 --> 00:01:11.010 
computer program to determine whether a

00:01:11.010 --> 00:01:14.530 
computer program to determine whether a
very<00:01:11.670> large<00:01:11.909> number<00:01:12.119> was<00:01:12.420> prime<00:01:12.689> or<00:01:12.869> not<00:01:13.369> so

00:01:14.530 --> 00:01:14.540 
very large number was prime or not so

00:01:14.540 --> 00:01:17.359 
very large number was prime or not so
basically<00:01:15.540> in<00:01:15.900> order<00:01:16.290> for<00:01:16.500> a<00:01:16.530> number<00:01:17.070> to<00:01:17.250> be

00:01:17.359 --> 00:01:17.369 
basically in order for a number to be

00:01:17.369 --> 00:01:20.630 
basically in order for a number to be
prime<00:01:17.759> it<00:01:18.090> needs<00:01:18.750> to<00:01:18.900> be<00:01:19.020> an<00:01:19.110> integer<00:01:19.500> that<00:01:20.250> is

00:01:20.630 --> 00:01:20.640 
prime it needs to be an integer that is

00:01:20.640 --> 00:01:24.289 
prime it needs to be an integer that is
at<00:01:21.270> least<00:01:21.330> two<00:01:21.960> or<00:01:22.530> greater<00:01:22.759> so<00:01:23.759> that's<00:01:23.939> one

00:01:24.289 --> 00:01:24.299 
at least two or greater so that's one

00:01:24.299 --> 00:01:25.760 
at least two or greater so that's one
condition<00:01:24.630> that<00:01:24.840> needs<00:01:25.110> to<00:01:25.229> be<00:01:25.259> met<00:01:25.530> for<00:01:25.710> a

00:01:25.760 --> 00:01:25.770 
condition that needs to be met for a

00:01:25.770 --> 00:01:27.679 
condition that needs to be met for a
number<00:01:26.070> to<00:01:26.189> be<00:01:26.220> prime<00:01:26.580> the<00:01:26.850> second<00:01:27.240> condition

00:01:27.679 --> 00:01:27.689 
number to be prime the second condition

00:01:27.689 --> 00:01:30.200 
number to be prime the second condition
for<00:01:28.080> a<00:01:28.110> number<00:01:28.470> to<00:01:28.619> be<00:01:28.650> prime<00:01:29.009> is<00:01:29.250> that<00:01:30.119> the

00:01:30.200 --> 00:01:30.210 
for a number to be prime is that the

00:01:30.210 --> 00:01:33.109 
for a number to be prime is that the
number<00:01:30.600> cannot<00:01:31.350> produce<00:01:31.619> a<00:01:32.040> remainder<00:01:32.490> of<00:01:32.700> 0

00:01:33.109 --> 00:01:33.119 
number cannot produce a remainder of 0

00:01:33.119 --> 00:01:35.780 
number cannot produce a remainder of 0
when<00:01:33.990> divided<00:01:34.439> by<00:01:34.590> any<00:01:34.950> number<00:01:35.280> in<00:01:35.640> between

00:01:35.780 --> 00:01:35.790 
when divided by any number in between

00:01:35.790 --> 00:01:38.899 
when divided by any number in between
itself<00:01:36.360> and<00:01:36.540> the<00:01:36.750> number<00:01:37.229> 1<00:01:37.439> so<00:01:38.159> for<00:01:38.430> example

00:01:38.899 --> 00:01:38.909 
itself and the number 1 so for example

00:01:38.909 --> 00:01:41.810 
itself and the number 1 so for example
the<00:01:39.299> number<00:01:39.420> 6<00:01:39.900> is<00:01:40.110> not<00:01:40.259> prime<00:01:40.320> because<00:01:40.950> 6

00:01:41.810 --> 00:01:41.820 
the number 6 is not prime because 6

00:01:41.820 --> 00:01:45.560 
the number 6 is not prime because 6
divided<00:01:42.600> by<00:01:42.630> 3<00:01:42.780> is<00:01:43.430> equal<00:01:44.430> to<00:01:44.490> 2<00:01:44.939> with<00:01:45.540> a

00:01:45.560 --> 00:01:45.570 
divided by 3 is equal to 2 with a

00:01:45.570 --> 00:01:50.179 
divided by 3 is equal to 2 with a
remainder<00:01:46.049> of<00:01:46.290> 0<00:01:46.649> so<00:01:47.579> 6<00:01:48.450> is<00:01:48.979> basically<00:01:49.979> has

00:01:50.179 --> 00:01:50.189 
remainder of 0 so 6 is basically has

00:01:50.189 --> 00:01:52.399 
remainder of 0 so 6 is basically has
been<00:01:50.369> divided<00:01:50.850> by<00:01:50.970> some<00:01:51.299> number<00:01:51.329> B<00:01:51.990> 2<00:01:52.229> in

00:01:52.399 --> 00:01:52.409 
been divided by some number B 2 in

00:01:52.409 --> 00:01:55.789 
been divided by some number B 2 in
between<00:01:52.560> itself<00:01:53.399> and<00:01:53.729> the<00:01:54.030> number<00:01:54.299> 1<00:01:54.509> and<00:01:54.810> it's

00:01:55.789 --> 00:01:55.799 
between itself and the number 1 and it's

00:01:55.799 --> 00:01:59.179 
between itself and the number 1 and it's
produced<00:01:56.219> a<00:01:56.430> remainder<00:01:56.790> of<00:01:56.969> 0<00:01:57.570> so<00:01:58.409> because<00:01:59.009> of

00:01:59.179 --> 00:01:59.189 
produced a remainder of 0 so because of

00:01:59.189 --> 00:02:02.660 
produced a remainder of 0 so because of
that<00:01:59.219> 6<00:01:59.759> is<00:01:59.939> not<00:02:00.090> prime<00:02:00.439> so<00:02:01.439> we<00:02:01.770> can<00:02:02.490> basically

00:02:02.660 --> 00:02:02.670 
that 6 is not prime so we can basically

00:02:02.670 --> 00:02:07.100 
that 6 is not prime so we can basically
kind<00:02:03.210> of<00:02:03.270> just<00:02:03.540> check<00:02:04.320> every<00:02:04.829> single<00:02:05.009> case

00:02:07.100 --> 00:02:07.110 
kind of just check every single case

00:02:07.110 --> 00:02:09.830 
kind of just check every single case
dividing<00:02:08.040> by<00:02:08.280> let's<00:02:08.670> say<00:02:08.820> two<00:02:09.210> all<00:02:09.509> the<00:02:09.630> way<00:02:09.720> up

00:02:09.830 --> 00:02:09.840 
dividing by let's say two all the way up

00:02:09.840 --> 00:02:11.870 
dividing by let's say two all the way up
to<00:02:10.020> one<00:02:10.590> less<00:02:10.860> than<00:02:11.070> the<00:02:11.160> number<00:02:11.310> to<00:02:11.550> check<00:02:11.700> for

00:02:11.870 --> 00:02:11.880 
to one less than the number to check for

00:02:11.880 --> 00:02:13.040 
to one less than the number to check for
all<00:02:11.940> these<00:02:12.090> numbers<00:02:12.360> in<00:02:12.480> between<00:02:12.540> so<00:02:12.900> for

00:02:13.040 --> 00:02:13.050 
all these numbers in between so for

00:02:13.050 --> 00:02:15.320 
all these numbers in between so for
example<00:02:13.470> if<00:02:14.100> we<00:02:14.220> were<00:02:14.280> to<00:02:14.340> check<00:02:14.640> to<00:02:14.790> see<00:02:14.820> if<00:02:15.000> 7

00:02:15.320 --> 00:02:15.330 
example if we were to check to see if 7

00:02:15.330 --> 00:02:18.170 
example if we were to check to see if 7
is<00:02:15.450> prime<00:02:15.720> you<00:02:16.380> would<00:02:16.530> do<00:02:16.650> 7<00:02:16.980> divided<00:02:17.400> by<00:02:17.430> 2<00:02:17.550> and

00:02:18.170 --> 00:02:18.180 
is prime you would do 7 divided by 2 and

00:02:18.180 --> 00:02:20.660 
is prime you would do 7 divided by 2 and
that<00:02:19.170> would<00:02:19.290> not<00:02:19.440> produce<00:02:19.680> a<00:02:19.890> remainder<00:02:20.190> of<00:02:20.340> 0

00:02:20.660 --> 00:02:20.670 
that would not produce a remainder of 0

00:02:20.670 --> 00:02:23.660 
that would not produce a remainder of 0
we<00:02:21.330> can<00:02:21.450> do<00:02:21.540> 7<00:02:21.840> divided<00:02:22.110> by<00:02:22.140> 3<00:02:22.230> 7<00:02:22.920> divided<00:02:23.250> by<00:02:23.310> 4

00:02:23.660 --> 00:02:23.670 
we can do 7 divided by 3 7 divided by 4

00:02:23.670 --> 00:02:26.450 
we can do 7 divided by 3 7 divided by 4
5<00:02:24.180> &amp;<00:02:24.540> 6<00:02:24.570> and<00:02:25.140> we<00:02:25.650> would<00:02:25.800> find<00:02:25.830> that<00:02:26.190> all<00:02:26.310> of

00:02:26.450 --> 00:02:26.460 
5 &amp; 6 and we would find that all of

00:02:26.460 --> 00:02:28.310 
5 &amp; 6 and we would find that all of
these<00:02:26.580> cases<00:02:26.850> do<00:02:27.210> not<00:02:27.360> produce<00:02:27.870> a<00:02:27.990> remainder

00:02:28.310 --> 00:02:28.320 
these cases do not produce a remainder

00:02:28.320 --> 00:02:30.680 
these cases do not produce a remainder
of<00:02:28.500> 0<00:02:28.800> and<00:02:29.100> so<00:02:29.700> therefore<00:02:29.880> we<00:02:30.360> can<00:02:30.480> conclude

00:02:30.680 --> 00:02:30.690 
of 0 and so therefore we can conclude

00:02:30.690 --> 00:02:34.790 
of 0 and so therefore we can conclude
that<00:02:31.440> 7<00:02:31.860> is<00:02:31.980> prime<00:02:32.280> so<00:02:33.380> that's<00:02:34.380> really<00:02:34.590> great

00:02:34.790 --> 00:02:34.800 
that 7 is prime so that's really great

00:02:34.800 --> 00:02:37.070 
that 7 is prime so that's really great
when<00:02:35.100> we're<00:02:35.220> dealing<00:02:35.340> with<00:02:35.520> the<00:02:35.700> number<00:02:35.940> 7<00:02:36.360> but

00:02:37.070 --> 00:02:37.080 
when we're dealing with the number 7 but

00:02:37.080 --> 00:02:39.320 
when we're dealing with the number 7 but
what<00:02:37.770> if<00:02:37.890> we're<00:02:38.070> dealing<00:02:38.250> with<00:02:38.430> some<00:02:39.000> number

00:02:39.320 --> 00:02:39.330 
what if we're dealing with some number

00:02:39.330 --> 00:02:43.430 
what if we're dealing with some number
like<00:02:39.680> 101<00:02:40.680> so<00:02:41.430> it<00:02:41.520> turns<00:02:41.700> out<00:02:41.850> that<00:02:41.910> 101<00:02:42.750> is<00:02:42.990> a

00:02:43.430 --> 00:02:43.440 
like 101 so it turns out that 101 is a

00:02:43.440 --> 00:02:45.590 
like 101 so it turns out that 101 is a
prime<00:02:43.740> number<00:02:44.190> but<00:02:44.880> you're<00:02:45.180> not<00:02:45.360> going<00:02:45.540> to

00:02:45.590 --> 00:02:45.600 
prime number but you're not going to

00:02:45.600 --> 00:02:48.560 
prime number but you're not going to
want<00:02:45.780> to<00:02:45.870> go<00:02:46.020> 100<00:02:46.830> 1/2<00:02:47.490> you're<00:02:48.120> not<00:02:48.240> gonna<00:02:48.390> go

00:02:48.560 --> 00:02:48.570 
want to go 100 1/2 you're not gonna go

00:02:48.570 --> 00:02:53.810 
want to go 100 1/2 you're not gonna go
100<00:02:49.160> 1/3<00:02:50.160> all<00:02:50.400> the<00:02:50.670> way<00:02:50.760> up<00:02:50.880> to<00:02:52.280> 101<00:02:53.280> divided<00:02:53.760> by

00:02:53.810 --> 00:02:53.820 
100 1/3 all the way up to 101 divided by

00:02:53.820 --> 00:02:55.730 
100 1/3 all the way up to 101 divided by
100<00:02:54.360> to<00:02:54.480> check<00:02:54.690> every<00:02:55.110> single<00:02:55.410> one<00:02:55.470> of<00:02:55.530> those

00:02:55.730 --> 00:02:55.740 
100 to check every single one of those

00:02:55.740 --> 00:02:58.730 
100 to check every single one of those
cases<00:02:55.970> so<00:02:56.970> in<00:02:57.240> order<00:02:57.390> to<00:02:57.570> avoid<00:02:58.020> that<00:02:58.080> what

00:02:58.730 --> 00:02:58.740 
cases so in order to avoid that what

00:02:58.740 --> 00:03:00.080 
cases so in order to avoid that what
we're<00:02:58.890> going<00:02:59.070> to<00:02:59.100> do<00:02:59.310> is<00:02:59.550> we're<00:02:59.700> just<00:02:59.730> going<00:02:59.880> to

00:03:00.080 --> 00:03:00.090 
we're going to do is we're just going to

00:03:00.090 --> 00:03:02.150 
we're going to do is we're just going to
write<00:03:00.450> a<00:03:00.480> computer<00:03:01.080> program<00:03:01.470> that<00:03:01.740> will<00:03:01.980> do

00:03:02.150 --> 00:03:02.160 
write a computer program that will do

00:03:02.160 --> 00:03:05.360 
write a computer program that will do
that<00:03:02.400> for<00:03:02.670> us<00:03:02.880> so<00:03:03.890> the<00:03:04.890> first<00:03:05.100> thing<00:03:05.250> we're

00:03:05.360 --> 00:03:05.370 
that for us so the first thing we're

00:03:05.370 --> 00:03:07.280 
that for us so the first thing we're
going<00:03:05.520> to<00:03:05.640> do<00:03:05.850> in<00:03:06.000> our<00:03:06.090> program<00:03:06.150> is<00:03:06.750> we're

00:03:07.280 --> 00:03:07.290 
going to do in our program is we're

00:03:07.290 --> 00:03:10.370 
going to do in our program is we're
going<00:03:07.440> to<00:03:07.650> create<00:03:08.010> a<00:03:08.250> function<00:03:09.030> prototype<00:03:09.540> so

00:03:10.370 --> 00:03:10.380 
going to create a function prototype so

00:03:10.380 --> 00:03:12.320 
going to create a function prototype so
this<00:03:10.740> function<00:03:11.160> prototype<00:03:11.640> needs<00:03:11.970> to<00:03:12.120> have<00:03:12.300> a

00:03:12.320 --> 00:03:12.330 
this function prototype needs to have a

00:03:12.330 --> 00:03:14.570 
this function prototype needs to have a
return<00:03:12.840> type<00:03:13.140> so<00:03:13.470> this<00:03:13.709> return<00:03:14.040> type<00:03:14.280> is<00:03:14.459> going

00:03:14.570 --> 00:03:14.580 
return type so this return type is going

00:03:14.580 --> 00:03:17.300 
return type so this return type is going
to<00:03:14.730> tell<00:03:15.090> our<00:03:15.570> program<00:03:16.320> what<00:03:16.800> type<00:03:16.980> of<00:03:17.010> value

00:03:17.300 --> 00:03:17.310 
to tell our program what type of value

00:03:17.310 --> 00:03:20.000 
to tell our program what type of value
to<00:03:17.730> expect<00:03:18.269> from<00:03:18.930> the<00:03:19.110> function<00:03:19.500> when<00:03:19.890> it

00:03:20.000 --> 00:03:20.010 
to expect from the function when it

00:03:20.010 --> 00:03:21.740 
to expect from the function when it
completes<00:03:20.370> and<00:03:20.640> we<00:03:21.000> don't<00:03:21.180> want<00:03:21.330> it<00:03:21.420> to<00:03:21.510> return

00:03:21.740 --> 00:03:21.750 
completes and we don't want it to return

00:03:21.750 --> 00:03:23.479 
completes and we don't want it to return
anything<00:03:22.350> so<00:03:22.590> we're<00:03:22.709> just<00:03:22.739> going<00:03:23.040> to<00:03:23.130> give<00:03:23.340> it

00:03:23.479 --> 00:03:23.489 
anything so we're just going to give it

00:03:23.489 --> 00:03:27.050 
anything so we're just going to give it
a<00:03:23.580> return<00:03:24.000> type<00:03:24.269> of<00:03:24.510> void<00:03:25.160> so<00:03:26.160> it<00:03:26.610> has<00:03:26.760> a<00:03:26.790> void

00:03:27.050 --> 00:03:27.060 
a return type of void so it has a void

00:03:27.060 --> 00:03:28.670 
a return type of void so it has a void
return<00:03:27.269> type<00:03:27.480> and<00:03:27.900> we're<00:03:28.050> going<00:03:28.200> to<00:03:28.230> name<00:03:28.410> our

00:03:28.670 --> 00:03:28.680 
return type and we're going to name our

00:03:28.680 --> 00:03:31.850 
return type and we're going to name our
function<00:03:29.220> is<00:03:29.930> prime<00:03:30.930> because<00:03:31.530> that's<00:03:31.709> the

00:03:31.850 --> 00:03:31.860 
function is prime because that's the

00:03:31.860 --> 00:03:34.100 
function is prime because that's the
question<00:03:31.980> we're<00:03:32.370> asking<00:03:32.400> is<00:03:32.970> this<00:03:33.780> number

00:03:34.100 --> 00:03:34.110 
question we're asking is this number

00:03:34.110 --> 00:03:37.090 
question we're asking is this number
that<00:03:34.739> we're<00:03:34.890> looking<00:03:34.920> at<00:03:35.340> prime<00:03:35.850> or<00:03:36.180> not<00:03:36.390> and

00:03:37.090 --> 00:03:37.100 
that we're looking at prime or not and

00:03:37.100 --> 00:03:39.140 
that we're looking at prime or not and
what<00:03:38.100> we're<00:03:38.250> going<00:03:38.340> to<00:03:38.430> do<00:03:38.580> is<00:03:38.760> we're<00:03:38.910> going<00:03:38.940> to

00:03:39.140 --> 00:03:39.150 
what we're going to do is we're going to

00:03:39.150 --> 00:03:41.210 
what we're going to do is we're going to
pass<00:03:39.420> in<00:03:39.660> an<00:03:39.780> integer<00:03:40.110> value<00:03:40.650> into<00:03:41.070> this

00:03:41.210 --> 00:03:41.220 
pass in an integer value into this

00:03:41.220 --> 00:03:43.759 
pass in an integer value into this
function<00:03:41.489> and<00:03:41.940> the<00:03:42.660> way<00:03:42.750> we<00:03:42.900> do<00:03:43.050> that<00:03:43.230> is<00:03:43.470> we

00:03:43.759 --> 00:03:43.769 
function and the way we do that is we

00:03:43.769 --> 00:03:45.920 
function and the way we do that is we
just<00:03:43.920> type<00:03:44.160> int<00:03:44.430> for<00:03:44.730> integer<00:03:45.239> and<00:03:45.420> then<00:03:45.780> we

00:03:45.920 --> 00:03:45.930 
just type int for integer and then we

00:03:45.930 --> 00:03:49.280 
just type int for integer and then we
give<00:03:46.140> the<00:03:46.530> we<00:03:47.489> give<00:03:47.640> our<00:03:47.790> variable<00:03:48.269> a<00:03:48.360> name<00:03:48.540> so

00:03:49.280 --> 00:03:49.290 
give the we give our variable a name so

00:03:49.290 --> 00:03:50.720 
give the we give our variable a name so
basically<00:03:49.620> we<00:03:49.830> have<00:03:49.950> this<00:03:50.100> function<00:03:50.489> called

00:03:50.720 --> 00:03:50.730 
basically we have this function called

00:03:50.730 --> 00:03:53.500 
basically we have this function called
is<00:03:50.970> prime<00:03:51.300> we're<00:03:52.080> going<00:03:52.290> to<00:03:52.410> pass<00:03:52.590> in<00:03:52.890> some

00:03:53.500 --> 00:03:53.510 
is prime we're going to pass in some

00:03:53.510 --> 00:03:56.180 
is prime we're going to pass in some
integer<00:03:54.510> inside<00:03:55.170> of<00:03:55.350> this<00:03:55.470> variable<00:03:56.040> called

00:03:56.180 --> 00:03:56.190 
integer inside of this variable called

00:03:56.190 --> 00:03:58.910 
integer inside of this variable called
number<00:03:56.670> and<00:03:56.989> we're<00:03:57.989> going<00:03:58.230> to<00:03:58.320> check<00:03:58.560> to<00:03:58.739> see

00:03:58.910 --> 00:03:58.920 
number and we're going to check to see

00:03:58.920 --> 00:04:01.430 
number and we're going to check to see
whether<00:03:59.160> or<00:03:59.340> not<00:03:59.430> the<00:04:00.209> integer<00:04:01.019> in<00:04:01.260> this

00:04:01.430 --> 00:04:01.440 
whether or not the integer in this

00:04:01.440 --> 00:04:03.590 
whether or not the integer in this
variable<00:04:01.980> number<00:04:02.519> here<00:04:02.790> we're<00:04:03.420> going<00:04:03.540> to

00:04:03.590 --> 00:04:03.600 
variable number here we're going to

00:04:03.600 --> 00:04:05.750 
variable number here we're going to
check<00:04:03.780> to<00:04:03.930> see<00:04:04.080> if<00:04:04.290> that<00:04:04.320> is<00:04:04.890> a<00:04:04.950> prime<00:04:05.430> number

00:04:05.750 --> 00:04:05.760 
check to see if that is a prime number

00:04:05.760 --> 00:04:08.660 
check to see if that is a prime number
or<00:04:05.790> not<00:04:06.060> by<00:04:06.269> writing<00:04:06.540> some<00:04:06.840> logic<00:04:07.580> for<00:04:08.580> this

00:04:08.660 --> 00:04:08.670 
or not by writing some logic for this

00:04:08.670 --> 00:04:09.780 
or not by writing some logic for this
function

00:04:09.780 --> 00:04:09.790 
function

00:04:09.790 --> 00:04:12.089 
function
so<00:04:10.360> that's<00:04:10.540> basically<00:04:10.900> what<00:04:11.110> the<00:04:11.650> is<00:04:11.769> prime

00:04:12.089 --> 00:04:12.099 
so that's basically what the is prime

00:04:12.099 --> 00:04:13.380 
so that's basically what the is prime
function<00:04:12.310> is<00:04:12.549> going<00:04:12.700> to<00:04:12.760> do<00:04:12.879> it's<00:04:13.030> just<00:04:13.209> going

00:04:13.380 --> 00:04:13.390 
function is going to do it's just going

00:04:13.390 --> 00:04:15.149 
function is going to do it's just going
to<00:04:13.480> take<00:04:13.659> an<00:04:13.780> integer<00:04:14.049> and<00:04:14.319> it's<00:04:14.709> going<00:04:15.010> to

00:04:15.149 --> 00:04:15.159 
to take an integer and it's going to

00:04:15.159 --> 00:04:17.039 
to take an integer and it's going to
determine<00:04:15.519> whether<00:04:15.849> or<00:04:15.970> not<00:04:16.090> that<00:04:16.329> integer<00:04:16.840> is

00:04:17.039 --> 00:04:17.049 
determine whether or not that integer is

00:04:17.049 --> 00:04:18.990 
determine whether or not that integer is
prime<00:04:17.709> and<00:04:18.250> we're<00:04:18.340> going<00:04:18.459> to<00:04:18.489> do<00:04:18.609> that<00:04:18.790> based

00:04:18.990 --> 00:04:19.000 
prime and we're going to do that based

00:04:19.000 --> 00:04:20.610 
prime and we're going to do that based
off<00:04:19.180> of<00:04:19.209> these<00:04:19.449> two<00:04:19.690> conditions<00:04:20.019> that<00:04:20.380> I<00:04:20.410> have

00:04:20.610 --> 00:04:20.620 
off of these two conditions that I have

00:04:20.620 --> 00:04:23.430 
off of these two conditions that I have
up<00:04:20.799> here<00:04:20.940> so<00:04:21.940> the<00:04:22.600> first<00:04:22.720> thing<00:04:22.960> we<00:04:23.080> want<00:04:23.229> to<00:04:23.290> do

00:04:23.430 --> 00:04:23.440 
up here so the first thing we want to do

00:04:23.440 --> 00:04:25.830 
up here so the first thing we want to do
is<00:04:23.680> below<00:04:24.040> our<00:04:24.310> main<00:04:24.550> program<00:04:25.120> so<00:04:25.419> for<00:04:25.720> those

00:04:25.830 --> 00:04:25.840 
is below our main program so for those

00:04:25.840 --> 00:04:27.750 
is below our main program so for those
of<00:04:25.990> you<00:04:26.110> who<00:04:26.410> have<00:04:26.949> never<00:04:27.070> programmed<00:04:27.340> before

00:04:27.750 --> 00:04:27.760 
of you who have never programmed before

00:04:27.760 --> 00:04:29.370 
of you who have never programmed before
this<00:04:28.060> right<00:04:28.240> here<00:04:28.539> is<00:04:28.690> what<00:04:28.870> I'm<00:04:28.960> referring<00:04:29.110> to

00:04:29.370 --> 00:04:29.380 
this right here is what I'm referring to

00:04:29.380 --> 00:04:32.640 
this right here is what I'm referring to
as<00:04:29.470> the<00:04:29.590> main<00:04:29.889> program<00:04:30.430> and<00:04:31.199> below<00:04:32.199> that<00:04:32.440> we're

00:04:32.640 --> 00:04:32.650 
as the main program and below that we're

00:04:32.650 --> 00:04:35.629 
as the main program and below that we're
going<00:04:32.770> to<00:04:32.889> define<00:04:33.520> this<00:04:34.080> function<00:04:35.080> right<00:04:35.470> here

00:04:35.629 --> 00:04:35.639 
going to define this function right here

00:04:35.639 --> 00:04:38.279 
going to define this function right here
so<00:04:36.639> what<00:04:37.060> we're<00:04:37.150> gonna<00:04:37.210> do<00:04:37.539> is<00:04:38.020> we're<00:04:38.260> just

00:04:38.279 --> 00:04:38.289 
so what we're gonna do is we're just

00:04:38.289 --> 00:04:42.029 
so what we're gonna do is we're just
gonna<00:04:38.470> copy<00:04:38.830> this<00:04:39.750> and<00:04:40.750> we'll<00:04:41.710> go<00:04:41.800> ahead<00:04:41.860> and

00:04:42.029 --> 00:04:42.039 
gonna copy this and we'll go ahead and

00:04:42.039 --> 00:04:44.850 
gonna copy this and we'll go ahead and
paste<00:04:42.190> it<00:04:42.430> down<00:04:42.550> here<00:04:43.470> get<00:04:44.470> rid<00:04:44.620> of<00:04:44.710> the

00:04:44.850 --> 00:04:44.860 
paste it down here get rid of the

00:04:44.860 --> 00:04:46.620 
paste it down here get rid of the
semicolon<00:04:45.490> and<00:04:45.789> then<00:04:45.850> we're<00:04:46.000> gonna<00:04:46.120> just<00:04:46.389> do

00:04:46.620 --> 00:04:46.630 
semicolon and then we're gonna just do

00:04:46.630 --> 00:04:48.570 
semicolon and then we're gonna just do
an<00:04:46.750> opening<00:04:47.199> and<00:04:47.289> closing<00:04:47.620> curly<00:04:47.650> brace<00:04:48.130> and

00:04:48.570 --> 00:04:48.580 
an opening and closing curly brace and

00:04:48.580 --> 00:04:51.420 
an opening and closing curly brace and
so<00:04:49.150> everything<00:04:50.139> all<00:04:50.410> the<00:04:50.530> logic<00:04:50.979> that<00:04:51.070> we<00:04:51.220> want

00:04:51.420 --> 00:04:51.430 
so everything all the logic that we want

00:04:51.430 --> 00:04:52.980 
so everything all the logic that we want
to<00:04:51.490> have<00:04:51.669> happen<00:04:51.880> to<00:04:52.120> determine<00:04:52.690> whether<00:04:52.870> or

00:04:52.980 --> 00:04:52.990 
to have happen to determine whether or

00:04:52.990 --> 00:04:55.050 
to have happen to determine whether or
not<00:04:53.110> this<00:04:53.800> number<00:04:54.250> we're<00:04:54.400> passing<00:04:54.850> in<00:04:54.970> this

00:04:55.050 --> 00:04:55.060 
not this number we're passing in this

00:04:55.060 --> 00:04:57.240 
not this number we're passing in this
prime<00:04:55.389> is<00:04:55.960> going<00:04:56.139> to<00:04:56.289> be<00:04:56.440> inside<00:04:56.949> of<00:04:57.010> these

00:04:57.240 --> 00:04:57.250 
prime is going to be inside of these

00:04:57.250 --> 00:05:00.060 
prime is going to be inside of these
curly<00:04:57.610> braces<00:04:57.760> here<00:04:58.350> so<00:04:59.350> let's<00:04:59.710> go<00:04:59.800> ahead<00:04:59.889> and

00:05:00.060 --> 00:05:00.070 
curly braces here so let's go ahead and

00:05:00.070 --> 00:05:02.700 
curly braces here so let's go ahead and
check<00:05:00.460> for<00:05:00.940> the<00:05:01.330> first<00:05:01.720> condition<00:05:02.199> so<00:05:02.410> we<00:05:02.560> know

00:05:02.700 --> 00:05:02.710 
check for the first condition so we know

00:05:02.710 --> 00:05:04.890 
check for the first condition so we know
that<00:05:02.919> we<00:05:03.039> need<00:05:03.130> to<00:05:03.250> have<00:05:03.400> an<00:05:03.520> integer<00:05:03.880> that<00:05:04.660> is

00:05:04.890 --> 00:05:04.900 
that we need to have an integer that is

00:05:04.900 --> 00:05:08.250 
that we need to have an integer that is
two<00:05:05.260> or<00:05:05.530> greater<00:05:05.620> so<00:05:06.419> what<00:05:07.419> we<00:05:07.539> can<00:05:07.660> do<00:05:07.870> is<00:05:08.139> we

00:05:08.250 --> 00:05:08.260 
two or greater so what we can do is we

00:05:08.260 --> 00:05:11.180 
two or greater so what we can do is we
can<00:05:08.440> do<00:05:08.650> an<00:05:08.949> if<00:05:09.160> statement<00:05:09.430> we<00:05:09.760> can<00:05:09.789> say<00:05:10.030> if

00:05:11.180 --> 00:05:11.190 
can do an if statement we can say if

00:05:11.190 --> 00:05:13.200 
can do an if statement we can say if
basically<00:05:12.190> our<00:05:12.310> number<00:05:12.669> this<00:05:12.789> is<00:05:12.850> going<00:05:13.060> to<00:05:13.120> be

00:05:13.200 --> 00:05:13.210 
basically our number this is going to be

00:05:13.210 --> 00:05:14.550 
basically our number this is going to be
whatever<00:05:13.389> number<00:05:13.750> we<00:05:13.900> pass<00:05:14.139> into<00:05:14.410> the

00:05:14.550 --> 00:05:14.560 
whatever number we pass into the

00:05:14.560 --> 00:05:17.719 
whatever number we pass into the
function<00:05:14.949> if<00:05:15.160> our<00:05:15.880> number<00:05:16.270> is<00:05:16.479> less<00:05:17.110> than<00:05:17.440> two

00:05:17.719 --> 00:05:17.729 
function if our number is less than two

00:05:17.729 --> 00:05:19.950 
function if our number is less than two
well<00:05:18.729> then<00:05:18.849> we<00:05:18.970> know<00:05:19.120> we<00:05:19.270> don't<00:05:19.360> have<00:05:19.479> a<00:05:19.570> prime

00:05:19.950 --> 00:05:19.960 
well then we know we don't have a prime

00:05:19.960 --> 00:05:22.379 
well then we know we don't have a prime
because<00:05:20.620> that's<00:05:20.800> one<00:05:20.979> of<00:05:21.070> the<00:05:21.160> conditions<00:05:21.580> so

00:05:22.379 --> 00:05:22.389 
because that's one of the conditions so

00:05:22.389 --> 00:05:24.689 
because that's one of the conditions so
if<00:05:22.750> that's<00:05:22.960> the<00:05:23.229> case<00:05:23.440> we're<00:05:24.039> going<00:05:24.280> to<00:05:24.400> send<00:05:24.610> a

00:05:24.689 --> 00:05:24.699 
if that's the case we're going to send a

00:05:24.699 --> 00:05:27.330 
if that's the case we're going to send a
message<00:05:25.090> to<00:05:25.120> the<00:05:25.360> screen<00:05:25.630> and<00:05:25.919> it's<00:05:26.919> going<00:05:27.130> to

00:05:27.330 --> 00:05:27.340 
message to the screen and it's going to

00:05:27.340 --> 00:05:30.210 
message to the screen and it's going to
basically<00:05:27.669> just<00:05:27.820> say<00:05:28.210> that<00:05:28.750> number<00:05:29.710> whatever

00:05:30.210 --> 00:05:30.220 
basically just say that number whatever

00:05:30.220 --> 00:05:32.640 
basically just say that number whatever
we<00:05:30.550> passed<00:05:30.820> in<00:05:31.120> so<00:05:32.080> whatever<00:05:32.410> number<00:05:32.620> we

00:05:32.640 --> 00:05:32.650 
we passed in so whatever number we

00:05:32.650 --> 00:05:35.430 
we passed in so whatever number we
passed<00:05:32.979> in<00:05:33.250> and<00:05:34.150> then<00:05:34.360> it's<00:05:34.449> going<00:05:34.539> to<00:05:34.599> say<00:05:34.780> is

00:05:35.430 --> 00:05:35.440 
passed in and then it's going to say is

00:05:35.440 --> 00:05:39.480 
passed in and then it's going to say is
not<00:05:36.630> prime<00:05:37.830> so<00:05:38.830> that<00:05:38.949> takes<00:05:39.099> care<00:05:39.250> of<00:05:39.400> that

00:05:39.480 --> 00:05:39.490 
not prime so that takes care of that

00:05:39.490 --> 00:05:43.500 
not prime so that takes care of that
case<00:05:39.960> so<00:05:40.960> now<00:05:41.380> we<00:05:41.440> need<00:05:41.770> to<00:05:41.830> basically<00:05:42.729> put

00:05:43.500 --> 00:05:43.510 
case so now we need to basically put

00:05:43.510 --> 00:05:46.830 
case so now we need to basically put
some<00:05:43.660> logic<00:05:44.080> in<00:05:44.229> to<00:05:44.740> determine<00:05:45.690> whether<00:05:46.690> or

00:05:46.830 --> 00:05:46.840 
some logic in to determine whether or

00:05:46.840 --> 00:05:49.379 
some logic in to determine whether or
not<00:05:46.930> this<00:05:47.169> if<00:05:47.710> it<00:05:48.160> passes<00:05:48.370> this<00:05:48.669> first<00:05:48.940> case<00:05:49.150> if

00:05:49.379 --> 00:05:49.389 
not this if it passes this first case if

00:05:49.389 --> 00:05:51.600 
not this if it passes this first case if
the<00:05:49.479> number<00:05:49.750> is<00:05:49.990> equal<00:05:50.949> to<00:05:51.099> or<00:05:51.250> greater<00:05:51.280> than

00:05:51.600 --> 00:05:51.610 
the number is equal to or greater than

00:05:51.610 --> 00:05:53.760 
the number is equal to or greater than
two<00:05:51.880> then<00:05:52.120> we<00:05:52.630> need<00:05:52.780> some<00:05:52.930> more<00:05:53.080> logic<00:05:53.590> to

00:05:53.760 --> 00:05:53.770 
two then we need some more logic to

00:05:53.770 --> 00:05:56.339 
two then we need some more logic to
basically<00:05:54.250> determine<00:05:54.659> whether<00:05:55.659> or<00:05:55.780> not<00:05:55.990> this

00:05:56.339 --> 00:05:56.349 
basically determine whether or not this

00:05:56.349 --> 00:06:00.070 
basically determine whether or not this
number<00:05:56.889> is<00:05:57.099> indeed<00:05:57.880> prime<00:05:58.270> so

00:06:00.070 --> 00:06:00.080 
number is indeed prime so

00:06:00.080 --> 00:06:02.320 
number is indeed prime so
what<00:06:01.009> we're<00:06:01.099> gonna<00:06:01.159> do<00:06:01.430> there<00:06:01.729> is<00:06:02.000> we're<00:06:02.180> going

00:06:02.320 --> 00:06:02.330 
what we're gonna do there is we're going

00:06:02.330 --> 00:06:05.379 
what we're gonna do there is we're going
to<00:06:02.419> do<00:06:02.659> an<00:06:02.930> Elsa<00:06:03.349> statement<00:06:03.800> so<00:06:04.520> basically

00:06:05.379 --> 00:06:05.389 
to do an Elsa statement so basically

00:06:05.389 --> 00:06:08.040 
to do an Elsa statement so basically
what<00:06:06.169> happens<00:06:06.470> with<00:06:06.620> this<00:06:06.770> else<00:06:07.009> statement<00:06:07.550> is

00:06:08.040 --> 00:06:08.050 
what happens with this else statement is

00:06:08.050 --> 00:06:11.800 
what happens with this else statement is
if<00:06:09.050> the<00:06:09.530> if<00:06:09.800> statement<00:06:10.460> doesn't<00:06:10.849> happen<00:06:11.090> so<00:06:11.569> if

00:06:11.800 --> 00:06:11.810 
if the if statement doesn't happen so if

00:06:11.810 --> 00:06:13.719 
if the if statement doesn't happen so if
our<00:06:11.990> number<00:06:12.289> is<00:06:12.439> not<00:06:12.800> less<00:06:12.830> than<00:06:13.159> two<00:06:13.490> then

00:06:13.719 --> 00:06:13.729 
our number is not less than two then

00:06:13.729 --> 00:06:15.730 
our number is not less than two then
it's<00:06:14.270> going<00:06:14.360> to<00:06:14.419> do<00:06:14.569> whatever<00:06:14.930> we<00:06:15.110> put<00:06:15.319> in<00:06:15.560> this

00:06:15.730 --> 00:06:15.740 
it's going to do whatever we put in this

00:06:15.740 --> 00:06:18.189 
it's going to do whatever we put in this
else<00:06:16.039> statement<00:06:16.669> here<00:06:16.879> so<00:06:17.539> this<00:06:17.750> is<00:06:17.900> the<00:06:17.990> case

00:06:18.189 --> 00:06:18.199 
else statement here so this is the case

00:06:18.199 --> 00:06:19.779 
else statement here so this is the case
where<00:06:18.439> the<00:06:18.560> number<00:06:18.590> is<00:06:18.949> either<00:06:19.129> equal<00:06:19.400> to<00:06:19.610> or

00:06:19.779 --> 00:06:19.789 
where the number is either equal to or

00:06:19.789 --> 00:06:22.450 
where the number is either equal to or
greater<00:06:20.330> than<00:06:20.509> two<00:06:21.020> so<00:06:21.680> it<00:06:21.800> passed<00:06:22.009> the<00:06:22.219> first

00:06:22.450 --> 00:06:22.460 
greater than two so it passed the first

00:06:22.460 --> 00:06:25.809 
greater than two so it passed the first
condition<00:06:22.939> if<00:06:23.090> it<00:06:23.180> makes<00:06:23.389> it<00:06:23.569> here<00:06:23.840> so<00:06:24.819> I'm

00:06:25.809 --> 00:06:25.819 
condition if it makes it here so I'm

00:06:25.819 --> 00:06:26.890 
condition if it makes it here so I'm
going<00:06:25.939> to<00:06:26.030> go<00:06:26.120> ahead<00:06:26.180> and<00:06:26.389> end<00:06:26.509> the<00:06:26.629> video<00:06:26.780> here

00:06:26.890 --> 00:06:26.900 
going to go ahead and end the video here

00:06:26.900 --> 00:06:30.790 
going to go ahead and end the video here
and<00:06:27.409> we'll<00:06:27.620> pick<00:06:27.860> up<00:06:28.069> in<00:06:28.389> part<00:06:29.389> two<00:06:29.530> where<00:06:30.530> we

00:06:30.790 --> 00:06:30.800 
and we'll pick up in part two where we

00:06:30.800 --> 00:06:34.360 
and we'll pick up in part two where we
start<00:06:31.099> defining<00:06:31.280> this<00:06:32.150> else<00:06:32.449> portion<00:06:33.050> of<00:06:33.370> the

00:06:34.360 --> 00:06:34.370 
start defining this else portion of the

00:06:34.370 --> 00:06:36.909 
start defining this else portion of the
is<00:06:34.610> prime<00:06:34.940> function<00:06:35.180> so<00:06:36.169> anyway<00:06:36.469> stay<00:06:36.740> tuned

00:06:36.909 --> 00:06:36.919 
is prime function so anyway stay tuned

00:06:36.919 --> 00:06:39.459 
is prime function so anyway stay tuned
for<00:06:37.159> the<00:06:37.250> next<00:06:37.370> video<00:06:37.759> and<00:06:38.080> you<00:06:39.080> guys<00:06:39.199> have<00:06:39.379> an

00:06:39.459 --> 00:06:39.469 
for the next video and you guys have an

00:06:39.469 --> 00:06:41.110 
for the next video and you guys have an
excellent<00:06:39.740> day<00:06:39.860> and<00:06:40.340> if<00:06:40.699> you<00:06:40.789> haven't<00:06:40.940> already

00:06:41.110 --> 00:06:41.120 
excellent day and if you haven't already

00:06:41.120 --> 00:06:44.740 
excellent day and if you haven't already
don't<00:06:41.750> forget<00:06:41.810> to<00:06:42.259> subscribe

