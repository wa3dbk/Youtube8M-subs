WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.436
 Now, the next question. 

00:00:01.436 --> 00:00:02.901
 When we make a high performance processor, 

00:00:02.901 --> 00:00:06.406
 Of course, the best energy consumption, what do we need to optimize? 

00:00:06.406 --> 00:00:08.808
 One option is to minimize execution time. 

00:00:08.808 --> 00:00:11.376
 Execution time is the time to complete a task. 

00:00:11.376 --> 00:00:14.312
 We measure execution time in units of time, such as seconds. 

00:00:14.312 --> 00:00:15.918
 Another option is throughput 

00:00:15.918 --> 00:00:19.030
 Throughput is the amount of tasks completed per unit of time. 

00:00:19.030 --> 00:00:24.057
 We measure throughput in units of workload per job, such as work done every hour. 

00:00:24.057 --> 00:00:27.542
 Unfortunately, these two goals are not necessarily the same. 

00:00:27.542 --> 00:00:30.163
 In the US, if you have a driverâ€™s license or a j sedan, 

00:00:30.163 --> 00:00:35.933
 Then you get an unfortunate opportunity to go to a government department called the Motor Vehicle Department. 

00:00:35.933 --> 00:00:38.972
 If you are not from the United States, you may go to a place like this. 

00:00:38.972 --> 00:00:43.076
 So, in your mind, when I say "DMV", replace it with your favorite government department. 

00:00:43.076 --> 00:00:46.046
 This is a very frustrating experience when you go to the Motor Vehicle Department. 

00:00:46.046 --> 00:00:50.883
 You wait in line for a long time. Although this is not necessarily the fault of DMV. 

00:00:50.883 --> 00:00:55.589
 The reason for this is that your goal is inconsistent with the goals of the Motor Vehicles Department. 

00:00:55.589 --> 00:01:01.171
 Your goal is to optimize waiting time. You want to stay in the motor vehicle as little as possible. 

00:01:01.171 --> 00:01:04.397
 However, the motor vehicle department needs to optimize throughput. 

00:01:04.397 --> 00:01:07.432
 Specifically, the number of customers they serve each day. 

00:01:07.432 --> 00:01:12.640
 As a result, the two people sitting behind the desk here work for the motor vehicle department, and they need regular teams. 

00:01:12.640 --> 00:01:15.678
 Long queues mean that the employees who work hard are always busy. 

00:01:15.678 --> 00:01:19.036
 Because there is never a customer they have not waited for a moment. 

00:01:19.036 --> 00:01:22.048
 Traditional CPU CPUs optimize execution time. 

00:01:22.048 --> 00:01:26.018
 They try to minimize the time spent on each specific task. 

00:01:26.018 --> 00:01:28.822
 The GPU, on the other hand, chooses to optimize throughput. 

00:01:28.822 --> 00:01:30.873
 This is a completely different approach 

00:01:30.873 --> 00:01:33.673
 And it is a method consistent with the technological trends in the computer field. 

00:01:33.673 --> 00:01:38.967
 I recommend to you the 2004 David Paterson article that execution time lags behind bandwidth. 

00:01:38.967 --> 00:01:43.635
 There are many, many applications that use optimized throughput, which is the right way. 

00:01:43.635 --> 00:01:49.476
 For example, in computer graphics, we are more concerned with the amount of pixels per second than the execution time of a particular pixel I. 

00:01:49.476 --> 00:01:52.931
 We are willing to double the processing time of one pixel 

00:01:52.931 --> 00:01:55.114
 If so, we can get more pixel throughput. 

00:01:55.114 --> 00:01:58.565
 The focus of this lesson assignment is on the application of image processing. 

00:01:58.565 --> 00:02:00.815
 Here, we also pay more attention to throughput. 

00:02:00.815 --> 00:02:05.824
 That is, the time that is processed per second instead of a single pixel is processed. 

00:02:05.824 --> 00:02:08.993
 The image processing application and the image processor GPU are a perfect pair of partners! 

00:02:08.993 --> 00:02:12.897
 That's why we are so excited about using them as powerful examples of this lesson. 

