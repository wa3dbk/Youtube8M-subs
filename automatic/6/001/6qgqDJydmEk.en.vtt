WEBVTT
Kind: captions
Language: en

00:00:09.200 --> 00:00:12.890 

hi<00:00:10.200> I'm<00:00:10.500> Jeff<00:00:10.980> Cogswell<00:00:11.460> today<00:00:12.059> I<00:00:12.090> go<00:00:12.540> parallel

00:00:12.890 --> 00:00:12.900 
hi I'm Jeff Cogswell today I go parallel

00:00:12.900 --> 00:00:14.539 
hi I'm Jeff Cogswell today I go parallel
we're<00:00:13.200> going<00:00:13.349> to<00:00:13.410> look<00:00:13.559> at<00:00:13.769> how<00:00:14.040> to<00:00:14.099> generate

00:00:14.539 --> 00:00:14.549 
we're going to look at how to generate

00:00:14.549 --> 00:00:16.730 
we're going to look at how to generate
different<00:00:14.759> types<00:00:15.179> of<00:00:15.420> code<00:00:15.990> in<00:00:16.320> visual<00:00:16.680> studio

00:00:16.730 --> 00:00:16.740 
different types of code in visual studio

00:00:16.740 --> 00:00:18.920 
different types of code in visual studio
based<00:00:17.369> on<00:00:17.640> the<00:00:17.850> processor<00:00:18.570> that<00:00:18.779> you're

00:00:18.920 --> 00:00:18.930 
based on the processor that you're

00:00:18.930 --> 00:00:22.429 
based on the processor that you're
targeting<00:00:19.460> for<00:00:20.460> example<00:00:21.119> the<00:00:21.510> advanced

00:00:22.429 --> 00:00:22.439 
targeting for example the advanced

00:00:22.439 --> 00:00:24.710 
targeting for example the advanced
vector<00:00:23.160> instruction<00:00:23.760> sets<00:00:24.119> or<00:00:24.420> in<00:00:24.600> the

00:00:24.710 --> 00:00:24.720 
vector instruction sets or in the

00:00:24.720 --> 00:00:27.109 
vector instruction sets or in the
earlier<00:00:25.019> version<00:00:25.529> let's<00:00:26.400> take<00:00:26.550> a<00:00:26.609> look<00:00:26.820> at<00:00:26.880> the

00:00:27.109 --> 00:00:27.119 
earlier version let's take a look at the

00:00:27.119 --> 00:00:29.179 
earlier version let's take a look at the
options<00:00:27.420> here<00:00:28.080> and<00:00:28.289> then<00:00:28.830> what<00:00:29.010> we're<00:00:29.160> going

00:00:29.179 --> 00:00:29.189 
options here and then what we're going

00:00:29.189 --> 00:00:30.830 
options here and then what we're going
to<00:00:29.340> do<00:00:29.490> is<00:00:29.609> generate<00:00:29.820> the<00:00:30.090> code<00:00:30.330> and<00:00:30.539> then<00:00:30.660> look

00:00:30.830 --> 00:00:30.840 
to do is generate the code and then look

00:00:30.840 --> 00:00:33.200 
to do is generate the code and then look
at<00:00:30.900> the<00:00:30.960> assembly<00:00:31.529> code<00:00:31.830> and<00:00:32.160> the<00:00:32.579> next<00:00:32.940> time

00:00:33.200 --> 00:00:33.210 
at the assembly code and the next time

00:00:33.210 --> 00:00:34.880 
at the assembly code and the next time
we're<00:00:33.809> going<00:00:33.899> to<00:00:33.960> actually<00:00:34.170> go<00:00:34.530> into<00:00:34.710> that

00:00:34.880 --> 00:00:34.890 
we're going to actually go into that

00:00:34.890 --> 00:00:37.430 
we're going to actually go into that
assembly<00:00:35.399> code<00:00:35.640> and<00:00:36.030> see<00:00:36.420> exactly<00:00:36.630> what<00:00:37.260> we're

00:00:37.430 --> 00:00:37.440 
assembly code and see exactly what we're

00:00:37.440 --> 00:00:40.580 
assembly code and see exactly what we're
getting<00:00:37.829> in<00:00:37.980> terms<00:00:38.219> of<00:00:38.370> optimization<00:00:39.300> so<00:00:40.290> open

00:00:40.580 --> 00:00:40.590 
getting in terms of optimization so open

00:00:40.590 --> 00:00:45.670 
getting in terms of optimization so open
up<00:00:40.649> your<00:00:40.829> properties<00:00:41.399> for<00:00:41.579> your<00:00:41.700> project<00:00:42.379> and

00:00:45.670 --> 00:00:45.680 

00:00:45.680 --> 00:00:48.590 

go<00:00:46.680> to<00:00:46.739> all<00:00:46.980> options<00:00:47.489> I<00:00:47.640> find<00:00:48.210> that<00:00:48.360> all

00:00:48.590 --> 00:00:48.600 
go to all options I find that all

00:00:48.600 --> 00:00:50.029 
go to all options I find that all
options<00:00:48.809> is<00:00:49.200> a<00:00:49.230> little<00:00:49.500> easier<00:00:49.770> to<00:00:49.890> find

00:00:50.029 --> 00:00:50.039 
options is a little easier to find

00:00:50.039 --> 00:00:51.680 
options is a little easier to find
everything<00:00:50.340> I<00:00:50.520> need<00:00:50.700> there<00:00:51.300> are<00:00:51.390> three

00:00:51.680 --> 00:00:51.690 
everything I need there are three

00:00:51.690 --> 00:00:54.770 
everything I need there are three
options<00:00:51.870> that<00:00:52.680> we<00:00:52.800> can<00:00:52.949> set<00:00:53.370> the<00:00:54.270> one<00:00:54.420> we<00:00:54.570> want

00:00:54.770 --> 00:00:54.780 
options that we can set the one we want

00:00:54.780 --> 00:00:59.420 
options that we can set the one we want
this<00:00:55.620> time<00:00:56.090> is<00:00:57.090> right<00:00:58.079> here<00:00:58.379> intel<00:00:58.829> processor

00:00:59.420 --> 00:00:59.430 
this time is right here intel processor

00:00:59.430 --> 00:01:02.150 
this time is right here intel processor
specific<00:01:00.090> optimization<00:01:00.930> now<00:01:01.530> what<00:01:01.710> this<00:01:01.890> one

00:01:02.150 --> 00:01:02.160 
specific optimization now what this one

00:01:02.160 --> 00:01:05.329 
specific optimization now what this one
does<00:01:02.190> is<00:01:02.850> it<00:01:03.539> generates<00:01:04.019> code<00:01:04.500> assembly<00:01:05.100> code

00:01:05.329 --> 00:01:05.339 
does is it generates code assembly code

00:01:05.339 --> 00:01:08.300 
does is it generates code assembly code
that<00:01:06.210> targets<00:01:06.600> a<00:01:06.689> certain<00:01:06.960> processor<00:01:07.650> on<00:01:07.890> up

00:01:08.300 --> 00:01:08.310 
that targets a certain processor on up

00:01:08.310 --> 00:01:11.359 
that targets a certain processor on up
if<00:01:08.729> you're<00:01:09.119> running<00:01:09.360> a<00:01:09.570> processor<00:01:10.290> lower<00:01:11.040> than

00:01:11.359 --> 00:01:11.369 
if you're running a processor lower than

00:01:11.369 --> 00:01:14.330 
if you're running a processor lower than
that<00:01:11.520> when<00:01:12.360> you<00:01:12.479> run<00:01:12.659> the<00:01:12.780> executable<00:01:13.340> you'll

00:01:14.330 --> 00:01:14.340 
that when you run the executable you'll

00:01:14.340 --> 00:01:17.300 
that when you run the executable you'll
get<00:01:14.490> a<00:01:14.520> message<00:01:14.820> saying<00:01:15.299> that<00:01:16.229> the<00:01:16.650> this

00:01:17.300 --> 00:01:17.310 
get a message saying that the this

00:01:17.310 --> 00:01:19.130 
get a message saying that the this
architecture<00:01:18.210> is<00:01:18.270> not<00:01:18.420> supported<00:01:18.990> by<00:01:19.020> your

00:01:19.130 --> 00:01:19.140 
architecture is not supported by your

00:01:19.140 --> 00:01:20.600 
architecture is not supported by your
processor<00:01:19.890> and<00:01:20.040> that's<00:01:20.189> what<00:01:20.310> we're<00:01:20.400> going<00:01:20.490> to

00:01:20.600 --> 00:01:20.610 
processor and that's what we're going to

00:01:20.610 --> 00:01:22.520 
processor and that's what we're going to
test<00:01:20.790> out<00:01:20.970> right<00:01:21.180> here<00:01:21.509> then<00:01:22.080> we'll<00:01:22.290> look<00:01:22.409> at

00:01:22.520 --> 00:01:22.530 
test out right here then we'll look at

00:01:22.530 --> 00:01:25.100 
test out right here then we'll look at
the<00:01:22.860> two<00:01:23.549> other<00:01:23.759> options<00:01:24.270> for<00:01:24.540> configuring

00:01:25.100 --> 00:01:25.110 
the two other options for configuring

00:01:25.110 --> 00:01:27.499 
the two other options for configuring
this<00:01:25.320> so<00:01:26.310> let's<00:01:26.549> set<00:01:26.700> this<00:01:26.880> one<00:01:27.060> to<00:01:27.119> something

00:01:27.499 --> 00:01:27.509 
this so let's set this one to something

00:01:27.509 --> 00:01:29.330 
this so let's set this one to something
really<00:01:27.720> high<00:01:27.900> up<00:01:27.930> this<00:01:28.290> processor<00:01:28.829> i'm<00:01:28.979> using

00:01:29.330 --> 00:01:29.340 
really high up this processor i'm using

00:01:29.340 --> 00:01:32.510 
really high up this processor i'm using
does<00:01:29.549> not<00:01:29.820> handle<00:01:30.420> the<00:01:31.380> advanced<00:01:31.979> director

00:01:32.510 --> 00:01:32.520 
does not handle the advanced director

00:01:32.520 --> 00:01:35.240 
does not handle the advanced director
extensions<00:01:33.060> 512<00:01:33.720> so<00:01:33.990> let's<00:01:34.170> do<00:01:34.320> that<00:01:34.500> one<00:01:34.560> and

00:01:35.240 --> 00:01:35.250 
extensions 512 so let's do that one and

00:01:35.250 --> 00:01:38.510 
extensions 512 so let's do that one and
click<00:01:35.970> ok<00:01:36.450> now<00:01:36.720> I've<00:01:37.710> got<00:01:37.890> some<00:01:38.100> vectorized

00:01:38.510 --> 00:01:38.520 
click ok now I've got some vectorized

00:01:38.520 --> 00:01:40.399 
click ok now I've got some vectorized
loops<00:01:38.880> and<00:01:39.270> instructions<00:01:39.750> in<00:01:39.960> here<00:01:40.259> this

00:01:40.399 --> 00:01:40.409 
loops and instructions in here this

00:01:40.409 --> 00:01:43.700 
loops and instructions in here this
sample<00:01:41.369> C++<00:01:41.880> code<00:01:42.119> and<00:01:42.450> we'll<00:01:43.200> do<00:01:43.350> a<00:01:43.380> full

00:01:43.700 --> 00:01:43.710 
sample C++ code and we'll do a full

00:01:43.710 --> 00:01:47.149 
sample C++ code and we'll do a full
rebuild<00:01:44.960> ok<00:01:45.960> now<00:01:46.350> let's<00:01:46.500> try<00:01:46.710> and<00:01:46.860> run<00:01:47.040> this

00:01:47.149 --> 00:01:47.159 
rebuild ok now let's try and run this

00:01:47.159 --> 00:01:50.780 
rebuild ok now let's try and run this
and<00:01:47.340> see<00:01:47.430> what<00:01:47.549> happens<00:01:49.460> ok<00:01:50.460> I'm<00:01:50.520> in<00:01:50.670> the

00:01:50.780 --> 00:01:50.790 
and see what happens ok I'm in the

00:01:50.790 --> 00:01:53.420 
and see what happens ok I'm in the
directory<00:01:51.240> for<00:01:52.079> the<00:01:52.140> release<00:01:52.500> and<00:01:52.890> I<00:01:53.100> there's

00:01:53.420 --> 00:01:53.430 
directory for the release and I there's

00:01:53.430 --> 00:01:55.969 
directory for the release and I there's
my<00:01:53.579> executable<00:01:54.240> now<00:01:54.840> when<00:01:54.990> I<00:01:55.020> run<00:01:55.110> it<00:01:55.500> I<00:01:55.710> was

00:01:55.969 --> 00:01:55.979 
my executable now when I run it I was

00:01:55.979 --> 00:01:58.280 
my executable now when I run it I was
able<00:01:56.100> to<00:01:56.250> generate<00:01:56.610> the<00:01:56.790> code<00:01:56.969> for<00:01:57.270> the<00:01:57.360> AV<00:01:58.140> x

00:01:58.280 --> 00:01:58.290 
able to generate the code for the AV x

00:01:58.290 --> 00:02:01.429 
able to generate the code for the AV x
512<00:01:58.680> but<00:01:59.399> when<00:01:59.549> i<00:01:59.579> run<00:01:59.939> it<00:02:00.149> i<00:02:00.390> get<00:02:01.350> a<00:02:01.380> message

00:02:01.429 --> 00:02:01.439 
512 but when i run it i get a message

00:02:01.439 --> 00:02:04.130 
512 but when i run it i get a message
please<00:02:01.920> verify<00:02:02.250> that<00:02:02.820> both<00:02:03.030> the<00:02:03.689> operating

00:02:04.130 --> 00:02:04.140 
please verify that both the operating

00:02:04.140 --> 00:02:06.560 
please verify that both the operating
system<00:02:04.439> and<00:02:04.619> the<00:02:04.979> processors<00:02:05.549> support<00:02:06.000> intel

00:02:06.560 --> 00:02:06.570 
system and the processors support intel

00:02:06.570 --> 00:02:09.680 
system and the processors support intel
and<00:02:07.049> there's<00:02:07.320> a<00:02:07.380> list<00:02:07.619> of<00:02:07.829> instructions<00:02:07.920> and<00:02:08.729> a

00:02:09.680 --> 00:02:09.690 
and there's a list of instructions and a

00:02:09.690 --> 00:02:12.770 
and there's a list of instructions and a
AVX<00:02:10.470> 512<00:02:11.099> CD<00:02:11.879> instructions

00:02:12.770 --> 00:02:12.780 
AVX 512 CD instructions

00:02:12.780 --> 00:02:16.220 
AVX 512 CD instructions
so<00:02:13.319> that's<00:02:13.500> what<00:02:13.770> happens<00:02:14.130> if<00:02:14.660> we<00:02:15.660> run<00:02:15.690> this<00:02:15.990> on

00:02:16.220 --> 00:02:16.230 
so that's what happens if we run this on

00:02:16.230 --> 00:02:18.020 
so that's what happens if we run this on
a<00:02:16.260> processor<00:02:16.950> that<00:02:16.980> actually<00:02:17.550> supports<00:02:17.670> those

00:02:18.020 --> 00:02:18.030 
a processor that actually supports those

00:02:18.030 --> 00:02:20.449 
a processor that actually supports those
instructions<00:02:18.690> then<00:02:19.319> it<00:02:19.500> will<00:02:19.680> run<00:02:20.010> now<00:02:20.400> that

00:02:20.449 --> 00:02:20.459 
instructions then it will run now that

00:02:20.459 --> 00:02:22.100 
instructions then it will run now that
might<00:02:20.760> not<00:02:20.880> be<00:02:21.060> what<00:02:21.240> you<00:02:21.330> want<00:02:21.569> every<00:02:21.840> time

00:02:22.100 --> 00:02:22.110 
might not be what you want every time

00:02:22.110 --> 00:02:25.520 
might not be what you want every time
you<00:02:22.740> might<00:02:23.040> want<00:02:23.430> instead<00:02:23.940> to<00:02:24.840> get<00:02:25.020> some<00:02:25.230> code

00:02:25.520 --> 00:02:25.530 
you might want instead to get some code

00:02:25.530 --> 00:02:28.370 
you might want instead to get some code
that<00:02:25.830> will<00:02:26.190> run<00:02:26.520> as<00:02:27.180> a<00:02:27.209> default<00:02:27.660> code<00:02:27.990> so<00:02:28.200> let's

00:02:28.370 --> 00:02:28.380 
that will run as a default code so let's

00:02:28.380 --> 00:02:30.380 
that will run as a default code so let's
look<00:02:28.680> at<00:02:28.860> a<00:02:28.890> setting<00:02:29.250> for<00:02:29.280> that<00:02:29.459> once<00:02:30.180> again

00:02:30.380 --> 00:02:30.390 
look at a setting for that once again

00:02:30.390 --> 00:02:34.820 
look at a setting for that once again
we'll<00:02:30.540> go<00:02:30.660> to<00:02:30.720> our<00:02:30.840> properties<00:02:33.620> and<00:02:34.620> we'll<00:02:34.709> go

00:02:34.820 --> 00:02:34.830 
we'll go to our properties and we'll go

00:02:34.830 --> 00:02:38.449 
we'll go to our properties and we'll go
back<00:02:34.980> down<00:02:35.280> and<00:02:36.410> let's<00:02:37.410> turn<00:02:37.590> off<00:02:37.709> this<00:02:37.980> option

00:02:38.449 --> 00:02:38.459 
back down and let's turn off this option

00:02:38.459 --> 00:02:39.890 
back down and let's turn off this option
that<00:02:38.580> we<00:02:38.640> just<00:02:38.819> turned<00:02:39.000> on<00:02:39.180> let's<00:02:39.569> put<00:02:39.750> it<00:02:39.810> back

00:02:39.890 --> 00:02:39.900 
that we just turned on let's put it back

00:02:39.900 --> 00:02:45.590 
that we just turned on let's put it back
to<00:02:40.140> none<00:02:41.750> now<00:02:42.750> the<00:02:42.840> one<00:02:43.050> we<00:02:43.260> want<00:02:43.470> this<00:02:44.340> time<00:02:44.820> is

00:02:45.590 --> 00:02:45.600 
to none now the one we want this time is

00:02:45.600 --> 00:02:49.190 
to none now the one we want this time is
way<00:02:45.900> up<00:02:45.930> at<00:02:46.140> the<00:02:46.170> top<00:02:46.260> here<00:02:47.090> add<00:02:48.200> processor

00:02:49.190 --> 00:02:49.200 
way up at the top here add processor

00:02:49.200 --> 00:02:51.949 
way up at the top here add processor
optimized<00:02:49.860> code<00:02:50.190> path<00:02:50.519> so<00:02:51.360> let's<00:02:51.570> do<00:02:51.750> that<00:02:51.780> one

00:02:51.949 --> 00:02:51.959 
optimized code path so let's do that one

00:02:51.959 --> 00:02:54.620 
optimized code path so let's do that one
now<00:02:52.650> let's<00:02:52.830> once<00:02:53.040> again<00:02:53.100> target<00:02:53.550> up<00:02:53.640> five<00:02:53.850> AVX

00:02:54.620 --> 00:02:54.630 
now let's once again target up five AVX

00:02:54.630 --> 00:03:00.320 
now let's once again target up five AVX
512<00:02:55.519> and<00:02:57.350> this<00:02:58.350> time<00:02:58.530> we'll<00:02:58.790> rebuild<00:02:59.790> and<00:03:00.180> run

00:03:00.320 --> 00:03:00.330 
512 and this time we'll rebuild and run

00:03:00.330 --> 00:03:03.020 
512 and this time we'll rebuild and run
it<00:03:00.450> and<00:03:00.660> we'll<00:03:00.840> see<00:03:01.110> that<00:03:01.319> it<00:03:01.790> will<00:03:02.790> actually

00:03:03.020 --> 00:03:03.030 
it and we'll see that it will actually

00:03:03.030 --> 00:03:09.559 
it and we'll see that it will actually
run<00:03:03.739> okay<00:03:04.739> let's<00:03:07.040> try<00:03:08.040> it<00:03:08.100> again<00:03:08.220> and<00:03:08.700> this

00:03:09.559 --> 00:03:09.569 
run okay let's try it again and this

00:03:09.569 --> 00:03:11.660 
run okay let's try it again and this
time<00:03:09.630> it<00:03:09.870> ran<00:03:10.019> we<00:03:10.200> see<00:03:10.350> RA<00:03:10.500> and<00:03:10.920> RB<00:03:11.010> which<00:03:11.459> are

00:03:11.660 --> 00:03:11.670 
time it ran we see RA and RB which are

00:03:11.670 --> 00:03:14.750 
time it ran we see RA and RB which are
output<00:03:12.540> from<00:03:12.720> inside<00:03:13.110> this<00:03:13.380> program<00:03:13.769> here<00:03:14.130> now

00:03:14.750 --> 00:03:14.760 
output from inside this program here now

00:03:14.760 --> 00:03:17.330 
output from inside this program here now
the<00:03:14.819> third<00:03:15.390> option<00:03:15.630> we<00:03:16.019> can<00:03:16.140> we'll<00:03:16.260> get<00:03:16.500> let's

00:03:17.330 --> 00:03:17.340 
the third option we can we'll get let's

00:03:17.340 --> 00:03:21.620 
the third option we can we'll get let's
turn<00:03:17.610> this<00:03:17.730> one<00:03:17.910> back<00:03:18.030> off<00:03:20.060> and<00:03:21.060> let's<00:03:21.390> go<00:03:21.480> to

00:03:21.620 --> 00:03:21.630 
turn this one back off and let's go to

00:03:21.630 --> 00:03:25.520 
turn this one back off and let's go to
enable<00:03:23.450> enhanced<00:03:24.450> instruction<00:03:25.079> set<00:03:25.320> right

00:03:25.520 --> 00:03:25.530 
enable enhanced instruction set right

00:03:25.530 --> 00:03:27.680 
enable enhanced instruction set right
here<00:03:25.860> now<00:03:26.820> this<00:03:26.940> one<00:03:27.090> doesn't<00:03:27.360> have<00:03:27.420> all<00:03:27.660> the

00:03:27.680 --> 00:03:27.690 
here now this one doesn't have all the

00:03:27.690 --> 00:03:29.600 
here now this one doesn't have all the
options<00:03:28.410> available<00:03:28.680> inside<00:03:29.160> Visual<00:03:29.370> Studio

00:03:29.600 --> 00:03:29.610 
options available inside Visual Studio

00:03:29.610 --> 00:03:31.370 
options available inside Visual Studio
but<00:03:29.970> we<00:03:30.060> can<00:03:30.239> get<00:03:30.480> those<00:03:30.720> through<00:03:30.959> the<00:03:31.049> command

00:03:31.370 --> 00:03:31.380 
but we can get those through the command

00:03:31.380 --> 00:03:33.789 
but we can get those through the command
line<00:03:31.489> but<00:03:32.489> we'll<00:03:32.640> go<00:03:32.700> ahead<00:03:32.760> and<00:03:32.850> target<00:03:33.180> AVX

00:03:33.789 --> 00:03:33.799 
line but we'll go ahead and target AVX

00:03:33.799 --> 00:03:38.180 
line but we'll go ahead and target AVX
now<00:03:34.799> what<00:03:34.980> happens<00:03:35.310> here<00:03:35.820> is<00:03:36.709> when<00:03:37.709> we<00:03:37.799> rebuild

00:03:38.180 --> 00:03:38.190 
now what happens here is when we rebuild

00:03:38.190 --> 00:03:43.069 
now what happens here is when we rebuild
this<00:03:40.430> we<00:03:41.430> now<00:03:41.760> we<00:03:41.820> end<00:03:42.060> up<00:03:42.180> with<00:03:42.209> an<00:03:42.480> executable

00:03:43.069 --> 00:03:43.079 
this we now we end up with an executable

00:03:43.079 --> 00:03:45.830 
this we now we end up with an executable
it's<00:03:43.739> very<00:03:43.950> much<00:03:44.130> like<00:03:44.190> the<00:03:45.090> one<00:03:45.359> the<00:03:45.720> very

00:03:45.830 --> 00:03:45.840 
it's very much like the one the very

00:03:45.840 --> 00:03:47.360 
it's very much like the one the very
first<00:03:46.140> one<00:03:46.350> we<00:03:46.470> did<00:03:46.650> it<00:03:46.829> doesn't<00:03:47.100> have<00:03:47.340> a

00:03:47.360 --> 00:03:47.370 
first one we did it doesn't have a

00:03:47.370 --> 00:03:50.330 
first one we did it doesn't have a
default<00:03:47.910> code<00:03:48.299> path<00:03:48.660> instead<00:03:49.530> it<00:03:49.859> only<00:03:50.070> has

00:03:50.330 --> 00:03:50.340 
default code path instead it only has

00:03:50.340 --> 00:03:52.940 
default code path instead it only has
the<00:03:50.489> code<00:03:50.700> for<00:03:51.030> that<00:03:51.150> processor<00:03:51.870> but<00:03:52.380> it<00:03:52.530> it

00:03:52.940 --> 00:03:52.950 
the code for that processor but it it

00:03:52.950 --> 00:03:54.860 
the code for that processor but it it
doesn't<00:03:53.310> actually<00:03:53.430> check<00:03:54.000> in<00:03:54.239> advance<00:03:54.420> before

00:03:54.860 --> 00:03:54.870 
doesn't actually check in advance before

00:03:54.870 --> 00:03:56.960 
doesn't actually check in advance before
trying<00:03:55.350> to<00:03:55.500> run<00:03:55.769> the<00:03:55.920> code<00:03:56.190> so<00:03:56.760> what<00:03:56.940> that

00:03:56.960 --> 00:03:56.970 
trying to run the code so what that

00:03:56.970 --> 00:03:59.390 
trying to run the code so what that
means<00:03:57.390> is<00:03:57.630> if<00:03:57.870> we<00:03:58.350> run<00:03:58.650> this<00:03:58.799> code<00:03:59.100> on<00:03:59.370> a

00:03:59.390 --> 00:03:59.400 
means is if we run this code on a

00:03:59.400 --> 00:04:01.880 
means is if we run this code on a
processor<00:04:00.030> that<00:04:00.060> does<00:04:00.420> not<00:04:00.630> support<00:04:01.079> AVX<00:04:01.680> in

00:04:01.880 --> 00:04:01.890 
processor that does not support AVX in

00:04:01.890 --> 00:04:05.240 
processor that does not support AVX in
this<00:04:02.040> case<00:04:02.450> it<00:04:03.450> will<00:04:03.750> probably<00:04:04.500> just<00:04:04.650> crash<00:04:04.950> it

00:04:05.240 --> 00:04:05.250 
this case it will probably just crash it

00:04:05.250 --> 00:04:07.130 
this case it will probably just crash it
will<00:04:05.370> encounter<00:04:05.940> a<00:04:05.970> legal<00:04:06.359> instructions<00:04:06.930> that

00:04:07.130 --> 00:04:07.140 
will encounter a legal instructions that

00:04:07.140 --> 00:04:09.140 
will encounter a legal instructions that
it<00:04:07.230> doesn't<00:04:07.500> recognize<00:04:08.010> so<00:04:08.700> when<00:04:08.880> would<00:04:09.000> you

00:04:09.140 --> 00:04:09.150 
it doesn't recognize so when would you

00:04:09.150 --> 00:04:11.150 
it doesn't recognize so when would you
use<00:04:09.180> that<00:04:09.359> one<00:04:09.780> well<00:04:10.170> and<00:04:10.500> you<00:04:10.829> would<00:04:10.950> use<00:04:11.130> that

00:04:11.150 --> 00:04:11.160 
use that one well and you would use that

00:04:11.160 --> 00:04:13.819 
use that one well and you would use that
one<00:04:11.640> if<00:04:11.820> you<00:04:12.359> are<00:04:12.540> if<00:04:12.840> you<00:04:13.049> know<00:04:13.079> for<00:04:13.530> a<00:04:13.560> fact

00:04:13.819 --> 00:04:13.829 
one if you are if you know for a fact

00:04:13.829 --> 00:04:16.430 
one if you are if you know for a fact
your<00:04:14.519> code<00:04:14.910> if<00:04:15.150> your<00:04:15.329> final<00:04:15.690> executable<00:04:16.229> will

00:04:16.430 --> 00:04:16.440 
your code if your final executable will

00:04:16.440 --> 00:04:19.190 
your code if your final executable will
only<00:04:16.680> be<00:04:16.950> run<00:04:17.190> on<00:04:17.459> certain<00:04:18.000> machines<00:04:18.450> if<00:04:18.840> you

00:04:19.190 --> 00:04:19.200 
only be run on certain machines if you

00:04:19.200 --> 00:04:21.020 
only be run on certain machines if you
know<00:04:19.320> that<00:04:19.530> those<00:04:19.799> machines<00:04:20.310> meet<00:04:20.700> those

00:04:21.020 --> 00:04:21.030 
know that those machines meet those

00:04:21.030 --> 00:04:23.620 
know that those machines meet those
requirements<00:04:21.349> then<00:04:22.349> your<00:04:22.530> find

00:04:23.620 --> 00:04:23.630 
requirements then your find

00:04:23.630 --> 00:04:25.240 
requirements then your find
and<00:04:23.750> that's<00:04:24.080> basically<00:04:24.320> those<00:04:24.830> three

00:04:25.240 --> 00:04:25.250 
and that's basically those three

00:04:25.250 --> 00:04:27.040 
and that's basically those three
settings<00:04:25.610> next<00:04:26.390> time<00:04:26.570> what<00:04:26.750> we're<00:04:26.840> going<00:04:26.930> to

00:04:27.040 --> 00:04:27.050 
settings next time what we're going to

00:04:27.050 --> 00:04:29.560 
settings next time what we're going to
do<00:04:27.140> is<00:04:27.290> look<00:04:27.830> at<00:04:27.980> one<00:04:28.130> of<00:04:28.160> these<00:04:28.370> the<00:04:29.150> one<00:04:29.330> that

00:04:29.560 --> 00:04:29.570 
do is look at one of these the one that

00:04:29.570 --> 00:04:31.900 
do is look at one of these the one that
generates<00:04:29.960> more<00:04:30.650> than<00:04:30.830> one<00:04:30.950> code<00:04:31.220> path<00:04:31.520> we're

00:04:31.900 --> 00:04:31.910 
generates more than one code path we're

00:04:31.910 --> 00:04:33.580 
generates more than one code path we're
going<00:04:32.060> to<00:04:32.150> go<00:04:32.240> in<00:04:32.390> there<00:04:32.540> and<00:04:32.990> look<00:04:33.320> at<00:04:33.440> the

00:04:33.580 --> 00:04:33.590 
going to go in there and look at the

00:04:33.590 --> 00:04:35.710 
going to go in there and look at the
actual<00:04:33.860> assembly<00:04:34.190> code<00:04:34.580> and<00:04:35.090> we're<00:04:35.540> going<00:04:35.660> to

00:04:35.710 --> 00:04:35.720 
actual assembly code and we're going to

00:04:35.720 --> 00:04:37.810 
actual assembly code and we're going to
look<00:04:35.810> at<00:04:35.960> the<00:04:36.230> code<00:04:36.530> path<00:04:36.860> for<00:04:37.430> when<00:04:37.640> there's

00:04:37.810 --> 00:04:37.820 
look at the code path for when there's

00:04:37.820 --> 00:04:40.090 
look at the code path for when there's
not<00:04:38.120> that<00:04:38.420> processor<00:04:39.260> and<00:04:39.800> we're<00:04:39.920> going<00:04:40.040> to

00:04:40.090 --> 00:04:40.100 
not that processor and we're going to

00:04:40.100 --> 00:04:42.190 
not that processor and we're going to
see<00:04:40.280> if<00:04:40.400> it's<00:04:40.580> vectorized<00:04:41.030> or<00:04:41.300> not<00:04:41.480> and<00:04:41.780> then

00:04:42.190 --> 00:04:42.200 
see if it's vectorized or not and then

00:04:42.200 --> 00:04:44.020 
see if it's vectorized or not and then
we'll<00:04:42.350> look<00:04:42.470> at<00:04:42.650> the<00:04:42.890> code<00:04:43.310> for<00:04:43.610> the<00:04:43.760> actual

00:04:44.020 --> 00:04:44.030 
we'll look at the code for the actual

00:04:44.030 --> 00:04:47.320 
we'll look at the code for the actual
processor<00:04:44.990> and<00:04:45.200> see<00:04:46.040> if<00:04:46.160> just<00:04:46.460> how<00:04:46.730> optimal

00:04:47.320 --> 00:04:47.330 
processor and see if just how optimal

00:04:47.330 --> 00:04:59.180 
processor and see if just how optimal
that<00:04:47.570> one<00:04:47.780> is<00:04:48.020> so<00:04:48.710> we'll<00:04:49.100> see<00:04:49.250> you<00:04:49.310> next<00:04:49.460> time

00:04:59.180 --> 00:04:59.190 

00:04:59.190 --> 00:05:01.250 

you

