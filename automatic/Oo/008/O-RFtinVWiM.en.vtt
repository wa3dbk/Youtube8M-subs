WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.419 

hi<00:00:00.690> and<00:00:00.930> welcome<00:00:01.079> to<00:00:01.319> your<00:00:01.560> next<00:00:01.829> lecture<00:00:02.010> in

00:00:02.419 --> 00:00:02.429 
hi and welcome to your next lecture in

00:00:02.429 --> 00:00:05.749 
hi and welcome to your next lecture in
computer<00:00:02.790> science<00:00:03.060> for<00:00:03.149> everyone<00:00:04.549> in<00:00:05.549> this

00:00:05.749 --> 00:00:05.759 
computer science for everyone in this

00:00:05.759 --> 00:00:08.419 
computer science for everyone in this
section<00:00:05.940> we're<00:00:06.210> going<00:00:06.359> to<00:00:06.480> start<00:00:06.810> with<00:00:07.429> actual

00:00:08.419 --> 00:00:08.429 
section we're going to start with actual

00:00:08.429 --> 00:00:11.060 
section we're going to start with actual
java<00:00:08.700> programming<00:00:09.240> so<00:00:09.870> let's<00:00:10.800> get<00:00:10.889> to<00:00:11.040> it

00:00:11.060 --> 00:00:11.070 
java programming so let's get to it

00:00:11.070 --> 00:00:13.759 
java programming so let's get to it
first<00:00:11.370> of<00:00:11.519> all<00:00:11.670> let's<00:00:12.630> see<00:00:12.870> more<00:00:13.410> computers

00:00:13.759 --> 00:00:13.769 
first of all let's see more computers

00:00:13.769 --> 00:00:16.400 
first of all let's see more computers
were<00:00:13.889> like<00:00:14.130> in<00:00:14.370> the<00:00:14.580> very<00:00:14.759> beginning<00:00:15.230> the<00:00:16.230> very

00:00:16.400 --> 00:00:16.410 
were like in the very beginning the very

00:00:16.410 --> 00:00:19.460 
were like in the very beginning the very
first<00:00:17.060> electronic<00:00:18.060> digital<00:00:18.300> computers<00:00:19.199> like

00:00:19.460 --> 00:00:19.470 
first electronic digital computers like

00:00:19.470 --> 00:00:22.250 
first electronic digital computers like
the<00:00:19.590> ones<00:00:19.770> we<00:00:19.949> have<00:00:20.100> today<00:00:20.430> came<00:00:21.210> after<00:00:21.900> world

00:00:22.250 --> 00:00:22.260 
the ones we have today came after world

00:00:22.260 --> 00:00:27.109 
the ones we have today came after world
war<00:00:22.380> ii<00:00:23.480> and<00:00:24.480> the<00:00:24.600> first<00:00:25.289> ones<00:00:25.439> work<00:00:25.740> with<00:00:26.130> this

00:00:27.109 --> 00:00:27.119 
war ii and the first ones work with this

00:00:27.119 --> 00:00:28.460 
war ii and the first ones work with this
thing<00:00:27.330> that<00:00:27.420> you<00:00:27.510> see<00:00:27.660> at<00:00:27.779> the<00:00:27.869> right<00:00:28.080> which<00:00:28.320> is

00:00:28.460 --> 00:00:28.470 
thing that you see at the right which is

00:00:28.470 --> 00:00:30.830 
thing that you see at the right which is
a<00:00:28.619> punch<00:00:29.039> hole<00:00:29.220> card<00:00:29.519> it's<00:00:30.420> essentially

00:00:30.830 --> 00:00:30.840 
a punch hole card it's essentially

00:00:30.840 --> 00:00:35.959 
a punch hole card it's essentially
binary<00:00:31.410> code<00:00:31.910> but<00:00:32.910> um<00:00:34.250> instead<00:00:35.250> of<00:00:35.430> writing<00:00:35.700> it

00:00:35.959 --> 00:00:35.969 
binary code but um instead of writing it

00:00:35.969 --> 00:00:37.959 
binary code but um instead of writing it
with<00:00:36.120> a<00:00:36.149> keyboard<00:00:36.540> like<00:00:36.899> we've<00:00:37.079> done<00:00:37.260> so<00:00:37.410> far

00:00:37.959 --> 00:00:37.969 
with a keyboard like we've done so far

00:00:37.969 --> 00:00:42.830 
with a keyboard like we've done so far
it's<00:00:39.829> dug<00:00:40.829> into<00:00:41.219> a<00:00:41.520> card<00:00:42.000> like<00:00:42.300> you<00:00:42.329> see<00:00:42.600> there

00:00:42.830 --> 00:00:42.840 
it's dug into a card like you see there

00:00:42.840 --> 00:00:46.180 
it's dug into a card like you see there
and<00:00:43.460> it<00:00:44.460> is<00:00:44.610> really<00:00:44.789> complicated<00:00:45.059> to<00:00:45.450> do<00:00:45.600> and

00:00:46.180 --> 00:00:46.190 
and it is really complicated to do and

00:00:46.190 --> 00:00:49.130 
and it is really complicated to do and
because<00:00:47.190> the<00:00:47.309> computers<00:00:47.700> wouldn't<00:00:48.300> store<00:00:48.690> the

00:00:49.130 --> 00:00:49.140 
because the computers wouldn't store the

00:00:49.140 --> 00:00:51.290 
because the computers wouldn't store the
programs<00:00:49.559> in<00:00:49.739> them<00:00:49.950> you'd<00:00:50.520> have<00:00:50.700> to<00:00:50.730> always

00:00:51.290 --> 00:00:51.300 
programs in them you'd have to always

00:00:51.300 --> 00:00:52.729 
programs in them you'd have to always
have<00:00:51.449> a<00:00:51.480> stack<00:00:51.750> of<00:00:51.780> cards<00:00:51.930> with<00:00:52.350> you<00:00:52.469> whenever

00:00:52.729 --> 00:00:52.739 
have a stack of cards with you whenever

00:00:52.739 --> 00:00:54.880 
have a stack of cards with you whenever
you<00:00:52.829> wanted<00:00:53.010> to<00:00:53.129> run<00:00:53.340> one<00:00:53.489> of<00:00:53.579> the<00:00:53.640> programs

00:00:54.880 --> 00:00:54.890 
you wanted to run one of the programs

00:00:54.890 --> 00:00:56.660 
you wanted to run one of the programs
but<00:00:55.890> let's<00:00:56.100> forget<00:00:56.280> about<00:00:56.340> that

00:00:56.660 --> 00:00:56.670 
but let's forget about that

00:00:56.670 --> 00:00:58.580 
but let's forget about that
and<00:00:56.879> today<00:00:57.449> we're<00:00:57.690> with<00:00:57.870> the<00:00:58.020> von<00:00:58.230> Neumann

00:00:58.580 --> 00:00:58.590 
and today we're with the von Neumann

00:00:58.590 --> 00:00:59.750 
and today we're with the von Neumann
architecture<00:00:58.620> funnyman<00:00:59.550> was<00:00:59.730> a

00:00:59.750 --> 00:00:59.760 
architecture funnyman was a

00:00:59.760 --> 00:01:02.090 
architecture funnyman was a
mathematician<00:01:00.600> but<00:01:01.440> he<00:01:01.559> came<00:01:01.710> up<00:01:01.770> with<00:01:02.010> this

00:01:02.090 --> 00:01:02.100 
mathematician but he came up with this

00:01:02.100 --> 00:01:03.560 
mathematician but he came up with this
architecture<00:01:02.699> for<00:01:02.820> computers<00:01:03.270> that<00:01:03.480> he

00:01:03.560 --> 00:01:03.570 
architecture for computers that he

00:01:03.570 --> 00:01:06.050 
architecture for computers that he
thought<00:01:03.780> would<00:01:03.960> be<00:01:04.110> the<00:01:04.199> best<00:01:04.640> and<00:01:05.640> so<00:01:05.880> far

00:01:06.050 --> 00:01:06.060 
thought would be the best and so far

00:01:06.060 --> 00:01:08.420 
thought would be the best and so far
we're<00:01:06.270> still<00:01:06.360> using<00:01:06.750> it<00:01:06.869> and<00:01:07.049> so<00:01:07.920> this

00:01:08.420 --> 00:01:08.430 
we're still using it and so this

00:01:08.430 --> 00:01:11.090 
we're still using it and so this
architecture<00:01:08.909> has<00:01:09.240> a<00:01:09.270> control<00:01:09.869> unit<00:01:10.140> which

00:01:11.090 --> 00:01:11.100 
architecture has a control unit which

00:01:11.100 --> 00:01:13.190 
architecture has a control unit which
we've<00:01:11.280> seen<00:01:11.520> in<00:01:11.850> the<00:01:12.210> processor<00:01:12.630> lecture<00:01:12.990> and

00:01:13.190 --> 00:01:13.200 
we've seen in the processor lecture and

00:01:13.200 --> 00:01:16.730 
we've seen in the processor lecture and
previously<00:01:14.060> it<00:01:15.060> has<00:01:15.330> an<00:01:15.780> arithmetic<00:01:16.229> logic

00:01:16.730 --> 00:01:16.740 
previously it has an arithmetic logic

00:01:16.740 --> 00:01:18.740 
previously it has an arithmetic logic
unit<00:01:16.770> which<00:01:17.159> was<00:01:17.340> also<00:01:17.490> seen<00:01:17.850> however<00:01:18.659> in

00:01:18.740 --> 00:01:18.750 
unit which was also seen however in

00:01:18.750 --> 00:01:20.390 
unit which was also seen however in
modern<00:01:18.900> computers<00:01:19.380> this<00:01:19.560> is<00:01:19.680> called<00:01:19.979> the

00:01:20.390 --> 00:01:20.400 
modern computers this is called the

00:01:20.400 --> 00:01:22.429 
modern computers this is called the
instruction<00:01:20.909> unit<00:01:21.119> and<00:01:21.360> has<00:01:21.659> the<00:01:22.020> arithmetic

00:01:22.429 --> 00:01:22.439 
instruction unit and has the arithmetic

00:01:22.439 --> 00:01:25.070 
instruction unit and has the arithmetic
logic<00:01:22.710> unit<00:01:23.030> the<00:01:24.030> floating-point<00:01:24.420> unit<00:01:24.869> and

00:01:25.070 --> 00:01:25.080 
logic unit the floating-point unit and

00:01:25.080 --> 00:01:27.590 
logic unit the floating-point unit and
registries<00:01:25.590> registries<00:01:26.580> were<00:01:26.700> also<00:01:27.090> present

00:01:27.590 --> 00:01:27.600 
registries registries were also present

00:01:27.600 --> 00:01:29.569 
registries registries were also present
in<00:01:28.200> the<00:01:28.380> von<00:01:28.530> Neumann<00:01:28.740> architecture<00:01:28.770> but<00:01:29.460> they

00:01:29.569 --> 00:01:29.579 
in the von Neumann architecture but they

00:01:29.579 --> 00:01:32.380 
in the von Neumann architecture but they
were<00:01:29.670> called<00:01:29.909> memory<00:01:30.210> and<00:01:30.509> this<00:01:31.470> memory<00:01:31.710> is

00:01:32.380 --> 00:01:32.390 
were called memory and this memory is

00:01:32.390 --> 00:01:35.600 
were called memory and this memory is
depicted<00:01:33.390> in<00:01:33.570> this<00:01:33.840> diagram<00:01:34.590> as<00:01:35.100> part<00:01:35.460> of<00:01:35.490> the

00:01:35.600 --> 00:01:35.610 
depicted in this diagram as part of the

00:01:35.610 --> 00:01:38.210 
depicted in this diagram as part of the
CPU<00:01:36.090> but<00:01:36.299> actually<00:01:37.200> it<00:01:37.350> is<00:01:37.500> the<00:01:37.680> RAM<00:01:37.890> the

00:01:38.210 --> 00:01:38.220 
CPU but actually it is the RAM the

00:01:38.220 --> 00:01:39.830 
CPU but actually it is the RAM the
registries<00:01:38.700> and<00:01:38.939> the<00:01:39.060> caches<00:01:39.479> of<00:01:39.600> the

00:01:39.830 --> 00:01:39.840 
registries and the caches of the

00:01:39.840 --> 00:01:41.960 
registries and the caches of the
processor<00:01:40.259> together<00:01:40.650> so<00:01:41.430> this<00:01:41.579> is<00:01:41.700> only<00:01:41.820> a

00:01:41.960 --> 00:01:41.970 
processor together so this is only a

00:01:41.970 --> 00:01:43.670 
processor together so this is only a
very<00:01:42.090> simple<00:01:42.540> schematic<00:01:42.750> of<00:01:43.200> what<00:01:43.560> the

00:01:43.670 --> 00:01:43.680 
very simple schematic of what the

00:01:43.680 --> 00:01:45.649 
very simple schematic of what the
processor<00:01:44.070> would<00:01:44.220> look<00:01:44.399> like<00:01:44.549> and<00:01:44.880> then<00:01:45.540> you

00:01:45.649 --> 00:01:45.659 
processor would look like and then you

00:01:45.659 --> 00:01:47.030 
processor would look like and then you
also<00:01:45.780> have<00:01:46.020> input<00:01:46.320> and<00:01:46.439> output<00:01:46.710> as<00:01:46.829> you<00:01:46.890> can

00:01:47.030 --> 00:01:47.040 
also have input and output as you can

00:01:47.040 --> 00:01:50.120 
also have input and output as you can
see<00:01:47.159> they're<00:01:47.369> very<00:01:48.799> brief<00:01:49.799> history<00:01:50.040> of

00:01:50.120 --> 00:01:50.130 
see they're very brief history of

00:01:50.130 --> 00:01:51.560 
see they're very brief history of
programming<00:01:50.490> languages<00:01:50.820> the<00:01:51.270> first

00:01:51.560 --> 00:01:51.570 
programming languages the first

00:01:51.570 --> 00:01:53.539 
programming languages the first
programming<00:01:52.020> language<00:01:52.049> we<00:01:52.380> have<00:01:52.590> as<00:01:53.070> we<00:01:53.399> saw

00:01:53.539 --> 00:01:53.549 
programming language we have as we saw

00:01:53.549 --> 00:01:55.190 
programming language we have as we saw
in<00:01:53.640> the<00:01:53.700> punch<00:01:53.880> hole<00:01:54.000> card<00:01:54.299> is<00:01:54.540> the<00:01:54.899> binary

00:01:55.190 --> 00:01:55.200 
in the punch hole card is the binary

00:01:55.200 --> 00:01:56.870 
in the punch hole card is the binary
code<00:01:55.380> which<00:01:55.649> is<00:01:55.799> called<00:01:56.040> machine<00:01:56.369> language<00:01:56.670> or

00:01:56.870 --> 00:01:56.880 
code which is called machine language or

00:01:56.880 --> 00:02:01.039 
code which is called machine language or
object<00:01:57.719> code<00:01:57.990> any<00:01:58.590> of<00:01:58.799> those<00:01:58.920> names<00:02:00.049> after

00:02:01.039 --> 00:02:01.049 
object code any of those names after

00:02:01.049 --> 00:02:02.539 
object code any of those names after
that<00:02:01.170> we<00:02:01.290> came<00:02:01.439> up<00:02:01.560> with<00:02:01.619> assembly<00:02:02.070> assembly

00:02:02.539 --> 00:02:02.549 
that we came up with assembly assembly

00:02:02.549 --> 00:02:06.980 
that we came up with assembly assembly
was<00:02:03.000> simply<00:02:04.579> it's<00:02:05.579> described<00:02:06.030> as<00:02:06.149> an<00:02:06.360> mnemonic

00:02:06.980 --> 00:02:06.990 
was simply it's described as an mnemonic

00:02:06.990 --> 00:02:10.339 
was simply it's described as an mnemonic
for<00:02:07.200> programming<00:02:08.099> in<00:02:08.190> binary<00:02:08.340> code<00:02:08.489> so<00:02:09.349> you

00:02:10.339 --> 00:02:10.349 
for programming in binary code so you

00:02:10.349 --> 00:02:11.420 
for programming in binary code so you
might<00:02:10.530> call<00:02:10.770> add

00:02:11.420 --> 00:02:11.430 
might call add

00:02:11.430 --> 00:02:14.899 
might call add
a<00:02:12.420> bunch<00:02:12.840> of<00:02:12.959> binary<00:02:13.349> codes<00:02:13.530> that<00:02:13.980> perform<00:02:14.819> the

00:02:14.899 --> 00:02:14.909 
a bunch of binary codes that perform the

00:02:14.909 --> 00:02:17.449 
a bunch of binary codes that perform the
function<00:02:15.209> of<00:02:15.299> adding<00:02:15.599> however<00:02:16.290> odd<00:02:17.069> doesn't

00:02:17.449 --> 00:02:17.459 
function of adding however odd doesn't

00:02:17.459 --> 00:02:20.360 
function of adding however odd doesn't
translate<00:02:17.819> into<00:02:18.060> anything<00:02:18.510> else<00:02:18.780> than<00:02:19.440> adding

00:02:20.360 --> 00:02:20.370 
translate into anything else than adding

00:02:20.370 --> 00:02:23.539 
translate into anything else than adding
something<00:02:20.760> and<00:02:21.739> you<00:02:22.739> understand<00:02:23.040> what<00:02:23.220> I<00:02:23.250> mean

00:02:23.539 --> 00:02:23.549 
something and you understand what I mean

00:02:23.549 --> 00:02:25.280 
something and you understand what I mean
later<00:02:24.000> on<00:02:24.180> when<00:02:24.420> we<00:02:24.450> start<00:02:24.540> programming<00:02:25.170> in

00:02:25.280 --> 00:02:25.290 
later on when we start programming in

00:02:25.290 --> 00:02:28.490 
later on when we start programming in
Java<00:02:25.590> in<00:02:25.799> a<00:02:25.890> couple<00:02:26.129> lectures<00:02:26.280> time<00:02:27.500> so

00:02:28.490 --> 00:02:28.500 
Java in a couple lectures time so

00:02:28.500 --> 00:02:30.740 
Java in a couple lectures time so
assembly<00:02:28.890> M<00:02:29.190> what's<00:02:29.760> that<00:02:30.030> programming

00:02:30.740 --> 00:02:30.750 
assembly M what's that programming

00:02:30.750 --> 00:02:31.940 
assembly M what's that programming
language<00:02:31.049> we<00:02:31.319> will<00:02:31.440> not<00:02:31.590> be<00:02:31.709> studying

00:02:31.940 --> 00:02:31.950 
language we will not be studying

00:02:31.950 --> 00:02:34.819 
language we will not be studying
assembly<00:02:32.370> in<00:02:32.489> this<00:02:32.640> course<00:02:32.879> although<00:02:33.450> you<00:02:34.170> can

00:02:34.819 --> 00:02:34.829 
assembly in this course although you can

00:02:34.829 --> 00:02:38.830 
assembly in this course although you can
see<00:02:35.340> em<00:02:35.670> at<00:02:36.269> the<00:02:36.690> right<00:02:36.930> of<00:02:37.230> this<00:02:37.680> video<00:02:37.890> in<00:02:38.310> the

00:02:38.830 --> 00:02:38.840 
see em at the right of this video in the

00:02:38.840 --> 00:02:41.660 
see em at the right of this video in the
download<00:02:39.840> section<00:02:40.019> you<00:02:40.349> can<00:02:40.440> see<00:02:40.709> a<00:02:40.920> sample

00:02:41.660 --> 00:02:41.670 
download section you can see a sample

00:02:41.670 --> 00:02:43.610 
download section you can see a sample
program<00:02:41.849> in<00:02:42.150> assembly<00:02:42.239> that<00:02:42.780> has<00:02:42.989> comments

00:02:43.610 --> 00:02:43.620 
program in assembly that has comments

00:02:43.620 --> 00:02:46.130 
program in assembly that has comments
and<00:02:43.829> so<00:02:44.609> you'll<00:02:44.819> be<00:02:44.970> able<00:02:45.060> to<00:02:45.359> kind<00:02:46.109> of

00:02:46.130 --> 00:02:46.140 
and so you'll be able to kind of

00:02:46.140 --> 00:02:48.199 
and so you'll be able to kind of
understand<00:02:46.620> what<00:02:46.739> it<00:02:46.829> does<00:02:46.859> and<00:02:47.400> to<00:02:47.910> us<00:02:48.030> it's

00:02:48.199 --> 00:02:48.209 
understand what it does and to us it's

00:02:48.209 --> 00:02:50.150 
understand what it does and to us it's
an<00:02:48.359> extent<00:02:48.720> and<00:02:48.930> it<00:02:49.319> should<00:02:49.470> be<00:02:49.560> fairly<00:02:49.769> simple

00:02:50.150 --> 00:02:50.160 
an extent and it should be fairly simple

00:02:50.160 --> 00:02:54.500 
an extent and it should be fairly simple
and<00:02:50.810> finally<00:02:51.810> after<00:02:52.440> assembly<00:02:52.950> in<00:02:53.220> 1954<00:02:53.970> we

00:02:54.500 --> 00:02:54.510 
and finally after assembly in 1954 we

00:02:54.510 --> 00:02:56.330 
and finally after assembly in 1954 we
came<00:02:54.720> up<00:02:54.840> with<00:02:54.989> Fortran<00:02:55.410> which<00:02:55.650> was<00:02:55.890> formula

00:02:56.330 --> 00:02:56.340 
came up with Fortran which was formula

00:02:56.340 --> 00:03:00.440 
came up with Fortran which was formula
translating<00:02:56.909> system<00:02:57.269> and<00:02:59.060> and<00:03:00.060> this<00:03:00.269> was

00:03:00.440 --> 00:03:00.450 
translating system and and this was

00:03:00.450 --> 00:03:02.300 
translating system and and this was
invented<00:03:00.750> so<00:03:01.230> that<00:03:01.260> we<00:03:01.470> could<00:03:01.620> perform<00:03:01.769> those

00:03:02.300 --> 00:03:02.310 
invented so that we could perform those

00:03:02.310 --> 00:03:03.920 
invented so that we could perform those
complex<00:03:02.760> calculations<00:03:03.299> the<00:03:03.480> computers<00:03:03.840> are

00:03:03.920 --> 00:03:03.930 
complex calculations the computers are

00:03:03.930 --> 00:03:06.140 
complex calculations the computers are
necessary<00:03:04.319> for<00:03:04.379> but<00:03:05.280> which<00:03:05.579> assembly<00:03:06.090> in

00:03:06.140 --> 00:03:06.150 
necessary for but which assembly in

00:03:06.150 --> 00:03:07.610 
necessary for but which assembly in
binary<00:03:06.329> code<00:03:06.480> made<00:03:06.870> really<00:03:07.109> difficult

00:03:07.610 --> 00:03:07.620 
binary code made really difficult

00:03:07.620 --> 00:03:09.349 
binary code made really difficult
because<00:03:07.799> of<00:03:08.549> how<00:03:08.940> they<00:03:09.060> were<00:03:09.090> programmed

00:03:09.349 --> 00:03:09.359 
because of how they were programmed

00:03:09.359 --> 00:03:12.080 
because of how they were programmed
Fortran<00:03:10.019> made<00:03:10.170> it<00:03:10.290> easy<00:03:10.409> for<00:03:10.920> you<00:03:11.010> to<00:03:11.040> write<00:03:11.310> 5

00:03:12.080 --> 00:03:12.090 
Fortran made it easy for you to write 5

00:03:12.090 --> 00:03:13.940 
Fortran made it easy for you to write 5
divided<00:03:12.420> by<00:03:12.450> 3<00:03:12.510> and<00:03:12.959> that<00:03:13.349> would<00:03:13.560> give<00:03:13.739> you<00:03:13.859> the

00:03:13.940 --> 00:03:13.950 
divided by 3 and that would give you the

00:03:13.950 --> 00:03:15.890 
divided by 3 and that would give you the
value<00:03:14.220> 5<00:03:14.370> divided<00:03:14.700> by<00:03:14.730> 3<00:03:14.790> whereas<00:03:15.359> in<00:03:15.480> assembly

00:03:15.890 --> 00:03:15.900 
value 5 divided by 3 whereas in assembly

00:03:15.900 --> 00:03:17.240 
value 5 divided by 3 whereas in assembly
in<00:03:15.989> binary<00:03:16.200> code<00:03:16.380> you'd<00:03:16.739> have<00:03:16.889> to<00:03:17.010> do<00:03:17.099> that

00:03:17.240 --> 00:03:17.250 
in binary code you'd have to do that

00:03:17.250 --> 00:03:19.720 
in binary code you'd have to do that
manually<00:03:17.579> with<00:03:17.849> subtraction<00:03:18.530> or<00:03:19.530> addition

00:03:19.720 --> 00:03:19.730 
manually with subtraction or addition

00:03:19.730 --> 00:03:23.180 
manually with subtraction or addition
which<00:03:20.730> wasn't<00:03:21.480> very<00:03:21.750> convenient<00:03:22.319> so<00:03:22.919> that<00:03:23.069> was

00:03:23.180 --> 00:03:23.190 
which wasn't very convenient so that was

00:03:23.190 --> 00:03:26.270 
which wasn't very convenient so that was
for<00:03:23.669> China<00:03:23.970> in<00:03:24.060> 1954<00:03:24.750> and<00:03:24.989> after<00:03:25.950> that<00:03:26.099> we

00:03:26.270 --> 00:03:26.280 
for China in 1954 and after that we

00:03:26.280 --> 00:03:27.530 
for China in 1954 and after that we
started<00:03:26.549> getting<00:03:26.819> a<00:03:26.910> lot<00:03:27.060> more<00:03:27.120> language

00:03:27.530 --> 00:03:27.540 
started getting a lot more language

00:03:27.540 --> 00:03:29.089 
started getting a lot more language
there<00:03:27.720> stead<00:03:27.840> of<00:03:27.870> getting<00:03:28.109> C<00:03:28.410> we<00:03:28.799> started

00:03:29.089 --> 00:03:29.099 
there stead of getting C we started

00:03:29.099 --> 00:03:31.550 
there stead of getting C we started
getting<00:03:29.459> small<00:03:30.359> torque<00:03:30.690> and<00:03:31.049> stuff<00:03:31.200> like<00:03:31.319> that

00:03:31.550 --> 00:03:31.560 
getting small torque and stuff like that

00:03:31.560 --> 00:03:35.059 
getting small torque and stuff like that
and<00:03:31.769> today<00:03:32.579> programming<00:03:33.090> languages<00:03:33.480> are<00:03:34.069> more

00:03:35.059 --> 00:03:35.069 
and today programming languages are more

00:03:35.069 --> 00:03:36.409 
and today programming languages are more
high-level<00:03:35.340> we've<00:03:35.730> seen<00:03:35.879> what<00:03:36.030> high-level

00:03:36.409 --> 00:03:36.419 
high-level we've seen what high-level

00:03:36.419 --> 00:03:38.270 
high-level we've seen what high-level
means<00:03:36.680> which<00:03:37.680> means<00:03:37.919> there<00:03:38.069> are<00:03:38.099> a<00:03:38.160> lot<00:03:38.250> more

00:03:38.270 --> 00:03:38.280 
means which means there are a lot more

00:03:38.280 --> 00:03:40.369 
means which means there are a lot more
abstract<00:03:38.669> than<00:03:39.180> finally<00:03:39.629> assembly<00:03:40.319> in

00:03:40.369 --> 00:03:40.379 
abstract than finally assembly in

00:03:40.379 --> 00:03:42.619 
abstract than finally assembly in
Fortran<00:03:40.859> but<00:03:41.790> there<00:03:41.970> are<00:03:42.030> also<00:03:42.120> a<00:03:42.269> lot<00:03:42.419> more

00:03:42.619 --> 00:03:42.629 
Fortran but there are also a lot more

00:03:42.629 --> 00:03:43.220 
Fortran but there are also a lot more
complex

00:03:43.220 --> 00:03:43.230 
complex

00:03:43.230 --> 00:03:45.379 
complex
we<00:03:43.769> will<00:03:44.010> not<00:03:44.160> be<00:03:44.310> although<00:03:44.669> I'd<00:03:44.970> be<00:03:45.120> able<00:03:45.269> to

00:03:45.379 --> 00:03:45.389 
we will not be although I'd be able to

00:03:45.389 --> 00:03:47.330 
we will not be although I'd be able to
teach<00:03:45.569> you<00:03:46.019> the<00:03:46.230> basics<00:03:46.620> of<00:03:46.680> assembly<00:03:47.129> in

00:03:47.330 --> 00:03:47.340 
teach you the basics of assembly in

00:03:47.340 --> 00:03:51.800 
teach you the basics of assembly in
probably<00:03:47.760> one<00:03:48.090> lecture<00:03:49.340> I'm<00:03:50.510> not<00:03:51.510> going<00:03:51.690> to

00:03:51.800 --> 00:03:51.810 
probably one lecture I'm not going to

00:03:51.810 --> 00:03:53.750 
probably one lecture I'm not going to
very<00:03:51.959> much<00:03:51.989> detail<00:03:52.260> obviously<00:03:52.769> I<00:03:52.919> will<00:03:53.519> not<00:03:53.639> be

00:03:53.750 --> 00:03:53.760 
very much detail obviously I will not be

00:03:53.760 --> 00:03:55.339 
very much detail obviously I will not be
able<00:03:54.030> to<00:03:54.120> teach<00:03:54.359> you<00:03:54.510> the<00:03:54.599> basics<00:03:54.930> of<00:03:55.019> Java

00:03:55.339 --> 00:03:55.349 
able to teach you the basics of Java

00:03:55.349 --> 00:03:56.449 
able to teach you the basics of Java
which<00:03:55.680> is<00:03:55.709> the<00:03:55.919> language<00:03:56.040> is<00:03:56.220> going<00:03:56.340> to<00:03:56.400> be

00:03:56.449 --> 00:03:56.459 
which is the language is going to be

00:03:56.459 --> 00:03:58.129 
which is the language is going to be
learning<00:03:56.609> in<00:03:57.000> one<00:03:57.269> lecture<00:03:57.510> it<00:03:57.810> will<00:03:57.930> take<00:03:58.109> a

00:03:58.129 --> 00:03:58.139 
learning in one lecture it will take a

00:03:58.139 --> 00:04:01.220 
learning in one lecture it will take a
few<00:03:58.379> more<00:03:59.000> so<00:04:00.000> Java<00:04:00.299> have<00:04:00.540> been<00:04:00.629> more<00:04:00.810> complex

00:04:01.220 --> 00:04:01.230 
few more so Java have been more complex

00:04:01.230 --> 00:04:03.349 
few more so Java have been more complex
and<00:04:01.500> I<00:04:02.280> certainly<00:04:02.459> programming<00:04:03.030> languages

00:04:03.349 --> 00:04:03.359 
and I certainly programming languages

00:04:03.359 --> 00:04:06.280 
and I certainly programming languages
and<00:04:03.569> now<00:04:03.810> more<00:04:04.470> complex<00:04:04.799> just<00:04:05.010> like<00:04:05.129> Java<00:04:05.489> and

00:04:06.280 --> 00:04:06.290 
and now more complex just like Java and

00:04:06.290 --> 00:04:08.750 
and now more complex just like Java and
the<00:04:07.290> output<00:04:07.680> of<00:04:07.799> modern<00:04:08.340> programming

00:04:08.750 --> 00:04:08.760 
the output of modern programming

00:04:08.760 --> 00:04:10.939 
the output of modern programming
languages<00:04:09.180> takes<00:04:09.419> longer<00:04:09.720> to<00:04:09.840> run<00:04:09.989> however

00:04:10.939 --> 00:04:10.949 
languages takes longer to run however

00:04:10.949 --> 00:04:12.170 
languages takes longer to run however
this<00:04:11.220> is<00:04:11.370> not<00:04:11.519> a<00:04:11.549> problem

00:04:12.170 --> 00:04:12.180 
this is not a problem

00:04:12.180 --> 00:04:14.990 
this is not a problem
because<00:04:12.870> computers<00:04:13.859> are<00:04:14.010> a<00:04:14.069> lot<00:04:14.370> faster<00:04:14.819> than

00:04:14.990 --> 00:04:15.000 
because computers are a lot faster than

00:04:15.000 --> 00:04:18.319 
because computers are a lot faster than
back<00:04:15.329> in<00:04:15.359> the<00:04:15.510> days<00:04:15.690> and<00:04:15.930> back-end<00:04:16.799> days<00:04:17.130> and<00:04:17.400> a

00:04:18.319 --> 00:04:18.329 
back in the days and back-end days and a

00:04:18.329 --> 00:04:21.259 
back in the days and back-end days and a
computer<00:04:18.840> could<00:04:18.989> have<00:04:19.370> 20<00:04:20.370> megahertz<00:04:20.700> of

00:04:21.259 --> 00:04:21.269 
computer could have 20 megahertz of

00:04:21.269 --> 00:04:23.800 
computer could have 20 megahertz of
processor<00:04:21.810> and<00:04:22.049> now<00:04:22.200> it<00:04:22.530> has

00:04:23.800 --> 00:04:23.810 
processor and now it has

00:04:23.810 --> 00:04:27.760 
processor and now it has
3.4<00:04:24.650> gigahertz<00:04:25.300> so<00:04:26.300> it<00:04:26.660> is<00:04:26.840> a<00:04:27.050> lot<00:04:27.290> faster

00:04:27.760 --> 00:04:27.770 
3.4 gigahertz so it is a lot faster

00:04:27.770 --> 00:04:32.170 
3.4 gigahertz so it is a lot faster
nowadays<00:04:28.130> and<00:04:28.670> also<00:04:29.500> this<00:04:30.500> an<00:04:31.030> evolution<00:04:32.030> of

00:04:32.170 --> 00:04:32.180 
nowadays and also this an evolution of

00:04:32.180 --> 00:04:33.580 
nowadays and also this an evolution of
programming<00:04:32.690> languages<00:04:33.050> has<00:04:33.200> happened

00:04:33.580 --> 00:04:33.590 
programming languages has happened

00:04:33.590 --> 00:04:36.610 
programming languages has happened
because<00:04:34.190> computers<00:04:34.990> can<00:04:35.990> be<00:04:36.020> working<00:04:36.380> 24

00:04:36.610 --> 00:04:36.620 
because computers can be working 24

00:04:36.620 --> 00:04:40.210 
because computers can be working 24
hours<00:04:36.919> per<00:04:37.280> day<00:04:37.310> and<00:04:38.110> that's<00:04:39.110> not<00:04:39.470> a<00:04:39.500> big<00:04:39.770> deal

00:04:40.210 --> 00:04:40.220 
hours per day and that's not a big deal

00:04:40.220 --> 00:04:43.060 
hours per day and that's not a big deal
however<00:04:41.210> programmers<00:04:41.780> can<00:04:42.470> be<00:04:42.650> working<00:04:42.860> 24

00:04:43.060 --> 00:04:43.070 
however programmers can be working 24

00:04:43.070 --> 00:04:45.790 
however programmers can be working 24
hours<00:04:43.520> per<00:04:43.669> day<00:04:43.700> so<00:04:44.389> programmer<00:04:44.990> time<00:04:45.320> is<00:04:45.590> more

00:04:45.790 --> 00:04:45.800 
hours per day so programmer time is more

00:04:45.800 --> 00:04:48.250 
hours per day so programmer time is more
valuable<00:04:46.160> the<00:04:46.340> computer<00:04:46.730> time<00:04:46.940> and<00:04:47.260> therefore

00:04:48.250 --> 00:04:48.260 
valuable the computer time and therefore

00:04:48.260 --> 00:04:50.200 
valuable the computer time and therefore
we<00:04:48.830> need<00:04:48.950> to<00:04:49.010> come<00:04:49.370> up<00:04:49.490> with<00:04:49.639> programming

00:04:50.200 --> 00:04:50.210 
we need to come up with programming

00:04:50.210 --> 00:04:53.050 
we need to come up with programming
languages<00:04:50.570> that<00:04:50.600> are<00:04:50.870> more<00:04:51.680> high-level<00:04:52.060> kind

00:04:53.050 --> 00:04:53.060 
languages that are more high-level kind

00:04:53.060 --> 00:04:55.180 
languages that are more high-level kind
of<00:04:53.150> more<00:04:53.330> complex<00:04:53.780> but<00:04:54.320> also<00:04:54.410> easier<00:04:54.919> to

00:04:55.180 --> 00:04:55.190 
of more complex but also easier to

00:04:55.190 --> 00:04:57.580 
of more complex but also easier to
understand<00:04:55.669> and<00:04:55.700> work<00:04:56.060> with<00:04:56.230> so<00:04:57.230> that<00:04:57.380> less

00:04:57.580 --> 00:04:57.590 
understand and work with so that less

00:04:57.590 --> 00:04:59.080 
understand and work with so that less
time<00:04:57.830> is<00:04:57.980> wasted<00:04:58.400> trying<00:04:58.730> to<00:04:58.880> correct

00:04:59.080 --> 00:04:59.090 
time is wasted trying to correct

00:04:59.090 --> 00:05:00.610 
time is wasted trying to correct
mistakes<00:04:59.270> that<00:04:59.840> one<00:05:00.080> might<00:05:00.260> not<00:05:00.410> notice

00:05:00.610 --> 00:05:00.620 
mistakes that one might not notice

00:05:00.620 --> 00:05:01.870 
mistakes that one might not notice
because<00:05:00.919> of<00:05:01.070> the<00:05:01.190> complexity<00:05:01.730> of<00:05:01.760> the

00:05:01.870 --> 00:05:01.880 
because of the complexity of the

00:05:01.880 --> 00:05:05.530 
because of the complexity of the
language<00:05:03.190> so<00:05:04.190> this<00:05:04.850> is<00:05:05.120> pretty<00:05:05.419> much

00:05:05.530 --> 00:05:05.540 
language so this is pretty much

00:05:05.540 --> 00:05:07.780 
language so this is pretty much
everything<00:05:05.750> in<00:05:06.320> the<00:05:06.740> brief<00:05:07.310> history<00:05:07.460> of

00:05:07.780 --> 00:05:07.790 
everything in the brief history of

00:05:07.790 --> 00:05:11.860 
everything in the brief history of
foreign<00:05:07.970> languages<00:05:08.419> and<00:05:10.270> now<00:05:11.270> let's<00:05:11.450> move<00:05:11.660> on

00:05:11.860 --> 00:05:11.870 
foreign languages and now let's move on

00:05:11.870 --> 00:05:14.530 
foreign languages and now let's move on
to<00:05:12.080> the<00:05:12.680> next<00:05:12.980> lecture<00:05:13.610> so<00:05:13.760> I'll<00:05:14.210> see<00:05:14.390> you<00:05:14.419> in

00:05:14.530 --> 00:05:14.540 
to the next lecture so I'll see you in

00:05:14.540 --> 00:05:16.870 
to the next lecture so I'll see you in
the<00:05:14.600> next<00:05:14.780> one

