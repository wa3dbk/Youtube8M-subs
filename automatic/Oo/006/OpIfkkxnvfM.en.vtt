WEBVTT
Kind: captions
Language: en

00:00:24.740 --> 00:00:26.570 

when<00:00:25.740> you're<00:00:25.890> working<00:00:26.039> on<00:00:26.310> a<00:00:26.340> big<00:00:26.550> project

00:00:26.570 --> 00:00:26.580 
when you're working on a big project

00:00:26.580 --> 00:00:28.339 
when you're working on a big project
chances<00:00:27.420> are<00:00:27.539> rendering<00:00:27.930> is<00:00:28.080> where<00:00:28.260> the

00:00:28.339 --> 00:00:28.349 
chances are rendering is where the

00:00:28.349 --> 00:00:29.810 
chances are rendering is where the
bottleneck<00:00:28.710> is<00:00:28.859> going<00:00:29.010> to<00:00:29.070> happen<00:00:29.429> in<00:00:29.550> fact

00:00:29.810 --> 00:00:29.820 
bottleneck is going to happen in fact

00:00:29.820 --> 00:00:31.519 
bottleneck is going to happen in fact
sometimes<00:00:30.119> even<00:00:30.689> getting<00:00:30.990> it<00:00:31.109> to<00:00:31.199> render<00:00:31.439> at

00:00:31.519 --> 00:00:31.529 
sometimes even getting it to render at

00:00:31.529 --> 00:00:33.200 
sometimes even getting it to render at
all<00:00:31.650> is<00:00:31.830> quite<00:00:32.040> a<00:00:32.070> feat<00:00:32.340> so<00:00:32.610> here's<00:00:32.880> a<00:00:32.940> few

00:00:33.200 --> 00:00:33.210 
all is quite a feat so here's a few

00:00:33.210 --> 00:00:34.790 
all is quite a feat so here's a few
tricks<00:00:33.450> that<00:00:33.690> we<00:00:33.780> use<00:00:33.989> to<00:00:34.170> speed<00:00:34.410> things<00:00:34.559> up

00:00:34.790 --> 00:00:34.800 
tricks that we use to speed things up

00:00:34.800 --> 00:00:37.520 
tricks that we use to speed things up
first<00:00:35.520> off<00:00:35.760> is<00:00:36.000> a<00:00:36.030> no-brainer<00:00:36.270> if<00:00:36.840> the<00:00:37.110> camera

00:00:37.520 --> 00:00:37.530 
first off is a no-brainer if the camera

00:00:37.530 --> 00:00:40.160 
first off is a no-brainer if the camera
doesn't<00:00:37.770> see<00:00:38.219> it<00:00:38.340> deleted<00:00:39.030> our<00:00:39.239> environment

00:00:40.160 --> 00:00:40.170 
doesn't see it deleted our environment

00:00:40.170 --> 00:00:41.869 
doesn't see it deleted our environment
was<00:00:40.350> pretty<00:00:40.620> massive<00:00:40.890> but<00:00:41.370> we<00:00:41.579> set<00:00:41.760> everything

00:00:41.869 --> 00:00:41.879 
was pretty massive but we set everything

00:00:41.879 --> 00:00:43.549 
was pretty massive but we set everything
up<00:00:42.180> with<00:00:42.360> referenced<00:00:42.809> models<00:00:43.170> so<00:00:43.320> when<00:00:43.469> you

00:00:43.549 --> 00:00:43.559 
up with referenced models so when you

00:00:43.559 --> 00:00:45.500 
up with referenced models so when you
open<00:00:43.590> the<00:00:44.010> scene<00:00:44.250> it's<00:00:44.489> just<00:00:44.550> got<00:00:44.940> stand-ins

00:00:45.500 --> 00:00:45.510 
open the scene it's just got stand-ins

00:00:45.510 --> 00:00:47.930 
open the scene it's just got stand-ins
for<00:00:45.660> everything<00:00:46.170> then<00:00:46.920> we<00:00:47.129> wrote<00:00:47.340> a<00:00:47.370> script<00:00:47.730> so

00:00:47.930 --> 00:00:47.940 
for everything then we wrote a script so

00:00:47.940 --> 00:00:49.340 
for everything then we wrote a script so
you<00:00:48.030> could<00:00:48.180> just<00:00:48.329> select<00:00:48.539> the<00:00:48.870> objects<00:00:49.289> you

00:00:49.340 --> 00:00:49.350 
you could just select the objects you

00:00:49.350 --> 00:00:51.709 
you could just select the objects you
need<00:00:49.710> hit<00:00:50.250> a<00:00:50.280> button<00:00:50.579> and<00:00:50.879> it<00:00:51.030> imports<00:00:51.539> the

00:00:51.709 --> 00:00:51.719 
need hit a button and it imports the

00:00:51.719 --> 00:00:53.660 
need hit a button and it imports the
full<00:00:51.930> models<00:00:52.350> it<00:00:52.829> also<00:00:52.980> works<00:00:53.129> the<00:00:53.370> other<00:00:53.489> way

00:00:53.660 --> 00:00:53.670 
full models it also works the other way

00:00:53.670 --> 00:00:55.490 
full models it also works the other way
for<00:00:53.850> offloading<00:00:54.449> models<00:00:54.930> but<00:00:55.110> it's<00:00:55.260> way

00:00:55.490 --> 00:00:55.500 
for offloading models but it's way

00:00:55.500 --> 00:00:57.650 
for offloading models but it's way
faster<00:00:55.800> to<00:00:56.280> start<00:00:56.579> empty<00:00:56.940> and<00:00:57.120> build<00:00:57.390> it<00:00:57.539> all

00:00:57.650 --> 00:00:57.660 
faster to start empty and build it all

00:00:57.660 --> 00:01:00.200 
faster to start empty and build it all
up<00:00:57.870> the<00:00:58.680> next<00:00:58.980> thing<00:00:59.190> is<00:00:59.370> that<00:00:59.699> the<00:00:59.850> biggest

00:01:00.200 --> 00:01:00.210 
up the next thing is that the biggest

00:01:00.210 --> 00:01:02.150 
up the next thing is that the biggest
memory<00:01:00.600> hog<00:01:00.809> first<00:01:01.140> scene<00:01:01.350> like<00:01:01.530> this<00:01:01.710> is<00:01:01.949> the

00:01:02.150 --> 00:01:02.160 
memory hog first scene like this is the

00:01:02.160 --> 00:01:04.160 
memory hog first scene like this is the
textures<00:01:02.670> I<00:01:02.910> think<00:01:03.539> there's<00:01:03.750> something<00:01:03.930> like

00:01:04.160 --> 00:01:04.170 
textures I think there's something like

00:01:04.170 --> 00:01:05.899 
textures I think there's something like
seven<00:01:04.619> gigs<00:01:04.949> of<00:01:05.189> textures<00:01:05.610> for<00:01:05.790> the

00:01:05.899 --> 00:01:05.909 
seven gigs of textures for the

00:01:05.909 --> 00:01:07.880 
seven gigs of textures for the
environment<00:01:06.150> alone<00:01:06.630> so<00:01:06.960> there's<00:01:07.140> no<00:01:07.200> way<00:01:07.680> we

00:01:07.880 --> 00:01:07.890 
environment alone so there's no way we

00:01:07.890 --> 00:01:09.740 
environment alone so there's no way we
can<00:01:08.010> load<00:01:08.220> that<00:01:08.400> all<00:01:08.520> under<00:01:08.790> Ram<00:01:09.000> we<00:01:09.420> actually

00:01:09.740 --> 00:01:09.750 
can load that all under Ram we actually

00:01:09.750 --> 00:01:10.820 
can load that all under Ram we actually
have<00:01:09.869> to<00:01:09.930> beat<00:01:10.080> this<00:01:10.260> with<00:01:10.470> two<00:01:10.650> different

00:01:10.820 --> 00:01:10.830 
have to beat this with two different

00:01:10.830 --> 00:01:13.010 
have to beat this with two different
things<00:01:11.130> first<00:01:11.909> we<00:01:12.210> converted<00:01:12.600> all<00:01:12.780> of<00:01:12.900> our

00:01:13.010 --> 00:01:13.020 
things first we converted all of our

00:01:13.020 --> 00:01:15.469 
things first we converted all of our
textures<00:01:13.439> into<00:01:13.619> dot<00:01:13.860> map<00:01:14.189> files<00:01:14.580> this<00:01:15.299> is

00:01:15.469 --> 00:01:15.479 
textures into dot map files this is

00:01:15.479 --> 00:01:16.969 
textures into dot map files this is
something<00:01:15.810> that's<00:01:15.900> specific<00:01:16.409> to<00:01:16.439> mental<00:01:16.860> ray

00:01:16.969 --> 00:01:16.979 
something that's specific to mental ray

00:01:16.979 --> 00:01:18.320 
something that's specific to mental ray
but<00:01:17.220> there's<00:01:17.369> probably<00:01:17.640> something<00:01:17.880> similar

00:01:18.320 --> 00:01:18.330 
but there's probably something similar

00:01:18.330 --> 00:01:20.510 
but there's probably something similar
in<00:01:18.420> other<00:01:18.570> renderers<00:01:19.080> as<00:01:19.259> well<00:01:19.470> what<00:01:20.280> map

00:01:20.510 --> 00:01:20.520 
in other renderers as well what map

00:01:20.520 --> 00:01:23.270 
in other renderers as well what map
files<00:01:20.939> do<00:01:21.270> is<00:01:21.509> they<00:01:21.840> put<00:01:22.049> the<00:01:22.200> image<00:01:22.560> data<00:01:22.860> into

00:01:23.270 --> 00:01:23.280 
files do is they put the image data into

00:01:23.280 --> 00:01:25.010 
files do is they put the image data into
a<00:01:23.310> format<00:01:23.820> that<00:01:23.880> the<00:01:24.210> renderer<00:01:24.570> can<00:01:24.810> read

00:01:25.010 --> 00:01:25.020 
a format that the renderer can read

00:01:25.020 --> 00:01:27.590 
a format that the renderer can read
directly<00:01:25.439> from<00:01:25.650> disk<00:01:26.159> it's<00:01:26.880> not<00:01:27.119> quite<00:01:27.479> as

00:01:27.590 --> 00:01:27.600 
directly from disk it's not quite as

00:01:27.600 --> 00:01:29.090 
directly from disk it's not quite as
fast<00:01:27.840> because<00:01:28.409> every<00:01:28.650> time<00:01:28.829> it<00:01:28.979> needs

00:01:29.090 --> 00:01:29.100 
fast because every time it needs

00:01:29.100 --> 00:01:30.440 
fast because every time it needs
something<00:01:29.340> it<00:01:29.549> has<00:01:29.670> to<00:01:29.700> access<00:01:30.150> the<00:01:30.299> hard

00:01:30.440 --> 00:01:30.450 
something it has to access the hard

00:01:30.450 --> 00:01:32.749 
something it has to access the hard
drive<00:01:30.750> but<00:01:31.290> the<00:01:31.409> alternative<00:01:32.009> is<00:01:32.189> texture

00:01:32.749 --> 00:01:32.759 
drive but the alternative is texture

00:01:32.759 --> 00:01:34.069 
drive but the alternative is texture
swapping<00:01:33.210> where<00:01:33.420> it's<00:01:33.540> loading<00:01:33.990> and

00:01:34.069 --> 00:01:34.079 
swapping where it's loading and

00:01:34.079 --> 00:01:36.020 
swapping where it's loading and
unloading<00:01:34.170> entire<00:01:34.829> image<00:01:35.100> files<00:01:35.490> into<00:01:35.759> ram

00:01:36.020 --> 00:01:36.030 
unloading entire image files into ram

00:01:36.030 --> 00:01:38.450 
unloading entire image files into ram
and<00:01:36.329> that<00:01:36.420> instantly<00:01:37.020> kills<00:01:37.320> a<00:01:37.470> render<00:01:37.770> the

00:01:38.450 --> 00:01:38.460 
and that instantly kills a render the

00:01:38.460 --> 00:01:40.039 
and that instantly kills a render the
other<00:01:38.640> thing<00:01:38.939> we<00:01:39.030> had<00:01:39.180> to<00:01:39.210> do<00:01:39.420> was<00:01:39.630> split<00:01:39.930> our

00:01:40.039 --> 00:01:40.049 
other thing we had to do was split our

00:01:40.049 --> 00:01:42.800 
other thing we had to do was split our
environment<00:01:40.590> into<00:01:40.829> Z<00:01:41.040> passes<00:01:41.610> because<00:01:42.479> we<00:01:42.659> had

00:01:42.800 --> 00:01:42.810 
environment into Z passes because we had

00:01:42.810 --> 00:01:45.080 
environment into Z passes because we had
city<00:01:43.079> blocks<00:01:43.409> with<00:01:43.649> nice<00:01:43.890> clear<00:01:44.369> edges<00:01:44.790> we

00:01:45.080 --> 00:01:45.090 
city blocks with nice clear edges we

00:01:45.090 --> 00:01:46.999 
city blocks with nice clear edges we
just<00:01:45.329> did<00:01:45.450> a<00:01:45.479> separate<00:01:45.869> pass<00:01:46.110> for<00:01:46.439> each<00:01:46.560> block

00:01:46.999 --> 00:01:47.009 
just did a separate pass for each block

00:01:47.009 --> 00:01:49.190 
just did a separate pass for each block
and<00:01:47.369> that<00:01:47.399> cut<00:01:48.149> the<00:01:48.180> scene<00:01:48.540> into<00:01:48.750> manageable

00:01:49.190 --> 00:01:49.200 
and that cut the scene into manageable

00:01:49.200 --> 00:01:50.539 
and that cut the scene into manageable
chunks<00:01:49.350> so<00:01:49.770> the<00:01:49.890> renderer<00:01:50.189> could<00:01:50.399> chew

00:01:50.539 --> 00:01:50.549 
chunks so the renderer could chew

00:01:50.549 --> 00:01:52.969 
chunks so the renderer could chew
through<00:01:50.850> it<00:01:51.000> you<00:01:51.840> can<00:01:51.869> also<00:01:52.229> do<00:01:52.590> it<00:01:52.619> with<00:01:52.770> the

00:01:52.969 --> 00:01:52.979 
through it you can also do it with the

00:01:52.979 --> 00:01:54.950 
through it you can also do it with the
clipping<00:01:53.340> planes<00:01:53.610> on<00:01:53.820> a<00:01:53.850> camera<00:01:54.180> just<00:01:54.750> set<00:01:54.930> it

00:01:54.950 --> 00:01:54.960 
clipping planes on a camera just set it

00:01:54.960 --> 00:01:57.020 
clipping planes on a camera just set it
to<00:01:55.229> render<00:01:55.530> 0<00:01:55.950> through<00:01:56.189> a<00:01:56.219> thousand<00:01:56.759> then<00:01:57.000> a

00:01:57.020 --> 00:01:57.030 
to render 0 through a thousand then a

00:01:57.030 --> 00:01:59.060 
to render 0 through a thousand then a
thousand<00:01:57.509> to<00:01:57.600> two<00:01:57.780> thousand<00:01:58.290> and<00:01:58.380> so<00:01:58.740> on<00:01:58.950> until

00:01:59.060 --> 00:01:59.070 
thousand to two thousand and so on until

00:01:59.070 --> 00:02:00.679 
thousand to two thousand and so on until
you<00:01:59.340> get<00:01:59.520> images<00:01:59.880> that<00:02:00.030> you<00:02:00.090> can<00:02:00.240> stack<00:02:00.450> on<00:02:00.659> top

00:02:00.679 --> 00:02:00.689 
you get images that you can stack on top

00:02:00.689 --> 00:02:03.230 
you get images that you can stack on top
of<00:02:00.899> each<00:02:01.110> other<00:02:01.320> the<00:02:02.130> last<00:02:02.369> big<00:02:02.640> thing<00:02:02.700> we<00:02:03.030> did

00:02:03.230 --> 00:02:03.240 
of each other the last big thing we did

00:02:03.240 --> 00:02:06.170 
of each other the last big thing we did
is<00:02:03.450> to<00:02:03.630> use<00:02:03.810> 2d<00:02:04.170> motion<00:02:04.590> blur<00:02:05.009> you<00:02:05.670> probably

00:02:06.170 --> 00:02:06.180 
is to use 2d motion blur you probably

00:02:06.180 --> 00:02:07.760 
is to use 2d motion blur you probably
already<00:02:06.479> know<00:02:06.750> that<00:02:06.899> you<00:02:07.020> can<00:02:07.200> do<00:02:07.350> depth<00:02:07.619> of

00:02:07.760 --> 00:02:07.770 
already know that you can do depth of

00:02:07.770 --> 00:02:09.859 
already know that you can do depth of
field<00:02:07.979> by<00:02:08.220> just<00:02:08.459> rendering<00:02:08.849> a<00:02:08.970> depth<00:02:09.209> pass<00:02:09.539> and

00:02:09.859 --> 00:02:09.869 
field by just rendering a depth pass and

00:02:09.869 --> 00:02:12.140 
field by just rendering a depth pass and
using<00:02:10.170> that<00:02:10.200> to<00:02:10.349> control<00:02:10.950> a<00:02:10.979> compound<00:02:11.610> blur<00:02:11.940> in

00:02:12.140 --> 00:02:12.150 
using that to control a compound blur in

00:02:12.150 --> 00:02:13.910 
using that to control a compound blur in
the<00:02:12.270> compositing<00:02:12.840> stage

00:02:13.910 --> 00:02:13.920 
the compositing stage

00:02:13.920 --> 00:02:15.380 
the compositing stage
but<00:02:14.040> you<00:02:14.160> can<00:02:14.310> also<00:02:14.490> do<00:02:14.760> something<00:02:15.120> similar

00:02:15.380 --> 00:02:15.390 
but you can also do something similar

00:02:15.390 --> 00:02:17.630 
but you can also do something similar
with<00:02:15.540> motion<00:02:16.140> vectors<00:02:16.560> the<00:02:17.160> red<00:02:17.430> and<00:02:17.580> the

00:02:17.630 --> 00:02:17.640 
with motion vectors the red and the

00:02:17.640 --> 00:02:19.580 
with motion vectors the red and the
green<00:02:17.880> channels<00:02:18.360> work<00:02:18.540> like<00:02:18.720> a<00:02:18.750> clock<00:02:19.170> to<00:02:19.440> tell

00:02:19.580 --> 00:02:19.590 
green channels work like a clock to tell

00:02:19.590 --> 00:02:21.710 
green channels work like a clock to tell
us<00:02:19.709> which<00:02:19.920> direction<00:02:19.950> a<00:02:20.670> pixel<00:02:21.030> is<00:02:21.150> moving<00:02:21.569> and

00:02:21.710 --> 00:02:21.720 
us which direction a pixel is moving and

00:02:21.720 --> 00:02:24.110 
us which direction a pixel is moving and
the<00:02:22.230> blue<00:02:22.500> channel<00:02:22.800> scales<00:02:23.310> that<00:02:23.459> value<00:02:24.000> to

00:02:24.110 --> 00:02:24.120 
the blue channel scales that value to

00:02:24.120 --> 00:02:26.660 
the blue channel scales that value to
tell<00:02:24.300> us<00:02:24.420> how<00:02:24.569> fast<00:02:24.959> it's<00:02:25.230> moving<00:02:25.319> I<00:02:25.770> used<00:02:26.520> a

00:02:26.660 --> 00:02:26.670 
tell us how fast it's moving I used a

00:02:26.670 --> 00:02:28.490 
tell us how fast it's moving I used a
plug-in<00:02:26.910> called<00:02:27.090> smooth<00:02:27.780> kit<00:02:28.080> but<00:02:28.200> I<00:02:28.260> think

00:02:28.490 --> 00:02:28.500 
plug-in called smooth kit but I think

00:02:28.500 --> 00:02:29.930 
plug-in called smooth kit but I think
there's<00:02:28.680> something<00:02:28.890> similar<00:02:29.340> built<00:02:29.550> in<00:02:29.700> a<00:02:29.790> new

00:02:29.930 --> 00:02:29.940 
there's something similar built in a new

00:02:29.940 --> 00:02:32.930 
there's something similar built in a new
confusion<00:02:30.630> you<00:02:31.590> just<00:02:31.830> plug<00:02:32.250> these<00:02:32.459> motion

00:02:32.930 --> 00:02:32.940 
confusion you just plug these motion

00:02:32.940 --> 00:02:35.420 
confusion you just plug these motion
vectors<00:02:33.300> into<00:02:33.510> your<00:02:33.810> blur<00:02:34.080> node<00:02:34.410> tell<00:02:35.069> it<00:02:35.190> what

00:02:35.420 --> 00:02:35.430 
vectors into your blur node tell it what

00:02:35.430 --> 00:02:37.610 
vectors into your blur node tell it what
channels<00:02:35.910> are<00:02:36.060> supposed<00:02:36.390> to<00:02:36.450> do<00:02:36.630> what<00:02:36.870> and<00:02:37.140> it

00:02:37.610 --> 00:02:37.620 
channels are supposed to do what and it

00:02:37.620 --> 00:02:39.979 
channels are supposed to do what and it
will<00:02:37.770> blur<00:02:38.040> each<00:02:38.370> pixel<00:02:38.940> individually<00:02:39.720> based

00:02:39.979 --> 00:02:39.989 
will blur each pixel individually based

00:02:39.989 --> 00:02:42.170 
will blur each pixel individually based
on<00:02:40.319> the<00:02:40.470> direction<00:02:40.739> it's<00:02:41.010> traveling<00:02:41.459> in<00:02:41.610> it's

00:02:42.170 --> 00:02:42.180 
on the direction it's traveling in it's

00:02:42.180 --> 00:02:44.690 
on the direction it's traveling in it's
not<00:02:42.420> quite<00:02:42.840> as<00:02:43.019> nice<00:02:43.170> as<00:02:43.440> true<00:02:43.709> 3d<00:02:44.250> blur<00:02:44.489> but

00:02:44.690 --> 00:02:44.700 
not quite as nice as true 3d blur but

00:02:44.700 --> 00:02:46.820 
not quite as nice as true 3d blur but
it's<00:02:44.880> fast<00:02:45.150> and<00:02:45.420> it<00:02:45.510> works<00:02:45.780> of<00:02:46.080> course<00:02:46.650> the

00:02:46.820 --> 00:02:46.830 
it's fast and it works of course the

00:02:46.830 --> 00:02:47.990 
it's fast and it works of course the
last<00:02:47.040> thing<00:02:47.220> you<00:02:47.280> might<00:02:47.430> consider<00:02:47.580> especially

00:02:47.990 --> 00:02:48.000 
last thing you might consider especially

00:02:48.000 --> 00:02:49.910 
last thing you might consider especially
for<00:02:48.390> a<00:02:48.420> big<00:02:48.569> project<00:02:48.810> like<00:02:49.050> this<00:02:49.200> is<00:02:49.590> that

00:02:49.910 --> 00:02:49.920 
for a big project like this is that

00:02:49.920 --> 00:02:51.770 
for a big project like this is that
mental<00:02:50.340> ray<00:02:50.489> makes<00:02:50.790> some<00:02:50.970> gorgeous<00:02:51.239> pictures

00:02:51.770 --> 00:02:51.780 
mental ray makes some gorgeous pictures

00:02:51.780 --> 00:02:53.630 
mental ray makes some gorgeous pictures
but<00:02:51.989> it's<00:02:52.140> also<00:02:52.319> pretty<00:02:52.739> slow<00:02:53.100> compared<00:02:53.519> to<00:02:53.610> a

00:02:53.630 --> 00:02:53.640 
but it's also pretty slow compared to a

00:02:53.640 --> 00:02:55.490 
but it's also pretty slow compared to a
lot<00:02:53.730> of<00:02:53.790> the<00:02:53.940> other<00:02:54.060> renders<00:02:54.450> out<00:02:54.660> there<00:02:54.900> the

00:02:55.490 --> 00:02:55.500 
lot of the other renders out there the

00:02:55.500 --> 00:02:57.350 
lot of the other renders out there the
one<00:02:55.709> that's<00:02:55.890> most<00:02:56.040> commonly<00:02:56.549> used<00:02:56.580> is<00:02:56.940> Pixar's

00:02:57.350 --> 00:02:57.360 
one that's most commonly used is Pixar's

00:02:57.360 --> 00:02:59.420 
one that's most commonly used is Pixar's
render<00:02:57.750> man<00:02:57.930> i<00:02:58.170> just<00:02:58.590> posted<00:02:58.769> a<00:02:59.010> much<00:02:59.190> more

00:02:59.420 --> 00:02:59.430 
render man i just posted a much more

00:02:59.430 --> 00:03:01.190 
render man i just posted a much more
in-depth<00:02:59.880> discussion<00:03:00.360> on<00:03:00.480> render<00:03:00.840> man<00:03:00.989> and<00:03:01.170> a

00:03:01.190 --> 00:03:01.200 
in-depth discussion on render man and a

00:03:01.200 --> 00:03:02.600 
in-depth discussion on render man and a
few<00:03:01.350> other<00:03:01.500> renderers<00:03:01.890> on<00:03:02.010> the<00:03:02.100> blog<00:03:02.340> i

00:03:02.600 --> 00:03:02.610 
few other renderers on the blog i

00:03:02.610 --> 00:03:04.370 
few other renderers on the blog i
haven't<00:03:03.390> gotten<00:03:03.540> a<00:03:03.630> chance<00:03:03.660> to<00:03:03.930> use<00:03:04.019> all<00:03:04.230> those

00:03:04.370 --> 00:03:04.380 
haven't gotten a chance to use all those

00:03:04.380 --> 00:03:06.140 
haven't gotten a chance to use all those
different<00:03:04.590> renderers<00:03:05.010> myself<00:03:05.489> though<00:03:05.730> so<00:03:05.970> if

00:03:06.140 --> 00:03:06.150 
different renderers myself though so if

00:03:06.150 --> 00:03:07.580 
different renderers myself though so if
you<00:03:06.269> happen<00:03:06.420> to<00:03:06.630> have<00:03:06.720> some<00:03:06.900> insight<00:03:07.230> into<00:03:07.260> how

00:03:07.580 --> 00:03:07.590 
you happen to have some insight into how

00:03:07.590 --> 00:03:09.350 
you happen to have some insight into how
those<00:03:07.799> other<00:03:07.980> packages<00:03:08.640> work<00:03:08.850> feel<00:03:09.060> free<00:03:09.269> to

00:03:09.350 --> 00:03:09.360 
those other packages work feel free to

00:03:09.360 --> 00:03:11.930 
those other packages work feel free to
chime<00:03:09.540> in<00:03:09.600> and<00:03:09.959> I<00:03:10.620> also<00:03:10.830> want<00:03:11.100> to<00:03:11.160> thank<00:03:11.280> fxphd

00:03:11.930 --> 00:03:11.940 
chime in and I also want to thank fxphd

00:03:11.940 --> 00:03:14.390 
chime in and I also want to thank fxphd
for<00:03:12.420> sponsoring<00:03:12.750> this<00:03:12.840> episode<00:03:13.019> the<00:03:13.890> new<00:03:14.040> July

00:03:14.390 --> 00:03:14.400 
for sponsoring this episode the new July

00:03:14.400 --> 00:03:16.160 
for sponsoring this episode the new July
term<00:03:14.670> is<00:03:14.880> currently<00:03:15.180> starting<00:03:15.480> with<00:03:15.720> a<00:03:15.750> rerun

00:03:16.160 --> 00:03:16.170 
term is currently starting with a rerun

00:03:16.170 --> 00:03:18.110 
term is currently starting with a rerun
of<00:03:16.230> my<00:03:16.500> lighting<00:03:16.830> &amp;<00:03:16.950> xsi<00:03:17.340> course<00:03:17.670> and<00:03:17.970> they've

00:03:18.110 --> 00:03:18.120 
of my lighting &amp; xsi course and they've

00:03:18.120 --> 00:03:19.940 
of my lighting &amp; xsi course and they've
just<00:03:18.390> announced<00:03:18.570> their<00:03:18.959> first<00:03:19.200> ever<00:03:19.470> render

00:03:19.940 --> 00:03:19.950 
just announced their first ever render

00:03:19.950 --> 00:03:21.500 
just announced their first ever render
man<00:03:20.100> course<00:03:20.430> so<00:03:20.790> if<00:03:20.940> you've<00:03:21.090> got<00:03:21.120> a<00:03:21.239> technical

00:03:21.500 --> 00:03:21.510 
man course so if you've got a technical

00:03:21.510 --> 00:03:23.090 
man course so if you've got a technical
mind<00:03:21.959> and<00:03:22.260> want<00:03:22.440> a<00:03:22.470> chance<00:03:22.650> to<00:03:22.829> play<00:03:22.950> around

00:03:23.090 --> 00:03:23.100 
mind and want a chance to play around

00:03:23.100 --> 00:03:24.500 
mind and want a chance to play around
with<00:03:23.310> render<00:03:23.640> man<00:03:23.790> it's<00:03:24.180> going<00:03:24.359> to<00:03:24.420> be<00:03:24.480> a

00:03:24.500 --> 00:03:24.510 
with render man it's going to be a

00:03:24.510 --> 00:03:27.200 
with render man it's going to be a
really<00:03:24.780> fun<00:03:24.810> class

