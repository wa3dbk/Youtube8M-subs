WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:03.230 

now<00:00:01.260> look<00:00:01.439> at<00:00:01.560> this<00:00:01.680> question<00:00:02.149> efficiency<00:00:03.149> of

00:00:03.230 --> 00:00:03.240 
now look at this question efficiency of

00:00:03.240 --> 00:00:06.440 
now look at this question efficiency of
token<00:00:03.629> ring<00:00:03.780> is<00:00:03.990> high<00:00:04.380> if<00:00:04.620> a<00:00:04.890> wish<00:00:05.400> means<00:00:05.640> they

00:00:06.440 --> 00:00:06.450 
token ring is high if a wish means they

00:00:06.450 --> 00:00:07.519 
token ring is high if a wish means they
are<00:00:06.509> talking<00:00:06.690> about<00:00:06.899> the<00:00:07.049> token<00:00:07.379> ring

00:00:07.519 --> 00:00:07.529 
are talking about the token ring

00:00:07.529 --> 00:00:09.709 
are talking about the token ring
efficiency<00:00:08.370> so<00:00:08.670> I<00:00:08.700> told<00:00:08.970> you<00:00:09.030> that<00:00:09.240> a<00:00:09.420> fish

00:00:09.709 --> 00:00:09.719 
efficiency so I told you that a fish

00:00:09.719 --> 00:00:12.200 
efficiency so I told you that a fish
token<00:00:10.170> ring<00:00:10.290> has<00:00:10.530> mainly<00:00:10.889> two<00:00:11.400> strategies<00:00:11.820> one

00:00:12.200 --> 00:00:12.210 
token ring has mainly two strategies one

00:00:12.210 --> 00:00:13.850 
token ring has mainly two strategies one
is<00:00:12.330> a<00:00:12.480> D<00:00:12.599> token<00:00:12.900> reinsertion<00:00:13.290> and<00:00:13.559> other<00:00:13.679> is

00:00:13.850 --> 00:00:13.860 
is a D token reinsertion and other is

00:00:13.860 --> 00:00:15.980 
is a D token reinsertion and other is
delayed<00:00:14.160> token<00:00:14.460> train<00:00:14.610> session<00:00:15.000> and<00:00:15.150> in<00:00:15.780> case

00:00:15.980 --> 00:00:15.990 
delayed token train session and in case

00:00:15.990 --> 00:00:17.960 
delayed token train session and in case
of<00:00:16.020> a<00:00:16.289> li<00:00:16.350> token<00:00:16.740> reinsertion<00:00:17.100> efficiency<00:00:17.910> is

00:00:17.960 --> 00:00:17.970 
of a li token reinsertion efficiency is

00:00:17.970 --> 00:00:20.420 
of a li token reinsertion efficiency is
high<00:00:18.270> so<00:00:18.930> we<00:00:19.080> already<00:00:19.230> seen<00:00:19.590> it<00:00:19.740> right<00:00:19.949> so

00:00:20.420 --> 00:00:20.430 
high so we already seen it right so

00:00:20.430 --> 00:00:22.820 
high so we already seen it right so
efficiency<00:00:21.119> of<00:00:21.270> early<00:00:21.720> token<00:00:22.140> tree<00:00:22.350> insertion

00:00:22.820 --> 00:00:22.830 
efficiency of early token tree insertion

00:00:22.830 --> 00:00:28.250 
efficiency of early token tree insertion
is<00:00:23.090> 1<00:00:24.090> upon<00:00:24.269> 1<00:00:24.779> plus<00:00:25.320> a<00:00:25.800> by<00:00:26.369> n<00:00:26.609> and<00:00:27.260> efficiency

00:00:28.250 --> 00:00:28.260 
is 1 upon 1 plus a by n and efficiency

00:00:28.260 --> 00:00:31.999 
is 1 upon 1 plus a by n and efficiency
of<00:00:28.289> delayed<00:00:28.980> token<00:00:29.429> reinsertion<00:00:30.000> is<00:00:30.349> 1<00:00:31.349> upon<00:00:31.769> 1

00:00:31.999 --> 00:00:32.009 
of delayed token reinsertion is 1 upon 1

00:00:32.009 --> 00:00:35.720 
of delayed token reinsertion is 1 upon 1
plus<00:00:32.340> a<00:00:32.969> by<00:00:33.630> n<00:00:33.899> into<00:00:34.649> n<00:00:34.800> plus<00:00:35.070> 1<00:00:35.340> therefore

00:00:35.720 --> 00:00:35.730 
plus a by n into n plus 1 therefore

00:00:35.730 --> 00:00:37.910 
plus a by n into n plus 1 therefore
obviously<00:00:36.510> efficiency<00:00:37.110> of<00:00:37.200> early<00:00:37.530> is<00:00:37.649> better

00:00:37.910 --> 00:00:37.920 
obviously efficiency of early is better

00:00:37.920 --> 00:00:39.740 
obviously efficiency of early is better
so<00:00:38.399> now<00:00:38.520> let<00:00:38.700> us<00:00:38.730> see<00:00:38.879> the<00:00:39.000> options<00:00:39.390> what<00:00:39.570> they

00:00:39.740 --> 00:00:39.750 
so now let us see the options what they

00:00:39.750 --> 00:00:42.979 
so now let us see the options what they
are<00:00:39.809> trying<00:00:40.020> to<00:00:40.110> do<00:00:40.460> is<00:00:41.460> high<00:00:41.820> if<00:00:42.059> we<00:00:42.660> insert

00:00:42.979 --> 00:00:42.989 
are trying to do is high if we insert

00:00:42.989 --> 00:00:45.319 
are trying to do is high if we insert
the<00:00:43.170> token<00:00:43.649> after<00:00:43.829> receiving<00:00:44.670> the<00:00:44.789> last<00:00:45.000> bit

00:00:45.319 --> 00:00:45.329 
the token after receiving the last bit

00:00:45.329 --> 00:00:47.240 
the token after receiving the last bit
of<00:00:45.360> the<00:00:45.660> frame<00:00:45.899> which<00:00:46.260> means<00:00:46.289> if<00:00:46.680> you<00:00:46.800> reinsert

00:00:47.240 --> 00:00:47.250 
of the frame which means if you reinsert

00:00:47.250 --> 00:00:49.069 
of the frame which means if you reinsert
the<00:00:47.399> token<00:00:47.820> after<00:00:48.000> receiving<00:00:48.480> the<00:00:48.570> last<00:00:48.750> bit

00:00:49.069 --> 00:00:49.079 
the token after receiving the last bit

00:00:49.079 --> 00:00:51.170 
the token after receiving the last bit
of<00:00:49.230> the<00:00:49.379> frame<00:00:49.559> which<00:00:49.829> is<00:00:50.010> nothing<00:00:50.190> but<00:00:50.370> delay

00:00:51.170 --> 00:00:51.180 
of the frame which is nothing but delay

00:00:51.180 --> 00:00:52.880 
of the frame which is nothing but delay
token<00:00:51.570> tree<00:00:51.690> insertion<00:00:52.140> in<00:00:52.289> delay<00:00:52.559> token

00:00:52.880 --> 00:00:52.890 
token tree insertion in delay token

00:00:52.890 --> 00:00:55.490 
token tree insertion in delay token
reinsertion<00:00:53.309> we<00:00:53.730> let<00:00:53.910> the<00:00:54.149> frame<00:00:54.870> pass<00:00:55.199> and

00:00:55.490 --> 00:00:55.500 
reinsertion we let the frame pass and

00:00:55.500 --> 00:00:57.290 
reinsertion we let the frame pass and
after<00:00:56.010> receiving<00:00:56.370> the<00:00:56.460> last<00:00:56.730> bit<00:00:57.030> of<00:00:57.120> the

00:00:57.290 --> 00:00:57.300 
after receiving the last bit of the

00:00:57.300 --> 00:00:58.580 
after receiving the last bit of the
frame<00:00:57.539> we<00:00:57.690> are<00:00:57.719> going<00:00:57.960> to<00:00:58.050> read<00:00:58.170> such<00:00:58.469> the

00:00:58.580 --> 00:00:58.590 
frame we are going to read such the

00:00:58.590 --> 00:01:00.410 
frame we are going to read such the
token<00:00:58.949> it<00:00:59.100> is<00:00:59.190> nothing<00:00:59.370> but<00:00:59.609> delay<00:00:59.879> token<00:01:00.239> rain

00:01:00.410 --> 00:01:00.420 
token it is nothing but delay token rain

00:01:00.420 --> 00:01:03.439 
token it is nothing but delay token rain
session<00:01:00.809> and<00:01:00.989> B<00:01:01.680> is<00:01:01.859> reinsert<00:01:02.850> the<00:01:03.000> token

00:01:03.439 --> 00:01:03.449 
session and B is reinsert the token

00:01:03.449 --> 00:01:05.299 
session and B is reinsert the token
after<00:01:03.870> receiving<00:01:04.350> the<00:01:04.470> last<00:01:04.739> bit<00:01:05.010> of<00:01:05.040> the

00:01:05.299 --> 00:01:05.309 
after receiving the last bit of the

00:01:05.309 --> 00:01:08.810 
after receiving the last bit of the
header<00:01:05.610> so<00:01:06.510> what<00:01:07.380> does<00:01:07.590> it<00:01:07.740> mean<00:01:07.890> so<00:01:08.340> it<00:01:08.490> is<00:01:08.610> it

00:01:08.810 --> 00:01:08.820 
header so what does it mean so it is it

00:01:08.820 --> 00:01:10.640 
header so what does it mean so it is it
is<00:01:08.970> obviously<00:01:09.360> not<00:01:09.630> the<00:01:09.810> answer<00:01:10.140> because<00:01:10.290> it

00:01:10.640 --> 00:01:10.650 
is obviously not the answer because it

00:01:10.650 --> 00:01:14.179 
is obviously not the answer because it
is<00:01:10.799> a<00:01:11.479> delayed<00:01:12.479> token<00:01:12.810> recession<00:01:13.409> reinsertion

00:01:14.179 --> 00:01:14.189 
is a delayed token recession reinsertion

00:01:14.189 --> 00:01:16.880 
is a delayed token recession reinsertion
the<00:01:14.460> reinsert<00:01:15.090> the<00:01:15.240> token<00:01:15.659> after<00:01:15.890> receiving

00:01:16.880 --> 00:01:16.890 
the reinsert the token after receiving

00:01:16.890 --> 00:01:18.980 
the reinsert the token after receiving
the<00:01:16.979> last<00:01:17.220> bit<00:01:17.520> of<00:01:17.549> the<00:01:17.820> header<00:01:18.060> first<00:01:18.750> thing

00:01:18.980 --> 00:01:18.990 
the last bit of the header first thing

00:01:18.990 --> 00:01:21.890 
the last bit of the header first thing
is<00:01:19.140> what<00:01:19.380> is<00:01:19.500> the<00:01:19.530> strategy<00:01:20.090> it<00:01:21.090> is<00:01:21.299> definitely

00:01:21.890 --> 00:01:21.900 
is what is the strategy it is definitely

00:01:21.900 --> 00:01:25.580 
is what is the strategy it is definitely
not<00:01:21.930> it<00:01:22.619> is<00:01:22.740> similar<00:01:23.100> to<00:01:23.130> this<00:01:23.430> you<00:01:24.180> know<00:01:24.590> delay

00:01:25.580 --> 00:01:25.590 
not it is similar to this you know delay

00:01:25.590 --> 00:01:27.440 
not it is similar to this you know delay
token<00:01:25.950> rain<00:01:26.130> session<00:01:26.549> but<00:01:26.729> what<00:01:26.970> is<00:01:27.180> the

00:01:27.440 --> 00:01:27.450 
token rain session but what is the

00:01:27.450 --> 00:01:32.090 
token rain session but what is the
difference<00:01:28.020> is<00:01:28.530> if<00:01:28.979> you<00:01:29.369> send<00:01:29.759> a<00:01:29.970> packet<00:01:31.100> if

00:01:32.090 --> 00:01:32.100 
difference is if you send a packet if

00:01:32.100 --> 00:01:34.609 
difference is if you send a packet if
you<00:01:32.310> send<00:01:32.549> a<00:01:32.670> packet<00:01:33.090> you<00:01:33.869> are<00:01:34.020> not<00:01:34.200> waiting

00:01:34.609 --> 00:01:34.619 
you send a packet you are not waiting

00:01:34.619 --> 00:01:37.249 
you send a packet you are not waiting
for<00:01:34.829> the<00:01:34.950> last<00:01:35.220> bit<00:01:35.520> of<00:01:35.549> the<00:01:35.850> packet<00:01:36.060> to<00:01:36.990> come

00:01:37.249 --> 00:01:37.259 
for the last bit of the packet to come

00:01:37.259 --> 00:01:39.230 
for the last bit of the packet to come
to<00:01:37.409> you<00:01:37.560> you<00:01:37.770> are<00:01:38.159> just<00:01:38.400> waiting<00:01:38.579> for<00:01:38.790> the<00:01:39.030> last

00:01:39.230 --> 00:01:39.240 
to you you are just waiting for the last

00:01:39.240 --> 00:01:40.789 
to you you are just waiting for the last
bit<00:01:39.509> of<00:01:39.540> the<00:01:39.750> header<00:01:39.960> to<00:01:40.200> come<00:01:40.409> to<00:01:40.590> you<00:01:40.680> and

00:01:40.789 --> 00:01:40.799 
bit of the header to come to you and

00:01:40.799 --> 00:01:43.550 
bit of the header to come to you and
then<00:01:40.979> you<00:01:41.070> can<00:01:41.189> reinsert<00:01:41.579> the<00:01:41.960> token<00:01:42.960> the

00:01:43.550 --> 00:01:43.560 
then you can reinsert the token the

00:01:43.560 --> 00:01:45.469 
then you can reinsert the token the
reason<00:01:43.890> why<00:01:44.070> this<00:01:44.130> method<00:01:44.520> will<00:01:44.790> work<00:01:44.820> is<00:01:45.270> or

00:01:45.469 --> 00:01:45.479 
reason why this method will work is or

00:01:45.479 --> 00:01:48.410 
reason why this method will work is or
why<00:01:45.720> this<00:01:45.780> kind<00:01:46.439> of<00:01:46.560> strategies<00:01:47.070> used<00:01:47.340> is<00:01:47.579> why

00:01:48.410 --> 00:01:48.420 
why this kind of strategies used is why

00:01:48.420 --> 00:01:50.260 
why this kind of strategies used is why
do<00:01:48.479> we<00:01:48.750> need<00:01:48.930> to<00:01:49.140> see<00:01:49.320> the<00:01:49.470> header<00:01:49.770> on<00:01:50.159> the

00:01:50.260 --> 00:01:50.270 
do we need to see the header on the

00:01:50.270 --> 00:01:53.060 
do we need to see the header on the
frame<00:01:51.270> before<00:01:51.840> leaving<00:01:52.020> the<00:01:52.259> token<00:01:52.649> so<00:01:52.920> that

00:01:53.060 --> 00:01:53.070 
frame before leaving the token so that

00:01:53.070 --> 00:01:55.280 
frame before leaving the token so that
we<00:01:53.220> can<00:01:53.369> find<00:01:53.640> out<00:01:53.820> what<00:01:54.119> is<00:01:54.299> the<00:01:54.450> priority<00:01:54.750> on

00:01:55.280 --> 00:01:55.290 
we can find out what is the priority on

00:01:55.290 --> 00:01:57.830 
we can find out what is the priority on
that<00:01:56.130> packet<00:01:56.640> I<00:01:56.790> mean<00:01:57.030> the<00:01:57.119> reservation<00:01:57.719> on

00:01:57.830 --> 00:01:57.840 
that packet I mean the reservation on

00:01:57.840 --> 00:01:59.990 
that packet I mean the reservation on
that<00:01:58.049> header<00:01:58.350> so<00:01:58.799> that<00:01:58.829> we<00:01:59.219> can<00:01:59.369> make<00:01:59.610> it<00:01:59.790> as

00:01:59.990 --> 00:02:00.000 
that header so that we can make it as

00:02:00.000 --> 00:02:02.840 
that header so that we can make it as
priority<00:02:00.509> of<00:02:00.630> the<00:02:00.780> token<00:02:01.200> so<00:02:01.829> whenever<00:02:02.520> we<00:02:02.820> are

00:02:02.840 --> 00:02:02.850 
priority of the token so whenever we are

00:02:02.850 --> 00:02:05.060 
priority of the token so whenever we are
doing<00:02:03.060> delayed<00:02:03.450> token<00:02:03.780> recession<00:02:04.409> we<00:02:04.649> always

00:02:05.060 --> 00:02:05.070 
doing delayed token recession we always

00:02:05.070 --> 00:02:08.059 
doing delayed token recession we always
want<00:02:05.460> whatever<00:02:06.210> is<00:02:06.630> the<00:02:06.840> reservation<00:02:07.680> on<00:02:07.829> that

00:02:08.059 --> 00:02:08.069 
want whatever is the reservation on that

00:02:08.069 --> 00:02:09.949 
want whatever is the reservation on that
header<00:02:08.369> that<00:02:09.000> should<00:02:09.209> be<00:02:09.360> kept<00:02:09.599> on<00:02:09.780> the

00:02:09.949 --> 00:02:09.959 
header that should be kept on the

00:02:09.959 --> 00:02:12.390 
header that should be kept on the
priority<00:02:10.560> of<00:02:10.590> the<00:02:10.890> token<00:02:11.760> that<00:02:11.910> is

00:02:12.390 --> 00:02:12.400 
priority of the token that is

00:02:12.400 --> 00:02:14.309 
priority of the token that is
reason<00:02:12.610> why<00:02:12.790> we<00:02:13.000> want<00:02:13.269> it<00:02:13.480> so<00:02:14.019> when<00:02:14.290> we

00:02:14.309 --> 00:02:14.319 
reason why we want it so when we

00:02:14.319 --> 00:02:16.110 
reason why we want it so when we
reinsert<00:02:14.890> the<00:02:15.040> token<00:02:15.400> after<00:02:15.549> receiving<00:02:16.030> the

00:02:16.110 --> 00:02:16.120 
reinsert the token after receiving the

00:02:16.120 --> 00:02:18.149 
reinsert the token after receiving the
last<00:02:16.360> bit<00:02:16.569> of<00:02:16.599> the<00:02:16.810> header<00:02:17.019> we<00:02:17.590> will<00:02:17.709> get<00:02:17.890> what

00:02:18.149 --> 00:02:18.159 
last bit of the header we will get what

00:02:18.159 --> 00:02:20.819 
last bit of the header we will get what
we<00:02:18.370> need<00:02:18.640> what<00:02:19.060> we<00:02:19.209> need<00:02:19.239> is<00:02:19.540> the<00:02:19.900> reservation

00:02:20.819 --> 00:02:20.829 
we need what we need is the reservation

00:02:20.829 --> 00:02:22.530 
we need what we need is the reservation
so<00:02:21.099> once<00:02:21.310> we<00:02:21.459> know<00:02:21.489> the<00:02:21.760> reservation<00:02:22.269> we<00:02:22.390> can

00:02:22.530 --> 00:02:22.540 
so once we know the reservation we can

00:02:22.540 --> 00:02:24.420 
so once we know the reservation we can
make<00:02:22.750> the<00:02:22.870> priority<00:02:23.409> so<00:02:23.860> anyways<00:02:24.220> it<00:02:24.370> is

00:02:24.420 --> 00:02:24.430 
make the priority so anyways it is

00:02:24.430 --> 00:02:26.550 
make the priority so anyways it is
similar<00:02:24.760> to<00:02:25.000> a<00:02:25.329> delayed<00:02:25.780> token<00:02:26.110> reinsertion

00:02:26.550 --> 00:02:26.560 
similar to a delayed token reinsertion

00:02:26.560 --> 00:02:29.789 
similar to a delayed token reinsertion
right<00:02:27.269> so<00:02:28.269> it<00:02:28.390> is<00:02:28.450> also<00:02:28.689> not<00:02:28.870> the<00:02:29.049> answer<00:02:29.470> now

00:02:29.789 --> 00:02:29.799 
right so it is also not the answer now

00:02:29.799 --> 00:02:32.220 
right so it is also not the answer now
whatever<00:02:30.189> this<00:02:30.459> reinsert<00:02:31.390> the<00:02:31.540> token<00:02:31.930> of<00:02:32.079> the

00:02:32.220 --> 00:02:32.230 
whatever this reinsert the token of the

00:02:32.230 --> 00:02:33.960 
whatever this reinsert the token of the
last<00:02:32.500> bit<00:02:32.799> of<00:02:32.829> the<00:02:33.129> data<00:02:33.340> packet<00:02:33.849> is

00:02:33.960 --> 00:02:33.970 
last bit of the data packet is

00:02:33.970 --> 00:02:36.569 
last bit of the data packet is
transferred<00:02:34.720> so<00:02:35.319> it<00:02:35.439> is<00:02:35.530> nothing<00:02:35.680> but<00:02:35.980> once

00:02:36.569 --> 00:02:36.579 
transferred so it is nothing but once

00:02:36.579 --> 00:02:38.970 
transferred so it is nothing but once
you<00:02:36.730> transfer<00:02:37.239> the<00:02:37.420> entire<00:02:37.750> packet<00:02:38.230> and<00:02:38.409> even

00:02:38.970 --> 00:02:38.980 
you transfer the entire packet and even

00:02:38.980 --> 00:02:40.500 
you transfer the entire packet and even
if<00:02:39.099> you<00:02:39.189> transfer<00:02:39.640> the<00:02:39.760> last<00:02:40.030> bit<00:02:40.239> of<00:02:40.269> the

00:02:40.500 --> 00:02:40.510 
if you transfer the last bit of the

00:02:40.510 --> 00:02:43.170 
if you transfer the last bit of the
packet<00:02:40.689> after<00:02:41.409> it<00:02:41.859> is<00:02:42.040> done<00:02:42.370> if<00:02:42.549> you<00:02:42.670> reinsert

00:02:43.170 --> 00:02:43.180 
packet after it is done if you reinsert

00:02:43.180 --> 00:02:45.420 
packet after it is done if you reinsert
it<00:02:43.299> immediately<00:02:43.959> it<00:02:44.109> is<00:02:44.140> nothing<00:02:44.440> but<00:02:44.769> early

00:02:45.420 --> 00:02:45.430 
it immediately it is nothing but early

00:02:45.430 --> 00:02:47.069 
it immediately it is nothing but early
token<00:02:45.819> reinsertion<00:02:46.269> which<00:02:46.659> means<00:02:46.900> we

00:02:47.069 --> 00:02:47.079 
token reinsertion which means we

00:02:47.079 --> 00:02:49.050 
token reinsertion which means we
transmit<00:02:47.590> the<00:02:47.739> packet<00:02:48.129> and<00:02:48.310> then<00:02:48.700> the<00:02:48.879> token

00:02:49.050 --> 00:02:49.060 
transmit the packet and then the token

00:02:49.060 --> 00:02:51.930 
transmit the packet and then the token
immediately<00:02:49.810> so<00:02:50.409> it<00:02:50.590> is<00:02:50.769> early<00:02:51.280> token<00:02:51.730> train

00:02:51.930 --> 00:02:51.940 
immediately so it is early token train

00:02:51.940 --> 00:02:53.460 
immediately so it is early token train
session<00:02:52.389> which<00:02:52.629> is<00:02:52.659> the<00:02:52.959> answer

00:02:53.460 --> 00:02:53.470 
session which is the answer

00:02:53.470 --> 00:02:55.500 
session which is the answer
reinsert<00:02:54.220> the<00:02:54.280> packet<00:02:54.760> of<00:02:54.879> a<00:02:54.909> last<00:02:55.239> bit<00:02:55.450> of

00:02:55.500 --> 00:02:55.510 
reinsert the packet of a last bit of

00:02:55.510 --> 00:02:57.569 
reinsert the packet of a last bit of
error<00:02:55.780> is<00:02:55.930> transmitted<00:02:56.680> it<00:02:56.859> is<00:02:56.980> it<00:02:57.370> is<00:02:57.489> very

00:02:57.569 --> 00:02:57.579 
error is transmitted it is it is very

00:02:57.579 --> 00:02:59.789 
error is transmitted it is it is very
meaningless<00:02:58.180> so<00:02:58.720> one<00:02:59.109> is<00:02:59.260> going<00:02:59.409> to<00:02:59.470> do<00:02:59.590> that

00:02:59.789 --> 00:02:59.799 
meaningless so one is going to do that

00:02:59.799 --> 00:03:02.970 
meaningless so one is going to do that
so<00:03:00.370> anyway<00:03:00.700> these<00:03:01.389> three<00:03:01.659> are<00:03:01.780> valid<00:03:02.260> valid

00:03:02.970 --> 00:03:02.980 
so anyway these three are valid valid

00:03:02.980 --> 00:03:05.369 
so anyway these three are valid valid
strategies<00:03:03.730> i<00:03:03.970> dint<00:03:04.540> explain<00:03:04.870> here<00:03:04.989> would<00:03:05.230> be

00:03:05.369 --> 00:03:05.379 
strategies i dint explain here would be

00:03:05.379 --> 00:03:08.670 
strategies i dint explain here would be
it<00:03:05.799> is<00:03:05.859> also<00:03:06.159> not<00:03:06.790> not<00:03:07.269> a<00:03:07.540> very<00:03:07.930> popular<00:03:08.379> method

00:03:08.670 --> 00:03:08.680 
it is also not not a very popular method

00:03:08.680 --> 00:03:11.220 
it is also not not a very popular method
but<00:03:09.069> then<00:03:09.280> it<00:03:09.400> is<00:03:09.519> valid<00:03:09.700> and<00:03:10.090> anyway<00:03:10.810> C<00:03:10.989> is<00:03:11.079> the

00:03:11.220 --> 00:03:11.230 
but then it is valid and anyway C is the

00:03:11.230 --> 00:03:12.929 
but then it is valid and anyway C is the
answer<00:03:11.260> C<00:03:11.739> means<00:03:12.010> that<00:03:12.220> early<00:03:12.609> token

00:03:12.929 --> 00:03:12.939 
answer C means that early token

00:03:12.939 --> 00:03:15.959 
answer C means that early token
reinsertion<00:03:13.389> right

