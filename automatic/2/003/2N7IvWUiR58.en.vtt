WEBVTT
Kind: captions
Language: en

00:00:12.960 --> 00:00:19.520 

at<00:00:13.960> all<00:00:16.410> here<00:00:17.410> are<00:00:17.590> three<00:00:18.130> apps<00:00:18.400> that<00:00:18.910> are

00:00:19.520 --> 00:00:19.530 
at all here are three apps that are

00:00:19.530 --> 00:00:22.500 
at all here are three apps that are
fantastic<00:00:20.530> for<00:00:20.560> getting<00:00:20.950> your<00:00:21.130> students<00:00:21.880> to

00:00:22.500 --> 00:00:22.510 
fantastic for getting your students to

00:00:22.510 --> 00:00:25.170 
fantastic for getting your students to
work<00:00:22.539> with<00:00:23.050> addition<00:00:23.560> in<00:00:23.710> a<00:00:24.100> fun<00:00:24.430> puzzle<00:00:24.789> like

00:00:25.170 --> 00:00:25.180 
work with addition in a fun puzzle like

00:00:25.180 --> 00:00:28.820 
work with addition in a fun puzzle like
environment<00:00:26.580> three<00:00:27.580> are<00:00:27.760> some<00:00:28.240> stacker

00:00:28.820 --> 00:00:28.830 
environment three are some stacker

00:00:28.830 --> 00:00:33.389 
environment three are some stacker
reiner<00:00:29.830> kenichi<00:00:30.369> is<00:00:30.510> yoga<00:00:31.510> me<00:00:31.570> and<00:00:31.949> you<00:00:32.949> can<00:00:33.250> do

00:00:33.389 --> 00:00:33.399 
reiner kenichi is yoga me and you can do

00:00:33.399 --> 00:00:37.590 
reiner kenichi is yoga me and you can do
which<00:00:33.820> is<00:00:33.850> a<00:00:34.030> variant<00:00:34.539> on<00:00:34.719> ken<00:00:35.109> ken<00:00:36.329> let's<00:00:37.329> look

00:00:37.590 --> 00:00:37.600 
which is a variant on ken ken let's look

00:00:37.600 --> 00:00:40.530 
which is a variant on ken ken let's look
at<00:00:37.750> these<00:00:37.899> being<00:00:38.470> played<00:00:38.860> and<00:00:39.210> you'll<00:00:40.210> see

00:00:40.530 --> 00:00:40.540 
at these being played and you'll see

00:00:40.540 --> 00:00:43.530 
at these being played and you'll see
that<00:00:40.720> what<00:00:40.960> I'm<00:00:41.200> looking<00:00:41.920> for<00:00:42.250> in<00:00:42.489> an<00:00:42.940> app<00:00:43.239> is

00:00:43.530 --> 00:00:43.540 
that what I'm looking for in an app is

00:00:43.540 --> 00:00:47.670 
that what I'm looking for in an app is
one<00:00:44.470> that<00:00:44.890> gives<00:00:45.430> students<00:00:46.180> a<00:00:46.480> depth<00:00:47.410> of

00:00:47.670 --> 00:00:47.680 
one that gives students a depth of

00:00:47.680 --> 00:00:50.280 
one that gives students a depth of
experience<00:00:47.890> these<00:00:48.880> are<00:00:49.059> not<00:00:49.290> flashcard

00:00:50.280 --> 00:00:50.290 
experience these are not flashcard

00:00:50.290 --> 00:00:53.340 
experience these are not flashcard
simulators<00:00:51.040> these<00:00:51.670> have<00:00:52.180> got<00:00:52.210> a<00:00:52.660> quality

00:00:53.340 --> 00:00:53.350 
simulators these have got a quality

00:00:53.350 --> 00:00:59.160 
simulators these have got a quality
gaming<00:00:53.950> puzzle<00:00:54.670> experience<00:00:57.780> some<00:00:58.780> stacker

00:00:59.160 --> 00:00:59.170 
gaming puzzle experience some stacker

00:00:59.170 --> 00:01:03.420 
gaming puzzle experience some stacker
has<00:00:59.920> students<00:01:00.489> stack<00:01:01.000> dice<00:01:01.780> or<00:01:02.170> coins<00:01:02.950> or

00:01:03.420 --> 00:01:03.430 
has students stack dice or coins or

00:01:03.430 --> 00:01:07.500 
has students stack dice or coins or
words<00:01:03.879> to<00:01:04.269> create<00:01:05.229> sums<00:01:06.130> that<00:01:06.759> equal<00:01:07.240> three

00:01:07.500 --> 00:01:07.510 
words to create sums that equal three

00:01:07.510 --> 00:01:10.230 
words to create sums that equal three
numbers<00:01:07.810> at<00:01:07.930> the<00:01:07.960> bottom<00:01:08.430> let's<00:01:09.430> see<00:01:10.000> it<00:01:10.119> in

00:01:10.230 --> 00:01:10.240 
numbers at the bottom let's see it in

00:01:10.240 --> 00:01:21.880 
numbers at the bottom let's see it in
action<00:01:19.229> six

00:01:21.880 --> 00:01:21.890 
action six

00:01:21.890 --> 00:01:33.580 
action six
seven<00:01:22.890> eight<00:01:23.100> nine<00:01:30.050> six<00:01:31.050> seven<00:01:31.800> eight<00:01:32.040> nine

00:01:33.580 --> 00:01:33.590 
seven eight nine six seven eight nine

00:01:33.590 --> 00:01:41.810 
seven eight nine six seven eight nine
ten<00:01:37.250> i<00:01:38.990> donít<00:01:39.990> in<00:01:40.380> Reiner<00:01:40.620> kenichi<00:01:41.160> is<00:01:41.250> Yoko

00:01:41.810 --> 00:01:41.820 
ten i donít in Reiner kenichi is Yoko

00:01:41.820 --> 00:01:45.830 
ten i donít in Reiner kenichi is Yoko
gammy<00:01:42.740> students<00:01:43.740> trace<00:01:44.310> their<00:01:44.820> finger<00:01:45.270> along

00:01:45.830 --> 00:01:45.840 
gammy students trace their finger along

00:01:45.840 --> 00:01:49.040 
gammy students trace their finger along
a<00:01:45.870> set<00:01:46.380> of<00:01:46.560> integers<00:01:47.130> and<00:01:47.450> the<00:01:48.450> largest

00:01:49.040 --> 00:01:49.050 
a set of integers and the largest

00:01:49.050 --> 00:01:51.590 
a set of integers and the largest
integer<00:01:49.470> has<00:01:49.860> to<00:01:50.040> be<00:01:50.160> equal<00:01:50.340> to<00:01:51.000> the<00:01:51.120> sum<00:01:51.360> of

00:01:51.590 --> 00:01:51.600 
integer has to be equal to the sum of

00:01:51.600 --> 00:01:55.130 
integer has to be equal to the sum of
all<00:01:51.930> of<00:01:52.410> the<00:01:52.620> smaller<00:01:53.369> integers<00:01:53.970> and<00:01:54.240> this

00:01:55.130 --> 00:01:55.140 
all of the smaller integers and this

00:01:55.140 --> 00:01:58.100 
all of the smaller integers and this
actually<00:01:55.350> creates<00:01:55.979> some<00:01:56.310> very<00:01:56.850> nice<00:01:57.210> play<00:01:57.840> as

00:01:58.100 --> 00:01:58.110 
actually creates some very nice play as

00:01:58.110 --> 00:02:01.580 
actually creates some very nice play as
you're<00:01:58.710> trying<00:01:59.070> to<00:01:59.250> get<00:02:00.180> columns<00:02:00.960> and<00:02:01.290> rows

00:02:01.580 --> 00:02:01.590 
you're trying to get columns and rows

00:02:01.590 --> 00:02:05.150 
you're trying to get columns and rows
free<00:02:02.250> so<00:02:02.820> that<00:02:02.850> you<00:02:03.509> fill<00:02:03.930> your<00:02:04.110> grid<00:02:04.410> with<00:02:04.619> new

00:02:05.150 --> 00:02:05.160 
free so that you fill your grid with new

00:02:05.160 --> 00:02:09.100 
free so that you fill your grid with new
integers<00:02:05.700> and<00:02:05.970> score<00:02:06.960> even<00:02:07.229> higher<00:02:07.649> points

00:02:09.100 --> 00:02:09.110 
integers and score even higher points

00:02:09.110 --> 00:02:23.070 
integers and score even higher points
let's<00:02:10.110> see<00:02:10.320> how<00:02:10.440> it's<00:02:10.560> played

00:02:23.070 --> 00:02:23.080 

00:02:23.080 --> 00:02:34.210 

Rick

00:02:34.210 --> 00:02:34.220 

00:02:34.220 --> 00:02:37.250 

you<00:02:35.220> can<00:02:35.489> do<00:02:35.670> is<00:02:35.879> a<00:02:35.909> can-can<00:02:36.269> variant<00:02:37.080> and

00:02:37.250 --> 00:02:37.260 
you can do is a can-can variant and

00:02:37.260 --> 00:02:40.670 
you can do is a can-can variant and
lichen<00:02:37.920> can-can<00:02:38.459> each<00:02:39.030> row<00:02:39.450> and<00:02:39.750> each<00:02:39.989> column

00:02:40.670 --> 00:02:40.680 
lichen can-can each row and each column

00:02:40.680 --> 00:02:44.149 
lichen can-can each row and each column
of<00:02:41.090> this<00:02:42.090> square<00:02:42.599> must<00:02:43.290> have<00:02:43.500> the<00:02:43.590> integers<00:02:43.980> 1

00:02:44.149 --> 00:02:44.159 
of this square must have the integers 1

00:02:44.159 --> 00:02:47.270 
of this square must have the integers 1
2<00:02:44.430> 3<00:02:44.459> and<00:02:45.000> 4<00:02:45.200> now<00:02:46.200> the<00:02:46.260> first<00:02:46.620> row<00:02:46.829> there<00:02:47.069> has

00:02:47.270 --> 00:02:47.280 
2 3 and 4 now the first row there has

00:02:47.280 --> 00:02:50.780 
2 3 and 4 now the first row there has
got<00:02:47.489> a<00:02:47.519> 1<00:02:47.819> 2<00:02:48.329> 3<00:02:48.360> and<00:02:49.110> another<00:02:49.349> two<00:02:49.709> so<00:02:50.340> that<00:02:50.519> gets

00:02:50.780 --> 00:02:50.790 
got a 1 2 3 and another two so that gets

00:02:50.790 --> 00:02:52.910 
got a 1 2 3 and another two so that gets
a<00:02:50.970> small<00:02:51.239> X<00:02:51.510> beside<00:02:51.900> it<00:02:52.200> because<00:02:52.440> that's<00:02:52.590> wrong

00:02:52.910 --> 00:02:52.920 
a small X beside it because that's wrong

00:02:52.920 --> 00:02:55.819 
a small X beside it because that's wrong
there's<00:02:53.280> two<00:02:53.640> twos<00:02:53.909> and<00:02:54.150> there's<00:02:54.329> no<00:02:54.480> for<00:02:54.829> each

00:02:55.819 --> 00:02:55.829 
there's two twos and there's no for each

00:02:55.829 --> 00:02:58.369 
there's two twos and there's no for each
column<00:02:56.430> also<00:02:56.579> has<00:02:57.000> to<00:02:57.209> have<00:02:57.360> the<00:02:57.569> integers<00:02:57.959> 1<00:02:58.140> 2

00:02:58.369 --> 00:02:58.379 
column also has to have the integers 1 2

00:02:58.379 --> 00:03:01.490 
column also has to have the integers 1 2
3<00:02:58.409> and<00:02:58.799> 4<00:02:59.180> you<00:03:00.180> also<00:03:00.360> get<00:03:00.629> additional<00:03:00.930> hints

00:03:01.490 --> 00:03:01.500 
3 and 4 you also get additional hints

00:03:01.500 --> 00:03:04.970 
3 and 4 you also get additional hints
and<00:03:01.970> here's<00:03:02.970> one<00:03:03.450> of<00:03:03.599> them<00:03:03.810> here<00:03:04.260> that<00:03:04.590> shape

00:03:04.970 --> 00:03:04.980 
and here's one of them here that shape

00:03:04.980 --> 00:03:07.490 
and here's one of them here that shape
all<00:03:05.609> of<00:03:06.120> the<00:03:06.239> integers<00:03:06.660> in<00:03:06.840> that<00:03:06.959> shape<00:03:07.230> have

00:03:07.490 --> 00:03:07.500 
all of the integers in that shape have

00:03:07.500 --> 00:03:11.660 
all of the integers in that shape have
to<00:03:07.680> add<00:03:07.829> up<00:03:08.010> to<00:03:08.160> 11<00:03:08.810> so<00:03:09.810> using<00:03:10.349> those<00:03:10.560> hints<00:03:11.010> you

00:03:11.660 --> 00:03:11.670 
to add up to 11 so using those hints you

00:03:11.670 --> 00:03:16.009 
to add up to 11 so using those hints you
have<00:03:11.879> to<00:03:12.090> complete<00:03:12.690> this<00:03:13.700> 4<00:03:14.700> by<00:03:14.879> 4<00:03:15.180> grid<00:03:15.510> with

00:03:16.009 --> 00:03:16.019 
have to complete this 4 by 4 grid with

00:03:16.019 --> 00:03:19.069 
have to complete this 4 by 4 grid with
the<00:03:16.230> numbers<00:03:16.500> one<00:03:16.739> two<00:03:16.950> three<00:03:17.310> and<00:03:17.400> four<00:03:18.079> more

00:03:19.069 --> 00:03:19.079 
the numbers one two three and four more

00:03:19.079 --> 00:03:21.380 
the numbers one two three and four more
difficult<00:03:19.799> problems<00:03:20.220> are<00:03:20.459> going<00:03:21.030> to<00:03:21.090> be<00:03:21.209> on

00:03:21.380 --> 00:03:21.390 
difficult problems are going to be on

00:03:21.390 --> 00:03:37.879 
difficult problems are going to be on
larger<00:03:21.840> grids<00:03:35.660> those<00:03:36.660> are<00:03:36.930> my<00:03:37.049> top<00:03:37.109> three<00:03:37.349> apps

00:03:37.879 --> 00:03:37.889 
larger grids those are my top three apps

00:03:37.889 --> 00:03:41.440 
larger grids those are my top three apps
for<00:03:38.609> Grade<00:03:38.970> two<00:03:39.120> students<00:03:39.660> learning<00:03:40.049> addition

00:03:41.440 --> 00:03:41.450 
for Grade two students learning addition

00:03:41.450 --> 00:03:45.470 
for Grade two students learning addition
the<00:03:42.450> secret<00:03:42.959> is<00:03:43.139> to<00:03:43.680> embed<00:03:44.459> the<00:03:44.790> mathematics

00:03:45.470 --> 00:03:45.480 
the secret is to embed the mathematics

00:03:45.480 --> 00:03:54.690 
the secret is to embed the mathematics
within<00:03:46.200> a<00:03:46.290> rich<00:03:46.620> puzzle<00:03:47.430> experience

00:03:54.690 --> 00:03:54.700 

00:03:54.700 --> 00:03:56.760 

you

