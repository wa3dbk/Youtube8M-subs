WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.060 

when<00:00:00.240> using<00:00:00.450> the<00:00:00.690> animator<00:00:01.079> you<00:00:01.650> have<00:00:01.829> two

00:00:02.060 --> 00:00:02.070 
when using the animator you have two

00:00:02.070 --> 00:00:03.949 
when using the animator you have two
options<00:00:02.490> for<00:00:02.610> referencing<00:00:03.300> states<00:00:03.659> and

00:00:03.949 --> 00:00:03.959 
options for referencing states and

00:00:03.959 --> 00:00:06.079 
options for referencing states and
parameters<00:00:04.290> you<00:00:05.220> can<00:00:05.400> either<00:00:05.609> reference

00:00:06.079 --> 00:00:06.089 
parameters you can either reference

00:00:06.089 --> 00:00:08.240 
parameters you can either reference
their<00:00:06.270> name<00:00:06.509> as<00:00:06.720> a<00:00:06.779> string<00:00:07.379> where<00:00:08.040> you<00:00:08.099> can

00:00:08.240 --> 00:00:08.250 
their name as a string where you can

00:00:08.250 --> 00:00:10.339 
their name as a string where you can
reference<00:00:08.460> the<00:00:08.730> name<00:00:08.970> hash<00:00:09.360> which<00:00:09.929> is<00:00:10.110> stored

00:00:10.339 --> 00:00:10.349 
reference the name hash which is stored

00:00:10.349 --> 00:00:12.470 
reference the name hash which is stored
as<00:00:10.530> an<00:00:10.830> integer<00:00:11.179> referencing<00:00:12.179> the<00:00:12.300> hash

00:00:12.470 --> 00:00:12.480 
as an integer referencing the hash

00:00:12.480 --> 00:00:14.570 
as an integer referencing the hash
identifier<00:00:13.139> is<00:00:13.349> much<00:00:13.830> more<00:00:14.070> efficient<00:00:14.460> and

00:00:14.570 --> 00:00:14.580 
identifier is much more efficient and

00:00:14.580 --> 00:00:17.269 
identifier is much more efficient and
less<00:00:14.639> prone<00:00:15.240> to<00:00:15.450> mistakes<00:00:15.630> as<00:00:16.109> such<00:00:16.980> we're

00:00:17.269 --> 00:00:17.279 
less prone to mistakes as such we're

00:00:17.279 --> 00:00:18.920 
less prone to mistakes as such we're
going<00:00:17.460> to<00:00:17.550> make<00:00:17.699> a<00:00:17.730> small<00:00:18.090> script<00:00:18.390> to<00:00:18.720> store

00:00:18.920 --> 00:00:18.930 
going to make a small script to store

00:00:18.930 --> 00:00:20.599 
going to make a small script to store
the<00:00:19.080> hashes<00:00:19.500> so<00:00:19.800> that<00:00:19.949> we<00:00:20.070> can<00:00:20.250> simply

00:00:20.599 --> 00:00:20.609 
the hashes so that we can simply

00:00:20.609 --> 00:00:22.609 
the hashes so that we can simply
reference<00:00:21.029> the<00:00:21.180> classes<00:00:21.570> variables<00:00:22.050> rather

00:00:22.609 --> 00:00:22.619 
reference the classes variables rather

00:00:22.619 --> 00:00:24.349 
reference the classes variables rather
than<00:00:22.890> writing<00:00:23.100> out<00:00:23.340> a<00:00:23.400> string<00:00:23.789> each<00:00:24.000> time

00:00:24.349 --> 00:00:24.359 
than writing out a string each time

00:00:24.359 --> 00:00:26.599 
than writing out a string each time
we're<00:00:24.990> going<00:00:25.199> to<00:00:25.350> use<00:00:25.560> this<00:00:25.740> script<00:00:26.039> to<00:00:26.369> store

00:00:26.599 --> 00:00:26.609 
we're going to use this script to store

00:00:26.609 --> 00:00:28.820 
we're going to use this script to store
hash<00:00:26.820> identifiers<00:00:27.449> for<00:00:27.990> both<00:00:28.170> the<00:00:28.320> player<00:00:28.560> and

00:00:28.820 --> 00:00:28.830 
hash identifiers for both the player and

00:00:28.830 --> 00:00:30.620 
hash identifiers for both the player and
the<00:00:29.039> enemy<00:00:29.369> which<00:00:29.789> will<00:00:29.970> be<00:00:30.090> making<00:00:30.300> later

00:00:30.620 --> 00:00:30.630 
the enemy which will be making later

00:00:30.630 --> 00:00:32.240 
the enemy which will be making later
this<00:00:31.199> script<00:00:31.500> will<00:00:31.679> have<00:00:31.830> a<00:00:31.859> lot<00:00:32.099> in<00:00:32.219> common

00:00:32.240 --> 00:00:32.250 
this script will have a lot in common

00:00:32.250 --> 00:00:34.069 
this script will have a lot in common
with<00:00:32.579> the<00:00:32.730> tag<00:00:33.059> script<00:00:33.480> we<00:00:33.660> made<00:00:33.870> for

00:00:34.069 --> 00:00:34.079 
with the tag script we made for

00:00:34.079 --> 00:00:36.110 
with the tag script we made for
referencing<00:00:34.530> tag<00:00:34.770> strings<00:00:35.160> however<00:00:35.880> there

00:00:36.110 --> 00:00:36.120 
referencing tag strings however there

00:00:36.120 --> 00:00:38.330 
referencing tag strings however there
are<00:00:36.210> a<00:00:36.270> few<00:00:36.300> notable<00:00:36.630> differences<00:00:37.440> a<00:00:37.710> key

00:00:38.330 --> 00:00:38.340 
are a few notable differences a key

00:00:38.340 --> 00:00:40.430 
are a few notable differences a key
example<00:00:38.850> being<00:00:39.180> that<00:00:39.300> the<00:00:39.540> tag<00:00:39.780> script<00:00:40.170> does

00:00:40.430 --> 00:00:40.440 
example being that the tag script does

00:00:40.440 --> 00:00:42.619 
example being that the tag script does
not<00:00:40.739> need<00:00:40.980> to<00:00:41.280> be<00:00:41.399> applied<00:00:41.730> to<00:00:41.969> a<00:00:42.000> game<00:00:42.210> object

00:00:42.619 --> 00:00:42.629 
not need to be applied to a game object

00:00:42.629 --> 00:00:45.170 
not need to be applied to a game object
to<00:00:42.750> be<00:00:42.870> used<00:00:43.170> the<00:00:44.070> hash<00:00:44.309> ID<00:00:44.550> script<00:00:45.000> we're

00:00:45.170 --> 00:00:45.180 
to be used the hash ID script we're

00:00:45.180 --> 00:00:47.090 
to be used the hash ID script we're
about<00:00:45.329> to<00:00:45.510> write<00:00:45.719> will<00:00:46.020> be<00:00:46.050> since<00:00:46.800> it<00:00:46.980> is

00:00:47.090 --> 00:00:47.100 
about to write will be since it is

00:00:47.100 --> 00:00:48.709 
about to write will be since it is
simply<00:00:47.460> data<00:00:47.670> that<00:00:47.969> needs<00:00:48.149> to<00:00:48.270> be<00:00:48.300> widely

00:00:48.709 --> 00:00:48.719 
simply data that needs to be widely

00:00:48.719 --> 00:00:51.170 
simply data that needs to be widely
available<00:00:48.860> we'll<00:00:49.860> create<00:00:50.129> the<00:00:50.250> script<00:00:50.550> on<00:00:50.850> the

00:00:51.170 --> 00:00:51.180 
available we'll create the script on the

00:00:51.180 --> 00:00:52.639 
available we'll create the script on the
game<00:00:51.360> controller<00:00:51.780> object<00:00:52.260> that<00:00:52.379> we<00:00:52.500> already

00:00:52.639 --> 00:00:52.649 
game controller object that we already

00:00:52.649 --> 00:00:54.830 
game controller object that we already
have<00:00:53.010> select<00:00:53.820> the<00:00:53.910> game<00:00:54.090> controller<00:00:54.570> in<00:00:54.750> the

00:00:54.830 --> 00:00:54.840 
have select the game controller in the

00:00:54.840 --> 00:00:57.770 
have select the game controller in the
hierarchy<00:00:55.379> and<00:00:55.500> click<00:00:56.219> Add<00:00:56.370> component<00:00:56.780> use

00:00:57.770 --> 00:00:57.780 
hierarchy and click Add component use

00:00:57.780 --> 00:01:00.650 
hierarchy and click Add component use
script<00:00:58.140> name<00:00:58.620> the<00:00:58.800> script<00:00:58.980> hash<00:00:59.489> IDs<00:00:59.940> as<00:01:00.210> shown

00:01:00.650 --> 00:01:00.660 
script name the script hash IDs as shown

00:01:00.660 --> 00:01:04.340 
script name the script hash IDs as shown
here<00:01:00.960> and<00:01:02.660> double-click<00:01:03.660> the<00:01:03.690> icon<00:01:03.899> to<00:01:04.320> open

00:01:04.340 --> 00:01:04.350 
here and double-click the icon to open

00:01:04.350 --> 00:01:07.370 
here and double-click the icon to open
it<00:01:04.710> for<00:01:04.860> editing<00:01:05.390> clear<00:01:06.390> the<00:01:06.540> script<00:01:06.840> to<00:01:07.110> start

00:01:07.370 --> 00:01:07.380 
it for editing clear the script to start

00:01:07.380 --> 00:01:09.380 
it for editing clear the script to start
writing<00:01:07.590> this<00:01:08.240> script

00:01:09.380 --> 00:01:09.390 
writing this script

00:01:09.390 --> 00:01:11.420 
writing this script
we'll<00:01:09.570> need<00:01:09.689> a<00:01:09.750> public<00:01:10.170> integer<00:01:10.650> variable<00:01:11.130> for

00:01:11.420 --> 00:01:11.430 
we'll need a public integer variable for

00:01:11.430 --> 00:01:14.630 
we'll need a public integer variable for
each<00:01:11.580> hash<00:01:12.030> that<00:01:12.330> we<00:01:12.420> want<00:01:12.630> it<00:01:12.780> to<00:01:12.810> store<00:01:13.640> we'll

00:01:14.630 --> 00:01:14.640 
each hash that we want it to store we'll

00:01:14.640 --> 00:01:16.160 
each hash that we want it to store we'll
start<00:01:15.030> with<00:01:15.240> the<00:01:15.360> states<00:01:15.630> that<00:01:15.840> the<00:01:15.960> player

00:01:16.160 --> 00:01:16.170 
start with the states that the player

00:01:16.170 --> 00:01:18.830 
start with the states that the player
uses<00:01:16.650> it's<00:01:17.369> important<00:01:18.000> for<00:01:18.240> us<00:01:18.330> to<00:01:18.479> have<00:01:18.630> good

00:01:18.830 --> 00:01:18.840 
uses it's important for us to have good

00:01:18.840 --> 00:01:20.780 
uses it's important for us to have good
naming<00:01:19.229> conventions<00:01:19.770> so<00:01:20.250> that<00:01:20.369> we<00:01:20.460> can<00:01:20.610> easily

00:01:20.780 --> 00:01:20.790 
naming conventions so that we can easily

00:01:20.790 --> 00:01:23.090 
naming conventions so that we can easily
identify<00:01:21.030> which<00:01:21.810> state<00:01:22.110> or<00:01:22.259> parameter<00:01:22.860> we're

00:01:23.090 --> 00:01:23.100 
identify which state or parameter we're

00:01:23.100 --> 00:01:25.039 
identify which state or parameter we're
referencing<00:01:23.280> the<00:01:24.090> convention<00:01:24.630> we're<00:01:24.780> going

00:01:25.039 --> 00:01:25.049 
referencing the convention we're going

00:01:25.049 --> 00:01:26.870 
referencing the convention we're going
to<00:01:25.170> use<00:01:25.409> is<00:01:25.619> the<00:01:25.950> name<00:01:26.189> of<00:01:26.220> the<00:01:26.490> state<00:01:26.729> or

00:01:26.870 --> 00:01:26.880 
to use is the name of the state or

00:01:26.880 --> 00:01:29.210 
to use is the name of the state or
parameter<00:01:27.360> followed<00:01:28.140> by<00:01:28.290> the<00:01:28.350> word<00:01:28.590> state<00:01:28.979> if

00:01:29.210 --> 00:01:29.220 
parameter followed by the word state if

00:01:29.220 --> 00:01:31.940 
parameter followed by the word state if
it's<00:01:29.490> a<00:01:29.610> state<00:01:29.640> or<00:01:30.119> the<00:01:30.869> type<00:01:31.110> of<00:01:31.140> parameter<00:01:31.770> if

00:01:31.940 --> 00:01:31.950 
it's a state or the type of parameter if

00:01:31.950 --> 00:01:34.340 
it's a state or the type of parameter if
it's<00:01:32.280> a<00:01:32.340> parameter<00:01:32.549> so<00:01:33.210> to<00:01:33.270> start<00:01:33.659> let's<00:01:34.140> make

00:01:34.340 --> 00:01:34.350 
it's a parameter so to start let's make

00:01:34.350 --> 00:01:36.289 
it's a parameter so to start let's make
the<00:01:34.500> hash<00:01:34.710> of<00:01:34.950> the<00:01:35.250> dying<00:01:35.520> state<00:01:35.880> of<00:01:36.119> the

00:01:36.289 --> 00:01:36.299 
the hash of the dying state of the

00:01:36.299 --> 00:01:39.440 
the hash of the dying state of the
player<00:01:37.159> create<00:01:38.159> a<00:01:38.220> public<00:01:38.610> integer<00:01:39.060> called

00:01:39.440 --> 00:01:39.450 
player create a public integer called

00:01:39.450 --> 00:01:41.520 
player create a public integer called
dying<00:01:39.869> state

00:01:41.520 --> 00:01:41.530 
dying state

00:01:41.530 --> 00:01:43.020 
dying state
that<00:01:41.650> we<00:01:41.710> have<00:01:41.860> the<00:01:41.979> variable<00:01:42.460> we<00:01:42.790> need<00:01:42.820> to

00:01:43.020 --> 00:01:43.030 
that we have the variable we need to

00:01:43.030 --> 00:01:45.000 
that we have the variable we need to
allocate<00:01:43.210> it<00:01:43.510> in<00:01:43.810> the<00:01:44.110> awake<00:01:44.350> function<00:01:44.380> add

00:01:45.000 --> 00:01:45.010 
allocate it in the awake function add

00:01:45.010 --> 00:01:48.359 
allocate it in the awake function add
this<00:01:45.700> now<00:01:46.200> the<00:01:47.200> function<00:01:47.619> we're<00:01:47.770> going<00:01:47.979> to<00:01:48.100> use

00:01:48.359 --> 00:01:48.369 
this now the function we're going to use

00:01:48.369 --> 00:01:50.490 
this now the function we're going to use
is<00:01:48.580> the<00:01:48.760> static<00:01:49.180> function<00:01:49.630> of<00:01:49.780> the<00:01:50.080> animator

00:01:50.490 --> 00:01:50.500 
is the static function of the animator

00:01:50.500 --> 00:01:53.130 
is the static function of the animator
class<00:01:50.799> what<00:01:51.729> that<00:01:51.909> means<00:01:52.150> is<00:01:52.360> we<00:01:52.570> can<00:01:52.600> call<00:01:52.960> the

00:01:53.130 --> 00:01:53.140 
class what that means is we can call the

00:01:53.140 --> 00:01:55.469 
class what that means is we can call the
function<00:01:53.560> from<00:01:54.009> the<00:01:54.159> class<00:01:54.369> rather<00:01:55.000> than<00:01:55.119> from

00:01:55.469 --> 00:01:55.479 
function from the class rather than from

00:01:55.479 --> 00:01:58.170 
function from the class rather than from
an<00:01:55.600> instance<00:01:56.110> of<00:01:56.290> the<00:01:56.500> animator<00:01:56.799> class<00:01:57.180> the

00:01:58.170 --> 00:01:58.180 
an instance of the animator class the

00:01:58.180 --> 00:02:01.200 
an instance of the animator class the
function<00:01:58.630> is<00:01:58.780> string<00:01:59.229> to<00:01:59.590> hash<00:01:59.830> and<00:02:00.130> takes<00:02:01.030> in

00:02:01.200 --> 00:02:01.210 
function is string to hash and takes in

00:02:01.210 --> 00:02:05.460 
function is string to hash and takes in
a<00:02:01.300> string<00:02:01.330> variable<00:02:01.720> as<00:02:02.140> the<00:02:02.409> parameter<00:02:04.470> to

00:02:05.460 --> 00:02:05.470 
a string variable as the parameter to

00:02:05.470 --> 00:02:07.590 
a string variable as the parameter to
reference<00:02:05.830> the<00:02:05.979> state<00:02:06.220> by<00:02:06.430> string<00:02:06.820> we<00:02:07.270> first

00:02:07.590 --> 00:02:07.600 
reference the state by string we first

00:02:07.600 --> 00:02:10.800 
reference the state by string we first
have<00:02:07.810> the<00:02:07.960> base<00:02:08.140> layer<00:02:09.030> then<00:02:10.030> from<00:02:10.300> that<00:02:10.479> we

00:02:10.800 --> 00:02:10.810 
have the base layer then from that we

00:02:10.810 --> 00:02:13.710 
have the base layer then from that we
access<00:02:11.170> the<00:02:11.290> state<00:02:11.560> with<00:02:11.980> the<00:02:12.069> dot<00:02:12.280> as<00:02:12.570> you<00:02:13.570> can

00:02:13.710 --> 00:02:13.720 
access the state with the dot as you can

00:02:13.720 --> 00:02:16.620 
access the state with the dot as you can
see<00:02:13.900> we<00:02:14.080> have<00:02:14.260> base<00:02:14.500> layer<00:02:14.820> dying<00:02:15.820> in<00:02:16.030> order<00:02:16.420> to

00:02:16.620 --> 00:02:16.630 
see we have base layer dying in order to

00:02:16.630 --> 00:02:18.780 
see we have base layer dying in order to
reference<00:02:17.019> this<00:02:17.170> state<00:02:17.500> as<00:02:17.739> you'll<00:02:18.489> see<00:02:18.670> if

00:02:18.780 --> 00:02:18.790 
reference this state as you'll see if

00:02:18.790 --> 00:02:20.970 
reference this state as you'll see if
you<00:02:18.940> refer<00:02:19.239> to<00:02:19.269> the<00:02:19.570> editor<00:02:19.930> on<00:02:20.080> the<00:02:20.800> base

00:02:20.970 --> 00:02:20.980 
you refer to the editor on the base

00:02:20.980 --> 00:02:25.949 
you refer to the editor on the base
layer<00:02:21.570> we<00:02:22.570> have<00:02:22.720> our<00:02:22.870> state<00:02:23.140> dying<00:02:24.660> this<00:02:25.660> code

00:02:25.949 --> 00:02:25.959 
layer we have our state dying this code

00:02:25.959 --> 00:02:28.290 
layer we have our state dying this code
refers<00:02:26.319> to<00:02:26.350> the<00:02:26.620> string<00:02:26.920> name<00:02:27.130> of<00:02:27.340> the<00:02:28.120> layer

00:02:28.290 --> 00:02:28.300 
refers to the string name of the layer

00:02:28.300 --> 00:02:30.690 
refers to the string name of the layer
itself<00:02:28.540> so<00:02:29.410> if<00:02:29.530> you've<00:02:29.680> renamed<00:02:30.160> base<00:02:30.430> layer

00:02:30.690 --> 00:02:30.700 
itself so if you've renamed base layer

00:02:30.700 --> 00:02:32.759 
itself so if you've renamed base layer
you<00:02:31.450> should<00:02:31.630> refer<00:02:31.930> to<00:02:31.959> that<00:02:32.260> particular

00:02:32.759 --> 00:02:32.769 
you should refer to that particular

00:02:32.769 --> 00:02:35.670 
you should refer to that particular
layer<00:02:33.190> rather<00:02:33.670> than<00:02:33.940> base<00:02:34.150> space<00:02:34.780> layer<00:02:35.080> the

00:02:35.670 --> 00:02:35.680 
layer rather than base space layer the

00:02:35.680 --> 00:02:37.740 
layer rather than base space layer the
process<00:02:36.100> is<00:02:36.280> very<00:02:36.519> similar<00:02:36.819> with<00:02:37.209> parameters

00:02:37.740 --> 00:02:37.750 
process is very similar with parameters

00:02:37.750 --> 00:02:40.140 
process is very similar with parameters
we<00:02:38.290> will<00:02:38.440> now<00:02:38.590> create<00:02:38.860> a<00:02:38.980> variable<00:02:39.489> for<00:02:39.790> the

00:02:40.140 --> 00:02:40.150 
we will now create a variable for the

00:02:40.150 --> 00:02:43.440 
we will now create a variable for the
dead-ball<00:02:40.690> parameter<00:02:41.380> for<00:02:41.709> our<00:02:41.800> player<00:02:42.450> using

00:02:43.440 --> 00:02:43.450 
dead-ball parameter for our player using

00:02:43.450 --> 00:02:45.210 
dead-ball parameter for our player using
our<00:02:43.569> naming<00:02:43.780> convention<00:02:44.440> it<00:02:44.620> should<00:02:45.100> be

00:02:45.210 --> 00:02:45.220 
our naming convention it should be

00:02:45.220 --> 00:02:48.070 
our naming convention it should be
called<00:02:45.430> Deadpool

00:02:48.070 --> 00:02:48.080 
called Deadpool

00:02:48.080 --> 00:02:51.080 
called Deadpool
again<00:02:49.080> the<00:02:49.260> function<00:02:49.440> call<00:02:49.860> is<00:02:50.040> the<00:02:50.220> same<00:02:50.490> but

00:02:51.080 --> 00:02:51.090 
again the function call is the same but

00:02:51.090 --> 00:02:53.120 
again the function call is the same but
since<00:02:51.360> we're<00:02:51.540> not<00:02:51.570> referencing<00:02:52.200> a<00:02:52.290> state<00:02:52.590> we

00:02:53.120 --> 00:02:53.130 
since we're not referencing a state we

00:02:53.130 --> 00:02:55.880 
since we're not referencing a state we
don't<00:02:53.370> need<00:02:53.520> the<00:02:53.670> prefix<00:02:54.120> baselayer<00:02:54.810> dot<00:02:55.230> we

00:02:55.880 --> 00:02:55.890 
don't need the prefix baselayer dot we

00:02:55.890 --> 00:02:58.820 
don't need the prefix baselayer dot we
just<00:02:56.160> need<00:02:56.310> the<00:02:56.430> name<00:02:56.460> of<00:02:56.640> the<00:02:56.790> parameter<00:02:57.830> so

00:02:58.820 --> 00:02:58.830 
just need the name of the parameter so

00:02:58.830 --> 00:03:01.910 
just need the name of the parameter so
we'd<00:02:59.010> say<00:02:59.250> dead<00:02:59.760> bull<00:03:00.060> equals<00:03:00.920> animator

00:03:01.910 --> 00:03:01.920 
we'd say dead bull equals animator

00:03:01.920 --> 00:03:04.910 
we'd say dead bull equals animator
string<00:03:02.820> to<00:03:02.970> hash<00:03:03.180> and<00:03:03.540> then<00:03:04.260> as<00:03:04.440> a<00:03:04.500> string

00:03:04.910 --> 00:03:04.920 
string to hash and then as a string

00:03:04.920 --> 00:03:07.760 
string to hash and then as a string
simply<00:03:05.580> the<00:03:05.700> word<00:03:05.850> dead<00:03:06.300> this<00:03:06.720> refers<00:03:07.140> to<00:03:07.170> the

00:03:07.760 --> 00:03:07.770 
simply the word dead this refers to the

00:03:07.770 --> 00:03:17.510 
simply the word dead this refers to the
parameter<00:03:08.340> in<00:03:08.550> our<00:03:08.760> animator<00:03:09.150> controller<00:03:16.520> now

00:03:17.510 --> 00:03:17.520 
parameter in our animator controller now

00:03:17.520 --> 00:03:19.370 
parameter in our animator controller now
let's<00:03:17.760> fill<00:03:17.940> out<00:03:18.060> the<00:03:18.180> rest

00:03:19.370 --> 00:03:19.380 
let's fill out the rest

00:03:19.380 --> 00:03:21.350 
let's fill out the rest
we'll<00:03:19.830> need<00:03:19.950> for<00:03:20.190> our<00:03:20.220> game<00:03:20.550> we<00:03:20.970> will<00:03:21.090> fast

00:03:21.350 --> 00:03:21.360 
we'll need for our game we will fast

00:03:21.360 --> 00:03:23.120 
we'll need for our game we will fast
forward<00:03:21.690> these<00:03:21.990> so<00:03:22.410> that<00:03:22.440> you<00:03:22.560> can<00:03:22.770> see<00:03:22.950> them

00:03:23.120 --> 00:03:23.130 
forward these so that you can see them

00:03:23.130 --> 00:03:25.370 
forward these so that you can see them
written<00:03:23.310> out<00:03:23.630> once<00:03:24.630> we're<00:03:24.810> finished<00:03:24.960> writing

00:03:25.370 --> 00:03:25.380 
written out once we're finished writing

00:03:25.380 --> 00:03:27.800 
written out once we're finished writing
pause<00:03:26.130> the<00:03:26.340> video<00:03:26.580> and<00:03:26.820> copy<00:03:27.120> these<00:03:27.360> into<00:03:27.420> your

00:03:27.800 --> 00:03:27.810 
pause the video and copy these into your

00:03:27.810 --> 00:03:33.680 
pause the video and copy these into your
own<00:03:27.960> script<00:03:31.520> our<00:03:32.520> references<00:03:33.240> are<00:03:33.450> now

00:03:33.680 --> 00:03:33.690 
own script our references are now

00:03:33.690 --> 00:03:36.200 
own script our references are now
complete<00:03:34.140> pause<00:03:34.710> the<00:03:34.920> video<00:03:35.160> and<00:03:35.400> ensure<00:03:36.030> that

00:03:36.200 --> 00:03:36.210 
complete pause the video and ensure that

00:03:36.210 --> 00:03:38.990 
complete pause the video and ensure that
yours<00:03:36.480> match<00:03:36.750> this<00:03:37.020> script<00:03:37.670> when<00:03:38.670> you're<00:03:38.790> done

00:03:38.990 --> 00:03:39.000 
yours match this script when you're done

00:03:39.000 --> 00:03:42.160 
yours match this script when you're done
save<00:03:39.690> the<00:03:39.900> script<00:03:40.110> and<00:03:40.260> return<00:03:40.410> to<00:03:41.010> the<00:03:41.100> editor

00:03:42.160 --> 00:03:42.170 
save the script and return to the editor

00:03:42.170 --> 00:03:44.930 
save the script and return to the editor
the<00:03:43.170> game<00:03:43.380> controller<00:03:43.830> game<00:03:44.130> object<00:03:44.550> has<00:03:44.760> been

00:03:44.930 --> 00:03:44.940 
the game controller game object has been

00:03:44.940 --> 00:03:47.090 
the game controller game object has been
changed<00:03:45.330> by<00:03:45.510> adding<00:03:45.660> this<00:03:45.930> script<00:03:46.230> to<00:03:46.440> it<00:03:46.560> this

00:03:47.090 --> 00:03:47.100 
changed by adding this script to it this

00:03:47.100 --> 00:03:48.770 
changed by adding this script to it this
object<00:03:47.340> is<00:03:47.640> saved<00:03:47.910> in<00:03:48.060> our<00:03:48.150> project<00:03:48.600> as<00:03:48.750> a

00:03:48.770 --> 00:03:48.780 
object is saved in our project as a

00:03:48.780 --> 00:03:51.440 
object is saved in our project as a
prefab<00:03:49.260> so<00:03:49.950> be<00:03:50.070> sure<00:03:50.100> to<00:03:50.310> click<00:03:50.580> apply<00:03:50.910> at<00:03:51.270> the

00:03:51.440 --> 00:03:51.450 
prefab so be sure to click apply at the

00:03:51.450 --> 00:03:53.540 
prefab so be sure to click apply at the
top<00:03:51.690> in<00:03:51.900> order<00:03:52.350> to<00:03:52.470> save<00:03:52.710> this<00:03:52.890> change<00:03:53.190> out<00:03:53.490> to

00:03:53.540 --> 00:03:53.550 
top in order to save this change out to

00:03:53.550 --> 00:03:57.350 
top in order to save this change out to
the<00:03:53.790> prefab<00:03:55.130> to<00:03:56.130> finish<00:03:56.430> let's<00:03:56.820> tidy<00:03:57.150> this

00:03:57.350 --> 00:03:57.360 
the prefab to finish let's tidy this

00:03:57.360 --> 00:03:58.940 
the prefab to finish let's tidy this
script<00:03:57.720> into<00:03:58.170> the<00:03:58.290> game<00:03:58.470> controller

00:03:58.940 --> 00:03:58.950 
script into the game controller

00:03:58.950 --> 00:04:02.180 
script into the game controller
subfolder<00:03:59.820> of<00:03:59.940> the<00:04:00.210> scripts<00:04:00.600> folder<00:04:01.190> open

00:04:02.180 --> 00:04:02.190 
subfolder of the scripts folder open

00:04:02.190 --> 00:04:05.060 
subfolder of the scripts folder open
scripts<00:04:02.640> and<00:04:02.820> drag<00:04:03.660> and<00:04:03.840> drop<00:04:04.020> hash<00:04:04.290> IDs<00:04:04.740> into

00:04:05.060 --> 00:04:05.070 
scripts and drag and drop hash IDs into

00:04:05.070 --> 00:04:09.140 
scripts and drag and drop hash IDs into
the<00:04:05.700> game<00:04:05.880> controller<00:04:06.360> scripts<00:04:06.960> folder<00:04:08.150> don't

00:04:09.140 --> 00:04:09.150 
the game controller scripts folder don't

00:04:09.150 --> 00:04:10.940 
the game controller scripts folder don't
forget<00:04:09.420> to<00:04:09.600> save<00:04:09.810> your<00:04:09.840> scene<00:04:10.230> and<00:04:10.380> save<00:04:10.770> your

00:04:10.940 --> 00:04:10.950 
forget to save your scene and save your

00:04:10.950 --> 00:04:16.550 
forget to save your scene and save your
project<00:04:12.920> in<00:04:14.510> the<00:04:15.510> next<00:04:15.750> assignment<00:04:16.049> we'll

00:04:16.550 --> 00:04:16.560 
project in the next assignment we'll

00:04:16.560 --> 00:04:18.350 
project in the next assignment we'll
move<00:04:16.739> on<00:04:16.950> to<00:04:17.070> creating<00:04:17.430> the<00:04:17.670> player<00:04:17.880> movement

00:04:18.350 --> 00:04:18.360 
move on to creating the player movement

00:04:18.360 --> 00:04:20.390 
move on to creating the player movement
script

