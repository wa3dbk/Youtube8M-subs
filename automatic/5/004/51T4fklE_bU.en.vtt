WEBVTT
Kind: captions
Language: en

00:00:25.519 --> 00:00:29.580
 they are simple movements that can 

00:00:27.539 --> 00:00:31.289
 however reach a certain level of 

00:00:29.580 --> 00:00:33.660
 complexity in any system of 

00:00:31.289 --> 00:00:35.910
 particular automation when the systems 

00:00:33.660 --> 00:00:37.950
 to manage are more than one here is how 

00:00:35.910 --> 00:00:39.870
 simple I will create a new project 

00:00:37.950 --> 00:00:41.219
 we will accept the default name in 

00:00:39.870 --> 00:00:43.200
 how we are creating a container 

00:00:41.219 --> 00:00:44.700
 projects in which everything will converge 

00:00:43.200 --> 00:00:46.140
 hardware and software 

00:00:44.700 --> 00:00:47.910
 the second step consists of 

00:00:46.140 --> 00:00:49.050
 configure add a new one 

00:00:47.910 --> 00:00:51.620
 device 

00:00:49.050 --> 00:00:55.320
 I will choose an unspecified cpi them 

00:00:51.620 --> 00:00:57.120
 7.200 cpi I click add then 

00:00:55.320 --> 00:00:59.010
 now I will take container projects and the 

00:00:57.120 --> 00:01:00.539
 hardware container I will match it for 

00:00:59.010 --> 00:01:04.170
 start the project from which 

00:01:00.539 --> 00:01:05.549
 start now in the empty box we have 

00:01:04.170 --> 00:01:07.350
 the actual hardware 

00:01:05.549 --> 00:01:11.280
 I open the box and in the popup window 

00:01:07.350 --> 00:01:13.320
 I click on detect with this action 

00:01:11.280 --> 00:01:14.939
 network scan starts for 

00:01:13.320 --> 00:01:18.600
 physically find the hardware 

00:01:14.939 --> 00:01:20.220
 here it is by clicking on flash led I can a 

00:01:18.600 --> 00:01:22.500
 understand if the hardware was found 

00:01:20.220 --> 00:01:25.259
 correct perfect this is the hardware 

00:01:22.500 --> 00:01:27.869
 who wanted to use I click of 

00:01:25.259 --> 00:01:29.939
 new on find this time I will enter e 

00:01:27.869 --> 00:01:31.619
 scan rho ynet prof to find 

00:01:29.939 --> 00:01:34.170
 the most exact c and all the 

00:01:31.619 --> 00:01:36.329
 corresponding Ipo cards together with 

00:01:34.170 --> 00:01:38.280
 communication cards to report them 

00:01:36.329 --> 00:01:39.450
 in the project to start the 

00:01:38.280 --> 00:01:40.650
 programming 

00:01:39.450 --> 00:01:42.420
 the advantage is that we don't have to 

00:01:40.650 --> 00:01:44.399
 use a hardware catalog for 

00:01:42.420 --> 00:01:47.130
 select each individual component 

00:01:44.399 --> 00:01:49.259
 i can scan it find it take it 

00:01:47.130 --> 00:01:50.159
 in the project without difficulty passing 

00:01:49.259 --> 00:01:52.020
 following 

00:01:50.159 --> 00:01:53.520
 what happens if we want to change one 

00:01:52.020 --> 00:01:54.640
 ownership of this hardware 

00:01:53.520 --> 00:01:56.380
 let's do it 

00:01:54.640 --> 00:01:58.810
 with the right mouse button I do 

00:01:56.380 --> 00:02:00.820
 Click on this analog card and then on 

00:01:58.810 --> 00:02:03.100
 properties as you see for this tab 

00:02:00.820 --> 00:02:05.920
 analogue a voltage range between 

00:02:03.100 --> 00:02:07.240
 more and less ten times I modify more or 

00:02:05.920 --> 00:02:09.280
 minus five times 

00:02:07.240 --> 00:02:11.530
 highlight the cpi and click 

00:02:09.280 --> 00:02:13.360
 download now I take the configuration 

00:02:11.530 --> 00:02:15.340
 hardware including properties 

00:02:13.360 --> 00:02:17.880
 modified and unloaded into hardware 

00:02:15.340 --> 00:02:20.080
 in order to make it operational 

00:02:17.880 --> 00:02:20.500
 compilation within the project in 

00:02:20.080 --> 00:02:22.630
 course 

00:02:20.500 --> 00:02:24.250
 I click charge so that 

00:02:22.630 --> 00:02:26.709
 happens when loading in the c plus 

00:02:24.250 --> 00:02:29.440
 actual finished upload I can 

00:02:26.709 --> 00:02:32.560
 click on the end button on start all 

00:02:29.440 --> 00:02:34.180
 end and at this point all the green leds 

00:02:32.560 --> 00:02:39.190
 are turned on for this component 

00:02:34.180 --> 00:02:40.870
 hardware now remember I changed one 

00:02:39.190 --> 00:02:42.940
 of the properties of the analog board 

00:02:40.870 --> 00:02:45.100
 so I could actually activate it 

00:02:42.940 --> 00:02:46.840
 this analog potentiometer and how 

00:02:45.100 --> 00:02:49.510
 you will see we actually have some 

00:02:46.840 --> 00:02:52.150
 red LEDs in this tab 

00:02:49.510 --> 00:02:54.360
 I've exceeded 5 volts one thing I can 

00:02:52.150 --> 00:02:56.230
 do it now and go online with the cpi 

00:02:54.360 --> 00:03:00.670
 selecting it and clicking on 

00:02:56.230 --> 00:03:02.380
 online button now that we have the 

00:03:00.670 --> 00:03:04.269
 orange bars on the header of 

00:03:02.380 --> 00:03:06.640
 software we can say we are online 

00:03:04.269 --> 00:03:08.790
 with this hardware configuration and here 

00:03:06.640 --> 00:03:10.959
 you can see all the red keys 

00:03:08.790 --> 00:03:12.910
 can go to module level e 

00:03:10.959 --> 00:03:15.519
 see that there is an activity for this 

00:03:12.910 --> 00:03:17.079
 analog card at this point I can 

00:03:15.519 --> 00:03:19.209
 double click on online e 

00:03:17.079 --> 00:03:21.310
 diagnostics and go to buffer 

00:03:19.209 --> 00:03:22.989
 diagnosis and how you see from the key 

00:03:21.310 --> 00:03:25.030
 we have exceeded a respect limit 

00:03:22.989 --> 00:03:29.709
 to the actual output of this card 

00:03:25.030 --> 00:03:30.670
 analogue then if I go back to 

00:03:29.709 --> 00:03:32.860
 solve the problem 

00:03:30.670 --> 00:03:34.570
 turning the potentiometer again appears 

00:03:32.860 --> 00:03:36.940
 an outgoing message and the problem yes 

00:03:34.570 --> 00:03:38.590
 fundamentally solves this 

00:03:36.940 --> 00:03:41.079
 means that we have the capabilities for 

00:03:38.590 --> 00:03:42.760
 create online diagnostics for the hardware 

00:03:41.079 --> 00:03:44.950
 and that we must not do anything for 

00:03:42.760 --> 00:03:46.329
 get them you don't have to program in 

00:03:44.950 --> 00:03:49.810
 choose no option in the menu 

00:03:46.329 --> 00:03:51.700
 they are given automatically by the box 

00:03:49.810 --> 00:03:54.430
 let's go back to offline mode with the cpi 

00:03:51.700 --> 00:03:56.799
 I will close this screen and return to the 

00:03:54.430 --> 00:03:57.940
 project visualization and the 

00:03:56.799 --> 00:04:01.239
 programming 

00:03:57.940 --> 00:04:03.790
 back to top we start right away 

00:04:01.239 --> 00:04:06.489
 main lobby passage 

00:04:03.790 --> 00:04:07.330
 as you can see if I go here he started moving i 

00:04:06.489 --> 00:04:08.260
 dip selectors 

00:04:07.330 --> 00:04:09.970
 there is no absolute 

00:04:08.260 --> 00:04:11.920
 mind any program in this c more 

00:04:09.970 --> 00:04:14.260
 specific it is only one 

00:04:11.920 --> 00:04:16.120
 hardware configuration we choose a 

00:04:14.260 --> 00:04:18.370
 normally open contact one 

00:04:16.120 --> 00:04:19.750
 normally closed one coil another 

00:04:18.370 --> 00:04:23.889
 normally open contact e 

00:04:19.750 --> 00:04:25.750
 we connect there between them or so created a 

00:04:23.889 --> 00:04:27.340
 auto circuit retained to be used in 

00:04:25.750 --> 00:04:29.820
 continuation in the context of the 

00:04:27.340 --> 00:04:32.740
 design of automation systems 

00:04:29.820 --> 00:04:34.270
 how I behave with variables 

00:04:32.740 --> 00:04:36.699
 let's start planning the whole lot 

00:04:34.270 --> 00:04:39.729
 quickly I will call start the first is 

00:04:36.699 --> 00:04:48.160
 engine one the next stop and then 

00:04:39.729 --> 00:04:50.169
 for the motor coil 1 circuit 

00:04:48.160 --> 00:04:51.070
 auxiliary and made the variables are 

00:04:50.169 --> 00:04:52.630
 been created 

00:04:51.070 --> 00:04:54.460
 however I am not yet paired 

00:04:52.630 --> 00:04:56.680
 to hardware the next thing I can 

00:04:54.460 --> 00:05:00.340
 to do is to split the screen highlight 

00:04:56.680 --> 00:05:02.199
 the cpi go up 400 percent and how 

00:05:00.340 --> 00:05:08.949
 you see here tacit more has bits 

00:05:02.199 --> 00:05:10.660
 associated with well guessed entries 

00:05:08.949 --> 00:05:13.270
 a little i can drag start 

00:05:10.660 --> 00:05:18.030
 directly in that position 

00:05:13.270 --> 00:05:20.349
 here there is start here there is stop 

00:05:18.030 --> 00:05:22.360
 here is the engine 1 

00:05:20.349 --> 00:05:23.380
 the code is finished I did it all in 

00:05:22.360 --> 00:05:25.300
 few seconds 

00:05:23.380 --> 00:05:27.070
 I can drag the contents between different 

00:05:25.300 --> 00:05:30.070
 and this is why you return efficiency 

00:05:27.070 --> 00:05:32.199
 the next thing I can design 

00:05:30.070 --> 00:05:34.330
 do is download this program in the 

00:05:32.199 --> 00:05:36.340
 gpu selecting it and clicking the 

00:05:34.330 --> 00:05:38.440
 arrow button now in progress la 

00:05:36.340 --> 00:05:41.050
 background compilation I click 

00:05:38.440 --> 00:05:43.630
 on the charge button and will be started on 

00:05:41.050 --> 00:05:46.000
 loading in c more then i do 

00:05:43.630 --> 00:05:47.860
 click on end once this led 

00:05:46.000 --> 00:05:49.750
 turns green you can see that 

00:05:47.860 --> 00:05:52.720
 car circuit standard deemed e 

00:05:49.750 --> 00:05:54.099
 complete we created circuit 

00:05:52.720 --> 00:05:55.180
 sealed standard 

00:05:54.099 --> 00:05:59.080
 what to say about the functional blocks 

00:05:55.180 --> 00:06:01.300
 defined by the user from the point of view 

00:05:59.080 --> 00:06:03.340
 of a global library we can create 

00:06:01.300 --> 00:06:05.880
 whatever we want level of 

00:06:03.340 --> 00:06:08.139
 programming add the library 

00:06:05.880 --> 00:06:10.360
 use it endlessly this way 

00:06:08.139 --> 00:06:12.909
 as part of your daily work 

00:06:10.360 --> 00:06:14.710
 you can create design efficiency 

00:06:12.909 --> 00:06:15.669
 let's do it let me close this 

00:06:14.710 --> 00:06:19.040
 screen 

00:06:15.669 --> 00:06:20.419
 I click free and drag and see 

00:06:19.040 --> 00:06:23.060
 that I have something called i 

00:06:20.419 --> 00:06:24.320
 simple acts movements 1 

00:06:23.060 --> 00:06:27.320
 here is the control block of the 

00:06:24.320 --> 00:06:29.690
 cursor drags it into the project may 

00:06:27.320 --> 00:06:30.440
 accept datablog for defined not us 

00:06:29.690 --> 00:06:32.120
 are problems 

00:06:30.440 --> 00:06:34.160
 the next thing I can do is 

00:06:32.120 --> 00:06:36.710
 take a function block the variables 

00:06:34.160 --> 00:06:38.870
 potentially associated and continue to 

00:06:36.710 --> 00:06:40.280
 reuse them even saving them in the 

00:06:38.870 --> 00:06:42.290
 global library 

00:06:40.280 --> 00:06:44.030
 now at ferrer or control variables 

00:06:42.290 --> 00:06:46.850
 of the cursor and drag them into the 

00:06:44.030 --> 00:06:47.960
 ps variables this point we have the 

00:06:46.850 --> 00:06:51.590
 variables and the block 

00:06:47.960 --> 00:06:53.210
 I just have to associate them and then proceed 

00:06:51.590 --> 00:06:55.220
 this is the right cursor this is the 

00:06:53.210 --> 00:06:57.139
 left cursor 

00:06:55.220 --> 00:07:01.610
 these are the commands in the sense 

00:06:57.139 --> 00:07:03.710
 counterclockwise and new cursor then 

00:07:01.610 --> 00:07:05.450
 within the same editor I can 

00:07:03.710 --> 00:07:07.520
 grab the actual coil from the 

00:07:05.450 --> 00:07:10.370
 self held circuit takes the 

00:07:07.520 --> 00:07:13.120
 engine control one drag it down 

00:07:10.370 --> 00:07:15.410
 up to start in fact I can use 

00:07:13.120 --> 00:07:18.110
 interoperability between the lines of the 

00:07:15.410 --> 00:07:20.330
 code in a single editor 

00:07:18.110 --> 00:07:22.100
 the code is complete if I select of 

00:07:20.330 --> 00:07:24.080
 new cpi by clicking on the button 

00:07:22.100 --> 00:07:24.740
 download will be filled in 

00:07:24.080 --> 00:07:27.110
 background 

00:07:24.740 --> 00:07:29.900
 I can complete the compilation 

00:07:27.110 --> 00:07:32.090
 click on upload the code at this point 

00:07:29.900 --> 00:07:36.770
 will actually be loaded into the GPU 

00:07:32.090 --> 00:07:38.780
 click on end a system at this point 

00:07:36.770 --> 00:07:41.090
 slider control perfectly 

00:07:38.780 --> 00:07:43.120
 functioning obtained in less than ten 

00:07:41.090 --> 00:07:43.120
 minutes 

00:07:44.000 --> 00:07:47.889
 this is what design efficiency is 

