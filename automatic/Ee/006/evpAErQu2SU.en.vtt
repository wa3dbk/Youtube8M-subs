WEBVTT
Kind: captions
Language: en

00:00:09.420 --> 00:00:13.950 

you

00:00:13.950 --> 00:00:13.960 

00:00:13.960 --> 00:00:16.870 

bounding<00:00:14.960> box<00:00:15.170> collision<00:00:15.799> detection<00:00:16.160> is<00:00:16.490> just

00:00:16.870 --> 00:00:16.880 
bounding box collision detection is just

00:00:16.880 --> 00:00:18.820 
bounding box collision detection is just
one<00:00:17.119> of<00:00:17.150> many<00:00:17.450> ways<00:00:17.660> to<00:00:17.720> detect<00:00:18.290> collision

00:00:18.820 --> 00:00:18.830 
one of many ways to detect collision

00:00:18.830 --> 00:00:21.790 
one of many ways to detect collision
between<00:00:18.980> objects<00:00:19.640> it<00:00:20.330> consists<00:00:21.230> of<00:00:21.259> having<00:00:21.470> a

00:00:21.790 --> 00:00:21.800 
between objects it consists of having a

00:00:21.800 --> 00:00:23.710 
between objects it consists of having a
collidable<00:00:22.250> object<00:00:22.820> have<00:00:23.180> a<00:00:23.210> rectangular

00:00:23.710 --> 00:00:23.720 
collidable object have a rectangular

00:00:23.720 --> 00:00:26.830 
collidable object have a rectangular
region<00:00:24.080> that<00:00:24.590> is<00:00:24.740> solid<00:00:25.150> this<00:00:26.150> can<00:00:26.450> either<00:00:26.599> be

00:00:26.830 --> 00:00:26.840 
region that is solid this can either be

00:00:26.840 --> 00:00:29.050 
region that is solid this can either be
the<00:00:26.869> entire<00:00:27.380> picture<00:00:27.650> but<00:00:28.640> it's<00:00:28.820> probably

00:00:29.050 --> 00:00:29.060 
the entire picture but it's probably

00:00:29.060 --> 00:00:31.060 
the entire picture but it's probably
better<00:00:29.480> if<00:00:29.720> it's<00:00:29.869> a<00:00:29.960> smaller<00:00:30.260> region<00:00:30.529> of<00:00:30.890> the

00:00:31.060 --> 00:00:31.070 
better if it's a smaller region of the

00:00:31.070 --> 00:00:34.210 
better if it's a smaller region of the
image<00:00:31.750> your<00:00:32.750> bounding<00:00:33.110> box<00:00:33.320> logic<00:00:33.800> will<00:00:34.070> work

00:00:34.210 --> 00:00:34.220 
image your bounding box logic will work

00:00:34.220 --> 00:00:34.930 
image your bounding box logic will work
like<00:00:34.460> this

00:00:34.930 --> 00:00:34.940 
like this

00:00:34.940 --> 00:00:38.619 
like this
if<00:00:35.650> the<00:00:36.650> left<00:00:36.860> edge<00:00:37.160> of<00:00:37.400> the<00:00:37.489> first<00:00:37.879> object<00:00:38.150> is

00:00:38.619 --> 00:00:38.629 
if the left edge of the first object is

00:00:38.629 --> 00:00:40.780 
if the left edge of the first object is
less<00:00:39.170> than<00:00:39.440> the<00:00:39.590> right<00:00:39.739> edge<00:00:39.980> of<00:00:40.250> the<00:00:40.430> second

00:00:40.780 --> 00:00:40.790 
less than the right edge of the second

00:00:40.790 --> 00:00:44.170 
less than the right edge of the second
object<00:00:40.940> and<00:00:41.650> right<00:00:42.650> one<00:00:43.040> is<00:00:43.430> greater<00:00:44.089> than

00:00:44.170 --> 00:00:44.180 
object and right one is greater than

00:00:44.180 --> 00:00:47.889 
object and right one is greater than
left<00:00:44.540> -<00:00:44.809> and<00:00:45.160> top<00:00:46.160> one<00:00:46.460> is<00:00:46.760> less<00:00:47.149> than<00:00:47.329> bottom<00:00:47.719> -

00:00:47.889 --> 00:00:47.899 
left - and top one is less than bottom -

00:00:47.899 --> 00:00:50.740 
left - and top one is less than bottom -
and<00:00:48.370> bottom<00:00:49.370> one<00:00:49.550> is<00:00:49.850> greater<00:00:50.120> than<00:00:50.329> top<00:00:50.570> to

00:00:50.740 --> 00:00:50.750 
and bottom one is greater than top to

00:00:50.750 --> 00:00:53.369 
and bottom one is greater than top to
you<00:00:50.870> then<00:00:51.559> there<00:00:52.039> is<00:00:52.250> a<00:00:52.280> collision

00:00:53.369 --> 00:00:53.379 
you then there is a collision

00:00:53.379 --> 00:00:55.450 
you then there is a collision
you<00:00:54.379> should<00:00:54.530> probably<00:00:54.680> write<00:00:55.129> a<00:00:55.160> function

00:00:55.450 --> 00:00:55.460 
you should probably write a function

00:00:55.460 --> 00:00:58.540 
you should probably write a function
either<00:00:56.120> in<00:00:56.450> main<00:00:56.660> dot<00:00:56.870> CPP<00:00:57.379> or<00:00:58.129> in<00:00:58.250> its<00:00:58.399> own

00:00:58.540 --> 00:00:58.550 
either in main dot CPP or in its own

00:00:58.550 --> 00:01:00.790 
either in main dot CPP or in its own
header<00:00:58.789> file<00:00:59.120> to<00:00:59.719> return<00:00:59.989> a<00:01:00.020> bool<00:01:00.350> if<00:01:00.559> there<00:01:00.710> is

00:01:00.790 --> 00:01:00.800 
header file to return a bool if there is

00:01:00.800 --> 00:01:02.260 
header file to return a bool if there is
a<00:01:00.829> collision<00:01:01.039> instead<00:01:01.699> of<00:01:01.789> having<00:01:02.000> the

00:01:02.260 --> 00:01:02.270 
a collision instead of having the

00:01:02.270 --> 00:01:08.410 
a collision instead of having the
function<00:01:02.449> be<00:01:02.719> a<00:01:02.750> part<00:01:03.020> of<00:01:03.140> a<00:01:03.379> class<00:01:07.420> the

00:01:08.410 --> 00:01:08.420 
function be a part of a class the

00:01:08.420 --> 00:01:10.450 
function be a part of a class the
collision<00:01:08.750> code<00:01:09.140> will<00:01:09.470> be<00:01:09.500> almost<00:01:09.950> identical

00:01:10.450 --> 00:01:10.460 
collision code will be almost identical

00:01:10.460 --> 00:01:11.850 
collision code will be almost identical
except<00:01:10.940> for<00:01:11.090> one<00:01:11.240> thing

00:01:11.850 --> 00:01:11.860 
except for one thing

00:01:11.860 --> 00:01:16.120 
except for one thing
STL<00:01:12.860> has<00:01:13.310> a<00:01:13.580> CL<00:01:13.910> rect<00:01:14.289> but<00:01:15.289> an<00:01:15.380> oligo<00:01:15.619> you<00:01:15.979> have

00:01:16.120 --> 00:01:16.130 
STL has a CL rect but an oligo you have

00:01:16.130 --> 00:01:17.949 
STL has a CL rect but an oligo you have
to<00:01:16.280> write<00:01:16.430> your<00:01:16.550> own<00:01:16.610> rectangle<00:01:17.420> struct<00:01:17.780> that

00:01:17.949 --> 00:01:17.959 
to write your own rectangle struct that

00:01:17.959 --> 00:01:21.160 
to write your own rectangle struct that
looks<00:01:18.229> something<00:01:18.470> like<00:01:18.590> this<00:01:18.920> our<00:01:20.170> is

00:01:21.160 --> 00:01:21.170 
looks something like this our is

00:01:21.170 --> 00:01:22.900 
looks something like this our is
collision<00:01:21.619> function<00:01:22.160> will<00:01:22.490> take<00:01:22.700> two

00:01:22.900 --> 00:01:22.910 
collision function will take two

00:01:22.910 --> 00:01:25.559 
collision function will take two
rectangles<00:01:23.539> or<00:01:23.780> two<00:01:24.020> STL<00:01:24.530> rect<00:01:24.800> items<00:01:25.130> and

00:01:25.559 --> 00:01:25.569 
rectangles or two STL rect items and

00:01:25.569 --> 00:01:29.469 
rectangles or two STL rect items and
will<00:01:26.569> return<00:01:26.840> a<00:01:26.899> bool<00:01:27.670> first<00:01:28.670> off<00:01:28.880> however<00:01:29.119> you

00:01:29.469 --> 00:01:29.479 
will return a bool first off however you

00:01:29.479 --> 00:01:30.790 
will return a bool first off however you
need<00:01:29.599> to<00:01:29.720> make<00:01:29.869> sure<00:01:29.899> your<00:01:30.200> character<00:01:30.590> and

00:01:30.790 --> 00:01:30.800 
need to make sure your character and

00:01:30.800 --> 00:01:32.260 
need to make sure your character and
other<00:01:30.979> objects<00:01:31.490> in<00:01:31.670> the<00:01:31.759> game<00:01:31.910> have<00:01:32.240> a

00:01:32.260 --> 00:01:32.270 
other objects in the game have a

00:01:32.270 --> 00:01:35.199 
other objects in the game have a
collision<00:01:32.599> region<00:01:33.080> rectangle<00:01:33.819> you<00:01:34.819> will<00:01:34.970> also

00:01:35.199 --> 00:01:35.209 
collision region rectangle you will also

00:01:35.209 --> 00:01:36.880 
collision region rectangle you will also
make<00:01:35.390> sure<00:01:35.420> that<00:01:35.929> you<00:01:36.020> get<00:01:36.140> functions<00:01:36.709> for

00:01:36.880 --> 00:01:36.890 
make sure that you get functions for

00:01:36.890 --> 00:01:38.469 
make sure that you get functions for
this<00:01:36.950> rectangle<00:01:37.190> to<00:01:37.580> return<00:01:37.849> the<00:01:38.000> rectangles

00:01:38.469 --> 00:01:38.479 
this rectangle to return the rectangles

00:01:38.479 --> 00:01:40.900 
this rectangle to return the rectangles
X<00:01:38.690> plus<00:01:39.410> the<00:01:39.590> object's<00:01:40.009> current<00:01:40.310> X<00:01:40.520> location

00:01:40.900 --> 00:01:40.910 
X plus the object's current X location

00:01:40.910 --> 00:01:45.040 
X plus the object's current X location
and<00:01:41.360> the<00:01:42.259> same<00:01:42.470> for<00:01:42.679> the<00:01:42.770> Y<00:01:43.539> this<00:01:44.539> is<00:01:44.599> because

00:01:45.040 --> 00:01:45.050 
and the same for the Y this is because

00:01:45.050 --> 00:01:46.779 
and the same for the Y this is because
your<00:01:45.170> region<00:01:45.530> will<00:01:45.560> be<00:01:45.800> somewhere<00:01:46.099> from<00:01:46.340> 0<00:01:46.640> to

00:01:46.779 --> 00:01:46.789 
your region will be somewhere from 0 to

00:01:46.789 --> 00:01:50.650 
your region will be somewhere from 0 to
32<00:01:47.090> if<00:01:47.479> your<00:01:47.750> images<00:01:48.319> of<00:01:48.530> with<00:01:48.800> 32<00:01:49.369> and<00:01:49.670> will

00:01:50.650 --> 00:01:50.660 
32 if your images of with 32 and will

00:01:50.660 --> 00:01:52.839 
32 if your images of with 32 and will
need<00:01:50.869> to<00:01:50.929> return<00:01:51.319> the<00:01:51.560> region<00:01:51.979> plus<00:01:52.550> the

00:01:52.839 --> 00:01:52.849 
need to return the region plus the

00:01:52.849 --> 00:01:56.080 
need to return the region plus the
location<00:01:53.709> here's<00:01:54.709> some<00:01:54.950> sample<00:01:55.130> code<00:01:55.580> for<00:01:55.819> the

00:01:56.080 --> 00:01:56.090 
location here's some sample code for the

00:01:56.090 --> 00:02:03.729 
location here's some sample code for the
characters<00:01:56.450> regions<00:02:02.319> will<00:02:03.319> have<00:02:03.349> two

00:02:03.729 --> 00:02:03.739 
characters regions will have two

00:02:03.739 --> 00:02:05.469 
characters regions will have two
rectangles<00:02:03.950> in<00:02:04.520> the<00:02:04.670> character<00:02:05.090> and<00:02:05.239> stick

00:02:05.469 --> 00:02:05.479 
rectangles in the character and stick

00:02:05.479 --> 00:02:07.809 
rectangles in the character and stick
classes<00:02:05.929> one<00:02:06.739> for<00:02:06.979> their<00:02:07.099> coordinates<00:02:07.520> and

00:02:07.809 --> 00:02:07.819 
classes one for their coordinates and

00:02:07.819 --> 00:02:10.300 
classes one for their coordinates and
one<00:02:08.090> for<00:02:08.270> their<00:02:08.390> collision<00:02:08.780> region<00:02:09.129> we<00:02:10.129> will

00:02:10.300 --> 00:02:10.310 
one for their collision region we will

00:02:10.310 --> 00:02:11.800 
one for their collision region we will
also<00:02:10.489> write<00:02:10.819> a<00:02:10.849> function<00:02:11.150> to<00:02:11.480> return<00:02:11.750> a

00:02:11.800 --> 00:02:11.810 
also write a function to return a

00:02:11.810 --> 00:02:14.170 
also write a function to return a
rectangle<00:02:12.410> which<00:02:12.920> is<00:02:12.950> the<00:02:13.280> region<00:02:13.670> dimensions

00:02:14.170 --> 00:02:14.180 
rectangle which is the region dimensions

00:02:14.180 --> 00:02:17.949 
rectangle which is the region dimensions
plus<00:02:14.720> the<00:02:15.050> object's<00:02:15.590> coordinates<00:02:16.540> we<00:02:17.540> do<00:02:17.720> this

00:02:17.949 --> 00:02:17.959 
plus the object's coordinates we do this

00:02:17.959 --> 00:02:20.290 
plus the object's coordinates we do this
because<00:02:18.379> the<00:02:18.950> collision<00:02:19.430> region<00:02:19.790> rectangle

00:02:20.290 --> 00:02:20.300 
because the collision region rectangle

00:02:20.300 --> 00:02:22.660 
because the collision region rectangle
are<00:02:20.510> relative<00:02:20.959> to<00:02:21.170> the<00:02:21.290> actual<00:02:21.620> image<00:02:21.950> rather

00:02:22.660 --> 00:02:22.670 
are relative to the actual image rather

00:02:22.670 --> 00:02:25.540 
are relative to the actual image rather
than<00:02:22.850> relative<00:02:23.390> to<00:02:23.570> the<00:02:23.690> screen<00:02:23.990> and<00:02:24.460> here<00:02:25.460> is

00:02:25.540 --> 00:02:25.550 
than relative to the screen and here is

00:02:25.550 --> 00:02:30.380 
than relative to the screen and here is
how<00:02:25.730> our<00:02:26.030> collision<00:02:26.390> code

00:02:30.380 --> 00:02:30.390 

00:02:30.390 --> 00:02:33.449 

we<00:02:31.390> are<00:02:31.510> ready<00:02:31.750> to<00:02:31.930> check<00:02:32.109> for<00:02:32.349> collision<00:02:32.739> we

00:02:33.449 --> 00:02:33.459 
we are ready to check for collision we

00:02:33.459 --> 00:02:35.819 
we are ready to check for collision we
will<00:02:33.640> pass<00:02:33.849> player<00:02:34.540> dot<00:02:34.959> region<00:02:35.379> coordinates

00:02:35.819 --> 00:02:35.829 
will pass player dot region coordinates

00:02:35.829 --> 00:02:38.429 
will pass player dot region coordinates
and<00:02:36.099> stick<00:02:36.879> that<00:02:37.090> region<00:02:37.450> coordinates<00:02:37.959> to<00:02:38.409> the

00:02:38.429 --> 00:02:38.439 
and stick that region coordinates to the

00:02:38.439 --> 00:02:41.429 
and stick that region coordinates to the
is<00:02:38.709> collision<00:02:39.280> function<00:02:39.930> from<00:02:40.930> here<00:02:41.200> it

00:02:41.429 --> 00:02:41.439 
is collision function from here it

00:02:41.439 --> 00:02:43.410 
is collision function from here it
compares<00:02:41.950> the<00:02:42.099> two<00:02:42.129> rectangles<00:02:42.879> based<00:02:43.150> on<00:02:43.329> the

00:02:43.410 --> 00:02:43.420 
compares the two rectangles based on the

00:02:43.420 --> 00:02:45.720 
compares the two rectangles based on the
logic<00:02:43.780> I<00:02:43.870> described<00:02:44.290> earlier<00:02:44.730> returning

00:02:45.720 --> 00:02:45.730 
logic I described earlier returning

00:02:45.730 --> 00:02:49.039 
logic I described earlier returning
either<00:02:45.909> true<00:02:46.299> or<00:02:46.329> false

00:02:49.039 --> 00:02:49.049 

00:02:49.049 --> 00:02:52.349 

alrighty<00:02:50.129> next<00:02:51.129> video<00:02:51.400> is<00:02:51.700> planning<00:02:52.150> out<00:02:52.239> the

00:02:52.349 --> 00:02:52.359 
alrighty next video is planning out the

00:02:52.359 --> 00:02:55.379 
alrighty next video is planning out the
game<00:02:52.540> see<00:02:53.260> ya

