WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.840 

hey<00:00:00.329> guys<00:00:00.539> welcome<00:00:00.900> to<00:00:01.170> the<00:00:01.250> 193rd<00:00:02.250> c-sharp

00:00:02.840 --> 00:00:02.850 
hey guys welcome to the 193rd c-sharp

00:00:02.850 --> 00:00:04.849 
hey guys welcome to the 193rd c-sharp
tutorial<00:00:03.510> that<00:00:03.689> I'm<00:00:03.780> making<00:00:04.140> for<00:00:04.410> the<00:00:04.710> new

00:00:04.849 --> 00:00:04.859 
tutorial that I'm making for the new

00:00:04.859 --> 00:00:06.950 
tutorial that I'm making for the new
Boston<00:00:05.490> and<00:00:05.730> in<00:00:06.089> this<00:00:06.180> tutorial<00:00:06.359> weren't

00:00:06.950 --> 00:00:06.960 
Boston and in this tutorial weren't

00:00:06.960 --> 00:00:09.040 
Boston and in this tutorial weren't
continue<00:00:07.500> working<00:00:07.710> in<00:00:07.919> our<00:00:08.069> writer<00:00:08.309> class

00:00:09.040 --> 00:00:09.050 
continue working in our writer class

00:00:09.050 --> 00:00:11.060 
continue working in our writer class
alright<00:00:10.050> so<00:00:10.349> the<00:00:10.530> first<00:00:10.740> thing<00:00:10.860> that<00:00:10.920> we're

00:00:11.060 --> 00:00:11.070 
alright so the first thing that we're

00:00:11.070 --> 00:00:13.160 
alright so the first thing that we're
gonna<00:00:11.160> do<00:00:11.400> is<00:00:11.700> create<00:00:11.940> a<00:00:12.150> method<00:00:12.450> to<00:00:12.870> write<00:00:13.110> a

00:00:13.160 --> 00:00:13.170 
gonna do is create a method to write a

00:00:13.170 --> 00:00:14.600 
gonna do is create a method to write a
single<00:00:13.500> play<00:00:13.830> so<00:00:14.250> we're<00:00:14.340> just<00:00:14.370> going<00:00:14.580> to

00:00:14.600 --> 00:00:14.610 
single play so we're just going to

00:00:14.610 --> 00:00:17.779 
single play so we're just going to
create<00:00:14.849> on<00:00:15.150> public<00:00:16.039> map<00:00:17.039> that<00:00:17.279> with<00:00:17.430> a<00:00:17.460> return

00:00:17.779 --> 00:00:17.789 
create on public map that with a return

00:00:17.789 --> 00:00:19.700 
create on public map that with a return
type<00:00:18.090> of<00:00:18.119> void<00:00:18.510> since<00:00:18.960> we<00:00:19.109> don't<00:00:19.289> need<00:00:19.410> to<00:00:19.529> use

00:00:19.700 --> 00:00:19.710 
type of void since we don't need to use

00:00:19.710 --> 00:00:21.470 
type of void since we don't need to use
it<00:00:19.830> to<00:00:19.980> get<00:00:20.130> any<00:00:20.369> information<00:00:20.699> from<00:00:21.300> this

00:00:21.470 --> 00:00:21.480 
it to get any information from this

00:00:21.480 --> 00:00:24.320 
it to get any information from this
method<00:00:21.930> and<00:00:22.080> then<00:00:23.010> we're<00:00:23.189> just<00:00:23.340> going<00:00:23.580> to<00:00:23.820> name

00:00:24.320 --> 00:00:24.330 
method and then we're just going to name

00:00:24.330 --> 00:00:29.000 
method and then we're just going to name
this<00:00:24.510> method<00:00:24.930> right<00:00:27.320> just<00:00:28.320> writing<00:00:28.590> a<00:00:28.740> single

00:00:29.000 --> 00:00:29.010 
this method right just writing a single

00:00:29.010 --> 00:00:31.370 
this method right just writing a single
byte<00:00:29.400> and<00:00:29.670> then<00:00:30.390> we're<00:00:30.750> gonna<00:00:30.840> need<00:00:31.080> to<00:00:31.230> get

00:00:31.370 --> 00:00:31.380 
byte and then we're gonna need to get

00:00:31.380 --> 00:00:33.319 
byte and then we're gonna need to get
and<00:00:31.590> love<00:00:31.769> bite<00:00:32.009> you<00:00:32.309> to<00:00:32.460> want<00:00:32.669> written<00:00:32.940> so

00:00:33.319 --> 00:00:33.329 
and love bite you to want written so

00:00:33.329 --> 00:00:35.030 
and love bite you to want written so
does<00:00:33.540> it<00:00:33.660> have<00:00:33.840> user<00:00:34.290> passed<00:00:34.530> through<00:00:34.860> here

00:00:35.030 --> 00:00:35.040 
does it have user passed through here

00:00:35.040 --> 00:00:37.160 
does it have user passed through here
the<00:00:35.219> fight<00:00:35.430> they<00:00:35.640> want<00:00:35.820> right<00:00:36.270> and<00:00:36.600> we're<00:00:37.110> just

00:00:37.160 --> 00:00:37.170 
the fight they want right and we're just

00:00:37.170 --> 00:00:38.990 
the fight they want right and we're just
going<00:00:37.350> to<00:00:37.380> say<00:00:37.530> bite<00:00:37.829> and<00:00:38.129> I'm<00:00:38.280> just<00:00:38.430> a<00:00:38.579> college

00:00:38.990 --> 00:00:39.000 
going to say bite and I'm just a college

00:00:39.000 --> 00:00:43.880 
going to say bite and I'm just a college
to<00:00:39.329> write<00:00:40.700> all<00:00:41.700> right<00:00:41.940> and<00:00:42.500> now<00:00:43.500> we're<00:00:43.649> going

00:00:43.880 --> 00:00:43.890 
to write all right and now we're going

00:00:43.890 --> 00:00:45.889 
to write all right and now we're going
to<00:00:43.950> use<00:00:44.160> like<00:00:44.730> Methodist<00:00:45.329> I<00:00:45.480> was<00:00:45.600> a<00:00:45.660> binary

00:00:45.889 --> 00:00:45.899 
to use like Methodist I was a binary

00:00:45.899 --> 00:00:47.840 
to use like Methodist I was a binary
writer<00:00:46.320> class<00:00:46.620> to<00:00:46.860> write<00:00:47.039> this<00:00:47.250> single<00:00:47.670> body

00:00:47.840 --> 00:00:47.850 
writer class to write this single body

00:00:47.850 --> 00:00:51.350 
writer class to write this single body
so<00:00:48.690> I'm<00:00:48.780> just<00:00:48.899> gonna<00:00:48.989> say<00:00:49.289> BW<00:00:50.039> right<00:00:50.910> and<00:00:51.210> then

00:00:51.350 --> 00:00:51.360 
so I'm just gonna say BW right and then

00:00:51.360 --> 00:00:53.420 
so I'm just gonna say BW right and then
that<00:00:51.660> single<00:00:52.140> bite<00:00:52.350> that<00:00:52.559> the<00:00:52.710> user<00:00:52.829> wants<00:00:53.280> to

00:00:53.420 --> 00:00:53.430 
that single bite that the user wants to

00:00:53.430 --> 00:00:58.670 
that single bite that the user wants to
write<00:00:53.699> so<00:00:54.090> who's<00:00:54.690> right<00:00:56.030> all<00:00:57.030> right<00:00:57.289> now<00:00:58.289> just

00:00:58.670 --> 00:00:58.680 
write so who's right all right now just

00:00:58.680 --> 00:01:00.439 
write so who's right all right now just
like<00:00:58.859> in<00:00:59.070> the<00:00:59.250> reader<00:00:59.609> class<00:00:59.940> we<00:01:00.149> just<00:01:00.180> had

00:01:00.439 --> 00:01:00.449 
like in the reader class we just had

00:01:00.449 --> 00:01:02.209 
like in the reader class we just had
something<00:01:00.719> for<00:01:01.079> a<00:01:01.140> read<00:01:01.350> bite<00:01:01.590> and<00:01:01.890> we<00:01:02.010> don't

00:01:02.209 --> 00:01:02.219 
something for a read bite and we don't

00:01:02.219 --> 00:01:05.210 
something for a read bite and we don't
really<00:01:02.370> have<00:01:02.460> to<00:01:02.670> do<00:01:02.820> much<00:01:03.059> to<00:01:03.710> the<00:01:04.710> read<00:01:04.949> bite

00:01:05.210 --> 00:01:05.220 
really have to do much to the read bite

00:01:05.220 --> 00:01:07.399 
really have to do much to the read bite
or<00:01:05.549> write<00:01:05.820> bite<00:01:06.060> because<00:01:06.540> it's<00:01:06.930> just<00:01:07.080> a<00:01:07.200> single

00:01:07.399 --> 00:01:07.409 
or write bite because it's just a single

00:01:07.409 --> 00:01:08.960 
or write bite because it's just a single
bite<00:01:07.710> and<00:01:08.040> doesn't<00:01:08.369> have<00:01:08.460> anything<00:01:08.670> to<00:01:08.790> do

00:01:08.960 --> 00:01:08.970 
bite and doesn't have anything to do

00:01:08.970 --> 00:01:11.480 
bite and doesn't have anything to do
with<00:01:09.000> big-endian<00:01:09.510> or<00:01:09.780> little-endian<00:01:10.110> but<00:01:11.040> now

00:01:11.480 --> 00:01:11.490 
with big-endian or little-endian but now

00:01:11.490 --> 00:01:13.490 
with big-endian or little-endian but now
in<00:01:11.790> the<00:01:11.880> next<00:01:12.210> method<00:01:12.390> of<00:01:12.659> looking<00:01:12.720> up<00:01:12.960> to<00:01:13.110> when

00:01:13.490 --> 00:01:13.500 
in the next method of looking up to when

00:01:13.500 --> 00:01:15.170 
in the next method of looking up to when
we're<00:01:13.650> writing<00:01:13.860> a<00:01:14.010> fighter<00:01:14.310> i<00:01:14.490> actually

00:01:15.170 --> 00:01:15.180 
we're writing a fighter i actually

00:01:15.180 --> 00:01:18.469 
we're writing a fighter i actually
change<00:01:16.400> the<00:01:17.400> order<00:01:17.790> of<00:01:17.939> the<00:01:18.090> ball<00:01:18.270> your<00:01:18.450> a

00:01:18.469 --> 00:01:18.479 
change the order of the ball your a

00:01:18.479 --> 00:01:20.390 
change the order of the ball your a
depending<00:01:19.140> on<00:01:19.320> if<00:01:19.590> it's<00:01:19.740> big-endian<00:01:20.130> or

00:01:20.390 --> 00:01:20.400 
depending on if it's big-endian or

00:01:20.400 --> 00:01:22.100 
depending on if it's big-endian or
little-endian<00:01:20.790> so<00:01:21.570> we're<00:01:21.659> gonna<00:01:21.750> go<00:01:21.960> right

00:01:22.100 --> 00:01:22.110 
little-endian so we're gonna go right

00:01:22.110 --> 00:01:24.399 
little-endian so we're gonna go right
here<00:01:22.380> and<00:01:22.409> create<00:01:22.950> a<00:01:22.979> new<00:01:23.189> method<00:01:23.369> so<00:01:23.850> it's<00:01:24.030> a

00:01:24.399 --> 00:01:24.409 
here and create a new method so it's a

00:01:24.409 --> 00:01:29.990 
here and create a new method so it's a
public<00:01:26.540> void<00:01:27.540> right<00:01:28.350> bytes<00:01:29.100> and<00:01:29.700> in<00:01:29.850> this

00:01:29.990 --> 00:01:30.000 
public void right bytes and in this

00:01:30.000 --> 00:01:32.480 
public void right bytes and in this
method<00:01:30.210> the<00:01:30.659> user<00:01:31.049> will<00:01:31.350> be<00:01:31.380> able<00:01:31.619> to<00:01:31.890> write<00:01:32.189> a

00:01:32.480 --> 00:01:32.490 
method the user will be able to write a

00:01:32.490 --> 00:01:35.060 
method the user will be able to write a
fighter<00:01:32.820> ace<00:01:33.119> who's<00:01:33.509> gonna<00:01:33.630> save<00:01:33.960> byte<00:01:34.439> array

00:01:35.060 --> 00:01:35.070 
fighter ace who's gonna save byte array

00:01:35.070 --> 00:01:40.280 
fighter ace who's gonna save byte array
and<00:01:35.369> then<00:01:35.850> bytes<00:01:36.630> do<00:01:37.470> right<00:01:38.930> all<00:01:39.930> right<00:01:40.140> and

00:01:40.280 --> 00:01:40.290 
and then bytes do right all right and

00:01:40.290 --> 00:01:43.730 
and then bytes do right all right and
like<00:01:41.220> i<00:01:41.369> said<00:01:41.430> if<00:01:41.880> the<00:01:42.090> user<00:01:42.299> has<00:01:42.689> the<00:01:43.049> byte

00:01:43.730 --> 00:01:43.740 
like i said if the user has the byte

00:01:43.740 --> 00:01:45.469 
like i said if the user has the byte
order<00:01:44.100> sets<00:01:44.369> a<00:01:44.460> big-endian<00:01:44.850> when<00:01:45.270> we're<00:01:45.360> gonna

00:01:45.469 --> 00:01:45.479 
order sets a big-endian when we're gonna

00:01:45.479 --> 00:01:48.200 
order sets a big-endian when we're gonna
have<00:01:45.659> to<00:01:45.780> reverse<00:01:46.200> this<00:01:46.979> flights<00:01:47.820> to<00:01:48.030> right

00:01:48.200 --> 00:01:48.210 
have to reverse this flights to right

00:01:48.210 --> 00:01:50.120 
have to reverse this flights to right
array<00:01:48.600> so<00:01:48.659> it'll<00:01:49.049> end<00:01:49.229> up<00:01:49.380> writing<00:01:49.649> it<00:01:49.799> in<00:01:49.979> the

00:01:50.120 --> 00:01:50.130 
array so it'll end up writing it in the

00:01:50.130 --> 00:01:52.429 
array so it'll end up writing it in the
correct<00:01:50.490> order<00:01:51.180> because<00:01:51.630> the<00:01:51.840> fawley<00:01:52.170> the

00:01:52.429 --> 00:01:52.439 
correct order because the fawley the

00:01:52.439 --> 00:01:54.440 
correct order because the fawley the
binary<00:01:52.829> writer<00:01:53.130> class<00:01:53.460> just<00:01:53.820> like<00:01:53.880> the<00:01:54.090> binary

00:01:54.440 --> 00:01:54.450 
binary writer class just like the binary

00:01:54.450 --> 00:01:57.340 
binary writer class just like the binary
reader<00:01:54.720> class<00:01:55.020> will<00:01:55.829> write<00:01:56.280> in<00:01:56.579> little-endian

00:01:57.340 --> 00:01:57.350 
reader class will write in little-endian

00:01:57.350 --> 00:01:59.749 
reader class will write in little-endian
so<00:01:58.350> what<00:01:58.590> we're<00:01:58.680> gonna<00:01:58.770> have<00:01:58.829> to<00:01:58.920> stay<00:01:59.159> here<00:01:59.460> is

00:01:59.749 --> 00:01:59.759 
so what we're gonna have to stay here is

00:01:59.759 --> 00:02:07.100 
so what we're gonna have to stay here is
if<00:02:00.140> byte<00:02:01.140> order<00:02:03.020> equals<00:02:04.670> byte<00:02:05.670> order<00:02:06.060> dot

00:02:07.100 --> 00:02:07.110 
if byte order equals byte order dot

00:02:07.110 --> 00:02:08.900 
if byte order equals byte order dot
big-endian<00:02:07.890> now<00:02:08.280> we're<00:02:08.399> just<00:02:08.489> an<00:02:08.640> actor

00:02:08.900 --> 00:02:08.910 
big-endian now we're just an actor

00:02:08.910 --> 00:02:10.249 
big-endian now we're just an actor
reverse<00:02:09.270> this<00:02:09.569> bites

00:02:10.249 --> 00:02:10.259 
reverse this bites

00:02:10.259 --> 00:02:11.410 
reverse this bites
-<00:02:10.410> right<00:02:10.649> erase

00:02:11.410 --> 00:02:11.420 
- right erase

00:02:11.420 --> 00:02:17.260 
- right erase
stay<00:02:11.840> right<00:02:12.319> doc<00:02:12.890> reverse<00:02:15.730> reverse

00:02:17.260 --> 00:02:17.270 
stay right doc reverse reverse

00:02:17.270 --> 00:02:20.140 
stay right doc reverse reverse
and<00:02:17.569> that<00:02:18.040> plates<00:02:19.040> to<00:02:19.280> right<00:02:19.490> eraser<00:02:20.000> just

00:02:20.140 --> 00:02:20.150 
and that plates to right eraser just

00:02:20.150 --> 00:02:23.470 
and that plates to right eraser just
basically<00:02:20.630> reverses<00:02:21.230> arrays<00:02:21.560> order<00:02:22.480> all

00:02:23.470 --> 00:02:23.480 
basically reverses arrays order all

00:02:23.480 --> 00:02:25.870 
basically reverses arrays order all
right<00:02:23.660> and<00:02:23.990> only<00:02:24.860> if<00:02:24.980> it's<00:02:25.130> big<00:02:25.310> endian<00:02:25.640> it'll

00:02:25.870 --> 00:02:25.880 
right and only if it's big endian it'll

00:02:25.880 --> 00:02:28.270 
right and only if it's big endian it'll
reverse<00:02:26.209> co-worker<00:02:26.840> ray<00:02:27.050> and<00:02:27.380> then<00:02:27.860> after

00:02:28.270 --> 00:02:28.280 
reverse co-worker ray and then after

00:02:28.280 --> 00:02:30.190 
reverse co-worker ray and then after
that<00:02:28.400> we're<00:02:28.700> just<00:02:28.820> going<00:02:29.090> to<00:02:29.120> have<00:02:29.840> it<00:02:29.959> right

00:02:30.190 --> 00:02:30.200 
that we're just going to have it right

00:02:30.200 --> 00:02:32.800 
that we're just going to have it right
this<00:02:30.410> byte<00:02:30.709> array<00:02:31.010> so<00:02:31.310> it's<00:02:31.700> a<00:02:31.850> BW<00:02:32.510> for<00:02:32.780> a

00:02:32.800 --> 00:02:32.810 
this byte array so it's a BW for a

00:02:32.810 --> 00:02:37.000 
this byte array so it's a BW for a
binary<00:02:33.080> writer<00:02:33.530> doc<00:02:34.340> right<00:02:34.760> and<00:02:35.150> then<00:02:36.010> our

00:02:37.000 --> 00:02:37.010 
binary writer doc right and then our

00:02:37.010 --> 00:02:41.440 
binary writer doc right and then our
biker<00:02:37.430> a<00:02:37.580> right<00:02:37.910> here<00:02:38.090> so<00:02:38.440> bytes<00:02:39.440> to<00:02:39.950> right<00:02:40.459> all

00:02:41.440 --> 00:02:41.450 
biker a right here so bytes to right all

00:02:41.450 --> 00:02:43.150 
biker a right here so bytes to right all
right<00:02:41.630> so<00:02:41.870> let<00:02:42.050> me<00:02:42.080> just<00:02:42.140> explain<00:02:42.350> why<00:02:42.980> we're

00:02:43.150 --> 00:02:43.160 
right so let me just explain why we're

00:02:43.160 --> 00:02:44.979 
right so let me just explain why we're
gonna<00:02:43.220> have<00:02:43.430> to<00:02:43.520> reverse<00:02:43.820> it<00:02:44.030> right<00:02:44.180> here<00:02:44.420> so

00:02:44.979 --> 00:02:44.989 
gonna have to reverse it right here so

00:02:44.989 --> 00:02:47.110 
gonna have to reverse it right here so
imagine<00:02:45.470> if<00:02:45.739> user<00:02:46.040> passed<00:02:46.370> through<00:02:46.850> here<00:02:47.060> a

00:02:47.110 --> 00:02:47.120 
imagine if user passed through here a

00:02:47.120 --> 00:02:49.509 
imagine if user passed through here a
byte<00:02:47.450> array<00:02:47.750> with<00:02:47.930> two<00:02:47.959> elements<00:02:48.350> and<00:02:49.250> had

00:02:49.509 --> 00:02:49.519 
byte array with two elements and had

00:02:49.519 --> 00:02:54.070 
byte array with two elements and had
epi'<00:02:49.850> and<00:02:51.850> all<00:02:52.850> right<00:02:53.060> so<00:02:53.269> basically<00:02:53.600> what<00:02:53.930> the

00:02:54.070 --> 00:02:54.080 
epi' and all right so basically what the

00:02:54.080 --> 00:02:56.590 
epi' and all right so basically what the
user<00:02:54.380> wants<00:02:54.590> us<00:02:54.890> to<00:02:54.920> see<00:02:55.250> in<00:02:55.550> the<00:02:55.910> file<00:02:56.150> would

00:02:56.590 --> 00:02:56.600 
user wants us to see in the file would

00:02:56.600 --> 00:03:03.000 
user wants us to see in the file would
be<00:02:56.890> FF<00:02:57.890> and<00:02:58.250> then<00:02:58.430> FPU<00:02:58.940> right<00:02:59.180> inside<00:02:59.510> the<00:02:59.630> file

00:03:03.000 --> 00:03:03.010 

00:03:03.010 --> 00:03:05.680 

all<00:03:04.010> right<00:03:04.190> well<00:03:04.400> if<00:03:04.640> we<00:03:04.790> didn't<00:03:05.150> have<00:03:05.330> this<00:03:05.480> if

00:03:05.680 --> 00:03:05.690 
all right well if we didn't have this if

00:03:05.690 --> 00:03:06.850 
all right well if we didn't have this if
statement<00:03:05.840> right<00:03:06.170> here<00:03:06.260> what<00:03:06.650> I<00:03:06.680> would<00:03:06.830> just

00:03:06.850 --> 00:03:06.860 
statement right here what I would just

00:03:06.860 --> 00:03:10.300 
statement right here what I would just
go<00:03:07.100> ahead<00:03:07.130> and<00:03:07.459> do<00:03:07.580> is<00:03:08.239> start<00:03:08.959> writing<00:03:09.440> at<00:03:09.650> the

00:03:10.300 --> 00:03:10.310 
go ahead and do is start writing at the

00:03:10.310 --> 00:03:12.370 
go ahead and do is start writing at the
right<00:03:10.670> so<00:03:11.060> let's<00:03:11.209> start<00:03:11.450> writing<00:03:11.690> all<00:03:12.200> right

00:03:12.370 --> 00:03:12.380 
right so let's start writing all right

00:03:12.380 --> 00:03:14.979 
right so let's start writing all right
right<00:03:12.890> now<00:03:13.150> and<00:03:14.150> then<00:03:14.239> we're<00:03:14.330> gonna<00:03:14.450> go<00:03:14.630> here

00:03:14.979 --> 00:03:14.989 
right now and then we're gonna go here

00:03:14.989 --> 00:03:16.930 
right now and then we're gonna go here
and<00:03:15.170> write<00:03:15.380> happy<00:03:15.620> all<00:03:16.430> right<00:03:16.579> so<00:03:16.790> that's

00:03:16.930 --> 00:03:16.940 
and write happy all right so that's

00:03:16.940 --> 00:03:19.479 
and write happy all right so that's
little<00:03:17.269> endian<00:03:17.510> perfect<00:03:18.170> well<00:03:18.799> if<00:03:19.070> it's<00:03:19.220> big

00:03:19.479 --> 00:03:19.489 
little endian perfect well if it's big

00:03:19.489 --> 00:03:21.520 
little endian perfect well if it's big
endian<00:03:19.850> we<00:03:20.120> want<00:03:20.360> it<00:03:20.480> to<00:03:20.600> start<00:03:20.900> writing<00:03:21.200> at

00:03:21.520 --> 00:03:21.530 
endian we want it to start writing at

00:03:21.530 --> 00:03:23.530 
endian we want it to start writing at
the<00:03:21.709> last<00:03:21.950> so<00:03:22.280> we<00:03:22.370> wanted<00:03:22.640> to<00:03:22.730> start<00:03:22.970> writing<00:03:23.209> a

00:03:23.530 --> 00:03:23.540 
the last so we wanted to start writing a

00:03:23.540 --> 00:03:28.870 
the last so we wanted to start writing a
path<00:03:24.079> and<00:03:24.410> then<00:03:24.560> F<00:03:24.709> be<00:03:24.920> like<00:03:25.370> it<00:03:25.519> that<00:03:25.820> way

00:03:28.870 --> 00:03:28.880 

00:03:28.880 --> 00:03:31.180 

so<00:03:29.480> as<00:03:29.750> you<00:03:29.870> can<00:03:29.959> see<00:03:30.019> if<00:03:30.350> we<00:03:30.380> didn't<00:03:30.890> reverse

00:03:31.180 --> 00:03:31.190 
so as you can see if we didn't reverse

00:03:31.190 --> 00:03:34.120 
so as you can see if we didn't reverse
it<00:03:31.400> it<00:03:31.519> would<00:03:31.640> end<00:03:31.790> up<00:03:31.850> writing<00:03:32.120> at<00:03:32.450> e<00:03:33.049> FF<00:03:33.530> well

00:03:34.120 --> 00:03:34.130 
it it would end up writing at e FF well

00:03:34.130 --> 00:03:35.890 
it it would end up writing at e FF well
if<00:03:34.400> it's<00:03:34.579> big<00:03:34.790> endian<00:03:35.120> we<00:03:35.329> want<00:03:35.510> it<00:03:35.570> to<00:03:35.690> write

00:03:35.890 --> 00:03:35.900 
if it's big endian we want it to write

00:03:35.900 --> 00:03:41.289 
if it's big endian we want it to write
FF<00:03:36.350> e<00:03:37.750> alright<00:03:39.340> so<00:03:40.340> now<00:03:40.640> that<00:03:40.670> you<00:03:40.850> understand

00:03:41.289 --> 00:03:41.299 
FF e alright so now that you understand

00:03:41.299 --> 00:03:43.720 
FF e alright so now that you understand
that<00:03:41.540> let's<00:03:41.840> just<00:03:41.989> move<00:03:42.170> on<00:03:42.410> to<00:03:42.680> writing<00:03:43.280> on

00:03:43.720 --> 00:03:43.730 
that let's just move on to writing on

00:03:43.730 --> 00:03:47.410 
that let's just move on to writing on
integers<00:03:44.720> like<00:03:44.959> in<00:03:45.140> 16<00:03:45.890> for<00:03:46.130> example<00:03:46.579> so<00:03:47.329> we're

00:03:47.410 --> 00:03:47.420 
integers like in 16 for example so we're

00:03:47.420 --> 00:03:50.880 
integers like in 16 for example so we're
gonna<00:03:47.510> go<00:03:47.720> right<00:03:47.870> here<00:03:48.110> and<00:03:48.290> say<00:03:48.500> public<00:03:49.180> Boyd

00:03:50.880 --> 00:03:50.890 
gonna go right here and say public Boyd

00:03:50.890 --> 00:03:54.819 
gonna go right here and say public Boyd
right<00:03:52.209> into<00:03:53.209> 16<00:03:54.170> and<00:03:54.470> then<00:03:54.560> we're<00:03:54.650> just<00:03:54.680> gonna

00:03:54.819 --> 00:03:54.829 
right into 16 and then we're just gonna

00:03:54.829 --> 00:03:57.520 
right into 16 and then we're just gonna
have<00:03:54.950> them<00:03:55.250> pass<00:03:55.519> through<00:03:55.910> the<00:03:56.540> short<00:03:57.110> or<00:03:57.320> the

00:03:57.520 --> 00:03:57.530 
have them pass through the short or the

00:03:57.530 --> 00:03:59.140 
have them pass through the short or the
in<00:03:57.680> 16<00:03:58.190> that<00:03:58.310> they<00:03:58.430> want<00:03:58.670> to<00:03:58.700> write

00:03:59.140 --> 00:03:59.150 
in 16 that they want to write

00:03:59.150 --> 00:04:01.900 
in 16 that they want to write
so<00:03:59.480> this<00:03:59.600> Masseria<00:04:00.140> here<00:04:00.380> short<00:04:00.739> and<00:04:01.070> all<00:04:01.640> this

00:04:01.900 --> 00:04:01.910 
so this Masseria here short and all this

00:04:01.910 --> 00:04:07.090 
so this Masseria here short and all this
too<00:04:02.209> right<00:04:04.480> all<00:04:05.480> right<00:04:05.750> so<00:04:06.680> just<00:04:06.709> like<00:04:07.070> before

00:04:07.090 --> 00:04:07.100 
too right all right so just like before

00:04:07.100 --> 00:04:08.860 
too right all right so just like before
we're<00:04:07.609> gonna<00:04:07.700> have<00:04:07.880> to<00:04:07.970> reverse<00:04:08.299> it<00:04:08.540> if<00:04:08.690> you

00:04:08.860 --> 00:04:08.870 
we're gonna have to reverse it if you

00:04:08.870 --> 00:04:11.380 
we're gonna have to reverse it if you
buy<00:04:09.049> order<00:04:09.440> is<00:04:09.590> big<00:04:09.920> endian<00:04:10.340> so<00:04:11.030> we're<00:04:11.299> going

00:04:11.380 --> 00:04:11.390 
buy order is big endian so we're going

00:04:11.390 --> 00:04:19.380 
buy order is big endian so we're going
to<00:04:11.480> say<00:04:12.910> byte<00:04:13.910> array<00:04:16.419> buffer<00:04:17.829> equals<00:04:18.829> bit

00:04:19.380 --> 00:04:19.390 
to say byte array buffer equals bit

00:04:19.390 --> 00:04:22.510 
to say byte array buffer equals bit
converter<00:04:20.500> get<00:04:21.500> bytes

00:04:22.510 --> 00:04:22.520 
converter get bytes

00:04:22.520 --> 00:04:26.619 
converter get bytes
then<00:04:22.729> that<00:04:23.330> short<00:04:23.750> -<00:04:24.080> right<00:04:24.319> -<00:04:24.979> right<00:04:25.520> and<00:04:26.030> the

00:04:26.619 --> 00:04:26.629 
then that short - right - right and the

00:04:26.629 --> 00:04:28.510 
then that short - right - right and the
reason<00:04:26.930> that<00:04:26.960> we're<00:04:27.169> converting<00:04:27.500> it<00:04:27.710> into<00:04:27.860> a

00:04:28.510 --> 00:04:28.520 
reason that we're converting it into a

00:04:28.520 --> 00:04:30.969 
reason that we're converting it into a
bugger<00:04:29.270> it<00:04:29.599> is<00:04:29.990> so<00:04:30.229> that<00:04:30.379> we'll<00:04:30.500> be<00:04:30.530> able<00:04:30.650> to

00:04:30.969 --> 00:04:30.979 
bugger it is so that we'll be able to

00:04:30.979 --> 00:04:32.770 
bugger it is so that we'll be able to
reverse<00:04:31.310> it<00:04:31.550> if<00:04:31.699> the<00:04:31.819> byte<00:04:32.030> order<00:04:32.389> is<00:04:32.539> big

00:04:32.770 --> 00:04:32.780 
reverse it if the byte order is big

00:04:32.780 --> 00:04:34.629 
reverse it if the byte order is big
endian<00:04:33.110> and<00:04:33.740> then<00:04:33.889> we<00:04:33.979> can<00:04:34.129> just<00:04:34.220> write<00:04:34.490> it<00:04:34.520> as

00:04:34.629 --> 00:04:34.639 
endian and then we can just write it as

00:04:34.639 --> 00:04:38.080 
endian and then we can just write it as
a<00:04:34.789> fire<00:04:35.210> at<00:04:35.750> the<00:04:35.900> end<00:04:36.050> so<00:04:37.039> we're<00:04:37.220> staring<00:04:37.699> here

00:04:38.080 --> 00:04:38.090 
a fire at the end so we're staring here

00:04:38.090 --> 00:04:45.129 
a fire at the end so we're staring here
in<00:04:38.860> white<00:04:40.960> if<00:04:42.099> by<00:04:43.099> order<00:04:43.550> you<00:04:44.270> this<00:04:44.539> that<00:04:44.870> is

00:04:45.129 --> 00:04:45.139 
in white if by order you this that is

00:04:45.139 --> 00:04:47.680 
in white if by order you this that is
big<00:04:45.770> onion<00:04:46.190> that<00:04:46.520> we<00:04:46.639> just<00:04:46.789> want<00:04:47.030> to<00:04:47.270> reverse

00:04:47.680 --> 00:04:47.690 
big onion that we just want to reverse

00:04:47.690 --> 00:04:50.110 
big onion that we just want to reverse
this<00:04:48.020> buffer<00:04:48.530> right<00:04:48.800> so<00:04:49.430> if<00:04:49.520> it's<00:04:49.580> big<00:04:49.819> endian

00:04:50.110 --> 00:04:50.120 
this buffer right so if it's big endian

00:04:50.120 --> 00:04:52.960 
this buffer right so if it's big endian
we're<00:04:50.330> just<00:04:50.449> going<00:04:50.569> to<00:04:50.599> say<00:04:50.810> array<00:04:51.970> reverse

00:04:52.960 --> 00:04:52.970 
we're just going to say array reverse

00:04:52.970 --> 00:04:57.790 
we're just going to say array reverse
and<00:04:53.330> then<00:04:54.580> buffer<00:04:55.580> and<00:04:56.440> only<00:04:57.440> if<00:04:57.530> it's<00:04:57.650> big

00:04:57.790 --> 00:04:57.800 
and then buffer and only if it's big

00:04:57.800 --> 00:05:00.249 
and then buffer and only if it's big
endian<00:04:58.130> it'll<00:04:58.400> reverse<00:04:58.669> it<00:04:58.940> otherwise<00:04:59.389> do

00:05:00.249 --> 00:05:00.259 
endian it'll reverse it otherwise do

00:05:00.259 --> 00:05:02.740 
endian it'll reverse it otherwise do
nothing<00:05:00.710> and<00:05:00.919> then<00:05:01.849> we're<00:05:02.030> just<00:05:02.060> going<00:05:02.479> to

00:05:02.740 --> 00:05:02.750 
nothing and then we're just going to

00:05:02.750 --> 00:05:04.990 
nothing and then we're just going to
write<00:05:03.319> that<00:05:03.590> buffer<00:05:04.069> array<00:05:04.310> right<00:05:04.520> here<00:05:04.759> so

00:05:04.990 --> 00:05:05.000 
write that buffer array right here so

00:05:05.000 --> 00:05:08.379 
write that buffer array right here so
just<00:05:05.030> a<00:05:05.539> w-4<00:05:06.229> a<00:05:06.530> binary<00:05:06.800> writer<00:05:07.250> and<00:05:07.849> then<00:05:08.060> dot

00:05:08.379 --> 00:05:08.389 
just a w-4 a binary writer and then dot

00:05:08.389 --> 00:05:09.820 
just a w-4 a binary writer and then dot
right<00:05:08.780> and<00:05:09.080> then<00:05:09.169> we're<00:05:09.259> just<00:05:09.289> gonna<00:05:09.470> write

00:05:09.820 --> 00:05:09.830 
right and then we're just gonna write

00:05:09.830 --> 00:05:13.689 
right and then we're just gonna write
this<00:05:10.130> fiery<00:05:10.789> right<00:05:11.120> here<00:05:11.300> called<00:05:11.509> buffer<00:05:12.699> all

00:05:13.689 --> 00:05:13.699 
this fiery right here called buffer all

00:05:13.699 --> 00:05:15.550 
this fiery right here called buffer all
right<00:05:14.180> and<00:05:14.389> you're<00:05:14.900> gonna<00:05:14.960> want<00:05:15.229> to<00:05:15.289> do<00:05:15.409> this

00:05:15.550 --> 00:05:15.560 
right and you're gonna want to do this

00:05:15.560 --> 00:05:17.559 
right and you're gonna want to do this
for<00:05:15.860> all<00:05:16.099> the<00:05:16.130> different<00:05:16.669> data<00:05:16.849> types<00:05:16.940> so

00:05:17.559 --> 00:05:17.569 
for all the different data types so

00:05:17.569 --> 00:05:22.689 
for all the different data types so
warrant<00:05:18.550> for<00:05:19.550> a<00:05:19.580> un<00:05:20.000> 16<00:05:20.509> for<00:05:20.810> an<00:05:20.900> in<00:05:21.020> 32<00:05:21.530> a<00:05:21.560> un<00:05:22.129> 32

00:05:22.689 --> 00:05:22.699 
warrant for a un 16 for an in 32 a un 32

00:05:22.699 --> 00:05:26.830 
warrant for a un 16 for an in 32 a un 32
and<00:05:23.300> 64<00:05:24.229> and<00:05:24.500> a<00:05:24.530> un<00:05:24.860> 64<00:05:25.550> something<00:05:26.539> give<00:05:26.690> you<00:05:26.780> a

00:05:26.830 --> 00:05:26.840 
and 64 and a un 64 something give you a

00:05:26.840 --> 00:05:28.930 
and 64 and a un 64 something give you a
real<00:05:27.020> quick<00:05:27.169> example<00:05:27.319> of<00:05:27.949> just<00:05:28.310> changing<00:05:28.759> this

00:05:28.930 --> 00:05:28.940 
real quick example of just changing this

00:05:28.940 --> 00:05:30.430 
real quick example of just changing this
all<00:05:29.270> you're<00:05:29.360> gonna<00:05:29.479> have<00:05:29.569> to<00:05:29.659> really<00:05:29.810> do<00:05:30.050> is

00:05:30.430 --> 00:05:30.440 
all you're gonna have to really do is

00:05:30.440 --> 00:05:33.010 
all you're gonna have to really do is
copy<00:05:30.979> it<00:05:31.159> paste<00:05:31.449> change<00:05:32.449> the<00:05:32.599> name<00:05:32.780> of<00:05:32.930> the

00:05:33.010 --> 00:05:33.020 
copy it paste change the name of the

00:05:33.020 --> 00:05:37.089 
copy it paste change the name of the
method<00:05:33.199> so<00:05:34.069> it'll<00:05:35.000> be<00:05:35.120> a<00:05:35.150> un<00:05:35.539> 16<00:05:36.050> now<00:05:36.259> we're

00:05:37.089 --> 00:05:37.099 
method so it'll be a un 16 now we're

00:05:37.099 --> 00:05:39.969 
method so it'll be a un 16 now we're
writing<00:05:37.280> at<00:05:37.430> you<00:05:37.639> shorts<00:05:38.090> on<00:05:38.270> unsigned<00:05:38.810> in<00:05:39.409> 16

00:05:39.969 --> 00:05:39.979 
writing at you shorts on unsigned in 16

00:05:39.979 --> 00:05:43.990 
writing at you shorts on unsigned in 16
and<00:05:40.810> that's<00:05:41.810> really<00:05:42.080> all<00:05:42.289> you<00:05:42.440> have<00:05:42.529> to<00:05:42.680> do<00:05:43.000> so

00:05:43.990 --> 00:05:44.000 
and that's really all you have to do so

00:05:44.000 --> 00:05:45.790 
and that's really all you have to do so
you're<00:05:44.120> gonna<00:05:44.210> want<00:05:44.419> to<00:05:44.449> do<00:05:44.599> that<00:05:44.630> for<00:05:45.169> like<00:05:45.710> I

00:05:45.790 --> 00:05:45.800 
you're gonna want to do that for like I

00:05:45.800 --> 00:05:51.879 
you're gonna want to do that for like I
said<00:05:45.889> in<00:05:46.250> 32<00:05:46.699> you<00:05:47.060> 32<00:05:48.219> in<00:05:49.240> 64<00:05:50.240> and<00:05:50.539> um<00:05:51.080> support

00:05:51.879 --> 00:05:51.889 
said in 32 you 32 in 64 and um support

00:05:51.889 --> 00:05:53.890 
said in 32 you 32 in 64 and um support
alright<00:05:52.669> and<00:05:52.880> one<00:05:53.300> more<00:05:53.479> thing<00:05:53.630> you're

00:05:53.890 --> 00:05:53.900 
alright and one more thing you're

00:05:53.900 --> 00:05:55.629 
alright and one more thing you're
probably<00:05:54.050> gonna<00:05:54.319> want<00:05:54.529> to<00:05:54.590> do<00:05:54.710> is<00:05:55.009> just<00:05:55.370> have<00:05:55.610> a

00:05:55.629 --> 00:05:55.639 
probably gonna want to do is just have a

00:05:55.639 --> 00:05:57.670 
probably gonna want to do is just have a
quick<00:05:56.000> summary<00:05:56.270> of<00:05:56.539> what<00:05:56.659> each<00:05:57.020> method<00:05:57.259> does

00:05:57.670 --> 00:05:57.680 
quick summary of what each method does

00:05:57.680 --> 00:06:00.519 
quick summary of what each method does
but<00:05:58.400> it's<00:05:58.550> not<00:05:58.729> mandatory<00:05:59.150> I<00:05:59.750> think<00:06:00.380> it<00:06:00.469> just

00:06:00.519 --> 00:06:00.529 
but it's not mandatory I think it just

00:06:00.529 --> 00:06:02.649 
but it's not mandatory I think it just
makes<00:06:00.710> it<00:06:00.860> a<00:06:00.949> lot<00:06:01.159> easier<00:06:01.219> for<00:06:01.580> user<00:06:02.000> to<00:06:02.360> your

00:06:02.649 --> 00:06:02.659 
makes it a lot easier for user to your

00:06:02.659 --> 00:06:05.230 
makes it a lot easier for user to your
class<00:06:03.250> alright<00:06:04.250> so<00:06:04.520> that's<00:06:04.819> pretty<00:06:04.940> much<00:06:05.150> it

00:06:05.230 --> 00:06:05.240 
class alright so that's pretty much it

00:06:05.240 --> 00:06:09.430 
class alright so that's pretty much it
for<00:06:05.419> this<00:06:05.690> tutorial<00:06:05.900> so<00:06:06.710> see<00:06:07.279> you<00:06:07.370> guys

