WEBVTT
Kind: captions
Language: en

00:00:08.750 --> 00:00:11.749 

hey<00:00:09.750> guys<00:00:09.929> quick<00:00:10.290> everything<00:00:10.590> for<00:00:10.889> here<00:00:11.070> today

00:00:11.749 --> 00:00:11.759 
hey guys quick everything for here today

00:00:11.759 --> 00:00:15.379 
hey guys quick everything for here today
um<00:00:12.150> I'm<00:00:13.049> gonna<00:00:13.259> do<00:00:14.040> a<00:00:14.070> finishing<00:00:14.490> video<00:00:15.030> on

00:00:15.379 --> 00:00:15.389 
um I'm gonna do a finishing video on

00:00:15.389 --> 00:00:17.660 
um I'm gonna do a finishing video on
this<00:00:15.660> integrated<00:00:16.260> circuit<00:00:16.500> CPU<00:00:16.859> for<00:00:17.460> you<00:00:17.550> guys

00:00:17.660 --> 00:00:17.670 
this integrated circuit CPU for you guys

00:00:17.670 --> 00:00:18.830 
this integrated circuit CPU for you guys
how<00:00:17.789> it<00:00:17.880> works<00:00:18.029> and<00:00:18.210> how<00:00:18.270> to<00:00:18.330> do<00:00:18.510> things<00:00:18.660> with

00:00:18.830 --> 00:00:18.840 
how it works and how to do things with

00:00:18.840 --> 00:00:21.529 
how it works and how to do things with
it<00:00:18.990> and<00:00:19.640> give<00:00:20.640> you<00:00:20.730> guys<00:00:20.850> warp<00:00:21.180> so<00:00:21.330> you<00:00:21.390> guys

00:00:21.529 --> 00:00:21.539 
it and give you guys warp so you guys

00:00:21.539 --> 00:00:23.599 
it and give you guys warp so you guys
can<00:00:21.750> come<00:00:21.869> on<00:00:22.020> and<00:00:22.140> play<00:00:22.230> with<00:00:22.320> it<00:00:22.439> here<00:00:22.859> I<00:00:23.010> will

00:00:23.599 --> 00:00:23.609 
can come on and play with it here I will

00:00:23.609 --> 00:00:25.279 
can come on and play with it here I will
also<00:00:23.850> save<00:00:24.029> it<00:00:24.060> as<00:00:24.210> schematic<00:00:24.720> and<00:00:24.930> put<00:00:25.199> the

00:00:25.279 --> 00:00:25.289 
also save it as schematic and put the

00:00:25.289 --> 00:00:28.429 
also save it as schematic and put the
schematic<00:00:25.800> as<00:00:25.980> a<00:00:26.039> download<00:00:26.580> and<00:00:27.170> so<00:00:28.170> here<00:00:28.349> we

00:00:28.429 --> 00:00:28.439 
schematic as a download and so here we

00:00:28.439 --> 00:00:28.820 
schematic as a download and so here we
go

00:00:28.820 --> 00:00:28.830 
go

00:00:28.830 --> 00:00:33.549 
go
so<00:00:29.640> first<00:00:29.849> thing<00:00:29.970> you'll<00:00:30.150> notice<00:00:30.269> is<00:00:32.270> well

00:00:33.549 --> 00:00:33.559 
so first thing you'll notice is well

00:00:33.559 --> 00:00:36.560 
so first thing you'll notice is well
it's<00:00:34.559> a<00:00:34.710> lot<00:00:34.890> more<00:00:35.309> finished<00:00:35.670> and<00:00:35.880> less<00:00:36.239> video

00:00:36.560 --> 00:00:36.570 
it's a lot more finished and less video

00:00:36.570 --> 00:00:39.260 
it's a lot more finished and less video
showed<00:00:36.809> anything<00:00:37.050> up<00:00:37.430> so<00:00:38.430> we'll<00:00:39.030> come<00:00:39.180> over

00:00:39.260 --> 00:00:39.270 
showed anything up so we'll come over

00:00:39.270 --> 00:00:44.330 
showed anything up so we'll come over
here<00:00:39.800> this<00:00:40.800> is<00:00:40.860> the<00:00:40.980> RAM<00:00:42.559> I'll<00:00:43.559> just<00:00:43.950> that's

00:00:44.330 --> 00:00:44.340 
here this is the RAM I'll just that's

00:00:44.340 --> 00:00:47.990 
here this is the RAM I'll just that's
just<00:00:44.579> 64<00:00:45.239> bytes<00:00:45.420> of<00:00:45.539> RAM<00:00:46.190> these<00:00:47.190> are<00:00:47.550> seven

00:00:47.990 --> 00:00:48.000 
just 64 bytes of RAM these are seven

00:00:48.000 --> 00:00:53.510 
just 64 bytes of RAM these are seven
bytes<00:00:48.180> of<00:00:48.420> registers<00:00:51.320> and<00:00:52.320> this<00:00:52.829> is<00:00:52.949> the<00:00:53.070> ALU

00:00:53.510 --> 00:00:53.520 
bytes of registers and this is the ALU

00:00:53.520 --> 00:00:56.420 
bytes of registers and this is the ALU
over<00:00:53.760> here<00:00:54.000> the<00:00:54.899> ALU<00:00:55.289> can<00:00:55.440> shift<00:00:55.649> it<00:00:55.860> can<00:00:55.980> X<00:00:56.160> nor

00:00:56.420 --> 00:00:56.430 
over here the ALU can shift it can X nor

00:00:56.430 --> 00:01:00.830 
over here the ALU can shift it can X nor
can<00:00:56.579> and<00:00:56.879> it<00:00:57.180> can<00:00:57.360> or<00:00:57.570> and<00:00:57.809> it<00:00:58.350> can<00:00:58.500> add<00:00:59.719> so<00:01:00.719> it's

00:01:00.830 --> 00:01:00.840 
can and it can or and it can add so it's

00:01:00.840 --> 00:01:03.770 
can and it can or and it can add so it's
got<00:01:00.960> an<00:01:01.050> 8-bit<00:01:01.350> adder<00:01:01.530> and<00:01:02.149> then<00:01:03.149> we<00:01:03.359> have<00:01:03.480> our

00:01:03.770 --> 00:01:03.780 
got an 8-bit adder and then we have our

00:01:03.780 --> 00:01:05.299 
got an 8-bit adder and then we have our
multiplexer<00:01:04.350> systems<00:01:04.710> up<00:01:04.830> here<00:01:05.129> which<00:01:05.280> is

00:01:05.299 --> 00:01:05.309 
multiplexer systems up here which is

00:01:05.309 --> 00:01:09.859 
multiplexer systems up here which is
what<00:01:05.430> all<00:01:05.790> these<00:01:05.939> and<00:01:06.119> gates<00:01:06.270> are<00:01:06.450> for<00:01:08.869> and

00:01:09.859 --> 00:01:09.869 
what all these and gates are for and

00:01:09.869 --> 00:01:12.560 
what all these and gates are for and
then<00:01:10.770> it<00:01:10.799> shares<00:01:11.070> this<00:01:11.220> I<00:01:11.460> guess<00:01:12.119> this<00:01:12.270> can<00:01:12.420> be

00:01:12.560 --> 00:01:12.570 
then it shares this I guess this can be

00:01:12.570 --> 00:01:13.910 
then it shares this I guess this can be
called<00:01:12.750> a<00:01:12.869> frontside<00:01:13.200> bus<00:01:13.409> I<00:01:13.619> think<00:01:13.799> that's

00:01:13.910 --> 00:01:13.920 
called a frontside bus I think that's

00:01:13.920 --> 00:01:15.109 
called a frontside bus I think that's
what<00:01:14.010> I<00:01:14.070> used<00:01:14.220> in<00:01:14.340> the<00:01:14.400> past<00:01:14.610> for<00:01:14.820> this<00:01:14.880> name

00:01:15.109 --> 00:01:15.119 
what I used in the past for this name

00:01:15.119 --> 00:01:19.460 
what I used in the past for this name
and<00:01:15.470> then<00:01:16.470> a<00:01:16.500> trip<00:01:16.770> it<00:01:17.009> transmits<00:01:17.610> data<00:01:18.470> all

00:01:19.460 --> 00:01:19.470 
and then a trip it transmits data all

00:01:19.470 --> 00:01:22.700 
and then a trip it transmits data all
the<00:01:19.799> way<00:01:19.830> over<00:01:20.189> and<00:01:21.140> into<00:01:22.140> our<00:01:22.259> registers

00:01:22.700 --> 00:01:22.710 
the way over and into our registers

00:01:22.710 --> 00:01:28.160 
the way over and into our registers
systems<00:01:23.159> over<00:01:23.430> here<00:01:24.320> as<00:01:25.320> you<00:01:25.470> can<00:01:25.590> see<00:01:27.170> looks

00:01:28.160 --> 00:01:28.170 
systems over here as you can see looks

00:01:28.170 --> 00:01:29.690 
systems over here as you can see looks
like<00:01:28.290> I'm<00:01:28.409> missing<00:01:28.530> a<00:01:28.740> few<00:01:28.770> repeater<00:01:29.189> so<00:01:29.400> those

00:01:29.690 --> 00:01:29.700 
like I'm missing a few repeater so those

00:01:29.700 --> 00:01:36.999 
like I'm missing a few repeater so those
will<00:01:29.820> be<00:01:29.850> added<00:01:30.210> on<00:01:30.299> uh-huh<00:01:33.409> also<00:01:34.700> we<00:01:35.700> have

00:01:36.999 --> 00:01:37.009 
will be added on uh-huh also we have

00:01:37.009 --> 00:01:40.399 
will be added on uh-huh also we have
decoders<00:01:38.009> right<00:01:38.939> here<00:01:39.210> is<00:01:39.420> these<00:01:39.930> lines

00:01:40.399 --> 00:01:40.409 
decoders right here is these lines

00:01:40.409 --> 00:01:42.859 
decoders right here is these lines
coming<00:01:40.860> up<00:01:41.009> right<00:01:41.189> here<00:01:41.340> go<00:01:41.520> into<00:01:41.670> decoders<00:01:42.270> to

00:01:42.859 --> 00:01:42.869 
coming up right here go into decoders to

00:01:42.869 --> 00:01:45.260 
coming up right here go into decoders to
control<00:01:43.170> ram<00:01:43.470> reads<00:01:43.799> write<00:01:44.159> and<00:01:44.340> writing<00:01:44.820> so

00:01:45.260 --> 00:01:45.270 
control ram reads write and writing so

00:01:45.270 --> 00:01:46.969 
control ram reads write and writing so
it's<00:01:45.390> got<00:01:45.509> two<00:01:45.659> reads<00:01:45.899> in<00:01:46.020> one<00:01:46.140> writes<00:01:46.350> right

00:01:46.969 --> 00:01:46.979 
it's got two reads in one writes right

00:01:46.979 --> 00:01:48.889 
it's got two reads in one writes right
which<00:01:47.369> is<00:01:47.549> why<00:01:47.700> there's<00:01:48.000> three<00:01:48.420> decoders

00:01:48.889 --> 00:01:48.899 
which is why there's three decoders

00:01:48.899 --> 00:01:55.520 
which is why there's three decoders
vertical<00:01:49.710> right<00:01:49.890> here<00:01:50.070> oh<00:01:51.259> and<00:01:53.689> now<00:01:54.689> here's

00:01:55.520 --> 00:01:55.530 
vertical right here oh and now here's

00:01:55.530 --> 00:01:58.300 
vertical right here oh and now here's
the<00:01:55.799> fun<00:01:56.040> part<00:01:56.070> on<00:01:56.520> how<00:01:56.759> to<00:01:56.820> program<00:01:57.299> it<00:01:57.479> and

00:01:58.300 --> 00:01:58.310 
the fun part on how to program it and

00:01:58.310 --> 00:02:01.490 
the fun part on how to program it and
what<00:01:59.310> you<00:01:59.399> can<00:01:59.520> do<00:01:59.610> with<00:01:59.729> it<00:02:00.259> this<00:02:01.259> is<00:02:01.320> the

00:02:01.490 --> 00:02:01.500 
what you can do with it this is the

00:02:01.500 --> 00:02:03.230 
what you can do with it this is the
instruction<00:02:01.890> set<00:02:02.070> this<00:02:02.670> will<00:02:02.880> be<00:02:02.969> in<00:02:03.119> the

00:02:03.230 --> 00:02:03.240 
instruction set this will be in the

00:02:03.240 --> 00:02:06.620 
instruction set this will be in the
schematic<00:02:03.659> but<00:02:03.780> I<00:02:03.840> don't<00:02:04.110> think<00:02:04.409> that<00:02:05.630> it'll

00:02:06.620 --> 00:02:06.630 
schematic but I don't think that it'll

00:02:06.630 --> 00:02:08.900 
schematic but I don't think that it'll
show<00:02:06.810> up<00:02:07.020> with<00:02:07.619> the<00:02:07.740> signs<00:02:07.979> when<00:02:08.399> you<00:02:08.520> paste<00:02:08.729> it

00:02:08.900 --> 00:02:08.910 
show up with the signs when you paste it

00:02:08.910 --> 00:02:10.130 
show up with the signs when you paste it
into<00:02:09.030> your<00:02:09.090> world<00:02:09.330> so<00:02:09.629> you<00:02:09.720> might<00:02:09.869> want<00:02:10.020> to<00:02:10.050> pay

00:02:10.130 --> 00:02:10.140 
into your world so you might want to pay

00:02:10.140 --> 00:02:12.089 
into your world so you might want to pay
attention<00:02:10.170> here

00:02:12.089 --> 00:02:12.099 
attention here

00:02:12.099 --> 00:02:14.220 
attention here
first<00:02:12.730> ones<00:02:12.909> add<00:02:13.180> second<00:02:13.840> instructions

00:02:14.220 --> 00:02:14.230 
first ones add second instructions

00:02:14.230 --> 00:02:16.589 
first ones add second instructions
subtract<00:02:14.739> third<00:02:15.340> one<00:02:15.519> is<00:02:15.610> or<00:02:15.819> fourth<00:02:16.390> one<00:02:16.480> is

00:02:16.589 --> 00:02:16.599 
subtract third one is or fourth one is

00:02:16.599 --> 00:02:19.979 
subtract third one is or fourth one is
and<00:02:16.870> xnor<00:02:17.769> right<00:02:18.400> shift<00:02:18.730> branch<00:02:19.480> vehicle<00:02:19.840> to

00:02:19.979 --> 00:02:19.989 
and xnor right shift branch vehicle to

00:02:19.989 --> 00:02:22.399 
and xnor right shift branch vehicle to
direct<00:02:20.370> branch<00:02:21.370> is<00:02:21.519> greater<00:02:21.700> than<00:02:21.909> direct

00:02:22.399 --> 00:02:22.409 
direct branch is greater than direct

00:02:22.409 --> 00:02:25.349 
direct branch is greater than direct
load<00:02:23.409> word<00:02:23.620> for<00:02:23.799> memory<00:02:24.069> and<00:02:24.250> store<00:02:24.730> word<00:02:24.909> to

00:02:25.349 --> 00:02:25.359 
load word for memory and store word to

00:02:25.359 --> 00:02:28.080 
load word for memory and store word to
memory<00:02:25.659> that's<00:02:26.560> all<00:02:26.769> this<00:02:26.950> is<00:02:27.030> capable<00:02:28.030> of

00:02:28.080 --> 00:02:28.090 
memory that's all this is capable of

00:02:28.090 --> 00:02:33.619 
memory that's all this is capable of
doing<00:02:29.340> so<00:02:30.340> you'll<00:02:30.489> see<00:02:31.049> this<00:02:32.049> is<00:02:32.230> more<00:02:32.349> stuff<00:02:32.650> a

00:02:33.619 --> 00:02:33.629 
doing so you'll see this is more stuff a

00:02:33.629 --> 00:02:36.630 
doing so you'll see this is more stuff a
DDR<00:02:34.629> stands<00:02:34.930> for<00:02:35.079> address<00:02:35.560> and<00:02:35.799> then<00:02:36.129> JMP

00:02:36.630 --> 00:02:36.640 
DDR stands for address and then JMP

00:02:36.640 --> 00:02:38.429 
DDR stands for address and then JMP
stands<00:02:37.120> for<00:02:37.239> jump<00:02:37.510> so<00:02:37.810> one<00:02:38.079> is<00:02:38.170> going<00:02:38.260> to<00:02:38.319> be<00:02:38.409> a

00:02:38.429 --> 00:02:38.439 
stands for jump so one is going to be a

00:02:38.439 --> 00:02:39.660 
stands for jump so one is going to be a
jump<00:02:38.650> address<00:02:38.799> and<00:02:39.069> the<00:02:39.129> other<00:02:39.220> which<00:02:39.459> can<00:02:39.489> be

00:02:39.660 --> 00:02:39.670 
jump address and the other which can be

00:02:39.670 --> 00:02:44.280 
jump address and the other which can be
an<00:02:39.760> address<00:02:40.090> in<00:02:40.239> Miami<00:02:42.719> argument<00:02:43.719> a<00:02:43.840> are<00:02:44.019> human

00:02:44.280 --> 00:02:44.290 
an address in Miami argument a are human

00:02:44.290 --> 00:02:46.740 
an address in Miami argument a are human
B<00:02:44.409> and<00:02:44.709> saving<00:02:45.489> register<00:02:45.879> I'm<00:02:46.090> pretty<00:02:46.629> sure

00:02:46.740 --> 00:02:46.750 
B and saving register I'm pretty sure

00:02:46.750 --> 00:02:48.000 
B and saving register I'm pretty sure
this<00:02:46.900> other<00:02:47.049> hoop<00:02:47.290> tip<00:02:47.439> down<00:02:47.590> there<00:02:47.799> I'm<00:02:47.889> not

00:02:48.000 --> 00:02:48.010 
this other hoop tip down there I'm not

00:02:48.010 --> 00:02:52.800 
this other hoop tip down there I'm not
sure<00:02:48.250> but<00:02:48.519> let's<00:02:49.209> go<00:02:49.299> see<00:02:49.450> the<00:02:49.569> wrong<00:02:51.629> so<00:02:52.629> what

00:02:52.800 --> 00:02:52.810 
sure but let's go see the wrong so what

00:02:52.810 --> 00:02:54.750 
sure but let's go see the wrong so what
you'll<00:02:52.989> see<00:02:53.079> here<00:02:53.439> is<00:02:53.500> everything<00:02:54.129> is<00:02:54.250> really

00:02:54.750 --> 00:02:54.760 
you'll see here is everything is really

00:02:54.760 --> 00:02:59.869 
you'll see here is everything is really
thrown<00:02:55.599> together<00:02:55.989> it<00:02:56.349> as<00:02:56.500> small<00:02:56.889> as<00:02:56.950> possible

00:02:59.869 --> 00:02:59.879 

00:02:59.879 --> 00:03:02.659 

yeah<00:03:00.909> so<00:03:01.599> here's<00:03:01.810> our<00:03:01.930> first<00:03:02.139> line<00:03:02.290> of<00:03:02.439> ROM

00:03:02.659 --> 00:03:02.669 
yeah so here's our first line of ROM

00:03:02.669 --> 00:03:05.429 
yeah so here's our first line of ROM
it's<00:03:03.669> color<00:03:03.909> coded<00:03:04.000> it<00:03:04.599> should<00:03:05.049> match<00:03:05.260> up

00:03:05.429 --> 00:03:05.439 
it's color coded it should match up

00:03:05.439 --> 00:03:07.129 
it's color coded it should match up
there<00:03:05.620> so<00:03:05.799> that<00:03:05.829> these<00:03:06.189> are<00:03:06.310> the<00:03:06.430> immediate

00:03:07.129 --> 00:03:07.139 
there so that these are the immediate

00:03:07.139 --> 00:03:09.420 
there so that these are the immediate
this<00:03:08.139> is<00:03:08.319> a<00:03:08.349> register<00:03:08.799> argument<00:03:09.280> this<00:03:09.370> is

00:03:09.420 --> 00:03:09.430 
this is a register argument this is

00:03:09.430 --> 00:03:10.589 
this is a register argument this is
another<00:03:09.700> register<00:03:10.090> argument<00:03:10.419> and<00:03:10.510> there

00:03:10.589 --> 00:03:10.599 
another register argument and there

00:03:10.599 --> 00:03:13.440 
another register argument and there
should<00:03:10.720> be<00:03:10.810> a<00:03:10.840> register<00:03:11.500> right<00:03:12.150> and<00:03:13.150> might

00:03:13.440 --> 00:03:13.450 
should be a register right and might

00:03:13.450 --> 00:03:20.069 
should be a register right and might
that<00:03:13.480> may<00:03:13.900> not<00:03:14.049> be<00:03:14.109> correct<00:03:14.349> though<00:03:18.840> yep

00:03:20.069 --> 00:03:20.079 
that may not be correct though yep

00:03:20.079 --> 00:03:23.280 
that may not be correct though yep
this<00:03:20.349> is<00:03:20.500> that<00:03:20.799> was<00:03:20.919> register<00:03:21.250> right<00:03:22.109> this<00:03:23.109> is

00:03:23.280 --> 00:03:23.290 
this is that was register right this is

00:03:23.290 --> 00:03:24.629 
this is that was register right this is
read<00:03:23.470> B<00:03:23.650> and<00:03:23.859> then<00:03:23.979> this<00:03:24.099> is<00:03:24.280> read<00:03:24.459> a<00:03:24.579> so

00:03:24.629 --> 00:03:24.639 
read B and then this is read a so

00:03:24.639 --> 00:03:26.339 
read B and then this is read a so
there's<00:03:25.209> more<00:03:25.359> signs<00:03:25.629> over<00:03:25.810> here<00:03:25.930> a<00:03:26.079> telling

00:03:26.339 --> 00:03:26.349 
there's more signs over here a telling

00:03:26.349 --> 00:03:30.750 
there's more signs over here a telling
if<00:03:26.440> you're<00:03:26.650> not<00:03:26.949> aware<00:03:27.629> and<00:03:29.310> then<00:03:30.310> we<00:03:30.459> have<00:03:30.609> our

00:03:30.750 --> 00:03:30.760 
if you're not aware and then we have our

00:03:30.760 --> 00:03:32.879 
if you're not aware and then we have our
four<00:03:31.060> bit<00:03:31.239> opcode<00:03:31.419> in<00:03:31.840> red<00:03:32.079> all<00:03:32.530> the<00:03:32.680> way<00:03:32.739> over

00:03:32.879 --> 00:03:32.889 
four bit opcode in red all the way over

00:03:32.889 --> 00:03:37.979 
four bit opcode in red all the way over
here<00:03:33.129> now<00:03:34.109> you'll<00:03:35.109> see<00:03:35.319> that<00:03:35.349> our<00:03:35.560> opcode<00:03:36.989> that

00:03:37.979 --> 00:03:37.989 
here now you'll see that our opcode that

00:03:37.989 --> 00:03:39.449 
here now you'll see that our opcode that
we<00:03:38.139> have<00:03:38.290> some<00:03:38.440> busing<00:03:38.769> underneath<00:03:39.099> this

00:03:39.449 --> 00:03:39.459 
we have some busing underneath this

00:03:39.459 --> 00:03:42.360 
we have some busing underneath this
opcode<00:03:40.079> only<00:03:41.079> goes<00:03:41.260> to<00:03:41.500> this<00:03:41.799> is<00:03:41.949> the<00:03:42.040> decoder

00:03:42.360 --> 00:03:42.370 
opcode only goes to this is the decoder

00:03:42.370 --> 00:03:44.550 
opcode only goes to this is the decoder
for<00:03:42.579> right<00:03:42.760> here<00:03:43.000> since<00:03:43.299> this<00:03:43.419> we're<00:03:43.629> upwards

00:03:44.550 --> 00:03:44.560 
for right here since this we're upwards

00:03:44.560 --> 00:03:47.250 
for right here since this we're upwards
hit<00:03:44.709> decoded<00:03:45.190> and<00:03:45.389> this<00:03:46.389> is<00:03:46.510> where<00:03:46.629> at<00:03:46.780> the<00:03:46.900> ALU

00:03:47.250 --> 00:03:47.260 
hit decoded and this is where at the ALU

00:03:47.260 --> 00:03:50.580 
hit decoded and this is where at the ALU
ops<00:03:47.440> code<00:03:47.769> and<00:03:48.780> then<00:03:49.780> the<00:03:50.049> other<00:03:50.199> apps<00:03:50.409> right

00:03:50.580 --> 00:03:50.590 
ops code and then the other apps right

00:03:50.590 --> 00:03:52.800 
ops code and then the other apps right
here<00:03:50.769> is<00:03:51.010> cell<00:03:51.280> branching<00:03:51.790> logic<00:03:51.909> built-in

00:03:52.800 --> 00:03:52.810 
here is cell branching logic built-in

00:03:52.810 --> 00:03:53.629 
here is cell branching logic built-in
right<00:03:52.989> here

00:03:53.629 --> 00:03:53.639 
right here

00:03:53.639 --> 00:03:57.050 
right here
these<00:03:54.639> are<00:03:54.790> flags<00:03:55.060> for<00:03:55.389> branching

00:03:57.050 --> 00:03:57.060 
these are flags for branching

00:03:57.060 --> 00:04:01.040 
these are flags for branching
and<00:03:57.980> yeah<00:03:59.330> so<00:04:00.330> that's<00:04:00.360> how<00:04:00.600> that<00:04:00.720> works<00:04:00.930> and

00:04:01.040 --> 00:04:01.050 
and yeah so that's how that works and

00:04:01.050 --> 00:04:03.110 
and yeah so that's how that works and
now<00:04:01.140> I'll<00:04:01.260> show<00:04:01.410> you<00:04:01.440> guys<00:04:01.650> the<00:04:01.709> PC<00:04:02.220> so<00:04:03.000> then

00:04:03.110 --> 00:04:03.120 
now I'll show you guys the PC so then

00:04:03.120 --> 00:04:04.190 
now I'll show you guys the PC so then
you<00:04:03.209> can<00:04:03.330> actually<00:04:03.420> start<00:04:03.600> programming<00:04:04.050> this

00:04:04.190 --> 00:04:04.200 
you can actually start programming this

00:04:04.200 --> 00:04:07.130 
you can actually start programming this
yourself<00:04:05.150> so<00:04:06.150> right<00:04:06.270> here's<00:04:06.450> the<00:04:06.510> clock<00:04:06.840> and

00:04:07.130 --> 00:04:07.140 
yourself so right here's the clock and

00:04:07.140 --> 00:04:09.500 
yourself so right here's the clock and
here's<00:04:07.860> a<00:04:07.950> solid<00:04:08.190> APC<00:04:08.700> that<00:04:08.850> I<00:04:08.880> built<00:04:09.150> with

00:04:09.500 --> 00:04:09.510 
here's a solid APC that I built with

00:04:09.510 --> 00:04:13.460 
here's a solid APC that I built with
branching<00:04:09.990> and<00:04:10.400> you'll<00:04:11.400> notice<00:04:11.670> that<00:04:12.470> right

00:04:13.460 --> 00:04:13.470 
branching and you'll notice that right

00:04:13.470 --> 00:04:16.550 
branching and you'll notice that right
now<00:04:13.650> where<00:04:13.950> you<00:04:14.069> have<00:04:14.360> data<00:04:15.360> we<00:04:15.630> have<00:04:15.750> a<00:04:15.780> 30

00:04:16.550 --> 00:04:16.560 
now where you have data we have a 30

00:04:16.560 --> 00:04:19.460 
now where you have data we have a 30
being<00:04:17.519> outputted<00:04:17.850> citizens<00:04:18.299> like<00:04:18.480> clock<00:04:19.320> it

00:04:19.460 --> 00:04:19.470 
being outputted citizens like clock it

00:04:19.470 --> 00:04:22.900 
being outputted citizens like clock it
just<00:04:19.650> when<00:04:19.799> we're<00:04:19.950> talking<00:04:20.100> by<00:04:20.370> doing<00:04:20.700> this

00:04:22.900 --> 00:04:22.910 

00:04:22.910 --> 00:04:25.180 

it'll<00:04:23.910> go<00:04:24.150> to<00:04:24.300> 31

00:04:25.180 --> 00:04:25.190 
it'll go to 31

00:04:25.190 --> 00:04:28.550 
it'll go to 31
please<00:04:26.190> all<00:04:26.460> of<00:04:26.550> them<00:04:26.669> around<00:04:26.850> right<00:04:27.060> here<00:04:27.560> and

00:04:28.550 --> 00:04:28.560 
please all of them around right here and

00:04:28.560 --> 00:04:30.260 
please all of them around right here and
if<00:04:28.800> I<00:04:28.919> click<00:04:28.950> a<00:04:29.130> clock<00:04:29.550> one<00:04:29.730> more<00:04:29.880> time<00:04:30.060> they're

00:04:30.260 --> 00:04:30.270 
if I click a clock one more time they're

00:04:30.270 --> 00:04:36.080 
if I click a clock one more time they're
all<00:04:30.390> going<00:04:30.510> to<00:04:30.600> turn<00:04:30.720> off<00:04:32.960> so<00:04:33.960> they're<00:04:34.110> all<00:04:35.090> so

00:04:36.080 --> 00:04:36.090 
all going to turn off so they're all so

00:04:36.090 --> 00:04:37.610 
all going to turn off so they're all so
now<00:04:36.180> basically<00:04:36.390> it's<00:04:36.750> the<00:04:36.870> clock<00:04:37.110> so<00:04:37.440> if<00:04:37.560> you

00:04:37.610 --> 00:04:37.620 
now basically it's the clock so if you

00:04:37.620 --> 00:04:39.860 
now basically it's the clock so if you
want<00:04:37.890> to<00:04:37.950> actually<00:04:38.220> start<00:04:38.460> the<00:04:38.490> clock<00:04:38.870> flip

00:04:39.860 --> 00:04:39.870 
want to actually start the clock flip

00:04:39.870 --> 00:04:42.020 
want to actually start the clock flip
that<00:04:40.050> down<00:04:40.110> and<00:04:40.680> give<00:04:40.860> us<00:04:40.980> a<00:04:41.010> flick<00:04:41.370> on<00:04:41.669> and<00:04:41.940> off

00:04:42.020 --> 00:04:42.030 
that down and give us a flick on and off

00:04:42.030 --> 00:04:42.880 
that down and give us a flick on and off
again

00:04:42.880 --> 00:04:42.890 
again

00:04:42.890 --> 00:04:46.430 
again
we'll<00:04:43.890> use<00:04:43.919> a<00:04:44.070> button<00:04:44.310> there<00:04:44.520> go<00:04:44.640> easy<00:04:45.380> now<00:04:46.380> the

00:04:46.430 --> 00:04:46.440 
we'll use a button there go easy now the

00:04:46.440 --> 00:04:47.780 
we'll use a button there go easy now the
clock<00:04:46.680> is<00:04:46.710> running<00:04:46.860> that<00:04:47.250> you'll<00:04:47.430> notice<00:04:47.700> that

00:04:47.780 --> 00:04:47.790 
clock is running that you'll notice that

00:04:47.790 --> 00:04:49.370 
clock is running that you'll notice that
there's<00:04:48.030> nothing<00:04:48.300> being<00:04:48.479> outputted<00:04:48.870> here

00:04:49.370 --> 00:04:49.380 
there's nothing being outputted here

00:04:49.380 --> 00:04:55.520 
there's nothing being outputted here
this<00:04:50.310> is<00:04:50.580> not<00:04:52.160> so<00:04:53.160> now<00:04:53.280> that<00:04:53.340> that's<00:04:53.520> on<00:04:54.320> PC<00:04:55.320> it

00:04:55.520 --> 00:04:55.530 
this is not so now that that's on PC it

00:04:55.530 --> 00:04:58.040 
this is not so now that that's on PC it
will<00:04:55.620> start<00:04:55.889> incrementing<00:04:56.630> going<00:04:57.630> up<00:04:57.810> and

00:04:58.040 --> 00:04:58.050 
will start incrementing going up and

00:04:58.050 --> 00:05:00.080 
will start incrementing going up and
you'll<00:04:58.290> see<00:04:58.380> that<00:04:58.710> this<00:04:58.950> is<00:04:59.010> incrementing<00:04:59.970> in

00:05:00.080 --> 00:05:00.090 
you'll see that this is incrementing in

00:05:00.090 --> 00:05:14.640 
you'll see that this is incrementing in
whoops<00:05:00.510> this<00:05:00.930> declares

00:05:14.640 --> 00:05:14.650 

00:05:14.650 --> 00:05:16.780 

you<00:05:15.650> see<00:05:15.860> that<00:05:16.010> these<00:05:16.130> lines<00:05:16.490> are<00:05:16.670> actually

00:05:16.780 --> 00:05:16.790 
you see that these lines are actually

00:05:16.790 --> 00:05:21.940 
you see that these lines are actually
turning<00:05:17.150> off<00:05:17.450> icicles<00:05:20.380> it's<00:05:21.380> just<00:05:21.530> going

00:05:21.940 --> 00:05:21.950 
turning off icicles it's just going

00:05:21.950 --> 00:05:23.560 
turning off icicles it's just going
through<00:05:22.070> the<00:05:22.370> lines<00:05:22.520> now<00:05:22.730> there's<00:05:22.910> 15<00:05:23.300> lines

00:05:23.560 --> 00:05:23.570 
through the lines now there's 15 lines

00:05:23.570 --> 00:05:24.910 
through the lines now there's 15 lines
here<00:05:23.810> so<00:05:23.990> that<00:05:24.110> means<00:05:24.320> there's<00:05:24.470> four<00:05:24.710> bits

00:05:24.910 --> 00:05:24.920 
here so that means there's four bits

00:05:24.920 --> 00:05:27.730 
here so that means there's four bits
there's<00:05:25.880> five<00:05:26.210> bit<00:05:26.510> lines<00:05:27.200> here<00:05:27.470> so<00:05:27.500> if<00:05:27.650> you

00:05:27.730 --> 00:05:27.740 
there's five bit lines here so if you

00:05:27.740 --> 00:05:30.400 
there's five bit lines here so if you
want<00:05:27.920> to<00:05:27.980> add<00:05:28.160> another<00:05:28.660> 15<00:05:29.660> lines<00:05:29.900> braum<00:05:30.230> you

00:05:30.400 --> 00:05:30.410 
want to add another 15 lines braum you

00:05:30.410 --> 00:05:34.290 
want to add another 15 lines braum you
can<00:05:30.650> and<00:05:31.060> then<00:05:32.060> there's<00:05:32.270> even<00:05:32.420> another<00:05:33.010> bit

00:05:34.290 --> 00:05:34.300 
can and then there's even another bit

00:05:34.300 --> 00:05:37.870 
can and then there's even another bit
right<00:05:35.300> here<00:05:35.840> if<00:05:36.410> you<00:05:36.980> wanted<00:05:37.220> to<00:05:37.310> make<00:05:37.430> the<00:05:37.550> PC

00:05:37.870 --> 00:05:37.880 
right here if you wanted to make the PC

00:05:37.880 --> 00:05:41.080 
right here if you wanted to make the PC
one<00:05:38.330> bit<00:05:38.780> larger<00:05:39.460> you'd<00:05:40.460> hook<00:05:40.580> this<00:05:40.730> up<00:05:40.880> with<00:05:41.030> a

00:05:41.080 --> 00:05:41.090 
one bit larger you'd hook this up with a

00:05:41.090 --> 00:05:44.650 
one bit larger you'd hook this up with a
branch<00:05:41.300> of<00:05:41.450> it<00:05:41.600> and<00:05:41.780> then<00:05:42.160> have<00:05:43.160> up<00:05:43.580> to<00:05:43.790> 64<00:05:44.300> or

00:05:44.650 --> 00:05:44.660 
branch of it and then have up to 64 or

00:05:44.660 --> 00:05:47.860 
branch of it and then have up to 64 or
63<00:05:45.140> program<00:05:45.530> lines<00:05:46.570> that<00:05:47.570> was<00:05:47.660> a<00:05:47.690> lot<00:05:47.810> of

00:05:47.860 --> 00:05:47.870 
63 program lines that was a lot of

00:05:47.870 --> 00:05:51.820 
63 program lines that was a lot of
program<00:05:48.110> lines<00:05:48.290> so<00:05:48.440> I<00:05:48.470> only<00:05:48.650> kept<00:05:49.160> it<00:05:49.720> 14<00:05:50.830> 15

00:05:51.820 --> 00:05:51.830 
program lines so I only kept it 14 15

00:05:51.830 --> 00:05:54.640 
program lines so I only kept it 14 15
five<00:05:52.600> and<00:05:53.600> as<00:05:53.780> you'll<00:05:53.960> see<00:05:53.990> it's<00:05:54.260> still

00:05:54.640 --> 00:05:54.650 
five and as you'll see it's still

00:05:54.650 --> 00:05:58.360 
five and as you'll see it's still
counting<00:05:55.070> up<00:05:56.170> and<00:05:57.170> it's<00:05:57.800> as<00:05:57.920> simple<00:05:58.040> as

00:05:58.360 --> 00:05:58.370 
counting up and it's as simple as

00:05:58.370 --> 00:06:01.690 
counting up and it's as simple as
stopping<00:05:59.360> the<00:05:59.420> clock<00:05:59.540> like<00:05:59.810> that<00:06:00.610> see<00:06:01.610> it

00:06:01.690 --> 00:06:01.700 
stopping the clock like that see it

00:06:01.700 --> 00:06:05.200 
stopping the clock like that see it
stopped<00:06:01.940> and<00:06:02.390> then<00:06:03.370> just<00:06:04.370> disabling<00:06:05.030> that

00:06:05.200 --> 00:06:05.210 
stopped and then just disabling that

00:06:05.210 --> 00:06:08.860 
stopped and then just disabling that
right<00:06:05.330> there<00:06:06.160> branch<00:06:07.160> has<00:06:07.340> worked<00:06:07.550> by<00:06:07.880> if<00:06:08.660> it

00:06:08.860 --> 00:06:08.870 
right there branch has worked by if it

00:06:08.870 --> 00:06:10.330 
right there branch has worked by if it
gets<00:06:09.020> branch<00:06:09.290> data<00:06:09.590> if<00:06:09.830> it<00:06:10.010> gets<00:06:10.160> an

00:06:10.330 --> 00:06:10.340 
gets branch data if it gets an

00:06:10.340 --> 00:06:13.690 
gets branch data if it gets an
instruction<00:06:10.970> to<00:06:11.000> branch<00:06:11.470> it'll<00:06:12.470> come<00:06:12.650> in<00:06:12.830> will

00:06:13.690 --> 00:06:13.700 
instruction to branch it'll come in will

00:06:13.700 --> 00:06:16.240 
instruction to branch it'll come in will
turn<00:06:13.880> off<00:06:14.090> allow<00:06:14.900> these<00:06:15.100> comparators<00:06:16.100> go

00:06:16.240 --> 00:06:16.250 
turn off allow these comparators go

00:06:16.250 --> 00:06:18.100 
turn off allow these comparators go
through<00:06:16.490> and<00:06:17.180> then<00:06:17.330> it<00:06:17.450> will<00:06:17.570> flood<00:06:17.900> these

00:06:18.100 --> 00:06:18.110 
through and then it will flood these

00:06:18.110 --> 00:06:21.400 
through and then it will flood these
it'll<00:06:18.770> clock<00:06:19.160> it<00:06:19.400> right<00:06:20.030> here<00:06:20.390> just<00:06:20.900> into<00:06:21.260> this

00:06:21.400 --> 00:06:21.410 
it'll clock it right here just into this

00:06:21.410 --> 00:06:23.860 
it'll clock it right here just into this
torture<00:06:22.190> step<00:06:22.430> in<00:06:22.580> step<00:06:22.760> 1<00:06:22.970> field<00:06:23.000> honestly

00:06:23.860 --> 00:06:23.870 
torture step in step 1 field honestly

00:06:23.870 --> 00:06:25.780 
torture step in step 1 field honestly
it'll<00:06:24.320> also<00:06:24.500> disable<00:06:25.130> these<00:06:25.250> tours<00:06:25.490> is<00:06:25.640> here

00:06:25.780 --> 00:06:25.790 
it'll also disable these tours is here

00:06:25.790 --> 00:06:28.060 
it'll also disable these tours is here
from<00:06:25.940> propagating<00:06:26.270> up<00:06:26.630> a<00:06:26.840> signal<00:06:27.320> so<00:06:27.920> that's

00:06:28.060 --> 00:06:28.070 
from propagating up a signal so that's

00:06:28.070 --> 00:06:30.100 
from propagating up a signal so that's
how<00:06:28.190> branching<00:06:28.550> works

00:06:30.100 --> 00:06:30.110 
how branching works

00:06:30.110 --> 00:06:33.620 
how branching works
yeah<00:06:31.110> this<00:06:31.350> thing<00:06:31.500> is<00:06:31.530> complete<00:06:32.300> as<00:06:33.300> I<00:06:33.450> said

00:06:33.620 --> 00:06:33.630 
yeah this thing is complete as I said

00:06:33.630 --> 00:06:34.880 
yeah this thing is complete as I said
there's<00:06:33.900> nothing<00:06:34.050> programmed<00:06:34.560> on<00:06:34.680> it<00:06:34.770> now

00:06:34.880 --> 00:06:34.890 
there's nothing programmed on it now

00:06:34.890 --> 00:06:37.310 
there's nothing programmed on it now
that's<00:06:35.100> more<00:06:35.430> for<00:06:35.640> you<00:06:35.880> to<00:06:36.060> do<00:06:36.210> because<00:06:37.110> this

00:06:37.310 --> 00:06:37.320 
that's more for you to do because this

00:06:37.320 --> 00:06:39.650 
that's more for you to do because this
is<00:06:37.380> more<00:06:37.620> of<00:06:37.710> a<00:06:37.740> proof<00:06:37.920> of<00:06:38.010> concept<00:06:38.600> just<00:06:39.600> to

00:06:39.650 --> 00:06:39.660 
is more of a proof of concept just to

00:06:39.660 --> 00:06:43.910 
is more of a proof of concept just to
learn<00:06:39.810> basic<00:06:40.910> circuits

