WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.880 

what's<00:00:00.299> up<00:00:00.450> guys<00:00:00.630> Mike<00:00:00.989> here<00:00:01.230> the<00:00:01.410> Detroit

00:00:01.880 --> 00:00:01.890 
what's up guys Mike here the Detroit

00:00:01.890 --> 00:00:03.710 
what's up guys Mike here the Detroit
Borg<00:00:02.250> with<00:00:02.520> a<00:00:02.550> comparison<00:00:02.939> of<00:00:03.149> the<00:00:03.270> speed<00:00:03.510> and

00:00:03.710 --> 00:00:03.720 
Borg with a comparison of the speed and

00:00:03.720 --> 00:00:05.570 
Borg with a comparison of the speed and
gaming<00:00:04.170> performance<00:00:04.740> of<00:00:04.830> the<00:00:04.920> iPhone<00:00:05.250> 5

00:00:05.570 --> 00:00:05.580 
gaming performance of the iPhone 5

00:00:05.580 --> 00:00:08.330 
gaming performance of the iPhone 5
versus<00:00:06.029> the<00:00:06.210> iPod<00:00:06.629> Touch<00:00:06.899> 5th<00:00:07.140> generation<00:00:07.340> now

00:00:08.330 --> 00:00:08.340 
versus the iPod Touch 5th generation now

00:00:08.340 --> 00:00:10.129 
versus the iPod Touch 5th generation now
to<00:00:08.519> make<00:00:08.670> this<00:00:08.790> a<00:00:08.849> fair<00:00:09.120> fight<00:00:09.510> each<00:00:09.690> devices

00:00:10.129 --> 00:00:10.139 
to make this a fair fight each devices

00:00:10.139 --> 00:00:11.629 
to make this a fair fight each devices
are<00:00:10.260> virtual<00:00:10.590> clones<00:00:10.860> of<00:00:11.040> each<00:00:11.190> other<00:00:11.370> both

00:00:11.629 --> 00:00:11.639 
are virtual clones of each other both

00:00:11.639 --> 00:00:13.999 
are virtual clones of each other both
running<00:00:11.940> iOS<00:00:12.269> 6<00:00:12.660> with<00:00:13.139> the<00:00:13.230> same<00:00:13.410> apps<00:00:13.650> and

00:00:13.999 --> 00:00:14.009 
running iOS 6 with the same apps and

00:00:14.009 --> 00:00:16.400 
running iOS 6 with the same apps and
settings<00:00:14.580> before<00:00:15.299> I<00:00:15.480> proceed<00:00:15.690> I<00:00:16.020> just<00:00:16.230> want<00:00:16.350> to

00:00:16.400 --> 00:00:16.410 
settings before I proceed I just want to

00:00:16.410 --> 00:00:17.810 
settings before I proceed I just want to
show<00:00:16.529> you<00:00:16.590> that<00:00:16.800> I've<00:00:17.039> closed<00:00:17.279> down<00:00:17.520> all<00:00:17.699> the

00:00:17.810 --> 00:00:17.820 
show you that I've closed down all the

00:00:17.820 --> 00:00:20.150 
show you that I've closed down all the
suspended<00:00:18.330> and<00:00:18.449> background<00:00:19.260> apps<00:00:19.470> I<00:00:19.740> also

00:00:20.150 --> 00:00:20.160 
suspended and background apps I also

00:00:20.160 --> 00:00:22.099 
suspended and background apps I also
want<00:00:20.340> to<00:00:20.369> jump<00:00:20.609> to<00:00:20.789> my<00:00:20.820> Safari<00:00:21.510> settings<00:00:22.050> to

00:00:22.099 --> 00:00:22.109 
want to jump to my Safari settings to

00:00:22.109 --> 00:00:23.210 
want to jump to my Safari settings to
make<00:00:22.230> sure<00:00:22.380> that<00:00:22.560> the<00:00:22.710> cache<00:00:22.949> and<00:00:23.189> cookies

00:00:23.210 --> 00:00:23.220 
make sure that the cache and cookies

00:00:23.220 --> 00:00:25.220 
make sure that the cache and cookies
have<00:00:23.699> been<00:00:23.880> cleared<00:00:24.180> so<00:00:24.720> that<00:00:24.750> we<00:00:24.960> have<00:00:25.080> no

00:00:25.220 --> 00:00:25.230 
have been cleared so that we have no

00:00:25.230 --> 00:00:26.990 
have been cleared so that we have no
pre-loaded<00:00:25.800> content<00:00:26.250> to<00:00:26.430> skew<00:00:26.789> the<00:00:26.820> results

00:00:26.990 --> 00:00:27.000 
pre-loaded content to skew the results

00:00:27.000 --> 00:00:29.210 
pre-loaded content to skew the results
I'm<00:00:27.840> also<00:00:27.960> going<00:00:28.199> to<00:00:28.289> set<00:00:28.500> the<00:00:28.619> browser<00:00:28.890> to

00:00:29.210 --> 00:00:29.220 
I'm also going to set the browser to

00:00:29.220 --> 00:00:31.370 
I'm also going to set the browser to
private<00:00:29.670> browsing<00:00:29.970> mode<00:00:30.359> to<00:00:30.810> prevent<00:00:31.019> it<00:00:31.349> from

00:00:31.370 --> 00:00:31.380 
private browsing mode to prevent it from

00:00:31.380 --> 00:00:33.709 
private browsing mode to prevent it from
caching<00:00:31.949> data<00:00:32.130> during<00:00:32.579> the<00:00:32.700> test<00:00:32.969> which<00:00:33.570> will

00:00:33.709 --> 00:00:33.719 
caching data during the test which will

00:00:33.719 --> 00:00:35.479 
caching data during the test which will
explain<00:00:34.050> the<00:00:34.230> dark<00:00:34.469> UI<00:00:34.680> color<00:00:35.190> you're<00:00:35.370> going

00:00:35.479 --> 00:00:35.489 
explain the dark UI color you're going

00:00:35.489 --> 00:00:37.549 
explain the dark UI color you're going
to<00:00:35.550> see<00:00:35.730> now<00:00:36.300> for<00:00:36.510> the<00:00:36.570> power<00:00:36.750> cycle<00:00:37.140> test<00:00:37.320> both

00:00:37.549 --> 00:00:37.559 
to see now for the power cycle test both

00:00:37.559 --> 00:00:39.110 
to see now for the power cycle test both
devices<00:00:37.800> appear<00:00:38.190> to<00:00:38.280> boot<00:00:38.460> up<00:00:38.550> and<00:00:38.730> shut<00:00:38.940> down

00:00:39.110 --> 00:00:39.120 
devices appear to boot up and shut down

00:00:39.120 --> 00:00:41.000 
devices appear to boot up and shut down
at<00:00:39.300> about<00:00:39.540> the<00:00:39.660> same<00:00:39.809> time<00:00:40.170> so<00:00:40.379> there<00:00:40.530> doesn't

00:00:41.000 --> 00:00:41.010 
at about the same time so there doesn't

00:00:41.010 --> 00:00:43.160 
at about the same time so there doesn't
appear<00:00:41.070> to<00:00:41.219> be<00:00:41.309> any<00:00:41.910> significant<00:00:42.570> gains<00:00:42.840> there

00:00:43.160 --> 00:00:43.170 
appear to be any significant gains there

00:00:43.170 --> 00:00:45.170 
appear to be any significant gains there
for<00:00:43.860> our<00:00:44.010> first<00:00:44.280> benchmark<00:00:44.700> we're<00:00:45.000> going<00:00:45.120> to

00:00:45.170 --> 00:00:45.180 
for our first benchmark we're going to

00:00:45.180 --> 00:00:47.029 
for our first benchmark we're going to
check<00:00:45.510> the<00:00:45.780> Geekbench<00:00:46.320> scores<00:00:46.649> which<00:00:46.890> will

00:00:47.029 --> 00:00:47.039 
check the Geekbench scores which will

00:00:47.039 --> 00:00:48.680 
check the Geekbench scores which will
measure<00:00:47.250> the<00:00:47.489> overall<00:00:47.610> hardware<00:00:48.210> performance

00:00:48.680 --> 00:00:48.690 
measure the overall hardware performance

00:00:48.690 --> 00:00:50.660 
measure the overall hardware performance
of<00:00:48.780> each<00:00:48.870> device<00:00:49.230> and<00:00:49.530> also<00:00:50.010> reveal<00:00:50.370> some<00:00:50.579> of

00:00:50.660 --> 00:00:50.670 
of each device and also reveal some of

00:00:50.670 --> 00:00:52.100 
of each device and also reveal some of
the<00:00:50.730> system<00:00:51.059> specs<00:00:51.390> which<00:00:51.600> Apple<00:00:51.840> otherwise

00:00:52.100 --> 00:00:52.110 
the system specs which Apple otherwise

00:00:52.110 --> 00:00:54.439 
the system specs which Apple otherwise
does<00:00:52.410> not<00:00:52.590> share<00:00:52.980> such<00:00:53.309> as<00:00:53.489> CPU<00:00:53.789> clock<00:00:54.149> speeds

00:00:54.439 --> 00:00:54.449 
does not share such as CPU clock speeds

00:00:54.449 --> 00:00:56.779 
does not share such as CPU clock speeds
we<00:00:55.110> can<00:00:55.230> see<00:00:55.350> that<00:00:55.469> the<00:00:55.620> iPhone<00:00:55.920> 5<00:00:56.190> is<00:00:56.219> sporting

00:00:56.779 --> 00:00:56.789 
we can see that the iPhone 5 is sporting

00:00:56.789 --> 00:00:59.060 
we can see that the iPhone 5 is sporting
the<00:00:56.850> dual-core<00:00:57.480> a6<00:00:58.170> processor<00:00:58.410> clocked

00:00:59.060 --> 00:00:59.070 
the dual-core a6 processor clocked

00:00:59.070 --> 00:01:01.279 
the dual-core a6 processor clocked
somewhere<00:00:59.399> north<00:00:59.670> of<00:00:59.850> 1<00:01:00.120> gigahertz<00:01:00.510> while<00:01:01.199> the

00:01:01.279 --> 00:01:01.289 
somewhere north of 1 gigahertz while the

00:01:01.289 --> 00:01:03.500 
somewhere north of 1 gigahertz while the
iPod<00:01:01.710> is<00:01:01.859> running<00:01:02.160> a<00:01:02.280> dual-core<00:01:02.760> a5<00:01:03.030> processor

00:01:03.500 --> 00:01:03.510 
iPod is running a dual-core a5 processor

00:01:03.510 --> 00:01:06.800 
iPod is running a dual-core a5 processor
8<00:01:04.019> 800<00:01:04.409> megahertz<00:01:05.189> with<00:01:05.820> half<00:01:06.060> the<00:01:06.299> RAM<00:01:06.540> of<00:01:06.570> the

00:01:06.800 --> 00:01:06.810 
8 800 megahertz with half the RAM of the

00:01:06.810 --> 00:01:09.410 
8 800 megahertz with half the RAM of the
iPhone<00:01:07.170> 5<00:01:07.500> which<00:01:07.740> has<00:01:08.010> one<00:01:08.310> gig<00:01:08.520> of<00:01:08.640> ram<00:01:08.700> this

00:01:09.410 --> 00:01:09.420 
iPhone 5 which has one gig of ram this

00:01:09.420 --> 00:01:11.030 
iPhone 5 which has one gig of ram this
Hardware<00:01:09.840> difference<00:01:10.229> means<00:01:10.439> the<00:01:10.530> iPhone<00:01:10.860> 5

00:01:11.030 --> 00:01:11.040 
Hardware difference means the iPhone 5

00:01:11.040 --> 00:01:12.800 
Hardware difference means the iPhone 5
is<00:01:11.220> more<00:01:11.430> than<00:01:11.610> double<00:01:12.150> the<00:01:12.180> score<00:01:12.600> of<00:01:12.720> the

00:01:12.800 --> 00:01:12.810 
is more than double the score of the

00:01:12.810 --> 00:01:14.899 
is more than double the score of the
iPod<00:01:13.110> Touch<00:01:13.409> 5th<00:01:13.619> generation<00:01:13.770> now<00:01:14.729> although

00:01:14.899 --> 00:01:14.909 
iPod Touch 5th generation now although

00:01:14.909 --> 00:01:17.060 
iPod Touch 5th generation now although
this<00:01:15.210> sounds<00:01:15.479> bad<00:01:15.840> for<00:01:16.140> the<00:01:16.200> iPod<00:01:16.590> it's<00:01:16.860> still

00:01:17.060 --> 00:01:17.070 
this sounds bad for the iPod it's still

00:01:17.070 --> 00:01:19.219 
this sounds bad for the iPod it's still
twice<00:01:17.400> the<00:01:17.729> performance<00:01:18.420> of<00:01:18.540> the<00:01:18.630> iPod<00:01:18.990> Touch

00:01:19.219 --> 00:01:19.229 
twice the performance of the iPod Touch

00:01:19.229 --> 00:01:22.429 
twice the performance of the iPod Touch
4th<00:01:19.619> generation<00:01:19.830> which<00:01:20.610> only<00:01:20.790> has<00:01:21.200> 256<00:01:22.200> gigs

00:01:22.429 --> 00:01:22.439 
4th generation which only has 256 gigs

00:01:22.439 --> 00:01:24.859 
4th generation which only has 256 gigs
of<00:01:22.619> RAM<00:01:22.799> and<00:01:23.009> a<00:01:23.340> single<00:01:23.790> core<00:01:24.060> a4<00:01:24.689> processor

00:01:24.859 --> 00:01:24.869 
of RAM and a single core a4 processor

00:01:24.869 --> 00:01:28.130 
of RAM and a single core a4 processor
clocked<00:01:25.500> 1800<00:01:26.189> megahertz<00:01:26.420> as<00:01:27.420> for<00:01:27.630> graphics

00:01:28.130 --> 00:01:28.140 
clocked 1800 megahertz as for graphics

00:01:28.140 --> 00:01:29.539 
clocked 1800 megahertz as for graphics
benchmarks<00:01:28.590> the<00:01:28.680> iPod<00:01:29.009> Touch<00:01:29.220> 5th<00:01:29.430> generation

00:01:29.539 --> 00:01:29.549 
benchmarks the iPod Touch 5th generation

00:01:29.549 --> 00:01:32.390 
benchmarks the iPod Touch 5th generation
also<00:01:30.210> resembles<00:01:30.750> the<00:01:30.900> iPhone<00:01:31.259> 4s<00:01:31.560> now<00:01:32.340> the

00:01:32.390 --> 00:01:32.400 
also resembles the iPhone 4s now the

00:01:32.400 --> 00:01:34.249 
also resembles the iPhone 4s now the
on-screen<00:01:33.090> tests<00:01:33.450> look<00:01:33.720> about<00:01:33.930> the<00:01:34.049> same

00:01:34.249 --> 00:01:34.259 
on-screen tests look about the same

00:01:34.259 --> 00:01:36.319 
on-screen tests look about the same
averaging<00:01:34.860> 60<00:01:35.250> frames<00:01:35.520> per<00:01:35.610> second<00:01:36.119> but<00:01:36.240> the

00:01:36.319 --> 00:01:36.329 
averaging 60 frames per second but the

00:01:36.329 --> 00:01:37.910 
averaging 60 frames per second but the
off-screen<00:01:36.600> tests<00:01:36.990> show<00:01:37.200> that<00:01:37.229> the<00:01:37.470> iPhone

00:01:37.910 --> 00:01:37.920 
off-screen tests show that the iPhone

00:01:37.920 --> 00:01:40.789 
off-screen tests show that the iPhone
doubles<00:01:38.340> the<00:01:38.549> performance<00:01:39.090> of<00:01:39.210> the<00:01:39.659> iPod<00:01:40.049> now

00:01:40.789 --> 00:01:40.799 
doubles the performance of the iPod now

00:01:40.799 --> 00:01:42.319 
doubles the performance of the iPod now
for<00:01:41.009> our<00:01:41.040> third<00:01:41.460> test<00:01:41.729> I'm<00:01:42.030> going<00:01:42.180> to<00:01:42.240> use

00:01:42.319 --> 00:01:42.329 
for our third test I'm going to use

00:01:42.329 --> 00:01:44.270 
for our third test I'm going to use
SunSpider<00:01:42.810> to<00:01:43.170> test<00:01:43.380> the<00:01:43.560> JavaScript

00:01:44.270 --> 00:01:44.280 
SunSpider to test the JavaScript

00:01:44.280 --> 00:01:46.999 
SunSpider to test the JavaScript
rendering<00:01:44.729> performance<00:01:44.909> of<00:01:45.420> Safari<00:01:46.200> and<00:01:46.500> once

00:01:46.999 --> 00:01:47.009 
rendering performance of Safari and once

00:01:47.009 --> 00:01:48.950 
rendering performance of Safari and once
again<00:01:47.250> we<00:01:47.490> can<00:01:47.759> see<00:01:47.820> double<00:01:48.630> the<00:01:48.750> performance

00:01:48.950 --> 00:01:48.960 
again we can see double the performance

00:01:48.960 --> 00:01:51.469 
again we can see double the performance
gains<00:01:49.560> here<00:01:49.770> with<00:01:50.100> the<00:01:50.250> iPhone<00:01:50.700> 5<00:01:50.909> completing

00:01:51.469 --> 00:01:51.479 
gains here with the iPhone 5 completing

00:01:51.479 --> 00:01:53.960 
gains here with the iPhone 5 completing
the<00:01:51.570> test<00:01:51.810> in<00:01:51.960> less<00:01:52.140> than<00:01:52.399> 1000<00:01:53.399> milliseconds

00:01:53.960 --> 00:01:53.970 
the test in less than 1000 milliseconds

00:01:53.970 --> 00:01:56.030 
the test in less than 1000 milliseconds
while<00:01:54.119> the<00:01:54.210> iPod<00:01:54.509> Touch<00:01:54.720> takes<00:01:55.079> about<00:01:55.409> 1800

00:01:56.030 --> 00:01:56.040 
while the iPod Touch takes about 1800

00:01:56.040 --> 00:01:58.550 
while the iPod Touch takes about 1800
and<00:01:56.340> 50<00:01:56.790> milliseconds<00:01:57.479> so<00:01:58.020> we<00:01:58.170> should<00:01:58.380> see

00:01:58.550 --> 00:01:58.560 
and 50 milliseconds so we should see

00:01:58.560 --> 00:02:01.039 
and 50 milliseconds so we should see
quicker<00:01:58.890> load<00:01:59.250> times<00:01:59.579> when<00:02:00.299> we<00:02:00.420> test<00:02:00.659> this<00:02:00.840> out

00:02:01.039 --> 00:02:01.049 
quicker load times when we test this out

00:02:01.049 --> 00:02:03.080 
quicker load times when we test this out
now<00:02:01.860> a<00:02:01.890> good<00:02:02.100> way<00:02:02.159> to<00:02:02.310> test<00:02:02.610> real-world

00:02:03.080 --> 00:02:03.090 
now a good way to test real-world

00:02:03.090 --> 00:02:04.760 
now a good way to test real-world
performance<00:02:03.299> is<00:02:03.750> by<00:02:03.899> comparing<00:02:04.350> the<00:02:04.439> cameras

00:02:04.760 --> 00:02:04.770 
performance is by comparing the cameras

00:02:04.770 --> 00:02:06.770 
performance is by comparing the cameras
now<00:02:05.250> in<00:02:05.340> terms<00:02:05.549> of<00:02:05.700> load<00:02:05.909> times<00:02:06.180> the<00:02:06.299> iPhone<00:02:06.570> 5

00:02:06.770 --> 00:02:06.780 
now in terms of load times the iPhone 5

00:02:06.780 --> 00:02:08.990 
now in terms of load times the iPhone 5
is<00:02:06.930> still<00:02:07.020> quicker<00:02:07.380> to<00:02:07.770> launch<00:02:08.039> so<00:02:08.399> it's<00:02:08.550> ready

00:02:08.990 --> 00:02:09.000 
is still quicker to launch so it's ready

00:02:09.000 --> 00:02:11.150 
is still quicker to launch so it's ready
to<00:02:09.090> shoot<00:02:09.420> photos<00:02:09.899> ahead<00:02:10.259> of<00:02:10.379> the<00:02:10.440> iPod<00:02:10.800> Touch

00:02:11.150 --> 00:02:11.160 
to shoot photos ahead of the iPod Touch

00:02:11.160 --> 00:02:13.160 
to shoot photos ahead of the iPod Touch
now<00:02:11.790> when<00:02:12.060> it<00:02:12.150> comes<00:02:12.270> to<00:02:12.450> taking<00:02:12.629> photos<00:02:13.080> both

00:02:13.160 --> 00:02:13.170 
now when it comes to taking photos both

00:02:13.170 --> 00:02:13.760 
now when it comes to taking photos both
cameras<00:02:13.590> are

00:02:13.760 --> 00:02:13.770 
cameras are

00:02:13.770 --> 00:02:15.890 
cameras are
very<00:02:13.920> quick<00:02:14.220> but<00:02:14.670> the<00:02:14.790> iPhone<00:02:15.090> 5<00:02:15.360> is<00:02:15.570> quicker

00:02:15.890 --> 00:02:15.900 
very quick but the iPhone 5 is quicker

00:02:15.900 --> 00:02:18.110 
very quick but the iPhone 5 is quicker
so<00:02:16.230> you<00:02:16.320> can<00:02:16.440> take<00:02:16.590> photos<00:02:16.920> as<00:02:17.070> quickly<00:02:17.370> as<00:02:17.670> you

00:02:18.110 --> 00:02:18.120 
so you can take photos as quickly as you

00:02:18.120 --> 00:02:20.180 
so you can take photos as quickly as you
can<00:02:18.270> tap<00:02:18.420> the<00:02:18.570> screen<00:02:18.690> now<00:02:19.470> the<00:02:19.620> iPhone<00:02:19.920> 5<00:02:20.160> is

00:02:20.180 --> 00:02:20.190 
can tap the screen now the iPhone 5 is

00:02:20.190 --> 00:02:22.760 
can tap the screen now the iPhone 5 is
also<00:02:20.550> quicker<00:02:20.760> at<00:02:21.000> snapping<00:02:21.270> HDR<00:02:22.200> photos

00:02:22.760 --> 00:02:22.770 
also quicker at snapping HDR photos

00:02:22.770 --> 00:02:24.980 
also quicker at snapping HDR photos
which<00:02:23.400> is<00:02:23.580> more<00:02:23.760> demanding<00:02:24.390> on<00:02:24.510> the<00:02:24.570> system

00:02:24.980 --> 00:02:24.990 
which is more demanding on the system

00:02:24.990 --> 00:02:26.780 
which is more demanding on the system
than<00:02:25.140> just<00:02:25.170> snapping<00:02:25.560> regular<00:02:26.280> photo<00:02:26.490> since

00:02:26.780 --> 00:02:26.790 
than just snapping regular photo since

00:02:26.790 --> 00:02:28.490 
than just snapping regular photo since
it<00:02:26.910> requires<00:02:27.210> more<00:02:27.450> system<00:02:27.840> resources<00:02:28.380> to

00:02:28.490 --> 00:02:28.500 
it requires more system resources to

00:02:28.500 --> 00:02:30.710 
it requires more system resources to
composite<00:02:29.100> the<00:02:29.190> images<00:02:29.700> we<00:02:30.240> also<00:02:30.390> have<00:02:30.630> to

00:02:30.710 --> 00:02:30.720 
composite the images we also have to

00:02:30.720 --> 00:02:32.540 
composite the images we also have to
consider<00:02:30.840> that<00:02:31.140> the<00:02:31.260> iPhone<00:02:31.590> 5<00:02:31.830> is<00:02:32.070> dealing

00:02:32.540 --> 00:02:32.550 
consider that the iPhone 5 is dealing

00:02:32.550 --> 00:02:34.670 
consider that the iPhone 5 is dealing
with<00:02:32.670> a<00:02:32.700> higher<00:02:33.030> resolution<00:02:33.300> 8<00:02:33.900> megapixel

00:02:34.670 --> 00:02:34.680 
with a higher resolution 8 megapixel

00:02:34.680 --> 00:02:37.640 
with a higher resolution 8 megapixel
sensor<00:02:35.070> versus<00:02:35.820> the<00:02:35.940> iPods<00:02:36.450> 5<00:02:36.990> megapixel

00:02:37.640 --> 00:02:37.650 
sensor versus the iPods 5 megapixel

00:02:37.650 --> 00:02:40.280 
sensor versus the iPods 5 megapixel
sensor<00:02:38.150> another<00:02:39.150> good<00:02:39.360> test<00:02:39.660> is<00:02:39.870> video

00:02:40.280 --> 00:02:40.290 
sensor another good test is video

00:02:40.290 --> 00:02:42.710 
sensor another good test is video
exporting<00:02:40.950> with<00:02:41.190> iMovie<00:02:41.850> now<00:02:42.090> in<00:02:42.210> this<00:02:42.300> test<00:02:42.540> I

00:02:42.710 --> 00:02:42.720 
exporting with iMovie now in this test I

00:02:42.720 --> 00:02:44.840 
exporting with iMovie now in this test I
have<00:02:42.870> identical<00:02:43.380> 41<00:02:43.770> second<00:02:44.130> long<00:02:44.280> projects

00:02:44.840 --> 00:02:44.850 
have identical 41 second long projects

00:02:44.850 --> 00:02:47.810 
have identical 41 second long projects
complete<00:02:45.720> with<00:02:45.930> transitions<00:02:46.620> and<00:02:46.830> music<00:02:47.340> now

00:02:47.810 --> 00:02:47.820 
complete with transitions and music now

00:02:47.820 --> 00:02:50.570 
complete with transitions and music now
exporting<00:02:48.390> the<00:02:48.510> project<00:02:48.900> in<00:02:49.050> 1080p<00:02:49.650> HD<00:02:49.950> on

00:02:50.570 --> 00:02:50.580 
exporting the project in 1080p HD on

00:02:50.580 --> 00:02:52.520 
exporting the project in 1080p HD on
both<00:02:50.820> devices<00:02:51.000> reveals<00:02:51.750> that<00:02:51.900> the<00:02:52.020> iPhone<00:02:52.320> 5

00:02:52.520 --> 00:02:52.530 
both devices reveals that the iPhone 5

00:02:52.530 --> 00:02:55.430 
both devices reveals that the iPhone 5
is<00:02:52.770> nearly<00:02:53.070> twice<00:02:53.520> as<00:02:53.760> fast<00:02:54.600> as<00:02:54.840> the<00:02:54.960> iPod

00:02:55.430 --> 00:02:55.440 
is nearly twice as fast as the iPod

00:02:55.440 --> 00:02:57.530 
is nearly twice as fast as the iPod
Touch<00:02:55.800> now<00:02:56.370> these<00:02:56.520> differences<00:02:57.000> will<00:02:57.150> also<00:02:57.420> be

00:02:57.530 --> 00:02:57.540 
Touch now these differences will also be

00:02:57.540 --> 00:02:59.510 
Touch now these differences will also be
magnified<00:02:58.140> on<00:02:58.350> export<00:02:58.950> jobs<00:02:59.190> which<00:02:59.400> are

00:02:59.510 --> 00:02:59.520 
magnified on export jobs which are

00:02:59.520 --> 00:03:02.510 
magnified on export jobs which are
significantly<00:03:00.330> larger<00:03:00.720> now<00:03:01.500> a<00:03:01.530> better<00:03:01.800> way<00:03:01.980> to

00:03:02.510 --> 00:03:02.520 
significantly larger now a better way to

00:03:02.520 --> 00:03:04.220 
significantly larger now a better way to
test<00:03:02.760> day-to-day<00:03:03.240> performance<00:03:03.840> is<00:03:03.960> to<00:03:04.080> see

00:03:04.220 --> 00:03:04.230 
test day-to-day performance is to see

00:03:04.230 --> 00:03:05.870 
test day-to-day performance is to see
how<00:03:04.320> quickly<00:03:04.620> apps<00:03:04.950> load<00:03:05.280> now<00:03:05.820> the

00:03:05.870 --> 00:03:05.880 
how quickly apps load now the

00:03:05.880 --> 00:03:07.850 
how quickly apps load now the
differences<00:03:06.420> here<00:03:06.660> are<00:03:06.810> pretty<00:03:07.140> minor<00:03:07.500> with

00:03:07.850 --> 00:03:07.860 
differences here are pretty minor with

00:03:07.860 --> 00:03:09.800 
differences here are pretty minor with
both<00:03:08.070> devices<00:03:08.340> fairly<00:03:08.880> evenly<00:03:09.270> matched<00:03:09.600> but

00:03:09.800 --> 00:03:09.810 
both devices fairly evenly matched but

00:03:09.810 --> 00:03:12.350 
both devices fairly evenly matched but
the<00:03:09.960> iPhone<00:03:10.050> 5<00:03:10.440> is<00:03:10.650> observably<00:03:11.220> quicker<00:03:11.550> so<00:03:12.300> if

00:03:12.350 --> 00:03:12.360 
the iPhone 5 is observably quicker so if

00:03:12.360 --> 00:03:14.030 
the iPhone 5 is observably quicker so if
we<00:03:12.450> launch<00:03:12.690> apps<00:03:12.930> side-by-side<00:03:13.170> you<00:03:13.650> can<00:03:13.860> see

00:03:14.030 --> 00:03:14.040 
we launch apps side-by-side you can see

00:03:14.040 --> 00:03:15.890 
we launch apps side-by-side you can see
there<00:03:14.220> is<00:03:14.370> a<00:03:14.400> slight<00:03:14.820> difference<00:03:15.540> this<00:03:15.690> means

00:03:15.890 --> 00:03:15.900 
there is a slight difference this means

00:03:15.900 --> 00:03:18.020 
there is a slight difference this means
the<00:03:15.990> iPhone<00:03:16.260> 5<00:03:16.470> feels<00:03:16.800> quicker<00:03:17.100> but<00:03:17.580> the<00:03:17.700> iPod

00:03:18.020 --> 00:03:18.030 
the iPhone 5 feels quicker but the iPod

00:03:18.030 --> 00:03:20.540 
the iPhone 5 feels quicker but the iPod
hardly<00:03:18.540> feels<00:03:18.870> slow<00:03:19.260> now<00:03:19.709> in<00:03:19.830> terms<00:03:20.010> of<00:03:20.160> Safari

00:03:20.540 --> 00:03:20.550 
hardly feels slow now in terms of Safari

00:03:20.550 --> 00:03:22.430 
hardly feels slow now in terms of Safari
performance<00:03:21.150> websites<00:03:21.570> consistently<00:03:22.200> load

00:03:22.430 --> 00:03:22.440 
performance websites consistently load

00:03:22.440 --> 00:03:24.290 
performance websites consistently load
more<00:03:22.650> quickly<00:03:22.830> on<00:03:23.190> the<00:03:23.580> iPhone<00:03:23.970> although

00:03:24.290 --> 00:03:24.300 
more quickly on the iPhone although

00:03:24.300 --> 00:03:25.940 
more quickly on the iPhone although
mileage<00:03:24.690> varies<00:03:25.050> depending<00:03:25.440> on<00:03:25.560> network

00:03:25.940 --> 00:03:25.950 
mileage varies depending on network

00:03:25.950 --> 00:03:28.160 
mileage varies depending on network
speeds<00:03:26.370> the<00:03:26.940> real<00:03:27.240> performance<00:03:27.750> gains<00:03:28.020> are

00:03:28.160 --> 00:03:28.170 
speeds the real performance gains are

00:03:28.170 --> 00:03:29.960 
speeds the real performance gains are
noticed<00:03:28.620> when<00:03:28.860> paging<00:03:29.340> backwards<00:03:29.760> and

00:03:29.960 --> 00:03:29.970 
noticed when paging backwards and

00:03:29.970 --> 00:03:31.699 
noticed when paging backwards and
forward<00:03:30.390> and<00:03:30.570> you<00:03:30.660> can<00:03:30.690> see<00:03:30.930> how<00:03:31.380> much<00:03:31.500> more

00:03:31.699 --> 00:03:31.709 
forward and you can see how much more

00:03:31.709 --> 00:03:33.740 
forward and you can see how much more
quickly<00:03:32.010> the<00:03:32.310> iPhone<00:03:32.670> 5<00:03:32.910> reloads<00:03:33.390> the<00:03:33.510> cache

00:03:33.740 --> 00:03:33.750 
quickly the iPhone 5 reloads the cache

00:03:33.750 --> 00:03:36.320 
quickly the iPhone 5 reloads the cache
data<00:03:34.020> than<00:03:34.290> the<00:03:34.410> iPod<00:03:34.770> Touch<00:03:35.040> the<00:03:36.030> additional

00:03:36.320 --> 00:03:36.330 
data than the iPod Touch the additional

00:03:36.330 --> 00:03:37.940 
data than the iPod Touch the additional
Ram<00:03:36.480> also<00:03:36.600> seems<00:03:36.959> to<00:03:37.020> help<00:03:37.230> with<00:03:37.470> the<00:03:37.560> state<00:03:37.770> of

00:03:37.940 --> 00:03:37.950 
Ram also seems to help with the state of

00:03:37.950 --> 00:03:39.860 
Ram also seems to help with the state of
closed<00:03:38.250> apps<00:03:38.520> so<00:03:38.760> for<00:03:38.880> example<00:03:39.240> if<00:03:39.420> we

00:03:39.860 --> 00:03:39.870 
closed apps so for example if we

00:03:39.870 --> 00:03:41.840 
closed apps so for example if we
relaunch<00:03:40.320> apps<00:03:40.560> that<00:03:40.890> I've<00:03:41.040> loaded<00:03:41.340> during

00:03:41.840 --> 00:03:41.850 
relaunch apps that I've loaded during

00:03:41.850 --> 00:03:43.460 
relaunch apps that I've loaded during
this<00:03:42.060> comparison<00:03:42.450> video<00:03:42.900> you<00:03:42.959> can<00:03:43.200> see<00:03:43.350> that

00:03:43.460 --> 00:03:43.470 
this comparison video you can see that

00:03:43.470 --> 00:03:45.350 
this comparison video you can see that
the<00:03:43.590> iPhone<00:03:43.920> 5<00:03:44.160> has<00:03:44.580> been<00:03:44.640> able<00:03:45.030> to<00:03:45.180> preserve

00:03:45.350 --> 00:03:45.360 
the iPhone 5 has been able to preserve

00:03:45.360 --> 00:03:47.150 
the iPhone 5 has been able to preserve
the<00:03:45.660> state<00:03:45.870> of<00:03:46.020> more<00:03:46.200> apps<00:03:46.440> than<00:03:46.680> the<00:03:46.800> iPod

00:03:47.150 --> 00:03:47.160 
the state of more apps than the iPod

00:03:47.160 --> 00:03:49.280 
the state of more apps than the iPod
such<00:03:47.520> as<00:03:47.730> the<00:03:47.910> Geekbench<00:03:48.330> score<00:03:48.630> I<00:03:48.810> ran

00:03:49.280 --> 00:03:49.290 
such as the Geekbench score I ran

00:03:49.290 --> 00:03:51.110 
such as the Geekbench score I ran
earlier<00:03:49.560> which<00:03:50.010> has<00:03:50.250> already<00:03:50.550> been<00:03:50.670> lost<00:03:50.910> on

00:03:51.110 --> 00:03:51.120 
earlier which has already been lost on

00:03:51.120 --> 00:03:52.610 
earlier which has already been lost on
the<00:03:51.240> iPod<00:03:51.600> while<00:03:51.810> the<00:03:51.930> iPhone<00:03:52.260> is<00:03:52.440> still

00:03:52.610 --> 00:03:52.620 
the iPod while the iPhone is still

00:03:52.620 --> 00:03:54.770 
the iPod while the iPhone is still
hanging<00:03:52.800> on<00:03:53.040> to<00:03:53.190> it<00:03:53.220> games<00:03:54.090> also<00:03:54.300> load<00:03:54.600> more

00:03:54.770 --> 00:03:54.780 
hanging on to it games also load more

00:03:54.780 --> 00:03:57.320 
hanging on to it games also load more
quickly<00:03:55.050> on<00:03:55.320> the<00:03:55.410> iPhone<00:03:55.740> 5<00:03:56.010> but<00:03:56.280> overall<00:03:56.880> 3d

00:03:57.320 --> 00:03:57.330 
quickly on the iPhone 5 but overall 3d

00:03:57.330 --> 00:03:59.240 
quickly on the iPhone 5 but overall 3d
performance<00:03:57.900> looks<00:03:58.170> and<00:03:58.380> feels<00:03:58.830> about<00:03:59.130> the

00:03:59.240 --> 00:03:59.250 
performance looks and feels about the

00:03:59.250 --> 00:04:00.890 
performance looks and feels about the
same<00:03:59.490> with<00:03:59.850> the<00:03:59.940> games<00:04:00.180> currently<00:04:00.630> available

00:04:00.890 --> 00:04:00.900 
same with the games currently available

00:04:00.900 --> 00:04:03.920 
same with the games currently available
however<00:04:01.890> if<00:04:02.130> we<00:04:02.250> look<00:04:02.280> really<00:04:02.610> closely<00:04:03.030> we<00:04:03.780> can

00:04:03.920 --> 00:04:03.930 
however if we look really closely we can

00:04:03.930 --> 00:04:05.570 
however if we look really closely we can
see<00:04:04.050> that<00:04:04.200> the<00:04:04.320> iPhone<00:04:04.680> 5<00:04:04.920> is<00:04:05.130> rendering

00:04:05.570 --> 00:04:05.580 
see that the iPhone 5 is rendering

00:04:05.580 --> 00:04:07.250 
see that the iPhone 5 is rendering
significantly<00:04:06.330> more<00:04:06.630> detail<00:04:07.050> and

00:04:07.250 --> 00:04:07.260 
significantly more detail and

00:04:07.260 --> 00:04:09.560 
significantly more detail and
highlighting<00:04:07.920> which<00:04:08.490> is<00:04:08.700> best<00:04:08.940> observed<00:04:09.300> when

00:04:09.560 --> 00:04:09.570 
highlighting which is best observed when

00:04:09.570 --> 00:04:11.390 
highlighting which is best observed when
looking<00:04:09.870> at<00:04:10.020> the<00:04:10.170> sword<00:04:10.500> of<00:04:10.709> our<00:04:10.950> character

00:04:11.390 --> 00:04:11.400 
looking at the sword of our character

00:04:11.400 --> 00:04:13.550 
looking at the sword of our character
here<00:04:11.610> in<00:04:11.790> wild<00:04:12.239> blood<00:04:12.480> so<00:04:13.170> we<00:04:13.320> can<00:04:13.440> see

00:04:13.550 --> 00:04:13.560 
here in wild blood so we can see

00:04:13.560 --> 00:04:15.560 
here in wild blood so we can see
significantly<00:04:14.250> more<00:04:14.489> detail<00:04:14.910> on<00:04:15.060> the<00:04:15.209> iPhone

00:04:15.560 --> 00:04:15.570 
significantly more detail on the iPhone

00:04:15.570 --> 00:04:18.260 
significantly more detail on the iPhone
than<00:04:15.930> the<00:04:16.049> iPod<00:04:16.440> but<00:04:17.220> overall<00:04:17.489> both<00:04:17.760> devices

00:04:18.260 --> 00:04:18.270 
than the iPod but overall both devices

00:04:18.270 --> 00:04:20.300 
than the iPod but overall both devices
with<00:04:18.540> those<00:04:18.690> 4-inch<00:04:19.140> Retina<00:04:19.350> displays<00:04:19.919> appear

00:04:20.300 --> 00:04:20.310 
with those 4-inch Retina displays appear

00:04:20.310 --> 00:04:22.550 
with those 4-inch Retina displays appear
closely<00:04:20.790> match<00:04:21.000> so<00:04:21.960> in<00:04:22.109> the<00:04:22.200> end<00:04:22.350> while<00:04:22.530> the

00:04:22.550 --> 00:04:22.560 
closely match so in the end while the

00:04:22.560 --> 00:04:24.590 
closely match so in the end while the
iPod<00:04:22.950> Touch<00:04:23.220> 5th<00:04:23.430> generation<00:04:23.550> performance<00:04:24.479> is

00:04:24.590 --> 00:04:24.600 
iPod Touch 5th generation performance is

00:04:24.600 --> 00:04:26.840 
iPod Touch 5th generation performance is
closer<00:04:24.840> to<00:04:24.990> the<00:04:25.200> iPhone<00:04:25.650> 4s<00:04:26.010> than<00:04:26.370> the<00:04:26.460> iPhone

00:04:26.840 --> 00:04:26.850 
closer to the iPhone 4s than the iPhone

00:04:26.850 --> 00:04:27.890 
closer to the iPhone 4s than the iPhone
5<00:04:27.210> is

00:04:27.890 --> 00:04:27.900 
5 is

00:04:27.900 --> 00:04:29.689 
5 is
a big<00:04:28.290> leap<00:04:28.620> over<00:04:28.860> the<00:04:29.040> fourth-generation

00:04:29.689 --> 00:04:29.699 
a big leap over the fourth-generation

00:04:29.699 --> 00:04:32.510 
a big leap over the fourth-generation
iPod<00:04:30.570> Touch<00:04:31.020> so<00:04:31.800> that's<00:04:32.009> going<00:04:32.100> to<00:04:32.160> do<00:04:32.280> for<00:04:32.460> me

00:04:32.510 --> 00:04:32.520 
iPod Touch so that's going to do for me

00:04:32.520 --> 00:04:34.010 
iPod Touch so that's going to do for me
guys<00:04:32.669> in<00:04:32.850> this<00:04:32.940> video<00:04:33.240> thanks<00:04:33.570> for<00:04:33.690> watching

00:04:34.010 --> 00:04:34.020 
guys in this video thanks for watching

00:04:34.020 --> 00:04:37.910 
guys in this video thanks for watching
and<00:04:34.199> I'll<00:04:34.530> see<00:04:34.560> you<00:04:34.800> again<00:04:34.919> in<00:04:35.220> the<00:04:35.490> next<00:04:35.759> one

