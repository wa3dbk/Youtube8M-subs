WEBVTT
Kind: captions
Language: en

00:00:00.840 --> 00:00:03.709 

let's<00:00:01.620> take<00:00:01.889> an<00:00:02.040> example<00:00:02.550> of<00:00:02.730> unplanned<00:00:03.419> car

00:00:03.709 --> 00:00:03.719 
let's take an example of unplanned car

00:00:03.719 --> 00:00:06.530 
let's take an example of unplanned car
factory<00:00:04.399> here<00:00:05.399> every<00:00:05.759> workers<00:00:06.149> are<00:00:06.359> working

00:00:06.530 --> 00:00:06.540 
factory here every workers are working

00:00:06.540 --> 00:00:09.620 
factory here every workers are working
on<00:00:06.899> a<00:00:06.930> same<00:00:07.259> car<00:00:07.529> and<00:00:07.740> after<00:00:07.919> 24<00:00:08.790> hours<00:00:09.120> one<00:00:09.360> car

00:00:09.620 --> 00:00:09.630 
on a same car and after 24 hours one car

00:00:09.630 --> 00:00:12.140 
on a same car and after 24 hours one car
is<00:00:09.810> unrolled<00:00:10.290> that<00:00:10.890> means<00:00:11.220> throughput<00:00:11.760> is<00:00:11.910> one

00:00:12.140 --> 00:00:12.150 
is unrolled that means throughput is one

00:00:12.150 --> 00:00:16.960 
is unrolled that means throughput is one
car<00:00:12.390> per<00:00:12.420> 24<00:00:13.290> hours

00:00:16.960 --> 00:00:16.970 

00:00:16.970 --> 00:00:19.570 

now<00:00:17.660> here<00:00:17.990> is<00:00:18.110> the<00:00:18.260> pipelined<00:00:18.770> model<00:00:19.190> of<00:00:19.340> same

00:00:19.570 --> 00:00:19.580 
now here is the pipelined model of same

00:00:19.580 --> 00:00:22.750 
now here is the pipelined model of same
car<00:00:19.880> factory<00:00:20.530> here<00:00:21.530> workers<00:00:21.950> are<00:00:22.160> classified

00:00:22.750 --> 00:00:22.760 
car factory here workers are classified

00:00:22.760 --> 00:00:25.270 
car factory here workers are classified
to<00:00:22.970> three<00:00:23.210> teams<00:00:23.510> team<00:00:24.350> a<00:00:24.530> is<00:00:24.560> working<00:00:25.160> on

00:00:25.270 --> 00:00:25.280 
to three teams team a is working on

00:00:25.280 --> 00:00:27.340 
to three teams team a is working on
engine<00:00:25.700> and<00:00:25.880> then<00:00:26.030> team<00:00:26.300> B<00:00:26.510> work<00:00:26.720> is<00:00:26.930> unbought

00:00:27.340 --> 00:00:27.350 
engine and then team B work is unbought

00:00:27.350 --> 00:00:30.700 
engine and then team B work is unbought
and<00:00:27.619> at<00:00:27.800> last<00:00:28.010> Team<00:00:28.369> C<00:00:28.640> working<00:00:29.030> on<00:00:29.210> paint<00:00:29.710> that

00:00:30.700 --> 00:00:30.710 
and at last Team C working on paint that

00:00:30.710 --> 00:00:32.080 
and at last Team C working on paint that
means<00:00:31.010> one<00:00:31.280> after<00:00:31.490> other

00:00:32.080 --> 00:00:32.090 
means one after other

00:00:32.090 --> 00:00:34.990 
means one after other
as<00:00:32.900> soon<00:00:33.260> as<00:00:33.410> team<00:00:33.710> a<00:00:33.890> finished<00:00:34.309> working<00:00:34.550> first

00:00:34.990 --> 00:00:35.000 
as soon as team a finished working first

00:00:35.000 --> 00:00:37.390 
as soon as team a finished working first
car<00:00:35.300> they<00:00:35.930> start<00:00:36.290> working<00:00:36.710> on<00:00:36.860> engine<00:00:37.250> of

00:00:37.390 --> 00:00:37.400 
car they start working on engine of

00:00:37.400 --> 00:00:41.229 
car they start working on engine of
second<00:00:37.820> car<00:00:38.260> means<00:00:39.730> simultaneously<00:00:40.730> two<00:00:40.940> cars

00:00:41.229 --> 00:00:41.239 
second car means simultaneously two cars

00:00:41.239 --> 00:00:44.619 
second car means simultaneously two cars
are<00:00:41.480> unmake<00:00:41.900> after<00:00:42.770> second<00:00:43.220> car<00:00:43.460> Team<00:00:44.150> a<00:00:44.360> moves

00:00:44.619 --> 00:00:44.629 
are unmake after second car Team a moves

00:00:44.629 --> 00:00:48.130 
are unmake after second car Team a moves
to<00:00:44.870> the<00:00:44.989> third<00:00:45.200> car<00:00:45.410> in<00:00:45.710> this<00:00:46.700> stage<00:00:47.000> same<00:00:47.840> time

00:00:48.130 --> 00:00:48.140 
to the third car in this stage same time

00:00:48.140 --> 00:00:50.560 
to the third car in this stage same time
three<00:00:48.980> cars<00:00:49.220> are<00:00:49.460> being<00:00:49.610> produced<00:00:50.000> dot<00:00:50.330> here

00:00:50.560 --> 00:00:50.570 
three cars are being produced dot here

00:00:50.570 --> 00:00:52.960 
three cars are being produced dot here
throughput<00:00:51.019> is<00:00:51.199> one<00:00:51.949> car<00:00:52.220> per<00:00:52.250> eight<00:00:52.550> hours

00:00:52.960 --> 00:00:52.970 
throughput is one car per eight hours

00:00:52.970 --> 00:00:56.170 
throughput is one car per eight hours
after<00:00:53.480> a<00:00:53.870> stage<00:00:54.260> one<00:00:54.980> car<00:00:55.250> will<00:00:55.430> be<00:00:55.580> on<00:00:55.730> road<00:00:55.970> at

00:00:56.170 --> 00:00:56.180 
after a stage one car will be on road at

00:00:56.180 --> 00:00:59.250 
after a stage one car will be on road at
every<00:00:56.480> eight<00:00:56.629> hour

00:00:59.250 --> 00:00:59.260 

00:00:59.260 --> 00:01:02.280 

now<00:00:59.950> let's<00:01:00.280> see<00:01:00.520> how<00:01:01.120> pipeline<00:01:01.690> idea<00:01:02.079> is

00:01:02.280 --> 00:01:02.290 
now let's see how pipeline idea is

00:01:02.290 --> 00:01:04.619 
now let's see how pipeline idea is
employment<00:01:02.890> in<00:01:03.070> computer<00:01:03.579> there<00:01:04.120> are<00:01:04.150> three

00:01:04.619 --> 00:01:04.629 
employment in computer there are three

00:01:04.629 --> 00:01:07.010 
employment in computer there are three
stages<00:01:04.930> in<00:01:05.140> which<00:01:05.320> an<00:01:05.620> instruction<00:01:06.250> pass<00:01:06.490> on

00:01:07.010 --> 00:01:07.020 
stages in which an instruction pass on

00:01:07.020 --> 00:01:10.890 
stages in which an instruction pass on
fetch<00:01:08.020> decode<00:01:08.290> and<00:01:08.800> execute<00:01:09.159> in<00:01:09.760> a<00:01:10.750> nun

00:01:10.890 --> 00:01:10.900 
fetch decode and execute in a nun

00:01:10.900 --> 00:01:13.469 
fetch decode and execute in a nun
pipeline<00:01:11.440> computer<00:01:12.040> one<00:01:12.670> instruction<00:01:13.330> is

00:01:13.469 --> 00:01:13.479 
pipeline computer one instruction is

00:01:13.479 --> 00:01:16.170 
pipeline computer one instruction is
proceed<00:01:13.960> at<00:01:14.140> a<00:01:14.170> time<00:01:14.500> and<00:01:14.740> after<00:01:15.640> completing

00:01:16.170 --> 00:01:16.180 
proceed at a time and after completing

00:01:16.180 --> 00:01:18.570 
proceed at a time and after completing
fetching<00:01:16.720> decoding<00:01:17.290> and<00:01:17.440> execution<00:01:18.400> of<00:01:18.520> that

00:01:18.570 --> 00:01:18.580 
fetching decoding and execution of that

00:01:18.580 --> 00:01:21.060 
fetching decoding and execution of that
instruction<00:01:19.380> computer<00:01:20.380> moves<00:01:20.560> to<00:01:20.830> another

00:01:21.060 --> 00:01:21.070 
instruction computer moves to another

00:01:21.070 --> 00:01:24.359 
instruction computer moves to another
instruction<00:01:21.960> that<00:01:22.960> means<00:01:23.290> only<00:01:23.650> one

00:01:24.359 --> 00:01:24.369 
instruction that means only one

00:01:24.369 --> 00:01:34.539 
instruction that means only one
instruction<00:01:24.850> is<00:01:25.150> processing<00:01:25.840> at<00:01:25.990> a<00:01:26.020> time

00:01:34.539 --> 00:01:34.549 

00:01:34.549 --> 00:01:37.130 

pipelining<00:01:35.549> is<00:01:35.820> a<00:01:35.850> technique<00:01:36.299> of<00:01:36.539> decomposing

00:01:37.130 --> 00:01:37.140 
pipelining is a technique of decomposing

00:01:37.140 --> 00:01:39.499 
pipelining is a technique of decomposing
a<00:01:37.380> sequential<00:01:37.950> process<00:01:38.430> into<00:01:38.759> sub<00:01:39.030> processes

00:01:39.499 --> 00:01:39.509 
a sequential process into sub processes

00:01:39.509 --> 00:01:42.469 
a sequential process into sub processes
with<00:01:40.350> each<00:01:40.530> sub<00:01:40.829> process<00:01:41.310> being<00:01:41.549> executed<00:01:42.030> in

00:01:42.469 --> 00:01:42.479 
with each sub process being executed in

00:01:42.479 --> 00:01:44.179 
with each sub process being executed in
a<00:01:42.570> special<00:01:43.020> dedicated<00:01:43.469> segment<00:01:44.039> that

00:01:44.179 --> 00:01:44.189 
a special dedicated segment that

00:01:44.189 --> 00:01:46.010 
a special dedicated segment that
operates<00:01:44.700> concurrently<00:01:45.299> with<00:01:45.570> all<00:01:45.780> other

00:01:46.010 --> 00:01:46.020 
operates concurrently with all other

00:01:46.020 --> 00:01:48.510 
operates concurrently with all other
segments

00:01:48.510 --> 00:01:48.520 
segments

00:01:48.520 --> 00:01:51.010 
segments
pipelining<00:01:49.520> is<00:01:49.790> widely<00:01:50.090> used<00:01:50.270> in<00:01:50.689> modern

00:01:51.010 --> 00:01:51.020 
pipelining is widely used in modern

00:01:51.020 --> 00:01:54.280 
pipelining is widely used in modern
processors<00:01:52.299> pipelining<00:01:53.299> improve<00:01:53.810> system

00:01:54.280 --> 00:01:54.290 
processors pipelining improve system

00:01:54.290 --> 00:01:56.580 
processors pipelining improve system
performance<00:01:54.320> in<00:01:55.040> terms<00:01:55.280> of<00:01:55.520> throughput

00:01:56.580 --> 00:01:56.590 
performance in terms of throughput

00:01:56.590 --> 00:01:58.840 
performance in terms of throughput
pipelined<00:01:57.590> organization<00:01:58.430> requires

00:01:58.840 --> 00:01:58.850 
pipelined organization requires

00:01:58.850 --> 00:02:02.920 
pipelined organization requires
sophisticated<00:01:59.500> compilation<00:02:00.500> techniques

