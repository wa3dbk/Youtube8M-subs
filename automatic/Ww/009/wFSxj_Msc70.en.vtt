WEBVTT
Kind: captions
Language: en

00:00:03.800 --> 00:00:06.349 

so<00:00:04.800> the<00:00:04.950> second<00:00:05.400> enabling<00:00:05.819> technology<00:00:06.330> for

00:00:06.349 --> 00:00:06.359 
so the second enabling technology for

00:00:06.359 --> 00:00:10.750 
so the second enabling technology for
our<00:00:06.540> next-generation<00:00:06.840> GPU<00:00:07.560> is<00:00:08.460> 3d<00:00:08.910> packaging

00:00:10.750 --> 00:00:10.760 
our next-generation GPU is 3d packaging

00:00:10.760 --> 00:00:14.510 
our next-generation GPU is 3d packaging
we're<00:00:11.760> gonna<00:00:11.850> for<00:00:12.090> the<00:00:12.180> first<00:00:12.510> time<00:00:13.520> build

00:00:14.510 --> 00:00:14.520 
we're gonna for the first time build

00:00:14.520 --> 00:00:17.720 
we're gonna for the first time build
chips<00:00:14.940> on<00:00:15.150> top<00:00:15.510> of<00:00:15.660> other<00:00:15.780> chips<00:00:16.139> and<00:00:17.100> we're

00:00:17.720 --> 00:00:17.730 
chips on top of other chips and we're

00:00:17.730 --> 00:00:19.609 
chips on top of other chips and we're
going<00:00:17.850> to<00:00:17.910> pile<00:00:18.330> heterogeneous<00:00:19.140> chips

00:00:19.609 --> 00:00:19.619 
going to pile heterogeneous chips

00:00:19.619 --> 00:00:22.130 
going to pile heterogeneous chips
meaning<00:00:19.980> different<00:00:20.189> types<00:00:20.580> of<00:00:20.759> chips<00:00:21.029> on<00:00:21.179> one

00:00:22.130 --> 00:00:22.140 
meaning different types of chips on one

00:00:22.140 --> 00:00:25.480 
meaning different types of chips on one
wafer<00:00:22.769> it<00:00:23.550> starts<00:00:23.970> out<00:00:24.119> with<00:00:24.179> a<00:00:24.419> base<00:00:24.660> wafer

00:00:25.480 --> 00:00:25.490 
wafer it starts out with a base wafer

00:00:25.490 --> 00:00:28.359 
wafer it starts out with a base wafer
where<00:00:26.720> interconnections<00:00:27.720> are<00:00:27.839> being<00:00:28.050> done

00:00:28.359 --> 00:00:28.369 
where interconnections are being done

00:00:28.369 --> 00:00:31.069 
where interconnections are being done
among<00:00:29.369> the<00:00:29.490> chips<00:00:29.759> so<00:00:30.240> instead<00:00:30.509> of<00:00:30.570> going<00:00:30.869> off

00:00:31.069 --> 00:00:31.079 
among the chips so instead of going off

00:00:31.079 --> 00:00:33.230 
among the chips so instead of going off
to<00:00:31.289> a<00:00:31.320> PC<00:00:31.710> board<00:00:31.919> we're<00:00:32.460> doing<00:00:32.700> the<00:00:32.820> internship

00:00:33.230 --> 00:00:33.240 
to a PC board we're doing the internship

00:00:33.240 --> 00:00:37.970 
to a PC board we're doing the internship
routing<00:00:33.780> on<00:00:34.500> the<00:00:35.010> wafer<00:00:36.649> thousands<00:00:37.649> of<00:00:37.739> little

00:00:37.970 --> 00:00:37.980 
routing on the wafer thousands of little

00:00:37.980 --> 00:00:40.069 
routing on the wafer thousands of little
bumps<00:00:38.390> characterized<00:00:39.390> by<00:00:39.570> that<00:00:39.719> vertical

00:00:40.069 --> 00:00:40.079 
bumps characterized by that vertical

00:00:40.079 --> 00:00:44.360 
bumps characterized by that vertical
signal<00:00:40.469> on<00:00:40.829> these<00:00:41.399> chips<00:00:42.800> are<00:00:43.800> flipped<00:00:44.160> and

00:00:44.360 --> 00:00:44.370 
signal on these chips are flipped and

00:00:44.370 --> 00:00:48.560 
signal on these chips are flipped and
bumped<00:00:44.640> onto<00:00:44.840> the<00:00:45.840> base<00:00:46.109> wafer<00:00:47.269> we're<00:00:48.269> putting

00:00:48.560 --> 00:00:48.570 
bumped onto the base wafer we're putting

00:00:48.570 --> 00:00:50.450 
bumped onto the base wafer we're putting
so<00:00:48.870> many<00:00:49.079> bits<00:00:49.440> in<00:00:49.680> fact<00:00:50.070> the<00:00:50.219> memory

00:00:50.450 --> 00:00:50.460 
so many bits in fact the memory

00:00:50.460 --> 00:00:52.189 
so many bits in fact the memory
interface<00:00:50.789> went<00:00:51.059> from<00:00:51.210> hundreds<00:00:51.660> of<00:00:51.750> bits<00:00:51.960> to

00:00:52.189 --> 00:00:52.199 
interface went from hundreds of bits to

00:00:52.199 --> 00:00:58.009 
interface went from hundreds of bits to
thousands<00:00:53.190> of<00:00:53.280> bits<00:00:54.289> thousands<00:00:55.289> of<00:00:55.500> bits<00:00:57.019> if

00:00:58.009 --> 00:00:58.019 
thousands of bits thousands of bits if

00:00:58.019 --> 00:01:00.860 
thousands of bits thousands of bits if
you<00:00:58.170> could<00:00:58.289> just<00:00:58.440> imagine<00:00:58.710> a<00:00:59.510> GPU<00:01:00.510> with

00:01:00.860 --> 00:01:00.870 
you could just imagine a GPU with

00:01:00.870 --> 00:01:03.919 
you could just imagine a GPU with
thousands<00:01:01.679> and<00:01:01.769> thousands<00:01:02.730> of<00:01:02.929> memory

00:01:03.919 --> 00:01:03.929 
thousands and thousands of memory

00:01:03.929 --> 00:01:05.930 
thousands and thousands of memory
interface<00:01:04.350> bits<00:01:04.620> the<00:01:05.190> question<00:01:05.550> is<00:01:05.670> how<00:01:05.880> do

00:01:05.930 --> 00:01:05.940 
interface bits the question is how do

00:01:05.940 --> 00:01:09.800 
interface bits the question is how do
you<00:01:06.060> put<00:01:06.870> those<00:01:07.560> bits<00:01:07.920> on<00:01:08.160> our<00:01:08.520> chip<00:01:08.850> and<00:01:09.090> how

00:01:09.800 --> 00:01:09.810 
you put those bits on our chip and how

00:01:09.810 --> 00:01:11.840 
you put those bits on our chip and how
do<00:01:09.870> you<00:01:10.050> connect<00:01:10.470> them<00:01:10.680> to<00:01:11.130> all<00:01:11.280> of<00:01:11.490> the<00:01:11.610> memory

00:01:11.840 --> 00:01:11.850 
do you connect them to all of the memory

00:01:11.850 --> 00:01:13.340 
do you connect them to all of the memory
well<00:01:12.030> the<00:01:12.120> way<00:01:12.210> they<00:01:12.360> solve<00:01:12.630> that<00:01:12.750> problem<00:01:13.200> is

00:01:13.340 --> 00:01:13.350 
well the way they solve that problem is

00:01:13.350 --> 00:01:15.800 
well the way they solve that problem is
we<00:01:13.890> stack<00:01:14.190> all<00:01:14.640> of<00:01:14.700> the<00:01:15.000> memory<00:01:15.240> chips<00:01:15.480> one<00:01:15.720> on

00:01:15.800 --> 00:01:15.810 
we stack all of the memory chips one on

00:01:15.810 --> 00:01:17.870 
we stack all of the memory chips one on
top<00:01:15.930> of<00:01:15.990> each<00:01:16.170> other<00:01:16.380> and<00:01:16.620> we<00:01:17.340> punch<00:01:17.610> holes

00:01:17.870 --> 00:01:17.880 
top of each other and we punch holes

00:01:17.880 --> 00:01:21.530 
top of each other and we punch holes
through<00:01:18.030> the<00:01:18.270> memory<00:01:19.910> using<00:01:20.910> through-silicon

00:01:21.530 --> 00:01:21.540 
through the memory using through-silicon

00:01:21.540 --> 00:01:26.000 
through the memory using through-silicon
vias<00:01:22.460> and<00:01:23.460> each<00:01:24.090> chip<00:01:24.450> each<00:01:24.660> DRAM<00:01:25.350> is<00:01:25.560> then

00:01:26.000 --> 00:01:26.010 
vias and each chip each DRAM is then

00:01:26.010 --> 00:01:29.750 
vias and each chip each DRAM is then
stacked<00:01:26.340> on<00:01:26.490> top<00:01:26.520> of<00:01:26.730> each<00:01:26.880> other<00:01:28.400> the<00:01:29.400> stack

00:01:29.750 --> 00:01:29.760 
stacked on top of each other the stack

00:01:29.760 --> 00:01:32.270 
stacked on top of each other the stack
DRAM<00:01:30.180> which<00:01:30.420> is<00:01:30.870> 3d<00:01:31.200> memory<00:01:31.500> is<00:01:31.830> stacked<00:01:32.130> on

00:01:32.270 --> 00:01:32.280 
DRAM which is 3d memory is stacked on

00:01:32.280 --> 00:01:36.470 
DRAM which is 3d memory is stacked on
top<00:01:32.310> of<00:01:32.580> a<00:01:32.670> wafer<00:01:33.860> that<00:01:34.860> wafer<00:01:35.340> because<00:01:36.240> it's<00:01:36.390> a

00:01:36.470 --> 00:01:36.480 
top of a wafer that wafer because it's a

00:01:36.480 --> 00:01:39.500 
top of a wafer that wafer because it's a
silicon<00:01:36.870> substrate<00:01:37.760> can<00:01:38.760> now<00:01:38.910> have<00:01:39.150> wires

00:01:39.500 --> 00:01:39.510 
silicon substrate can now have wires

00:01:39.510 --> 00:01:41.750 
silicon substrate can now have wires
incredibly<00:01:40.350> incredibly<00:01:40.770> small<00:01:41.100> that

00:01:41.750 --> 00:01:41.760 
incredibly incredibly small that

00:01:41.760 --> 00:01:44.620 
incredibly incredibly small that
connects<00:01:42.120> it<00:01:42.210> to<00:01:42.390> our<00:01:42.480> GPU<00:01:42.960> and<00:01:43.280> together<00:01:44.280> it

00:01:44.620 --> 00:01:44.630 
connects it to our GPU and together it

00:01:44.630 --> 00:01:49.240 
connects it to our GPU and together it
forms<00:01:45.630> an<00:01:45.920> interface<00:01:46.920> that<00:01:47.630> delivers<00:01:48.630> an

00:01:49.240 --> 00:01:49.250 
forms an interface that delivers an

00:01:49.250 --> 00:01:52.490 
forms an interface that delivers an
unbelievable<00:01:50.250> amount<00:01:50.460> of<00:01:50.730> bandwidth<00:01:51.150> a<00:01:51.500> huge

00:01:52.490 --> 00:01:52.500 
unbelievable amount of bandwidth a huge

00:01:52.500 --> 00:01:54.680 
unbelievable amount of bandwidth a huge
leap<00:01:52.820> and<00:01:53.820> so<00:01:54.000> if<00:01:54.090> you<00:01:54.150> take<00:01:54.300> a<00:01:54.330> look<00:01:54.480> at<00:01:54.600> that

00:01:54.680 --> 00:01:54.690 
leap and so if you take a look at that

00:01:54.690 --> 00:01:58.160 
leap and so if you take a look at that
chart<00:01:55.280> the<00:01:56.280> solid<00:01:56.700> green<00:01:56.940> line<00:01:57.210> is<00:01:57.510> where<00:01:58.050> we

00:01:58.160 --> 00:01:58.170 
chart the solid green line is where we

00:01:58.170 --> 00:01:58.640 
chart the solid green line is where we
came<00:01:58.350> from

00:01:58.640 --> 00:01:58.650 
came from

00:01:58.650 --> 00:02:02.330 
came from
and<00:01:58.830> as<00:01:59.130> you<00:01:59.250> can<00:01:59.370> tell<00:02:00.920> we've<00:02:01.920> been<00:02:02.040> trying<00:02:02.280> to

00:02:02.330 --> 00:02:02.340 
and as you can tell we've been trying to

00:02:02.340 --> 00:02:03.710 
and as you can tell we've been trying to
deal<00:02:02.520> with<00:02:02.550> the<00:02:02.790> memory<00:02:03.030> bandwidth<00:02:03.360> problem

00:02:03.710 --> 00:02:03.720 
deal with the memory bandwidth problem

00:02:03.720 --> 00:02:05.870 
deal with the memory bandwidth problem
for<00:02:03.870> some<00:02:04.080> time<00:02:04.350> although<00:02:05.220> we<00:02:05.400> are<00:02:05.550> already

00:02:05.870 --> 00:02:05.880 
for some time although we are already

00:02:05.880 --> 00:02:08.029 
for some time although we are already
the<00:02:06.120> highest<00:02:06.270> bandwidth<00:02:06.860> processor<00:02:07.860> in<00:02:07.950> the

00:02:08.029 --> 00:02:08.039 
the highest bandwidth processor in the

00:02:08.039 --> 00:02:10.669 
the highest bandwidth processor in the
system<00:02:08.399> there's<00:02:09.119> so<00:02:09.509> much<00:02:09.869> more<00:02:10.170> bandwidth<00:02:10.530> we

00:02:10.669 --> 00:02:10.679 
system there's so much more bandwidth we

00:02:10.679 --> 00:02:12.920 
system there's so much more bandwidth we
wish<00:02:10.860> we<00:02:11.039> had<00:02:11.250> and<00:02:11.519> we<00:02:12.269> want<00:02:12.450> to<00:02:12.510> continue<00:02:12.659> to

00:02:12.920 --> 00:02:12.930 
wish we had and we want to continue to

00:02:12.930 --> 00:02:14.569 
wish we had and we want to continue to
scale<00:02:13.200> with<00:02:13.409> Moore's<00:02:13.620> Law<00:02:13.799> we're<00:02:14.370> gonna<00:02:14.459> have

00:02:14.569 --> 00:02:14.579 
scale with Moore's Law we're gonna have

00:02:14.579 --> 00:02:16.820 
scale with Moore's Law we're gonna have
to<00:02:14.640> solve<00:02:14.939> this

00:02:16.820 --> 00:02:16.830 
to solve this

00:02:16.830 --> 00:02:20.220 
to solve this
well<00:02:17.830> 3d<00:02:18.100> memory<00:02:18.460> and<00:02:18.670> 3d<00:02:19.120> packaging<00:02:19.660> using

00:02:20.220 --> 00:02:20.230 
well 3d memory and 3d packaging using

00:02:20.230 --> 00:02:22.140 
well 3d memory and 3d packaging using
this<00:02:20.590> heterogeneous<00:02:21.190> 3d<00:02:21.670> chip<00:02:21.850> on<00:02:22.000> wafer

00:02:22.140 --> 00:02:22.150 
this heterogeneous 3d chip on wafer

00:02:22.150 --> 00:02:24.390 
this heterogeneous 3d chip on wafer
integration<00:02:22.780> makes<00:02:23.560> it<00:02:23.740> possible<00:02:23.890> for<00:02:24.160> us<00:02:24.370> to

00:02:24.390 --> 00:02:24.400 
integration makes it possible for us to

00:02:24.400 --> 00:02:27.150 
integration makes it possible for us to
take<00:02:24.520> a<00:02:24.670> giant<00:02:25.240> leap<00:02:25.420> forward<00:02:25.920> the<00:02:26.920> green

00:02:27.150 --> 00:02:27.160 
take a giant leap forward the green

00:02:27.160 --> 00:02:28.650 
take a giant leap forward the green
dotted<00:02:27.370> lines<00:02:27.670> gives<00:02:27.970> you<00:02:28.060> a<00:02:28.090> sense<00:02:28.390> of<00:02:28.510> where

00:02:28.650 --> 00:02:28.660 
dotted lines gives you a sense of where

00:02:28.660 --> 00:02:32.460 
dotted lines gives you a sense of where
we're<00:02:28.780> headed<00:02:29.140> in<00:02:30.000> just<00:02:31.000> a<00:02:31.270> couple<00:02:31.750> of<00:02:32.170> years

00:02:32.460 --> 00:02:32.470 
we're headed in just a couple of years

00:02:32.470 --> 00:02:34.949 
we're headed in just a couple of years
we're<00:02:33.280> gonna<00:02:33.370> take<00:02:33.640> bandwidth<00:02:34.120> to<00:02:34.630> a<00:02:34.660> whole

00:02:34.949 --> 00:02:34.959 
we're gonna take bandwidth to a whole

00:02:34.959 --> 00:02:37.230 
we're gonna take bandwidth to a whole
new<00:02:35.140> level<00:02:35.350> and<00:02:36.010> so<00:02:36.640> the<00:02:36.730> question<00:02:37.030> is<00:02:37.120> what

00:02:37.230 --> 00:02:37.240 
new level and so the question is what

00:02:37.240 --> 00:02:39.840 
new level and so the question is what
are<00:02:37.300> we<00:02:37.390> going<00:02:37.510> to<00:02:37.600> call<00:02:37.750> this<00:02:37.900> chip<00:02:38.700> this<00:02:39.700> is

00:02:39.840 --> 00:02:39.850 
are we going to call this chip this is

00:02:39.850 --> 00:02:42.720 
are we going to call this chip this is
one<00:02:40.030> of<00:02:40.060> the<00:02:40.180> great<00:02:40.480> chips<00:02:41.310> one<00:02:42.310> of<00:02:42.400> the<00:02:42.489> great

00:02:42.720 --> 00:02:42.730 
one of the great chips one of the great

00:02:42.730 --> 00:02:45.479 
one of the great chips one of the great
GPUs<00:02:43.180> we've<00:02:43.420> ever<00:02:43.540> made<00:02:43.750> and<00:02:43.989> it<00:02:44.770> incorporates

00:02:45.479 --> 00:02:45.489 
GPUs we've ever made and it incorporates

00:02:45.489 --> 00:02:48.360 
GPUs we've ever made and it incorporates
in<00:02:46.150> addition<00:02:47.020> to<00:02:47.110> architectural<00:02:47.860> innovations

00:02:48.360 --> 00:02:48.370 
in addition to architectural innovations

00:02:48.370 --> 00:02:50.660 
in addition to architectural innovations
that<00:02:48.489> will<00:02:48.640> reveal<00:02:49.239> to<00:02:49.300> you<00:02:49.480> over<00:02:49.810> time

00:02:50.660 --> 00:02:50.670 
that will reveal to you over time

00:02:50.670 --> 00:02:53.190 
that will reveal to you over time
incorporates<00:02:51.670> these<00:02:51.820> two<00:02:52.200> enabling

00:02:53.190 --> 00:02:53.200 
incorporates these two enabling

00:02:53.200 --> 00:02:55.890 
incorporates these two enabling
technologies<00:02:54.269> first<00:02:55.269> time<00:02:55.510> we've<00:02:55.660> ever<00:02:55.780> used

00:02:55.890 --> 00:02:55.900 
technologies first time we've ever used

00:02:55.900 --> 00:02:59.940 
technologies first time we've ever used
it<00:02:56.170> as<00:02:56.260> a<00:02:56.290> company<00:02:58.350> we're<00:02:59.350> testing<00:02:59.800> it

00:02:59.940 --> 00:02:59.950 
it as a company we're testing it

00:02:59.950 --> 00:03:02.670 
it as a company we're testing it
rigorously<00:03:00.940> now<00:03:01.180> and<00:03:01.480> we're<00:03:02.200> excited<00:03:02.470> about

00:03:02.670 --> 00:03:02.680 
rigorously now and we're excited about

00:03:02.680 --> 00:03:05.790 
rigorously now and we're excited about
the<00:03:02.890> results<00:03:03.930> what<00:03:04.930> should<00:03:05.170> we<00:03:05.320> call<00:03:05.560> this

00:03:05.790 --> 00:03:05.800 
the results what should we call this

00:03:05.800 --> 00:03:08.490 
the results what should we call this
chip<00:03:06.630> well<00:03:07.630> we<00:03:07.720> should<00:03:07.870> certainly<00:03:08.050> call<00:03:08.380> this

00:03:08.490 --> 00:03:08.500 
chip well we should certainly call this

00:03:08.500 --> 00:03:10.800 
chip well we should certainly call this
chip<00:03:08.769> and<00:03:08.980> name<00:03:09.430> it<00:03:09.550> after<00:03:09.700> somebody<00:03:10.209> name<00:03:10.690> it

00:03:10.800 --> 00:03:10.810 
chip and name it after somebody name it

00:03:10.810 --> 00:03:13.110 
chip and name it after somebody name it
after<00:03:10.930> a<00:03:11.080> scientist<00:03:11.650> that<00:03:12.190> we<00:03:12.310> all<00:03:12.459> recognize

00:03:13.110 --> 00:03:13.120 
after a scientist that we all recognize

00:03:13.120 --> 00:03:16.500 
after a scientist that we all recognize
and<00:03:13.630> admire<00:03:13.930> and<00:03:14.320> Blaise<00:03:15.010> Pascal<00:03:15.489> is<00:03:15.730> really

00:03:16.500 --> 00:03:16.510 
and admire and Blaise Pascal is really

00:03:16.510 --> 00:03:19.490 
and admire and Blaise Pascal is really
the<00:03:16.630> perfect<00:03:16.870> name<00:03:17.640> Blaise<00:03:18.640> Pascal<00:03:19.120> a

00:03:19.490 --> 00:03:19.500 
the perfect name Blaise Pascal a

00:03:19.500 --> 00:03:24.240 
the perfect name Blaise Pascal a
Frenchman<00:03:20.500> in<00:03:20.820> the<00:03:21.820> 17th<00:03:22.239> century<00:03:22.980> at<00:03:23.980> the<00:03:24.130> age

00:03:24.240 --> 00:03:24.250 
Frenchman in the 17th century at the age

00:03:24.250 --> 00:03:27.060 
Frenchman in the 17th century at the age
of<00:03:24.400> seventeen<00:03:24.940> sixteen<00:03:25.890> invented<00:03:26.890> the

00:03:27.060 --> 00:03:27.070 
of seventeen sixteen invented the

00:03:27.070 --> 00:03:30.750 
of seventeen sixteen invented the
mechanical<00:03:27.610> calculator<00:03:29.370> he's<00:03:30.370> responsible

00:03:30.750 --> 00:03:30.760 
mechanical calculator he's responsible

00:03:30.760 --> 00:03:33.270 
mechanical calculator he's responsible
for<00:03:30.970> probably<00:03:31.480> probabilistic<00:03:32.140> theory<00:03:32.769> to

00:03:33.270 --> 00:03:33.280 
for probably probabilistic theory to

00:03:33.280 --> 00:03:35.460 
for probably probabilistic theory to
help<00:03:33.459> a<00:03:33.549> friend<00:03:33.850> who<00:03:34.510> apparently<00:03:35.110> had<00:03:35.440> a

00:03:35.460 --> 00:03:35.470 
help a friend who apparently had a

00:03:35.470 --> 00:03:39.210 
help a friend who apparently had a
gambling<00:03:35.920> problem<00:03:37.170> he's<00:03:38.170> the<00:03:38.320> man<00:03:38.500> behind<00:03:38.530> the

00:03:39.210 --> 00:03:39.220 
gambling problem he's the man behind the

00:03:39.220 --> 00:03:42.840 
gambling problem he's the man behind the
Pascal's<00:03:39.700> theorem<00:03:41.220> we're<00:03:42.220> intersecting

00:03:42.840 --> 00:03:42.850 
Pascal's theorem we're intersecting

00:03:42.850 --> 00:03:46.890 
Pascal's theorem we're intersecting
lines<00:03:43.350> from<00:03:44.350> points<00:03:44.680> on<00:03:44.769> an<00:03:44.890> iconic<00:03:45.420> all<00:03:46.420> lie

00:03:46.890 --> 00:03:46.900 
lines from points on an iconic all lie

00:03:46.900 --> 00:03:50.460 
lines from points on an iconic all lie
on<00:03:46.930> what<00:03:47.290> is<00:03:47.410> called<00:03:47.560> the<00:03:47.650> Pascal<00:03:48.040> line<00:03:49.470> the

00:03:50.460 --> 00:03:50.470 
on what is called the Pascal line the

00:03:50.470 --> 00:03:53.640 
on what is called the Pascal line the
Pascal's<00:03:51.040> theorem<00:03:51.459> is<00:03:52.360> foundational<00:03:53.110> to<00:03:53.170> many

00:03:53.640 --> 00:03:53.650 
Pascal's theorem is foundational to many

00:03:53.650 --> 00:03:55.080 
Pascal's theorem is foundational to many
of<00:03:53.799> the<00:03:53.860> works<00:03:54.070> that<00:03:54.130> we<00:03:54.280> do<00:03:54.459> in<00:03:54.640> projective

00:03:55.080 --> 00:03:55.090 
of the works that we do in projective

00:03:55.090 --> 00:03:59.580 
of the works that we do in projective
geometry<00:03:56.880> Pascal's<00:03:57.880> law<00:03:57.970> of<00:03:58.590> hydrodynamics

00:03:59.580 --> 00:03:59.590 
geometry Pascal's law of hydrodynamics

00:03:59.590 --> 00:04:04.530 
geometry Pascal's law of hydrodynamics
is<00:04:00.720> applied<00:04:01.720> to<00:04:01.930> hydraulic<00:04:02.620> lifts<00:04:03.540> hydraulic

00:04:04.530 --> 00:04:04.540 
is applied to hydraulic lifts hydraulic

00:04:04.540 --> 00:04:08.970 
is applied to hydraulic lifts hydraulic
brakes<00:04:04.780> were<00:04:05.709> surrounded<00:04:06.310> by<00:04:06.400> his<00:04:06.549> work<00:04:07.980> the

00:04:08.970 --> 00:04:08.980 
brakes were surrounded by his work the

00:04:08.980 --> 00:04:10.890 
brakes were surrounded by his work the
unit<00:04:09.310> of<00:04:09.430> pressure<00:04:09.730> is<00:04:10.000> named<00:04:10.209> after<00:04:10.360> Pascal

00:04:10.890 --> 00:04:10.900 
unit of pressure is named after Pascal

00:04:10.900 --> 00:04:14.090 
unit of pressure is named after Pascal
and<00:04:11.739> a<00:04:11.859> program<00:04:12.310> language<00:04:13.209> is<00:04:13.480> named<00:04:13.810> after

00:04:14.090 --> 00:04:14.100 
and a program language is named after

00:04:14.100 --> 00:04:19.099 
and a program language is named after
Pascal<00:04:15.299> it<00:04:16.299> is<00:04:16.419> very<00:04:16.720> appropriate<00:04:17.079> for<00:04:17.590> us<00:04:18.459> to

00:04:19.099 --> 00:04:19.109 
Pascal it is very appropriate for us to

00:04:19.109 --> 00:04:23.480 
Pascal it is very appropriate for us to
introduce<00:04:20.109> to<00:04:20.440> you<00:04:20.590> our<00:04:20.799> next<00:04:21.669> generation<00:04:22.090> GPU

00:04:23.480 --> 00:04:23.490 
introduce to you our next generation GPU

00:04:23.490 --> 00:04:32.280 
introduce to you our next generation GPU
Pascal

00:04:32.280 --> 00:04:32.290 

00:04:32.290 --> 00:04:34.590 

Pascal<00:04:33.130> is<00:04:33.160> really<00:04:33.640> amazing<00:04:34.090> on<00:04:34.210> several

00:04:34.590 --> 00:04:34.600 
Pascal is really amazing on several

00:04:34.600 --> 00:04:39.600 
Pascal is really amazing on several
levels<00:04:34.860> let<00:04:35.860> me<00:04:35.920> show<00:04:36.100> you<00:04:38.220> this<00:04:39.220> is<00:04:39.460> the

00:04:39.600 --> 00:04:39.610 
levels let me show you this is the

00:04:39.610 --> 00:04:44.510 
levels let me show you this is the
Pascal<00:04:40.090> computer<00:04:41.790> this<00:04:42.790> little<00:04:43.120> module<00:04:43.570> here

00:04:44.510 --> 00:04:44.520 
Pascal computer this little module here

00:04:44.520 --> 00:04:47.970 
Pascal computer this little module here
represents<00:04:45.520> the<00:04:45.550> processor<00:04:46.240> of<00:04:46.980> next

00:04:47.970 --> 00:04:47.980 
represents the processor of next

00:04:47.980 --> 00:04:51.600 
represents the processor of next
generation<00:04:49.290> supercomputers<00:04:50.610> next

00:04:51.600 --> 00:04:51.610 
generation supercomputers next

00:04:51.610 --> 00:04:55.850 
generation supercomputers next
generation<00:04:52.230> workstations<00:04:53.230> next<00:04:54.190> generation

00:04:55.850 --> 00:04:55.860 
generation workstations next generation

00:04:55.860 --> 00:05:00.390 
generation workstations next generation
gaming<00:04:56.860> PC's<00:04:57.480> next<00:04:58.480> generation<00:04:59.400> cloud

00:05:00.390 --> 00:05:00.400 
gaming PC's next generation cloud

00:05:00.400 --> 00:05:02.820 
gaming PC's next generation cloud
supercomputers<00:05:01.350> it's<00:05:02.350> based<00:05:02.590> on<00:05:02.800> a

00:05:02.820 --> 00:05:02.830 
supercomputers it's based on a

00:05:02.830 --> 00:05:06.090 
supercomputers it's based on a
technology<00:05:03.160> called<00:05:03.580> MV<00:05:03.790> link<00:05:04.350> uses<00:05:05.350> 3d<00:05:05.620> memory

00:05:06.090 --> 00:05:06.100 
technology called MV link uses 3d memory

00:05:06.100 --> 00:05:09.090 
technology called MV link uses 3d memory
to<00:05:07.000> amplify<00:05:07.360> the<00:05:07.510> bandwidth<00:05:08.020> between<00:05:08.170> GPU<00:05:08.830> and

00:05:09.090 --> 00:05:09.100 
to amplify the bandwidth between GPU and

00:05:09.100 --> 00:05:12.330 
to amplify the bandwidth between GPU and
memory<00:05:10.060> subsystem<00:05:10.300> and<00:05:10.840> it<00:05:11.590> fits<00:05:11.800> in<00:05:11.950> a<00:05:12.070> module

00:05:12.330 --> 00:05:12.340 
memory subsystem and it fits in a module

00:05:12.340 --> 00:05:19.440 
memory subsystem and it fits in a module
that<00:05:13.530> is<00:05:14.530> 1/3<00:05:14.950> the<00:05:15.130> size<00:05:16.410> of<00:05:17.410> PCI<00:05:17.860> Express<00:05:18.450> this

00:05:19.440 --> 00:05:19.450 
that is 1/3 the size of PCI Express this

00:05:19.450 --> 00:05:21.780 
that is 1/3 the size of PCI Express this
little<00:05:19.780> tiny<00:05:19.990> module<00:05:20.470> is<00:05:20.620> elegant<00:05:21.490> is<00:05:21.610> just

00:05:21.780 --> 00:05:21.790 
little tiny module is elegant is just

00:05:21.790 --> 00:05:24.330 
little tiny module is elegant is just
really<00:05:22.030> really<00:05:22.270> beautiful<00:05:22.830> this<00:05:23.830> is<00:05:23.890> the<00:05:24.040> test

00:05:24.330 --> 00:05:24.340 
really really beautiful this is the test

00:05:24.340 --> 00:05:27.480 
really really beautiful this is the test
module<00:05:24.730> for<00:05:24.940> Pascal<00:05:25.830> and<00:05:26.830> so<00:05:26.950> what's<00:05:27.130> Pascal

00:05:27.480 --> 00:05:27.490 
module for Pascal and so what's Pascal

00:05:27.490 --> 00:05:30.270 
module for Pascal and so what's Pascal
gonna<00:05:27.670> do<00:05:27.900> well<00:05:28.900> here<00:05:29.080> we're<00:05:29.290> showing<00:05:29.560> you

00:05:30.270 --> 00:05:30.280 
gonna do well here we're showing you

00:05:30.280 --> 00:05:33.390 
gonna do well here we're showing you
some<00:05:30.460> of<00:05:30.490> the<00:05:30.580> results<00:05:30.970> this<00:05:31.810> is<00:05:32.080> s<00:05:33.010> gem

00:05:33.390 --> 00:05:33.400 
some of the results this is s gem

00:05:33.400 --> 00:05:39.750 
some of the results this is s gem
simulation<00:05:38.100> comparing<00:05:39.100> to<00:05:39.250> our<00:05:39.400> previous

00:05:39.750 --> 00:05:39.760 
simulation comparing to our previous

00:05:39.760 --> 00:05:43.310 
simulation comparing to our previous
generation<00:05:40.360> GPUs<00:05:40.840> at<00:05:41.310> constant<00:05:42.310> power<00:05:42.520> at

00:05:43.310 --> 00:05:43.320 
generation GPUs at constant power at

00:05:43.320 --> 00:05:47.790 
generation GPUs at constant power at
constant<00:05:44.320> power<00:05:45.030> ISO<00:05:46.030> power<00:05:46.800> comparing

00:05:47.790 --> 00:05:47.800 
constant power ISO power comparing

00:05:47.800 --> 00:05:49.470 
constant power ISO power comparing
generations<00:05:48.310> of<00:05:48.400> our<00:05:48.520> GPU<00:05:48.880> as<00:05:49.000> you<00:05:49.120> can<00:05:49.270> see

00:05:49.470 --> 00:05:49.480 
generations of our GPU as you can see

00:05:49.480 --> 00:05:53.340 
generations of our GPU as you can see
because<00:05:50.140> of<00:05:50.560> MV<00:05:50.830> link<00:05:51.070> because<00:05:51.910> of<00:05:52.180> 3d<00:05:52.990> memory

00:05:53.340 --> 00:05:53.350 
because of MV link because of 3d memory

00:05:53.350 --> 00:05:55.350 
because of MV link because of 3d memory
because<00:05:54.070> of<00:05:54.220> the<00:05:54.310> architectural<00:05:54.820> innovations

00:05:55.350 --> 00:05:55.360 
because of the architectural innovations

00:05:55.360 --> 00:05:59.880 
because of the architectural innovations
of<00:05:55.510> Pascal<00:05:56.290> we<00:05:56.710> can<00:05:56.920> now<00:05:58.080> continue<00:05:59.080> to<00:05:59.530> scale

00:05:59.880 --> 00:05:59.890 
of Pascal we can now continue to scale

00:05:59.890 --> 00:06:04.590 
of Pascal we can now continue to scale
with<00:06:00.820> Moore's<00:06:01.060> law<00:06:01.240> a<00:06:03.210> scale<00:06:04.210> that<00:06:04.240> most

00:06:04.590 --> 00:06:04.600 
with Moore's law a scale that most

00:06:04.600 --> 00:06:06.330 
with Moore's law a scale that most
people<00:06:04.900> feel<00:06:05.080> that<00:06:05.470> will<00:06:05.650> eventually<00:06:06.130> fall

00:06:06.330 --> 00:06:06.340 
people feel that will eventually fall

00:06:06.340 --> 00:06:08.220 
people feel that will eventually fall
off<00:06:06.520> of<00:06:06.730> but<00:06:07.330> it's<00:06:07.480> not<00:06:07.510> going<00:06:07.690> to<00:06:07.750> happen<00:06:08.080> with

00:06:08.220 --> 00:06:08.230 
off of but it's not going to happen with

00:06:08.230 --> 00:06:10.950 
off of but it's not going to happen with
Pascal<00:06:08.940> we're<00:06:09.940> gonna<00:06:10.030> continue<00:06:10.300> to<00:06:10.630> sagale

00:06:10.950 --> 00:06:10.960 
Pascal we're gonna continue to sagale

00:06:10.960 --> 00:06:13.680 
Pascal we're gonna continue to sagale
performance<00:06:11.440> in<00:06:11.680> fact<00:06:11.980> all<00:06:12.160> are<00:06:12.460> even<00:06:12.820> predict

00:06:13.680 --> 00:06:13.690 
performance in fact all are even predict

00:06:13.690 --> 00:06:16.080 
performance in fact all are even predict
that<00:06:13.870> in<00:06:14.020> multi-gpu<00:06:14.680> environments<00:06:15.460> and<00:06:15.580> in

00:06:16.080 --> 00:06:16.090 
that in multi-gpu environments and in

00:06:16.090 --> 00:06:19.740 
that in multi-gpu environments and in
large<00:06:16.360> configurations<00:06:17.080> Pascal<00:06:18.300> will<00:06:19.300> do<00:06:19.420> even

00:06:19.740 --> 00:06:19.750 
large configurations Pascal will do even

00:06:19.750 --> 00:06:22.770 
large configurations Pascal will do even
better<00:06:19.960> than<00:06:20.560> previous<00:06:20.980> generations<00:06:21.690> and<00:06:22.690> the

00:06:22.770 --> 00:06:22.780 
better than previous generations and the

00:06:22.780 --> 00:06:25.290 
better than previous generations and the
reason<00:06:23.020> for<00:06:23.050> that<00:06:23.170> is<00:06:23.380> MV<00:06:23.620> link<00:06:24.240> now<00:06:25.240> the

00:06:25.290 --> 00:06:25.300 
reason for that is MV link now the

00:06:25.300 --> 00:06:26.670 
reason for that is MV link now the
question<00:06:25.660> then<00:06:25.780> is<00:06:25.810> what<00:06:26.260> are<00:06:26.290> we<00:06:26.380> gonna<00:06:26.500> do

00:06:26.670 --> 00:06:26.680 
question then is what are we gonna do

00:06:26.680 --> 00:06:28.640 
question then is what are we gonna do
with<00:06:26.860> all<00:06:27.010> this<00:06:27.190> computational<00:06:27.910> horsepower

00:06:28.640 --> 00:06:28.650 
with all this computational horsepower

00:06:28.650 --> 00:06:30.600 
with all this computational horsepower
what<00:06:29.650> are<00:06:29.740> we<00:06:29.800> gonna<00:06:29.890> do<00:06:30.070> with<00:06:30.220> all<00:06:30.460> these

00:06:30.600 --> 00:06:30.610 
what are we gonna do with all these

00:06:30.610 --> 00:06:32.940 
what are we gonna do with all these
flops<00:06:30.970> what<00:06:31.750> are<00:06:31.810> we<00:06:31.900> going<00:06:31.990> to<00:06:32.080> do<00:06:32.230> with<00:06:32.920> a

00:06:32.940 --> 00:06:32.950 
flops what are we going to do with a

00:06:32.950 --> 00:06:34.140 
flops what are we going to do with a
processor<00:06:33.460> that's<00:06:33.490> essentially<00:06:34.090> a

00:06:34.140 --> 00:06:34.150 
processor that's essentially a

00:06:34.150 --> 00:06:35.860 
processor that's essentially a
supercomputer

00:06:35.860 --> 00:06:35.870 
supercomputer

00:06:35.870 --> 00:06:40.990 
supercomputer
the<00:06:36.770> size<00:06:37.070> no<00:06:37.820> bigger<00:06:38.060> than<00:06:38.120> two<00:06:38.389> credit<00:06:38.720> cards

