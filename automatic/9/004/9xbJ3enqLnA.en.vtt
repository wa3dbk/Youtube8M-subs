WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.370 

absolutely<00:00:00.690> it's<00:00:00.810> heavy<00:00:01.159> it<00:00:02.159> is<00:00:02.220> an<00:00:03.380> antique

00:00:04.370 --> 00:00:04.380 
absolutely it's heavy it is an antique

00:00:04.380 --> 00:00:09.110 
absolutely it's heavy it is an antique
1980s<00:00:05.960> television<00:00:07.010> this<00:00:08.010> is<00:00:08.160> back<00:00:08.340> from<00:00:08.940> when

00:00:09.110 --> 00:00:09.120 
1980s television this is back from when

00:00:09.120 --> 00:00:13.400 
1980s television this is back from when
television<00:00:09.450> was<00:00:09.690> furniture<00:00:10.410> I<00:00:10.700> love<00:00:11.700> it<00:00:12.410> well

00:00:13.400 --> 00:00:13.410 
television was furniture I love it well

00:00:13.410 --> 00:00:15.499 
television was furniture I love it well
this<00:00:13.559> is<00:00:13.740> this<00:00:14.160> is<00:00:14.219> my<00:00:14.460> first<00:00:14.790> computer<00:00:15.330> this

00:00:15.499 --> 00:00:15.509 
this is this is my first computer this

00:00:15.509 --> 00:00:17.269 
this is this is my first computer this
is<00:00:15.570> a<00:00:15.690> computer<00:00:15.780> that<00:00:16.289> my<00:00:16.410> parents<00:00:16.859> had<00:00:17.039> the

00:00:17.269 --> 00:00:17.279 
is a computer that my parents had the

00:00:17.279 --> 00:00:19.580 
is a computer that my parents had the
foresight<00:00:17.820> to<00:00:18.119> buy<00:00:18.720> me<00:00:18.900> when<00:00:19.050> I<00:00:19.140> was<00:00:19.260> 11<00:00:19.439> years

00:00:19.580 --> 00:00:19.590 
foresight to buy me when I was 11 years

00:00:19.590 --> 00:00:22.310 
foresight to buy me when I was 11 years
old<00:00:19.859> it<00:00:20.310> gave<00:00:20.609> me<00:00:20.939> a<00:00:21.180> curiosity<00:00:21.930> about

00:00:22.310 --> 00:00:22.320 
old it gave me a curiosity about

00:00:22.320 --> 00:00:24.140 
old it gave me a curiosity about
mathematics<00:00:22.980> and<00:00:23.189> physics<00:00:23.310> which<00:00:23.730> has<00:00:23.939> never

00:00:24.140 --> 00:00:24.150 
mathematics and physics which has never

00:00:24.150 --> 00:00:26.390 
mathematics and physics which has never
really<00:00:24.510> gone<00:00:24.689> away<00:00:24.750> today<00:00:25.470> I'm<00:00:25.769> going<00:00:26.099> to<00:00:26.160> talk

00:00:26.390 --> 00:00:26.400 
really gone away today I'm going to talk

00:00:26.400 --> 00:00:29.570 
really gone away today I'm going to talk
about<00:00:26.849> the<00:00:27.000> number<00:00:27.269> 15<00:00:27.660> and<00:00:28.039> I<00:00:29.039> want<00:00:29.340> to<00:00:29.429> tell

00:00:29.570 --> 00:00:29.580 
about the number 15 and I want to tell

00:00:29.580 --> 00:00:31.700 
about the number 15 and I want to tell
you<00:00:29.730> that<00:00:30.330> if<00:00:30.599> you're<00:00:30.779> a<00:00:30.869> computer<00:00:31.199> geek<00:00:31.470> like

00:00:31.700 --> 00:00:31.710 
you that if you're a computer geek like

00:00:31.710 --> 00:00:34.190 
you that if you're a computer geek like
me<00:00:32.360> we<00:00:33.360> don't<00:00:33.480> really<00:00:33.570> think<00:00:33.660> of<00:00:33.870> the<00:00:33.989> number

00:00:34.190 --> 00:00:34.200 
me we don't really think of the number

00:00:34.200 --> 00:00:36.440 
me we don't really think of the number
15<00:00:34.530> is<00:00:34.680> 15<00:00:34.860> we<00:00:35.219> think<00:00:35.430> of<00:00:35.520> it<00:00:35.610> as<00:00:35.760> the<00:00:36.000> letter<00:00:36.180> F

00:00:36.440 --> 00:00:36.450 
15 is 15 we think of it as the letter F

00:00:36.450 --> 00:00:40.180 
15 is 15 we think of it as the letter F
I'm<00:00:37.230> going<00:00:37.410> to<00:00:37.469> tell<00:00:37.559> you<00:00:37.649> why

00:00:40.180 --> 00:00:40.190 

00:00:40.190 --> 00:00:42.220 

right<00:00:41.120> now<00:00:41.300> you've<00:00:41.450> got<00:00:41.480> to<00:00:41.600> get<00:00:41.750> this<00:00:41.840> sound

00:00:42.220 --> 00:00:42.230 
right now you've got to get this sound

00:00:42.230 --> 00:00:44.470 
right now you've got to get this sound
this<00:00:42.590> just<00:00:42.950> makes<00:00:43.160> such<00:00:43.430> a<00:00:43.460> fantastic<00:00:43.910> switch

00:00:44.470 --> 00:00:44.480 
this just makes such a fantastic switch

00:00:44.480 --> 00:00:49.780 
this just makes such a fantastic switch
on<00:00:44.720> sound<00:00:45.820> in<00:00:46.820> that<00:00:47.059> satisfying<00:00:48.489> so<00:00:49.489> all<00:00:49.640> I'm

00:00:49.780 --> 00:00:49.790 
on sound in that satisfying so all I'm

00:00:49.790 --> 00:00:51.220 
on sound in that satisfying so all I'm
going<00:00:49.940> to<00:00:50.000> do<00:00:50.180> is<00:00:50.390> write<00:00:50.720> a<00:00:50.750> short<00:00:50.960> piece<00:00:51.200> of

00:00:51.220 --> 00:00:51.230 
going to do is write a short piece of

00:00:51.230 --> 00:00:52.869 
going to do is write a short piece of
code<00:00:51.500> that<00:00:51.530> makes<00:00:51.830> the<00:00:52.010> computer<00:00:52.250> count<00:00:52.610> I'm

00:00:52.869 --> 00:00:52.879 
code that makes the computer count I'm

00:00:52.879 --> 00:00:55.750 
code that makes the computer count I'm
rather<00:00:53.030> pleased<00:00:53.330> with<00:00:53.480> myself<00:00:54.430> but<00:00:55.430> I<00:00:55.460> can

00:00:55.750 --> 00:00:55.760 
rather pleased with myself but I can

00:00:55.760 --> 00:00:59.259 
rather pleased with myself but I can
still<00:00:56.000> remember<00:00:56.180> how<00:00:57.170> to<00:00:57.230> do<00:00:57.500> this<00:00:57.530> tada

00:00:59.259 --> 00:00:59.269 
still remember how to do this tada

00:00:59.269 --> 00:01:03.970 
still remember how to do this tada
so<00:00:59.690> all<00:00:59.840> I'm<00:01:00.019> doing<00:01:00.050> is<00:01:00.470> just<00:01:00.500> counting<00:01:01.629> 1<00:01:02.629> 2<00:01:02.980> 3

00:01:03.970 --> 00:01:03.980 
so all I'm doing is just counting 1 2 3

00:01:03.980 --> 00:01:07.810 
so all I'm doing is just counting 1 2 3
4<00:01:04.489> 5<00:01:04.790> 6<00:01:05.150> 7<00:01:05.690> 8<00:01:05.840> 9<00:01:06.290> and<00:01:07.160> then<00:01:07.310> something<00:01:07.640> rather

00:01:07.810 --> 00:01:07.820 
4 5 6 7 8 9 and then something rather

00:01:07.820 --> 00:01:10.510 
4 5 6 7 8 9 and then something rather
odd<00:01:08.060> happens<00:01:08.750> and<00:01:08.990> instead<00:01:09.770> of<00:01:09.920> counting<00:01:10.340> to

00:01:10.510 --> 00:01:10.520 
odd happens and instead of counting to

00:01:10.520 --> 00:01:16.469 
odd happens and instead of counting to
10<00:01:10.940> the<00:01:11.660> computer<00:01:12.110> switches<00:01:12.380> to<00:01:12.770> a<00:01:13.009> b<00:01:13.970> c<00:01:14.780> d<00:01:15.020> e<00:01:15.619> f

00:01:16.469 --> 00:01:16.479 
10 the computer switches to a b c d e f

00:01:16.479 --> 00:01:21.130 
10 the computer switches to a b c d e f
and<00:01:17.479> then<00:01:18.320> 10<00:01:18.619> 11<00:01:19.550> 12<00:01:19.850> 13<00:01:20.030> and<00:01:20.780> again<00:01:21.020> it

00:01:21.130 --> 00:01:21.140 
and then 10 11 12 13 and again it

00:01:21.140 --> 00:01:29.440 
and then 10 11 12 13 and again it
happens<00:01:21.500> at<00:01:22.250> 19<00:01:22.940> 1<00:01:23.930> a<00:01:23.960> 1<00:01:24.920> b<00:01:25.130> c<00:01:25.910> d<00:01:26.149> e<00:01:26.539> f<00:01:27.460> 20<00:01:28.460> how

00:01:29.440 --> 00:01:29.450 
happens at 19 1 a 1 b c d e f 20 how

00:01:29.450 --> 00:01:32.710 
happens at 19 1 a 1 b c d e f 20 how
bizarre<00:01:29.690> I<00:01:30.229> was<00:01:30.560> baffled<00:01:31.070> I<00:01:31.430> was<00:01:31.580> 11<00:01:32.330> years<00:01:32.360> old

00:01:32.710 --> 00:01:32.720 
bizarre I was baffled I was 11 years old

00:01:32.720 --> 00:01:35.830 
bizarre I was baffled I was 11 years old
and<00:01:32.930> we<00:01:33.830> used<00:01:34.039> to<00:01:34.160> have<00:01:34.310> to<00:01:34.550> wait<00:01:35.090> for<00:01:35.360> games<00:01:35.539> to

00:01:35.830 --> 00:01:35.840 
and we used to have to wait for games to

00:01:35.840 --> 00:01:37.810 
and we used to have to wait for games to
load<00:01:35.990> from<00:01:36.200> cassettes<00:01:36.619> and<00:01:37.190> when<00:01:37.340> they<00:01:37.490> loaded

00:01:37.810 --> 00:01:37.820 
load from cassettes and when they loaded

00:01:37.820 --> 00:01:39.700 
load from cassettes and when they loaded
they<00:01:37.910> would<00:01:38.090> count<00:01:38.300> and<00:01:39.170> that<00:01:39.440> would<00:01:39.560> take

00:01:39.700 --> 00:01:39.710 
they would count and that would take

00:01:39.710 --> 00:01:43.210 
they would count and that would take
maybe<00:01:39.979> 10<00:01:40.670> minutes<00:01:40.850> and<00:01:41.149> so<00:01:41.990> I<00:01:42.289> would<00:01:43.009> be

00:01:43.210 --> 00:01:43.220 
maybe 10 minutes and so I would be

00:01:43.220 --> 00:01:45.580 
maybe 10 minutes and so I would be
watching<00:01:44.000> these<00:01:44.119> numbers<00:01:44.569> count<00:01:44.869> very

00:01:45.580 --> 00:01:45.590 
watching these numbers count very

00:01:45.590 --> 00:01:47.529 
watching these numbers count very
patiently<00:01:46.190> waiting<00:01:46.700> to<00:01:46.729> play<00:01:47.030> pac-man<00:01:47.509> or

00:01:47.529 --> 00:01:47.539 
patiently waiting to play pac-man or

00:01:47.539 --> 00:01:49.210 
patiently waiting to play pac-man or
tetris<00:01:48.020> or<00:01:48.140> whatever<00:01:48.349> game<00:01:48.860> I<00:01:49.039> was<00:01:49.190> playing

00:01:49.210 --> 00:01:49.220 
tetris or whatever game I was playing

00:01:49.220 --> 00:01:54.639 
tetris or whatever game I was playing
that<00:01:49.550> day<00:01:49.840> and<00:01:51.610> wondering<00:01:52.610> precisely<00:01:53.270> why<00:01:53.720> it

00:01:54.639 --> 00:01:54.649 
that day and wondering precisely why it

00:01:54.649 --> 00:01:55.719 
that day and wondering precisely why it
wasn't<00:01:54.800> just<00:01:55.039> getting<00:01:55.280> on<00:01:55.369> with<00:01:55.520> it<00:01:55.580> and

00:01:55.719 --> 00:01:55.729 
wasn't just getting on with it and

00:01:55.729 --> 00:01:57.219 
wasn't just getting on with it and
getting<00:01:55.849> to<00:01:56.060> 10<00:01:56.270> you<00:01:56.479> know<00:01:56.599> why<00:01:56.780> did<00:01:56.959> it<00:01:57.080> have

00:01:57.219 --> 00:01:57.229 
getting to 10 you know why did it have

00:01:57.229 --> 00:01:59.139 
getting to 10 you know why did it have
to<00:01:57.380> go<00:01:57.500> through<00:01:57.800> it<00:01:57.979> felt<00:01:58.369> like<00:01:58.610> torture

00:01:59.139 --> 00:01:59.149 
to go through it felt like torture

00:01:59.149 --> 00:02:01.089 
to go through it felt like torture
because<00:01:59.450> I<00:01:59.539> wanted<00:01:59.869> to<00:01:59.929> play<00:02:00.140> the<00:02:00.319> game<00:02:00.470> get<00:02:00.979> on

00:02:01.089 --> 00:02:01.099 
because I wanted to play the game get on

00:02:01.099 --> 00:02:02.980 
because I wanted to play the game get on
with<00:02:01.220> it<00:02:01.250> count<00:02:01.580> to<00:02:01.700> ten<00:02:01.910> but<00:02:02.149> no<00:02:02.360> we<00:02:02.599> had<00:02:02.720> to<00:02:02.750> go

00:02:02.980 --> 00:02:02.990 
with it count to ten but no we had to go

00:02:02.990 --> 00:02:04.960 
with it count to ten but no we had to go
a<00:02:03.170> through<00:02:03.530> F<00:02:03.709> first<00:02:03.979> of<00:02:04.190> all<00:02:04.280> so<00:02:04.490> what<00:02:04.670> we<00:02:04.789> need

00:02:04.960 --> 00:02:04.970 
a through F first of all so what we need

00:02:04.970 --> 00:02:06.820 
a through F first of all so what we need
to<00:02:05.000> remember<00:02:05.450> is<00:02:05.660> that<00:02:06.020> computers<00:02:06.530> don't

00:02:06.820 --> 00:02:06.830 
to remember is that computers don't

00:02:06.830 --> 00:02:09.100 
to remember is that computers don't
count<00:02:07.250> the<00:02:07.610> way<00:02:07.729> you<00:02:07.789> and<00:02:08.119> I<00:02:08.179> count<00:02:08.539> on<00:02:08.810> our

00:02:09.100 --> 00:02:09.110 
count the way you and I count on our

00:02:09.110 --> 00:02:13.120 
count the way you and I count on our
fingers<00:02:09.500> they<00:02:10.160> count<00:02:10.459> on<00:02:10.670> lines<00:02:12.130> representing

00:02:13.120 --> 00:02:13.130 
fingers they count on lines representing

00:02:13.130 --> 00:02:15.729 
fingers they count on lines representing
ones<00:02:13.370> and<00:02:13.580> zeros<00:02:13.880> binary<00:02:14.420> numbers<00:02:14.810> so<00:02:15.319> what<00:02:15.709> I

00:02:15.729 --> 00:02:15.739 
ones and zeros binary numbers so what I

00:02:15.739 --> 00:02:17.110 
ones and zeros binary numbers so what I
want<00:02:15.950> to<00:02:16.010> show<00:02:16.130> you<00:02:16.190> is<00:02:16.340> just<00:02:16.370> four<00:02:16.849> lines

00:02:17.110 --> 00:02:17.120 
want to show you is just four lines

00:02:17.120 --> 00:02:22.180 
want to show you is just four lines
first<00:02:17.599> of<00:02:17.750> all<00:02:17.870> and<00:02:18.050> the<00:02:18.500> number<00:02:18.770> zero<00:02:21.190> the

00:02:22.180 --> 00:02:22.190 
first of all and the number zero the

00:02:22.190 --> 00:02:29.229 
first of all and the number zero the
number<00:02:22.310> one<00:02:24.069> the<00:02:25.069> number<00:02:25.160> two<00:02:27.760> number<00:02:28.760> three

00:02:29.229 --> 00:02:29.239 
number one the number two number three

00:02:29.239 --> 00:02:33.130 
number one the number two number three
and<00:02:29.720> then<00:02:30.440> I'm<00:02:30.770> going<00:02:31.130> to<00:02:31.160> skip<00:02:31.370> a<00:02:31.430> few<00:02:32.140> down

00:02:33.130 --> 00:02:33.140 
and then I'm going to skip a few down

00:02:33.140 --> 00:02:36.720 
and then I'm going to skip a few down
here<00:02:33.500> we're<00:02:33.770> going<00:02:33.920> to<00:02:34.040> go<00:02:34.190> to<00:02:34.250> the<00:02:34.520> number<00:02:34.790> 14

00:02:36.720 --> 00:02:36.730 
here we're going to go to the number 14

00:02:36.730 --> 00:02:41.480 
here we're going to go to the number 14
and<00:02:37.730> the<00:02:38.390> number<00:02:38.720> 15

00:02:41.480 --> 00:02:41.490 

00:02:41.490 --> 00:02:44.150 

okay<00:02:42.330> so<00:02:42.930> there's<00:02:43.140> quite<00:02:43.530> a<00:02:43.590> few<00:02:43.680> numbers<00:02:44.070> in

00:02:44.150 --> 00:02:44.160 
okay so there's quite a few numbers in

00:02:44.160 --> 00:02:45.770 
okay so there's quite a few numbers in
between<00:02:44.460> which<00:02:44.730> we've<00:02:44.910> skipped<00:02:45.210> over<00:02:45.450> for

00:02:45.770 --> 00:02:45.780 
between which we've skipped over for

00:02:45.780 --> 00:02:54.710 
between which we've skipped over for
brevity<00:02:46.140> so<00:02:46.800> this<00:02:46.980> is<00:02:47.190> not<00:02:47.820> 1<00:02:48.780> 2<00:02:49.880> 3<00:02:51.470> 14<00:02:53.540> 15<00:02:54.540> and

00:02:54.710 --> 00:02:54.720 
brevity so this is not 1 2 3 14 15 and

00:02:54.720 --> 00:02:57.230 
brevity so this is not 1 2 3 14 15 and
and<00:02:55.200> I<00:02:55.650> have<00:02:55.830> to<00:02:55.950> stop<00:02:56.190> there<00:02:56.520> I<00:02:56.700> have<00:02:56.910> to<00:02:57.030> stop

00:02:57.230 --> 00:02:57.240 
and I have to stop there I have to stop

00:02:57.240 --> 00:02:59.090 
and I have to stop there I have to stop
there<00:02:57.420> because<00:02:57.450> we've<00:02:58.020> run<00:02:58.500> out<00:02:58.650> of<00:02:58.680> numbers

00:02:59.090 --> 00:02:59.100 
there because we've run out of numbers

00:02:59.100 --> 00:03:00.920 
there because we've run out of numbers
if<00:02:59.280> I<00:02:59.400> if<00:02:59.670> I<00:02:59.880> try<00:03:00.090> and<00:03:00.240> count<00:03:00.450> to<00:03:00.630> a<00:03:00.660> higher

00:03:00.920 --> 00:03:00.930 
if I if I try and count to a higher

00:03:00.930 --> 00:03:02.870 
if I if I try and count to a higher
number<00:03:01.050> that<00:03:01.860> means<00:03:02.070> that's<00:03:02.490> got<00:03:02.670> to<00:03:02.760> be

00:03:02.870 --> 00:03:02.880 
number that means that's got to be

00:03:02.880 --> 00:03:06.020 
number that means that's got to be
naught<00:03:03.150> naught<00:03:03.480> naught<00:03:03.960> naught<00:03:04.440> 1<00:03:05.000> but<00:03:06.000> I

00:03:06.020 --> 00:03:06.030 
naught naught naught naught 1 but I

00:03:06.030 --> 00:03:07.580 
naught naught naught naught 1 but I
don't<00:03:06.270> have<00:03:06.390> space<00:03:06.690> for<00:03:06.720> this<00:03:07.020> one<00:03:07.260> here<00:03:07.440> and

00:03:07.580 --> 00:03:07.590 
don't have space for this one here and

00:03:07.590 --> 00:03:09.620 
don't have space for this one here and
so<00:03:08.070> we<00:03:08.550> can't<00:03:08.730> count<00:03:09.000> to<00:03:09.090> a<00:03:09.210> number<00:03:09.510> bigger

00:03:09.620 --> 00:03:09.630 
so we can't count to a number bigger

00:03:09.630 --> 00:03:12.320 
so we can't count to a number bigger
than<00:03:09.780> 15<00:03:10.230> on<00:03:10.410> 4<00:03:10.440> bits<00:03:10.830> these<00:03:11.790> if<00:03:11.970> you<00:03:12.060> want<00:03:12.210> to

00:03:12.320 --> 00:03:12.330 
than 15 on 4 bits these if you want to

00:03:12.330 --> 00:03:15.020 
than 15 on 4 bits these if you want to
understand<00:03:12.870> the<00:03:13.080> underlying<00:03:13.380> ones<00:03:14.340> and<00:03:14.610> zeros

00:03:15.020 --> 00:03:15.030 
understand the underlying ones and zeros

00:03:15.030 --> 00:03:17.660 
understand the underlying ones and zeros
that's<00:03:15.300> going<00:03:15.630> on<00:03:15.750> in<00:03:15.900> the<00:03:15.990> computer<00:03:16.410> then<00:03:17.370> I

00:03:17.660 --> 00:03:17.670 
that's going on in the computer then I

00:03:17.670 --> 00:03:19.790 
that's going on in the computer then I
need<00:03:18.030> to<00:03:18.180> be<00:03:18.330> able<00:03:18.420> to<00:03:18.690> very<00:03:18.900> quickly<00:03:19.020> say<00:03:19.560> what

00:03:19.790 --> 00:03:19.800 
need to be able to very quickly say what

00:03:19.800 --> 00:03:22.430 
need to be able to very quickly say what
is<00:03:20.280> this<00:03:20.550> number<00:03:20.990> and<00:03:21.990> this<00:03:22.380> number

00:03:22.430 --> 00:03:22.440 
is this number and this number

00:03:22.440 --> 00:03:23.930 
is this number and this number
unfortunately<00:03:22.920> bears<00:03:23.550> very<00:03:23.790> little

00:03:23.930 --> 00:03:23.940 
unfortunately bears very little

00:03:23.940 --> 00:03:27.500 
unfortunately bears very little
relationship<00:03:24.630> to<00:03:25.310> the<00:03:26.310> decimal<00:03:26.820> value<00:03:26.850> so<00:03:27.300> for

00:03:27.500 --> 00:03:27.510 
relationship to the decimal value so for

00:03:27.510 --> 00:03:31.910 
relationship to the decimal value so for
example<00:03:28.020> the<00:03:28.170> number<00:03:28.410> 9<00:03:30.350> this<00:03:31.350> is<00:03:31.530> the<00:03:31.650> number

00:03:31.910 --> 00:03:31.920 
example the number 9 this is the number

00:03:31.920 --> 00:03:36.040 
example the number 9 this is the number
not<00:03:32.070> for<00:03:33.000> a<00:03:33.030> computer<00:03:33.330> so<00:03:33.690> the<00:03:33.840> number<00:03:34.110> 11

00:03:36.040 --> 00:03:36.050 
not for a computer so the number 11

00:03:36.050 --> 00:03:40.670 
not for a computer so the number 11
that's<00:03:37.050> number<00:03:37.320> 11<00:03:37.550> okay<00:03:38.550> or<00:03:38.790> the<00:03:39.780> number<00:03:40.140> 6

00:03:40.670 --> 00:03:40.680 
that's number 11 okay or the number 6

00:03:40.680 --> 00:03:46.250 
that's number 11 okay or the number 6
for<00:03:41.100> example<00:03:41.250> would<00:03:41.790> be<00:03:41.850> not<00:03:42.600> 1:1<00:03:44.480> so<00:03:45.480> what<00:03:46.140> we

00:03:46.250 --> 00:03:46.260 
for example would be not 1:1 so what we

00:03:46.260 --> 00:03:48.680 
for example would be not 1:1 so what we
do<00:03:46.440> instead<00:03:46.620> is<00:03:47.070> we<00:03:47.160> count<00:03:47.670> in<00:03:47.940> a<00:03:48.330> thing<00:03:48.510> called

00:03:48.680 --> 00:03:48.690 
do instead is we count in a thing called

00:03:48.690 --> 00:03:52.100 
do instead is we count in a thing called
hexadecimal<00:03:49.530> this<00:03:49.830> is<00:03:49.980> base<00:03:50.310> 16<00:03:50.970> so<00:03:51.270> if<00:03:51.510> we<00:03:51.960> had

00:03:52.100 --> 00:03:52.110 
hexadecimal this is base 16 so if we had

00:03:52.110 --> 00:03:55.730 
hexadecimal this is base 16 so if we had
16<00:03:52.950> fingers<00:03:53.430> then<00:03:54.180> we<00:03:55.050> would<00:03:55.260> have<00:03:55.350> come<00:03:55.590> up

00:03:55.730 --> 00:03:55.740 
16 fingers then we would have come up

00:03:55.740 --> 00:03:57.890 
16 fingers then we would have come up
with<00:03:55.770> numbers<00:03:56.340> sufficient<00:03:57.150> to<00:03:57.360> go<00:03:57.480> from<00:03:57.690> 1<00:03:57.870> to

00:03:57.890 --> 00:03:57.900 
with numbers sufficient to go from 1 to

00:03:57.900 --> 00:03:59.720 
with numbers sufficient to go from 1 to
16<00:03:58.350> but<00:03:58.470> because<00:03:58.740> we<00:03:58.890> only<00:03:59.010> have<00:03:59.220> 10<00:03:59.430> fingers

00:03:59.720 --> 00:03:59.730 
16 but because we only have 10 fingers

00:03:59.730 --> 00:04:02.180 
16 but because we only have 10 fingers
we<00:04:00.450> only<00:04:00.600> have<00:04:00.870> 10<00:04:01.110> digits<00:04:01.320> for<00:04:01.710> counting<00:04:02.010> and

00:04:02.180 --> 00:04:02.190 
we only have 10 digits for counting and

00:04:02.190 --> 00:04:05.630 
we only have 10 digits for counting and
so<00:04:02.880> instead<00:04:03.540> of<00:04:03.660> using<00:04:03.930> just<00:04:04.830> more<00:04:05.040> digits<00:04:05.430> we

00:04:05.630 --> 00:04:05.640 
so instead of using just more digits we

00:04:05.640 --> 00:04:07.520 
so instead of using just more digits we
use<00:04:05.880> letters<00:04:06.510> to<00:04:06.720> replace<00:04:07.080> the<00:04:07.350> missing

00:04:07.520 --> 00:04:07.530 
use letters to replace the missing

00:04:07.530 --> 00:04:09.860 
use letters to replace the missing
digits<00:04:08.070> so<00:04:08.310> let's<00:04:08.490> start<00:04:09.030> at<00:04:09.330> the<00:04:09.450> number<00:04:09.720> 8

00:04:09.860 --> 00:04:09.870 
digits so let's start at the number 8

00:04:09.870 --> 00:04:11.780 
digits so let's start at the number 8
and<00:04:10.200> we'll<00:04:10.620> work<00:04:10.860> our<00:04:11.040> way<00:04:11.070> through<00:04:11.220> so<00:04:11.700> the

00:04:11.780 --> 00:04:11.790 
and we'll work our way through so the

00:04:11.790 --> 00:04:16.610 
and we'll work our way through so the
number<00:04:12.060> 8<00:04:12.270> is<00:04:12.720> going<00:04:12.930> to<00:04:13.020> be<00:04:13.110> 1<00:04:13.320> 0<00:04:13.920> 0<00:04:14.640> 0<00:04:15.200> that's<00:04:16.200> 8

00:04:16.610 --> 00:04:16.620 
number 8 is going to be 1 0 0 0 that's 8

00:04:16.620 --> 00:04:22.100 
number 8 is going to be 1 0 0 0 that's 8
the<00:04:17.610> number<00:04:17.760> 9<00:04:18.150> 1<00:04:18.900> 0<00:04:19.410> 0<00:04:19.980> 1<00:04:20.460> that's<00:04:20.760> 9<00:04:21.120> and<00:04:21.450> then

00:04:22.100 --> 00:04:22.110 
the number 9 1 0 0 1 that's 9 and then

00:04:22.110 --> 00:04:26.150 
the number 9 1 0 0 1 that's 9 and then
the<00:04:22.140> number<00:04:22.350> ten<00:04:24.320> that's<00:04:25.320> ten<00:04:25.500> now<00:04:25.800> notice

00:04:26.150 --> 00:04:26.160 
the number ten that's ten now notice

00:04:26.160 --> 00:04:28.760 
the number ten that's ten now notice
that<00:04:26.370> in<00:04:27.000> decimal<00:04:27.180> we've<00:04:27.900> had<00:04:28.140> to<00:04:28.290> go<00:04:28.440> into<00:04:28.740> a

00:04:28.760 --> 00:04:28.770 
that in decimal we've had to go into a

00:04:28.770 --> 00:04:31.220 
that in decimal we've had to go into a
new<00:04:29.010> column<00:04:29.400> for<00:04:29.790> the<00:04:29.880> number<00:04:30.150> 10<00:04:30.330> but<00:04:31.140> if

00:04:31.220 --> 00:04:31.230 
new column for the number 10 but if

00:04:31.230 --> 00:04:32.810 
new column for the number 10 but if
we're<00:04:31.410> working<00:04:31.620> in<00:04:31.860> hexadecimal

00:04:32.810 --> 00:04:32.820 
we're working in hexadecimal

00:04:32.820 --> 00:04:37.100 
we're working in hexadecimal
then<00:04:33.420> this<00:04:33.570> is<00:04:33.810> 8<00:04:34.430> 9<00:04:35.430> and<00:04:35.910> then<00:04:36.510> this<00:04:36.660> becomes

00:04:37.100 --> 00:04:37.110 
then this is 8 9 and then this becomes

00:04:37.110 --> 00:04:43.430 
then this is 8 9 and then this becomes
the<00:04:37.860> letter<00:04:38.040> A<00:04:38.390> and<00:04:39.390> then<00:04:39.630> 11<00:04:41.660> it's<00:04:42.660> 11<00:04:43.230> and

00:04:43.430 --> 00:04:43.440 
the letter A and then 11 it's 11 and

00:04:43.440 --> 00:04:45.170 
the letter A and then 11 it's 11 and
it's<00:04:43.890> the<00:04:44.100> letter<00:04:44.280> B<00:04:44.520> then<00:04:44.850> we're<00:04:44.970> just<00:04:45.000> going

00:04:45.170 --> 00:04:45.180 
it's the letter B then we're just going

00:04:45.180 --> 00:04:46.670 
it's the letter B then we're just going
to<00:04:45.270> skip<00:04:45.480> to<00:04:45.510> the<00:04:45.660> end<00:04:45.900> and<00:04:46.140> it's<00:04:46.320> going<00:04:46.470> to<00:04:46.590> be

00:04:46.670 --> 00:04:46.680 
to skip to the end and it's going to be

00:04:46.680 --> 00:04:51.140 
to skip to the end and it's going to be
1<00:04:46.950> 1<00:04:47.220> 1<00:04:47.970> 1<00:04:48.420> which<00:04:48.660> is<00:04:48.870> the<00:04:48.990> number<00:04:49.020> 15<00:04:49.650> or<00:04:50.340> in<00:04:50.940> our

00:04:51.140 --> 00:04:51.150 
1 1 1 1 which is the number 15 or in our

00:04:51.150 --> 00:04:53.020 
1 1 1 1 which is the number 15 or in our
case<00:04:51.180> the<00:04:51.750> letter

00:04:53.020 --> 00:04:53.030 
case the letter

00:04:53.030 --> 00:04:55.900 
case the letter
F<00:04:53.150> our<00:04:53.540> magic<00:04:54.260> number<00:04:54.290> okay<00:04:55.220> this<00:04:55.370> is<00:04:55.520> magic

00:04:55.900 --> 00:04:55.910 
F our magic number okay this is magic

00:04:55.910 --> 00:04:57.880 
F our magic number okay this is magic
because<00:04:56.240> it<00:04:56.390> allows<00:04:56.660> us<00:04:56.690> as<00:04:57.110> programmers<00:04:57.350> to

00:04:57.880 --> 00:04:57.890 
because it allows us as programmers to

00:04:57.890 --> 00:05:00.730 
because it allows us as programmers to
very<00:04:58.160> quickly<00:04:58.550> see<00:04:58.790> what's<00:04:59.660> going<00:05:00.050> on<00:05:00.200> with

00:05:00.730 --> 00:05:00.740 
very quickly see what's going on with

00:05:00.740 --> 00:05:02.500 
very quickly see what's going on with
the<00:05:00.890> binary<00:05:01.160> numbers<00:05:01.610> the<00:05:01.790> electronics

00:05:02.500 --> 00:05:02.510 
the binary numbers the electronics

00:05:02.510 --> 00:05:04.690 
the binary numbers the electronics
inside<00:05:02.750> the<00:05:03.170> computer<00:05:03.620> so<00:05:04.220> in<00:05:04.340> an<00:05:04.430> 8-bit

00:05:04.690 --> 00:05:04.700 
inside the computer so in an 8-bit

00:05:04.700 --> 00:05:08.050 
inside the computer so in an 8-bit
computer<00:05:05.510> we've<00:05:05.720> got<00:05:05.930> two<00:05:06.110> sets<00:05:06.410> of<00:05:06.590> 4-bit<00:05:07.550> set

00:05:08.050 --> 00:05:08.060 
computer we've got two sets of 4-bit set

00:05:08.060 --> 00:05:11.170 
computer we've got two sets of 4-bit set
so<00:05:08.780> the<00:05:09.230> number<00:05:09.470> zero<00:05:09.740> becomes<00:05:10.190> zero<00:05:10.790> zero

00:05:11.170 --> 00:05:11.180 
so the number zero becomes zero zero

00:05:11.180 --> 00:05:15.880 
so the number zero becomes zero zero
zero<00:05:11.600> zero<00:05:11.660> zero<00:05:12.670> zero<00:05:13.670> zero<00:05:13.840> zero<00:05:14.840> two<00:05:15.620> lots

00:05:15.880 --> 00:05:15.890 
zero zero zero zero zero zero two lots

00:05:15.890 --> 00:05:19.960 
zero zero zero zero zero zero two lots
of<00:05:16.100> four<00:05:16.340> bits<00:05:16.580> now<00:05:17.680> this<00:05:18.680> this<00:05:19.100> set<00:05:19.400> can<00:05:19.940> be

00:05:19.960 --> 00:05:19.970 
of four bits now this this set can be

00:05:19.970 --> 00:05:23.770 
of four bits now this this set can be
represented<00:05:20.720> by<00:05:20.930> one<00:05:22.150> hexadecimal<00:05:23.150> digit<00:05:23.480> the

00:05:23.770 --> 00:05:23.780 
represented by one hexadecimal digit the

00:05:23.780 --> 00:05:25.630 
represented by one hexadecimal digit the
letter<00:05:23.960> zero<00:05:24.320> and<00:05:24.560> just<00:05:25.070> to<00:05:25.160> let<00:05:25.310> you<00:05:25.370> know

00:05:25.630 --> 00:05:25.640 
letter zero and just to let you know

00:05:25.640 --> 00:05:27.730 
letter zero and just to let you know
that<00:05:25.820> it's<00:05:25.940> hexadecimal<00:05:26.630> I'm<00:05:27.320> just<00:05:27.530> going<00:05:27.680> to

00:05:27.730 --> 00:05:27.740 
that it's hexadecimal I'm just going to

00:05:27.740 --> 00:05:29.650 
that it's hexadecimal I'm just going to
write<00:05:27.890> an<00:05:28.040> X<00:05:28.220> in<00:05:28.460> front<00:05:28.669> of<00:05:28.760> it<00:05:28.850> and<00:05:29.210> this<00:05:29.419> lot

00:05:29.650 --> 00:05:29.660 
write an X in front of it and this lot

00:05:29.660 --> 00:05:32.170 
write an X in front of it and this lot
can<00:05:29.960> similarly<00:05:30.200> be<00:05:30.470> represented<00:05:31.250> by<00:05:32.120> the

00:05:32.170 --> 00:05:32.180 
can similarly be represented by the

00:05:32.180 --> 00:05:36.520 
can similarly be represented by the
hexadecimal<00:05:32.870> number<00:05:33.220> zero<00:05:34.960> so<00:05:35.960> this<00:05:36.140> is<00:05:36.290> 10

00:05:36.520 --> 00:05:36.530 
hexadecimal number zero so this is 10

00:05:36.530 --> 00:05:40.930 
hexadecimal number zero so this is 10
and<00:05:36.940> this<00:05:37.940> is<00:05:38.150> 10<00:05:38.360> but<00:05:39.350> in<00:05:39.470> hexadecimal<00:05:39.830> we<00:05:40.730> can

00:05:40.930 --> 00:05:40.940 
and this is 10 but in hexadecimal we can

00:05:40.940 --> 00:05:42.640 
and this is 10 but in hexadecimal we can
still<00:05:41.180> represent<00:05:41.390> this<00:05:41.900> by<00:05:42.169> a<00:05:42.200> single

00:05:42.640 --> 00:05:42.650 
still represent this by a single

00:05:42.650 --> 00:05:48.790 
still represent this by a single
character<00:05:42.860> this<00:05:43.730> becomes<00:05:44.210> a<00:05:46.570> and<00:05:47.800> this

00:05:48.790 --> 00:05:48.800 
character this becomes a and this

00:05:48.800 --> 00:05:52.240 
character this becomes a and this
becomes<00:05:49.250> a<00:05:49.580> in<00:05:50.240> hexadecimal<00:05:50.600> our<00:05:51.169> number<00:05:51.500> is<00:05:51.680> a

00:05:52.240 --> 00:05:52.250 
becomes a in hexadecimal our number is a

00:05:52.250 --> 00:05:55.210 
becomes a in hexadecimal our number is a
a<00:05:52.990> with<00:05:53.990> little<00:05:54.230> X<00:05:54.350> in<00:05:54.530> front<00:05:54.620> of<00:05:54.800> it<00:05:54.890> just<00:05:55.100> to

00:05:55.210 --> 00:05:55.220 
a with little X in front of it just to

00:05:55.220 --> 00:05:56.500 
a with little X in front of it just to
tell<00:05:55.400> you<00:05:55.520> that<00:05:55.550> it's<00:05:55.820> a<00:05:55.880> hexadecimal<00:05:56.180> number

00:05:56.500 --> 00:05:56.510 
tell you that it's a hexadecimal number

00:05:56.510 --> 00:05:59.469 
tell you that it's a hexadecimal number
so<00:05:57.500> I'm<00:05:57.650> going<00:05:57.830> to<00:05:57.860> skip<00:05:58.280> to<00:05:58.880> the<00:05:58.910> crux<00:05:59.240> of<00:05:59.360> the

00:05:59.469 --> 00:05:59.479 
so I'm going to skip to the crux of the

00:05:59.479 --> 00:06:01.570 
so I'm going to skip to the crux of the
issue<00:05:59.510> and<00:05:59.870> that<00:06:00.290> is<00:06:00.470> the<00:06:00.680> top<00:06:00.919> number<00:06:00.950> that<00:06:01.460> we

00:06:01.570 --> 00:06:01.580 
issue and that is the top number that we

00:06:01.580 --> 00:06:03.820 
issue and that is the top number that we
can<00:06:01.790> store<00:06:02.120> in<00:06:02.330> an<00:06:02.419> 8-bit<00:06:02.660> value<00:06:03.229> which<00:06:03.680> of

00:06:03.820 --> 00:06:03.830 
can store in an 8-bit value which of

00:06:03.830 --> 00:06:08.380 
can store in an 8-bit value which of
course<00:06:03.860> is<00:06:04.220> simply<00:06:04.430> 1<00:06:05.060> 1<00:06:05.450> 1<00:06:05.840> 1<00:06:06.140> 1<00:06:07.010> 1<00:06:07.310> 1<00:06:07.760> 1

00:06:08.380 --> 00:06:08.390 
course is simply 1 1 1 1 1 1 1 1

00:06:08.390 --> 00:06:10.210 
course is simply 1 1 1 1 1 1 1 1
what<00:06:08.660> number<00:06:08.930> is<00:06:08.990> there<00:06:09.140> and<00:06:09.320> that<00:06:09.650> number<00:06:10.040> is

00:06:10.210 --> 00:06:10.220 
what number is there and that number is

00:06:10.220 --> 00:06:14.710 
what number is there and that number is
this<00:06:11.210> is<00:06:11.390> F<00:06:12.220> this<00:06:13.220> is<00:06:13.280> f<00:06:13.700> so<00:06:14.240> we've<00:06:14.450> got<00:06:14.630> the

00:06:14.710 --> 00:06:14.720 
this is F this is f so we've got the

00:06:14.720 --> 00:06:17.280 
this is F this is f so we've got the
hexadecimal<00:06:14.990> number<00:06:15.530> F<00:06:15.710> F<00:06:16.220> which<00:06:16.640> is<00:06:16.790> equal<00:06:17.060> to

00:06:17.280 --> 00:06:17.290 
hexadecimal number F F which is equal to

00:06:17.290 --> 00:06:21.070 
hexadecimal number F F which is equal to
255<00:06:18.290> which<00:06:19.160> is<00:06:19.220> the<00:06:19.460> highest<00:06:19.880> value<00:06:20.330> that<00:06:20.510> an

00:06:21.070 --> 00:06:21.080 
255 which is the highest value that an

00:06:21.080 --> 00:06:24.520 
255 which is the highest value that an
8-bit<00:06:21.710> computer<00:06:22.310> can<00:06:22.550> store<00:06:23.260> ok<00:06:24.260> now<00:06:24.440> of

00:06:24.520 --> 00:06:24.530 
8-bit computer can store ok now of

00:06:24.530 --> 00:06:27.130 
8-bit computer can store ok now of
course<00:06:24.650> modern<00:06:25.160> computers<00:06:25.790> aren't<00:06:26.600> simply<00:06:26.930> 8

00:06:27.130 --> 00:06:27.140 
course modern computers aren't simply 8

00:06:27.140 --> 00:06:28.690 
course modern computers aren't simply 8
bits<00:06:27.470> long

00:06:28.690 --> 00:06:28.700 
bits long

00:06:28.700 --> 00:06:31.270 
bits long
recently<00:06:29.510> 32<00:06:29.990> bits<00:06:30.229> or<00:06:30.440> you<00:06:30.830> can<00:06:30.979> go<00:06:31.100> out<00:06:31.250> and

00:06:31.270 --> 00:06:31.280 
recently 32 bits or you can go out and

00:06:31.280 --> 00:06:33.820 
recently 32 bits or you can go out and
you<00:06:31.580> can<00:06:31.700> buy<00:06:31.850> a<00:06:31.880> top-end<00:06:32.210> 64<00:06:32.990> bit<00:06:33.169> computer<00:06:33.320> so

00:06:33.820 --> 00:06:33.830 
you can buy a top-end 64 bit computer so

00:06:33.830 --> 00:06:35.770 
you can buy a top-end 64 bit computer so
I<00:06:34.010> want<00:06:34.400> to<00:06:34.460> show<00:06:34.610> you<00:06:34.669> the<00:06:34.850> highest<00:06:35.210> number<00:06:35.600> in

00:06:35.770 --> 00:06:35.780 
I want to show you the highest number in

00:06:35.780 --> 00:06:38.680 
I want to show you the highest number in
very<00:06:36.440> short<00:06:36.770> hand<00:06:37.010> notation<00:06:37.070> that<00:06:37.910> a<00:06:37.970> 32<00:06:38.510> bit

00:06:38.680 --> 00:06:38.690 
very short hand notation that a 32 bit

00:06:38.690 --> 00:06:42.940 
very short hand notation that a 32 bit
computer<00:06:38.810> can<00:06:39.260> store<00:06:39.470> here<00:06:39.650> we<00:06:39.740> go<00:06:39.890> F<00:06:40.850> F<00:06:41.320> F<00:06:42.320> F<00:06:42.380> F

00:06:42.940 --> 00:06:42.950 
computer can store here we go F F F F F

00:06:42.950 --> 00:06:50.140 
computer can store here we go F F F F F
F<00:06:43.820> F<00:06:44.270> F<00:06:45.050> so<00:06:46.040> 8-bits<00:06:46.700> 16-bits<00:06:47.650> 24<00:06:48.650> bits<00:06:48.940> 32<00:06:49.940> bits

00:06:50.140 --> 00:06:50.150 
F F F so 8-bits 16-bits 24 bits 32 bits

00:06:50.150 --> 00:06:52.200 
F F F so 8-bits 16-bits 24 bits 32 bits
now<00:06:50.540> write<00:06:50.780> that<00:06:50.900> in<00:06:51.020> binary<00:06:51.260> how<00:06:51.590> I<00:06:51.620> hate<00:06:52.010> you

00:06:52.200 --> 00:06:52.210 
now write that in binary how I hate you

00:06:52.210 --> 00:07:00.400 
now write that in binary how I hate you
1<00:06:53.210> 1<00:06:53.240> 1<00:06:53.780> 1<00:06:54.020> 1<00:06:54.650> 1<00:06:54.860> 1<00:06:54.919> 1<00:06:55.460> 1<00:06:56.270> 1<00:06:56.540> 1<00:06:56.750> 1

00:07:00.400 --> 00:07:00.410 

00:07:00.410 --> 00:07:05.330 

have<00:07:01.410> to<00:07:01.470> put<00:07:01.590> a<00:07:01.620> few<00:07:01.770> on<00:07:01.800> the<00:07:01.920> front<00:07:04.190> and<00:07:05.190> that

00:07:05.330 --> 00:07:05.340 
have to put a few on the front and that

00:07:05.340 --> 00:07:08.510 
have to put a few on the front and that
is<00:07:05.520> the<00:07:05.640> binary<00:07:05.820> number<00:07:06.210> 1<00:07:06.480> 1<00:07:06.720> 1<00:07:06.930> 1<00:07:07.140> 1<00:07:07.200> 1<00:07:07.410> 1<00:07:07.830> 1<00:07:08.010> 1<00:07:08.070> 1

00:07:08.510 --> 00:07:08.520 
is the binary number 1 1 1 1 1 1 1 1 1 1

00:07:08.520 --> 00:07:12.560 
is the binary number 1 1 1 1 1 1 1 1 1 1
1<00:07:08.730> 1<00:07:08.790> 1<00:07:09.000> 1<00:07:09.210> 1<00:07:09.450> 1<00:07:09.660> 11<00:07:10.290> a<00:07:11.070> big<00:07:11.580> number<00:07:11.730> and<00:07:12.000> that's

00:07:12.560 --> 00:07:12.570 
1 1 1 1 1 1 11 a big number and that's

00:07:12.570 --> 00:07:14.660 
1 1 1 1 1 1 11 a big number and that's
why<00:07:12.840> we<00:07:13.080> don't<00:07:13.260> use<00:07:13.440> binary<00:07:13.920> we<00:07:14.490> use

00:07:14.660 --> 00:07:14.670 
why we don't use binary we use

00:07:14.670 --> 00:07:16.970 
why we don't use binary we use
hexadecimal<00:07:15.450> values<00:07:15.720> obviously<00:07:16.320> if<00:07:16.620> I<00:07:16.710> wanted

00:07:16.970 --> 00:07:16.980 
hexadecimal values obviously if I wanted

00:07:16.980 --> 00:07:18.650 
hexadecimal values obviously if I wanted
to<00:07:17.070> write<00:07:17.190> a<00:07:17.220> really<00:07:17.430> big<00:07:17.640> number<00:07:17.790> down<00:07:18.090> it's

00:07:18.650 --> 00:07:18.660 
to write a really big number down it's

00:07:18.660 --> 00:07:20.720 
to write a really big number down it's
just<00:07:18.780> too<00:07:19.290> much<00:07:19.440> pen<00:07:19.740> and<00:07:19.860> ink<00:07:19.980> so<00:07:20.430> we<00:07:20.580> don't

00:07:20.720 --> 00:07:20.730 
just too much pen and ink so we don't

00:07:20.730 --> 00:07:23.840 
just too much pen and ink so we don't
use<00:07:20.880> the<00:07:21.030> binary<00:07:21.350> we<00:07:22.350> don't<00:07:22.530> use<00:07:22.860> decimal

00:07:23.840 --> 00:07:23.850 
use the binary we don't use decimal

00:07:23.850 --> 00:07:26.690 
use the binary we don't use decimal
because<00:07:24.270> well<00:07:24.540> this<00:07:24.690> number<00:07:24.930> it's<00:07:25.650> not<00:07:25.890> 65,000

00:07:26.690 --> 00:07:26.700 
because well this number it's not 65,000

00:07:26.700 --> 00:07:30.800 
because well this number it's not 65,000
it's<00:07:27.050> approximately<00:07:28.050> 4<00:07:28.830> billion<00:07:29.460> this<00:07:30.390> has<00:07:30.630> no

00:07:30.800 --> 00:07:30.810 
it's approximately 4 billion this has no

00:07:30.810 --> 00:07:32.450 
it's approximately 4 billion this has no
relationship<00:07:31.290> to<00:07:31.470> 4<00:07:31.800> billion<00:07:31.980> then<00:07:32.280> they<00:07:32.400> were

00:07:32.450 --> 00:07:32.460 
relationship to 4 billion then they were

00:07:32.460 --> 00:07:34.070 
relationship to 4 billion then they were
obvious<00:07:33.000> way<00:07:33.150> to<00:07:33.180> tell<00:07:33.540> you<00:07:33.600> the<00:07:33.690> two<00:07:33.810> things

00:07:34.070 --> 00:07:34.080 
obvious way to tell you the two things

00:07:34.080 --> 00:07:35.990 
obvious way to tell you the two things
together<00:07:34.260> but<00:07:35.250> when<00:07:35.430> we're<00:07:35.610> using<00:07:35.790> the

00:07:35.990 --> 00:07:36.000 
together but when we're using the

00:07:36.000 --> 00:07:38.450 
together but when we're using the
hexadecimal<00:07:36.360> numbers<00:07:37.050> each<00:07:37.530> character<00:07:38.280> is

00:07:38.450 --> 00:07:38.460 
hexadecimal numbers each character is

00:07:38.460 --> 00:07:41.000 
hexadecimal numbers each character is
simply<00:07:38.880> tied<00:07:39.360> to<00:07:39.750> a<00:07:39.780> block<00:07:40.140> of<00:07:40.320> four<00:07:40.680> binary

00:07:41.000 --> 00:07:41.010 
simply tied to a block of four binary

00:07:41.010 --> 00:07:44.120 
simply tied to a block of four binary
values<00:07:41.660> so<00:07:42.660> this<00:07:42.960> character<00:07:43.410> represents<00:07:44.010> the

00:07:44.120 --> 00:07:44.130 
values so this character represents the

00:07:44.130 --> 00:07:46.310 
values so this character represents the
first<00:07:44.280> four<00:07:44.580> this<00:07:45.270> character<00:07:45.720> the<00:07:45.810> next<00:07:46.080> four

00:07:46.310 --> 00:07:46.320 
first four this character the next four

00:07:46.320 --> 00:07:48.610 
first four this character the next four
and<00:07:46.530> so<00:07:46.770> it's<00:07:46.860> very<00:07:46.980> easy<00:07:47.130> to<00:07:47.910> just<00:07:48.090> walk<00:07:48.270> along

00:07:48.610 --> 00:07:48.620 
and so it's very easy to just walk along

00:07:48.620 --> 00:07:51.290 
and so it's very easy to just walk along
understanding<00:07:49.620> the<00:07:49.740> number<00:07:50.040> in<00:07:50.300> human

00:07:51.290 --> 00:07:51.300 
understanding the number in human

00:07:51.300 --> 00:07:54.290 
understanding the number in human
readable<00:07:51.510> chunks

