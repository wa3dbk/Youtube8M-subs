WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.060 

so<00:00:00.240> let<00:00:00.420> them<00:00:00.570> sell<00:00:00.750> gonna<00:00:00.960> do<00:00:01.110> next<00:00:01.469> the<00:00:01.800> clock

00:00:02.060 --> 00:00:02.070 
so let them sell gonna do next the clock

00:00:02.070 --> 00:00:07.430 
so let them sell gonna do next the clock
is<00:00:02.310> ticking<00:00:05.210> if<00:00:06.210> you're<00:00:07.109> thinking<00:00:07.140> about

00:00:07.430 --> 00:00:07.440 
is ticking if you're thinking about

00:00:07.440 --> 00:00:08.990 
is ticking if you're thinking about
buying<00:00:07.770> or<00:00:08.040> building<00:00:08.130> your<00:00:08.429> next<00:00:08.639> computer

00:00:08.990 --> 00:00:09.000 
buying or building your next computer

00:00:09.000 --> 00:00:10.970 
buying or building your next computer
try<00:00:09.389> to<00:00:09.450> wait<00:00:09.719> for<00:00:09.929> at<00:00:09.990> least<00:00:10.080> a<00:00:10.290> month<00:00:10.469> so<00:00:10.950> far

00:00:10.970 --> 00:00:10.980 
try to wait for at least a month so far

00:00:10.980 --> 00:00:12.560 
try to wait for at least a month so far
in<00:00:11.250> ship<00:00:11.490> whirs<00:00:11.700> we've<00:00:12.030> shown<00:00:12.210> how<00:00:12.330> ARM

00:00:12.560 --> 00:00:12.570 
in ship whirs we've shown how ARM

00:00:12.570 --> 00:00:14.629 
in ship whirs we've shown how ARM
processors<00:00:13.200> from<00:00:13.349> Qualcomm<00:00:13.920> and<00:00:14.099> Vidya<00:00:14.429> and

00:00:14.629 --> 00:00:14.639 
processors from Qualcomm and Vidya and

00:00:14.639 --> 00:00:16.760 
processors from Qualcomm and Vidya and
Samsung<00:00:15.150> are<00:00:15.299> getting<00:00:15.509> exponentially<00:00:16.080> faster

00:00:16.760 --> 00:00:16.770 
Samsung are getting exponentially faster

00:00:16.770 --> 00:00:18.830 
Samsung are getting exponentially faster
every<00:00:17.250> year<00:00:17.279> many<00:00:17.940> people<00:00:18.420> don't<00:00:18.600> need<00:00:18.720> the

00:00:18.830 --> 00:00:18.840 
every year many people don't need the

00:00:18.840 --> 00:00:21.410 
every year many people don't need the
latest<00:00:18.990> x86<00:00:19.890> PC<00:00:20.250> to<00:00:20.369> get<00:00:20.520> stuff<00:00:20.760> done<00:00:21.000> while<00:00:21.390> I

00:00:21.410 --> 00:00:21.420 
latest x86 PC to get stuff done while I

00:00:21.420 --> 00:00:23.000 
latest x86 PC to get stuff done while I
hope<00:00:21.660> to<00:00:21.779> go<00:00:21.930> over<00:00:22.050> what<00:00:22.199> AMD<00:00:22.410> is<00:00:22.619> bringing<00:00:22.890> to

00:00:23.000 --> 00:00:23.010 
hope to go over what AMD is bringing to

00:00:23.010 --> 00:00:25.099 
hope to go over what AMD is bringing to
the<00:00:23.100> table<00:00:23.130> this<00:00:23.699> 18th<00:00:24.180> episode<00:00:24.570> of<00:00:24.689> chip<00:00:24.869> Wars

00:00:25.099 --> 00:00:25.109 
the table this 18th episode of chip Wars

00:00:25.109 --> 00:00:26.540 
the table this 18th episode of chip Wars
is<00:00:25.260> all<00:00:25.380> about<00:00:25.590> the<00:00:25.710> latest<00:00:25.890> features<00:00:26.340> in<00:00:26.460> the

00:00:26.540 --> 00:00:26.550 
is all about the latest features in the

00:00:26.550 --> 00:00:28.460 
is all about the latest features in the
upcoming<00:00:26.699> fourth<00:00:27.210> generation<00:00:27.840> of<00:00:27.960> intel<00:00:28.260> core

00:00:28.460 --> 00:00:28.470 
upcoming fourth generation of intel core

00:00:28.470 --> 00:00:32.209 
upcoming fourth generation of intel core
processors<00:00:30.740> the<00:00:31.740> redesigned

00:00:32.209 --> 00:00:32.219 
processors the redesigned

00:00:32.219 --> 00:00:34.250 
processors the redesigned
microarchitecture<00:00:33.210> of<00:00:33.329> Haswell<00:00:33.809> hints<00:00:34.200> that

00:00:34.250 --> 00:00:34.260 
microarchitecture of Haswell hints that

00:00:34.260 --> 00:00:36.830 
microarchitecture of Haswell hints that
Intel<00:00:34.770> isn't<00:00:35.250> too<00:00:35.430> worried<00:00:35.820> about<00:00:35.910> AMD<00:00:36.390> it's

00:00:36.830 --> 00:00:36.840 
Intel isn't too worried about AMD it's

00:00:36.840 --> 00:00:38.209 
Intel isn't too worried about AMD it's
really<00:00:37.380> worried<00:00:37.680> about<00:00:37.770> the<00:00:38.010> growth<00:00:38.190> of

00:00:38.209 --> 00:00:38.219 
really worried about the growth of

00:00:38.219 --> 00:00:40.729 
really worried about the growth of
arm-based<00:00:38.700> platforms<00:00:39.600> Intel's<00:00:40.379> bread<00:00:40.590> and

00:00:40.729 --> 00:00:40.739 
arm-based platforms Intel's bread and

00:00:40.739 --> 00:00:42.619 
arm-based platforms Intel's bread and
butter<00:00:40.860> has<00:00:41.070> always<00:00:41.340> been<00:00:41.460> the<00:00:41.520> pc<00:00:41.940> market<00:00:41.969> the

00:00:42.619 --> 00:00:42.629 
butter has always been the pc market the

00:00:42.629 --> 00:00:44.360 
butter has always been the pc market the
industry<00:00:43.020> was<00:00:43.170> hoping<00:00:43.559> for<00:00:43.770> a<00:00:43.800> boost<00:00:44.070> from<00:00:44.190> the

00:00:44.360 --> 00:00:44.370 
industry was hoping for a boost from the

00:00:44.370 --> 00:00:46.790 
industry was hoping for a boost from the
recent<00:00:44.730> windows<00:00:45.000> 8<00:00:45.180> launch<00:00:45.390> but<00:00:45.870> instead<00:00:46.260> pc

00:00:46.790 --> 00:00:46.800 
recent windows 8 launch but instead pc

00:00:46.800 --> 00:00:48.650 
recent windows 8 launch but instead pc
shipments<00:00:47.309> had<00:00:47.460> the<00:00:47.610> worst<00:00:47.850> double-digit

00:00:48.650 --> 00:00:48.660 
shipments had the worst double-digit

00:00:48.660 --> 00:00:50.900 
shipments had the worst double-digit
percentage<00:00:49.200> declines<00:00:49.649> in<00:00:49.829> history<00:00:50.430> and<00:00:50.579> this

00:00:50.900 --> 00:00:50.910 
percentage declines in history and this

00:00:50.910 --> 00:00:52.760 
percentage declines in history and this
isn't<00:00:51.270> something<00:00:51.480> new<00:00:51.840> this<00:00:52.140> is<00:00:52.260> actually<00:00:52.680> the

00:00:52.760 --> 00:00:52.770 
isn't something new this is actually the

00:00:52.770 --> 00:00:54.439 
isn't something new this is actually the
fourth<00:00:53.039> quarter<00:00:53.309> in<00:00:53.610> a<00:00:53.670> row<00:00:53.699> that<00:00:53.879> pc

00:00:54.439 --> 00:00:54.449 
fourth quarter in a row that pc

00:00:54.449 --> 00:00:56.389 
fourth quarter in a row that pc
shipments<00:00:54.840> have<00:00:54.899> declined<00:00:55.289> in<00:00:55.620> the<00:00:55.680> past<00:00:55.890> a

00:00:56.389 --> 00:00:56.399 
shipments have declined in the past a

00:00:56.399 --> 00:00:58.279 
shipments have declined in the past a
new<00:00:56.610> Windows<00:00:56.910> operating<00:00:57.059> system<00:00:57.719> correlated

00:00:58.279 --> 00:00:58.289 
new Windows operating system correlated

00:00:58.289 --> 00:01:00.740 
new Windows operating system correlated
with<00:00:58.320> the<00:00:58.530> big<00:00:58.800> uptick<00:00:59.280> in<00:00:59.340> pc<00:00:59.820> sales<00:00:59.850> but<00:01:00.629> the

00:01:00.740 --> 00:01:00.750 
with the big uptick in pc sales but the

00:01:00.750 --> 00:01:03.110 
with the big uptick in pc sales but the
game<00:01:00.960> is<00:01:01.170> changing<00:01:01.440> as<00:01:01.949> power-efficient<00:01:02.910> arm

00:01:03.110 --> 00:01:03.120 
game is changing as power-efficient arm

00:01:03.120 --> 00:01:05.060 
game is changing as power-efficient arm
based<00:01:03.480> system<00:01:03.870> oh<00:01:03.930> no<00:01:03.989> chips<00:01:04.290> are<00:01:04.470> taking<00:01:04.949> over

00:01:05.060 --> 00:01:05.070 
based system oh no chips are taking over

00:01:05.070 --> 00:01:06.859 
based system oh no chips are taking over
thumbs<00:01:05.580> up<00:01:05.880> if<00:01:06.060> you're<00:01:06.150> watching<00:01:06.330> this<00:01:06.540> from<00:01:06.750> a

00:01:06.859 --> 00:01:06.869 
thumbs up if you're watching this from a

00:01:06.869 --> 00:01:08.330 
thumbs up if you're watching this from a
mobile<00:01:07.049> device<00:01:07.170> but<00:01:07.920> if<00:01:08.010> you're<00:01:08.130> subscribed

00:01:08.330 --> 00:01:08.340 
mobile device but if you're subscribed

00:01:08.340 --> 00:01:10.399 
mobile device but if you're subscribed
to<00:01:08.790> this<00:01:08.939> channel<00:01:09.000> like<00:01:09.840> me<00:01:10.110> you<00:01:10.380> probably

00:01:10.399 --> 00:01:10.409 
to this channel like me you probably

00:01:10.409 --> 00:01:12.140 
to this channel like me you probably
want<00:01:11.040> to<00:01:11.100> make<00:01:11.250> sure<00:01:11.280> you're<00:01:11.549> buying<00:01:11.760> into<00:01:12.060> the

00:01:12.140 --> 00:01:12.150 
want to make sure you're buying into the

00:01:12.150 --> 00:01:14.359 
want to make sure you're buying into the
best<00:01:12.390> computer<00:01:12.840> platform<00:01:13.320> for<00:01:13.530> the<00:01:13.650> job<00:01:13.890> while

00:01:14.359 --> 00:01:14.369 
best computer platform for the job while

00:01:14.369 --> 00:01:16.550 
best computer platform for the job while
armed<00:01:14.729> dominates<00:01:15.240> low-power<00:01:15.750> computing<00:01:16.380> and

00:01:16.550 --> 00:01:16.560 
armed dominates low-power computing and

00:01:16.560 --> 00:01:18.230 
armed dominates low-power computing and
AMD<00:01:17.220> is<00:01:17.340> pushing<00:01:17.700> heterogeneous

00:01:18.230 --> 00:01:18.240 
AMD is pushing heterogeneous

00:01:18.240 --> 00:01:20.149 
AMD is pushing heterogeneous
multi-threaded<00:01:19.020> performance<00:01:19.590> in<00:01:19.740> gaming

00:01:20.149 --> 00:01:20.159 
multi-threaded performance in gaming

00:01:20.159 --> 00:01:22.100 
multi-threaded performance in gaming
let's<00:01:20.549> see<00:01:20.790> what<00:01:21.000> Intel<00:01:21.450> the<00:01:21.780> king<00:01:22.020> of

00:01:22.100 --> 00:01:22.110 
let's see what Intel the king of

00:01:22.110 --> 00:01:24.050 
let's see what Intel the king of
efficient<00:01:22.590> single-threaded<00:01:23.189> performance<00:01:23.850> is

00:01:24.050 --> 00:01:24.060 
efficient single-threaded performance is

00:01:24.060 --> 00:01:26.210 
efficient single-threaded performance is
bringing<00:01:24.479> to<00:01:24.509> the<00:01:24.659> market<00:01:24.689> in<00:01:25.080> 2013<00:01:25.710> Intel

00:01:26.210 --> 00:01:26.220 
bringing to the market in 2013 Intel

00:01:26.220 --> 00:01:27.649 
bringing to the market in 2013 Intel
updates<00:01:26.700> its<00:01:26.880> chips<00:01:27.150> on<00:01:27.360> a<00:01:27.390> so-called

00:01:27.649 --> 00:01:27.659 
updates its chips on a so-called

00:01:27.659 --> 00:01:34.819 
updates its chips on a so-called
tick-tock<00:01:28.470> cycle<00:01:33.049> let's<00:01:34.049> break<00:01:34.259> it<00:01:34.409> down<00:01:34.439> a

00:01:34.819 --> 00:01:34.829 
tick-tock cycle let's break it down a

00:01:34.829 --> 00:01:36.230 
tick-tock cycle let's break it down a
tick<00:01:35.220> is<00:01:35.369> a<00:01:35.400> big<00:01:35.670> improvement<00:01:35.790> in

00:01:36.230 --> 00:01:36.240 
tick is a big improvement in

00:01:36.240 --> 00:01:38.510 
tick is a big improvement in
manufacturing<00:01:36.900> process<00:01:37.409> and<00:01:37.590> production<00:01:38.220> for

00:01:38.510 --> 00:01:38.520 
manufacturing process and production for

00:01:38.520 --> 00:01:40.370 
manufacturing process and production for
example<00:01:38.939> I<00:01:39.119> be<00:01:39.299> bridge<00:01:39.540> is<00:01:39.720> built<00:01:39.869> on<00:01:40.079> a<00:01:40.140> more

00:01:40.370 --> 00:01:40.380 
example I be bridge is built on a more

00:01:40.380 --> 00:01:42.440 
example I be bridge is built on a more
power<00:01:40.619> efficient<00:01:41.220> 22<00:01:41.700> nanometer<00:01:42.119> photo

00:01:42.440 --> 00:01:42.450 
power efficient 22 nanometer photo

00:01:42.450 --> 00:01:45.560 
power efficient 22 nanometer photo
lithographic<00:01:42.720> process<00:01:43.380> o<00:01:43.920> Allah<00:01:44.670> it's<00:01:45.210> a<00:01:45.360> new

00:01:45.560 --> 00:01:45.570 
lithographic process o Allah it's a new

00:01:45.570 --> 00:01:47.630 
lithographic process o Allah it's a new
process<00:01:46.110> where<00:01:46.320> a<00:01:46.350> pristine<00:01:46.680> 12<00:01:47.130> inch<00:01:47.280> wafer

00:01:47.630 --> 00:01:47.640 
process where a pristine 12 inch wafer

00:01:47.640 --> 00:01:49.490 
process where a pristine 12 inch wafer
is<00:01:47.759> exposed<00:01:48.180> to<00:01:48.270> patterns<00:01:48.659> of<00:01:48.810> intense<00:01:49.200> light

00:01:49.490 --> 00:01:49.500 
is exposed to patterns of intense light

00:01:49.500 --> 00:01:51.350 
is exposed to patterns of intense light
that<00:01:49.770> etch<00:01:49.979> the<00:01:50.189> intricate<00:01:50.640> chip<00:01:50.820> design<00:01:51.119> into

00:01:51.350 --> 00:01:51.360 
that etch the intricate chip design into

00:01:51.360 --> 00:01:53.450 
that etch the intricate chip design into
the<00:01:51.450> wafer<00:01:51.810> with<00:01:52.140> Ivy<00:01:52.590> Bridge<00:01:52.860> the<00:01:53.280> most

00:01:53.450 --> 00:01:53.460 
the wafer with Ivy Bridge the most

00:01:53.460 --> 00:01:54.980 
the wafer with Ivy Bridge the most
important<00:01:53.909> production<00:01:54.119> innovation<00:01:54.780> is<00:01:54.960> the

00:01:54.980 --> 00:01:54.990 
important production innovation is the

00:01:54.990 --> 00:01:57.319 
important production innovation is the
introduction<00:01:55.500> of<00:01:55.740> 3d<00:01:56.219> transistors<00:01:56.670> by

00:01:57.319 --> 00:01:57.329 
introduction of 3d transistors by

00:01:57.329 --> 00:01:59.780 
introduction of 3d transistors by
stacking<00:01:57.659> transistors<00:01:58.439> until<00:01:59.130> crammed<00:01:59.460> more

00:01:59.780 --> 00:01:59.790 
stacking transistors until crammed more

00:01:59.790 --> 00:02:01.130 
stacking transistors until crammed more
stuff<00:02:00.090> into<00:02:00.420> a<00:02:00.450> smaller<00:02:00.840> more

00:02:01.130 --> 00:02:01.140 
stuff into a smaller more

00:02:01.140 --> 00:02:03.499 
stuff into a smaller more
power-efficient<00:02:02.070> chip<00:02:02.360> architectural<00:02:03.360> e

00:02:03.499 --> 00:02:03.509 
power-efficient chip architectural e

00:02:03.509 --> 00:02:05.359 
power-efficient chip architectural e
since<00:02:03.869> ivy<00:02:04.079> bridge<00:02:04.320> is<00:02:04.439> like<00:02:04.469> its<00:02:04.740> predecessor

00:02:05.359 --> 00:02:05.369 
since ivy bridge is like its predecessor

00:02:05.369 --> 00:02:07.249 
since ivy bridge is like its predecessor
it's<00:02:05.790> backwards<00:02:06.240> compatible<00:02:06.810> with<00:02:06.930> Sandy

00:02:07.249 --> 00:02:07.259 
it's backwards compatible with Sandy

00:02:07.259 --> 00:02:09.290 
it's backwards compatible with Sandy
Bridge<00:02:07.350> sockets<00:02:07.860> and<00:02:08.009> motherboards<00:02:08.489> except

00:02:09.290 --> 00:02:09.300 
Bridge sockets and motherboards except

00:02:09.300 --> 00:02:11.540 
Bridge sockets and motherboards except
it<00:02:09.479> has<00:02:09.629> a<00:02:09.660> better<00:02:10.050> integrated<00:02:10.800> GPU<00:02:11.160> in<00:02:11.459> the

00:02:11.540 --> 00:02:11.550 
it has a better integrated GPU in the

00:02:11.550 --> 00:02:13.730 
it has a better integrated GPU in the
high-end<00:02:11.730> chips<00:02:12.209> on<00:02:12.480> the<00:02:12.930> other<00:02:13.080> hand

00:02:13.730 --> 00:02:13.740 
high-end chips on the other hand

00:02:13.740 --> 00:02:16.100 
high-end chips on the other hand
after<00:02:14.010> a<00:02:14.040> tip<00:02:14.430> comes<00:02:14.730> a<00:02:14.940> top<00:02:15.210> using<00:02:15.780> the<00:02:15.870> same

00:02:16.100 --> 00:02:16.110 
after a tip comes a top using the same

00:02:16.110 --> 00:02:17.510 
after a tip comes a top using the same
production<00:02:16.440> process<00:02:17.010> as<00:02:17.130> the<00:02:17.160> previous

00:02:17.510 --> 00:02:17.520 
production process as the previous

00:02:17.520 --> 00:02:19.490 
production process as the previous
generation<00:02:17.900> except<00:02:18.900> it<00:02:19.050> has<00:02:19.200> a<00:02:19.230> new

00:02:19.490 --> 00:02:19.500 
generation except it has a new

00:02:19.500 --> 00:02:21.830 
generation except it has a new
redesigned<00:02:20.070> microarchitecture<00:02:21.000> Haswell<00:02:21.600> is

00:02:21.830 --> 00:02:21.840 
redesigned microarchitecture Haswell is

00:02:21.840 --> 00:02:23.780 
redesigned microarchitecture Haswell is
a<00:02:21.930> top<00:02:22.260> straight<00:02:22.920> out<00:02:23.040> of<00:02:23.070> Oregon<00:02:23.520> from<00:02:23.700> the

00:02:23.780 --> 00:02:23.790 
a top straight out of Oregon from the

00:02:23.790 --> 00:02:25.730 
a top straight out of Oregon from the
new<00:02:23.910> fabrication<00:02:24.570> facility<00:02:25.080> as<00:02:25.350> well<00:02:25.380> as

00:02:25.730 --> 00:02:25.740 
new fabrication facility as well as

00:02:25.740 --> 00:02:27.650 
new fabrication facility as well as
built<00:02:25.950> using<00:02:26.100> the<00:02:26.310> same<00:02:26.520> 22<00:02:26.940> nanometer<00:02:27.330> 3d

00:02:27.650 --> 00:02:27.660 
built using the same 22 nanometer 3d

00:02:27.660 --> 00:02:29.360 
built using the same 22 nanometer 3d
transistor<00:02:28.170> production<00:02:28.590> process<00:02:29.010> as<00:02:29.190> its

00:02:29.360 --> 00:02:29.370 
transistor production process as its

00:02:29.370 --> 00:02:31.820 
transistor production process as its
predecessor<00:02:29.550> Ivy<00:02:30.300> Bridge<00:02:30.540> so<00:02:31.110> why<00:02:31.380> should<00:02:31.710> I

00:02:31.820 --> 00:02:31.830 
predecessor Ivy Bridge so why should I

00:02:31.830 --> 00:02:34.040 
predecessor Ivy Bridge so why should I
wait<00:02:32.130> for<00:02:32.370> haswell<00:02:32.580> the<00:02:33.120> best<00:02:33.450> way<00:02:33.660> to<00:02:33.720> explain

00:02:34.040 --> 00:02:34.050 
wait for haswell the best way to explain

00:02:34.050 --> 00:02:36.020 
wait for haswell the best way to explain
the<00:02:34.260> new<00:02:34.410> chip<00:02:34.680> design<00:02:35.040> is<00:02:35.250> in<00:02:35.520> terms<00:02:35.730> of<00:02:35.880> how

00:02:36.020 --> 00:02:36.030 
the new chip design is in terms of how

00:02:36.030 --> 00:02:37.640 
the new chip design is in terms of how
it<00:02:36.060> benefits<00:02:36.390> three<00:02:36.930> different<00:02:37.260> types<00:02:37.410> of

00:02:37.640 --> 00:02:37.650 
it benefits three different types of

00:02:37.650 --> 00:02:40.910 
it benefits three different types of
users<00:02:38.030> overclockers<00:02:39.320> enthusiasts<00:02:40.320> like<00:02:40.500> pc

00:02:40.910 --> 00:02:40.920 
users overclockers enthusiasts like pc

00:02:40.920 --> 00:02:43.370 
users overclockers enthusiasts like pc
builders<00:02:41.280> and<00:02:41.520> mobile<00:02:42.270> users<00:02:42.600> if<00:02:42.990> you're<00:02:43.290> an

00:02:43.370 --> 00:02:43.380 
builders and mobile users if you're an

00:02:43.380 --> 00:02:45.560 
builders and mobile users if you're an
overclocker<00:02:43.950> has<00:02:44.610> will<00:02:44.880> might<00:02:45.120> be<00:02:45.300> for<00:02:45.540> you

00:02:45.560 --> 00:02:45.570 
overclocker has will might be for you

00:02:45.570 --> 00:02:47.450 
overclocker has will might be for you
for<00:02:46.050> overclockers<00:02:46.590> heat<00:02:47.010> is<00:02:47.130> always<00:02:47.430> a

00:02:47.450 --> 00:02:47.460 
for overclockers heat is always a

00:02:47.460 --> 00:02:49.220 
for overclockers heat is always a
problem<00:02:47.970> but<00:02:48.240> with<00:02:48.360> an<00:02:48.480> intel<00:02:48.870> designed

00:02:49.220 --> 00:02:49.230 
problem but with an intel designed

00:02:49.230 --> 00:02:50.960 
problem but with an intel designed
voltage<00:02:49.620> regulation<00:02:50.100> module<00:02:50.610> on<00:02:50.700> the<00:02:50.790> chip

00:02:50.960 --> 00:02:50.970 
voltage regulation module on the chip

00:02:50.970 --> 00:02:52.850 
voltage regulation module on the chip
itself<00:02:51.090> it<00:02:51.660> will<00:02:51.900> now<00:02:52.080> be<00:02:52.110> cooled<00:02:52.560> by<00:02:52.740> an

00:02:52.850 --> 00:02:52.860 
itself it will now be cooled by an

00:02:52.860 --> 00:02:54.920 
itself it will now be cooled by an
improved<00:02:53.280> heatsink<00:02:53.790> perhaps<00:02:54.270> allowing<00:02:54.570> for

00:02:54.920 --> 00:02:54.930 
improved heatsink perhaps allowing for

00:02:54.930 --> 00:02:56.390 
improved heatsink perhaps allowing for
cooler<00:02:55.200> performance<00:02:55.860> at<00:02:55.980> higher<00:02:56.130> clock

00:02:56.390 --> 00:02:56.400 
cooler performance at higher clock

00:02:56.400 --> 00:02:58.190 
cooler performance at higher clock
speeds<00:02:56.730> overclocking<00:02:57.600> is<00:02:57.810> all<00:02:57.990> about

00:02:58.190 --> 00:02:58.200 
speeds overclocking is all about

00:02:58.200 --> 00:03:00.080 
speeds overclocking is all about
tweaking<00:02:58.470> the<00:02:58.680> multiplier<00:02:59.250> or<00:02:59.520> the<00:02:59.880> base

00:03:00.080 --> 00:03:00.090 
tweaking the multiplier or the base

00:03:00.090 --> 00:03:02.570 
tweaking the multiplier or the base
clock<00:03:00.390> to<00:03:00.600> get<00:03:00.720> faster<00:03:01.110> performance<00:03:01.290> first<00:03:02.160> an

00:03:02.570 --> 00:03:02.580 
clock to get faster performance first an

00:03:02.580 --> 00:03:04.640 
clock to get faster performance first an
unlocked<00:03:02.940> or<00:03:03.210> multiplier<00:03:03.840> might<00:03:04.230> help<00:03:04.470> the

00:03:04.640 --> 00:03:04.650 
unlocked or multiplier might help the

00:03:04.650 --> 00:03:06.200 
unlocked or multiplier might help the
intel<00:03:05.010> pcs<00:03:05.430> cooled<00:03:05.730> with<00:03:05.850> liquid<00:03:05.910> nitrogen

00:03:06.200 --> 00:03:06.210 
intel pcs cooled with liquid nitrogen

00:03:06.210 --> 00:03:09.080 
intel pcs cooled with liquid nitrogen
beat<00:03:06.960> AMD's<00:03:07.560> overclocking<00:03:08.370> record<00:03:08.760> while

00:03:09.080 --> 00:03:09.090 
beat AMD's overclocking record while

00:03:09.090 --> 00:03:11.030 
beat AMD's overclocking record while
others<00:03:09.510> might<00:03:09.720> get<00:03:09.930> a<00:03:09.960> performance<00:03:10.530> boost<00:03:10.770> and

00:03:11.030 --> 00:03:11.040 
others might get a performance boost and

00:03:11.040 --> 00:03:12.950 
others might get a performance boost and
second<00:03:11.730> for<00:03:11.880> people<00:03:12.180> who<00:03:12.240> want<00:03:12.360> to<00:03:12.510> tweak<00:03:12.660> even

00:03:12.950 --> 00:03:12.960 
second for people who want to tweak even

00:03:12.960 --> 00:03:14.690 
second for people who want to tweak even
more<00:03:13.170> the<00:03:13.590> higher<00:03:13.770> base<00:03:14.010> clock<00:03:14.220> tolerance

00:03:14.690 --> 00:03:14.700 
more the higher base clock tolerance

00:03:14.700 --> 00:03:16.700 
more the higher base clock tolerance
lets<00:03:14.910> people<00:03:15.060> raise<00:03:15.390> clock<00:03:15.720> speeds<00:03:16.020> possibly

00:03:16.700 --> 00:03:16.710 
lets people raise clock speeds possibly

00:03:16.710 --> 00:03:18.320 
lets people raise clock speeds possibly
without<00:03:16.860> the<00:03:17.070> normal<00:03:17.370> instability<00:03:17.910> problems

00:03:18.320 --> 00:03:18.330 
without the normal instability problems

00:03:18.330 --> 00:03:20.450 
without the normal instability problems
now<00:03:18.780> if<00:03:18.960> you're<00:03:19.140> a<00:03:19.170> PC<00:03:19.620> builder<00:03:19.980> who<00:03:20.100> just

00:03:20.450 --> 00:03:20.460 
now if you're a PC builder who just

00:03:20.460 --> 00:03:22.250 
now if you're a PC builder who just
wants<00:03:20.730> a<00:03:20.820> future-proof<00:03:21.210> computer<00:03:21.990> with

00:03:22.250 --> 00:03:22.260 
wants a future-proof computer with

00:03:22.260 --> 00:03:24.770 
wants a future-proof computer with
Haswell<00:03:22.770> Intel<00:03:23.310> is<00:03:23.520> also<00:03:23.910> introducing<00:03:24.600> a<00:03:24.750> new

00:03:24.770 --> 00:03:24.780 
Haswell Intel is also introducing a new

00:03:24.780 --> 00:03:26.930 
Haswell Intel is also introducing a new
socket<00:03:25.290> or<00:03:25.620> in<00:03:25.860> other<00:03:26.010> words<00:03:26.070> a<00:03:26.460> new<00:03:26.730> housing

00:03:26.930 --> 00:03:26.940 
socket or in other words a new housing

00:03:26.940 --> 00:03:29.000 
socket or in other words a new housing
for<00:03:27.300> the<00:03:27.360> chip<00:03:27.600> intel<00:03:28.080> has<00:03:28.110> traditionally

00:03:29.000 --> 00:03:29.010 
for the chip intel has traditionally

00:03:29.010 --> 00:03:30.590 
for the chip intel has traditionally
supported<00:03:29.160> these<00:03:29.610> sockets<00:03:29.940> tiles<00:03:30.450> because

00:03:30.590 --> 00:03:30.600 
supported these sockets tiles because

00:03:30.600 --> 00:03:32.690 
supported these sockets tiles because
they<00:03:30.900> let<00:03:31.080> enthusiasts<00:03:31.650> customize<00:03:32.160> their<00:03:32.370> pc

00:03:32.690 --> 00:03:32.700 
they let enthusiasts customize their pc

00:03:32.700 --> 00:03:35.090 
they let enthusiasts customize their pc
builds<00:03:33.090> if<00:03:33.300> a<00:03:33.570> problem<00:03:33.960> happens<00:03:34.410> it's<00:03:34.710> easier

00:03:35.090 --> 00:03:35.100 
builds if a problem happens it's easier

00:03:35.100 --> 00:03:36.860 
builds if a problem happens it's easier
to<00:03:35.220> remove<00:03:35.490> and<00:03:35.700> replace<00:03:35.820> the<00:03:36.150> chip<00:03:36.360> future

00:03:36.860 --> 00:03:36.870 
to remove and replace the chip future

00:03:36.870 --> 00:03:38.360 
to remove and replace the chip future
motherboards<00:03:37.410> will<00:03:37.560> have<00:03:37.740> to<00:03:37.860> support<00:03:38.190> these

00:03:38.360 --> 00:03:38.370 
motherboards will have to support these

00:03:38.370 --> 00:03:40.190 
motherboards will have to support these
updated<00:03:38.850> sockets<00:03:39.300> for<00:03:39.450> desktops<00:03:39.900> and

00:03:40.190 --> 00:03:40.200 
updated sockets for desktops and

00:03:40.200 --> 00:03:42.680 
updated sockets for desktops and
high-performance<00:03:41.010> notebooks<00:03:41.430> also<00:03:42.210> has<00:03:42.450> well

00:03:42.680 --> 00:03:42.690 
high-performance notebooks also has well

00:03:42.690 --> 00:03:44.840 
high-performance notebooks also has well
supports<00:03:43.110> a<00:03:43.200> much<00:03:43.440> faster<00:03:43.710> version<00:03:44.130> of<00:03:44.400> USB

00:03:44.840 --> 00:03:44.850 
supports a much faster version of USB

00:03:44.850 --> 00:03:47.270 
supports a much faster version of USB
3.0<00:03:45.330> but<00:03:45.750> the<00:03:45.900> best<00:03:46.230> features<00:03:46.680> of<00:03:46.710> Haswell

00:03:47.270 --> 00:03:47.280 
3.0 but the best features of Haswell

00:03:47.280 --> 00:03:49.490 
3.0 but the best features of Haswell
will<00:03:47.490> benefit<00:03:48.000> mobile<00:03:48.390> users<00:03:48.810> and<00:03:49.050> sleek

00:03:49.490 --> 00:03:49.500 
will benefit mobile users and sleek

00:03:49.500 --> 00:03:51.950 
will benefit mobile users and sleek
all-in-one<00:03:50.100> pcs<00:03:50.640> first<00:03:51.240> the<00:03:51.420> chip<00:03:51.660> can<00:03:51.840> now

00:03:51.950 --> 00:03:51.960 
all-in-one pcs first the chip can now

00:03:51.960 --> 00:03:54.110 
all-in-one pcs first the chip can now
idle<00:03:52.320> at<00:03:52.500> 800<00:03:53.100> megahertz<00:03:53.370> reducing<00:03:54.000> power

00:03:54.110 --> 00:03:54.120 
idle at 800 megahertz reducing power

00:03:54.120 --> 00:03:56.540 
idle at 800 megahertz reducing power
consumption<00:03:54.660> second<00:03:55.500> a<00:03:55.590> better<00:03:55.860> integrated

00:03:56.540 --> 00:03:56.550 
consumption second a better integrated

00:03:56.550 --> 00:03:58.520 
consumption second a better integrated
GPU<00:03:56.880> will<00:03:57.180> better<00:03:57.420> handle<00:03:57.840> high<00:03:57.990> resolution

00:03:58.520 --> 00:03:58.530 
GPU will better handle high resolution

00:03:58.530 --> 00:04:00.110 
GPU will better handle high resolution
screens<00:03:58.860> in<00:03:59.010> notebooks<00:03:59.340> and<00:03:59.490> desktops<00:03:59.580> in

00:04:00.110 --> 00:04:00.120 
screens in notebooks and desktops in

00:04:00.120 --> 00:04:02.300 
screens in notebooks and desktops in
notebooks<00:04:00.960> where<00:04:01.170> battery<00:04:01.500> life<00:04:01.650> is<00:04:01.680> crucial

00:04:02.300 --> 00:04:02.310 
notebooks where battery life is crucial

00:04:02.310 --> 00:04:04.280 
notebooks where battery life is crucial
the<00:04:02.580> lack<00:04:02.790> of<00:04:02.820> a<00:04:03.030> separate<00:04:03.390> discrete<00:04:03.750> GPU

00:04:04.280 --> 00:04:04.290 
the lack of a separate discrete GPU

00:04:04.290 --> 00:04:05.660 
the lack of a separate discrete GPU
should<00:04:04.530> mean<00:04:04.710> less<00:04:04.890> power<00:04:05.190> consumption

00:04:05.660 --> 00:04:05.670 
should mean less power consumption

00:04:05.670 --> 00:04:07.790 
should mean less power consumption
overall<00:04:06.270> this<00:04:06.600> will<00:04:06.840> especially<00:04:07.200> benefit

00:04:07.790 --> 00:04:07.800 
overall this will especially benefit

00:04:07.800 --> 00:04:09.590 
overall this will especially benefit
smaller<00:04:08.130> form<00:04:08.460> factor<00:04:08.490> computers<00:04:09.210> than<00:04:09.330> most

00:04:09.590 --> 00:04:09.600 
smaller form factor computers than most

00:04:09.600 --> 00:04:11.480 
smaller form factor computers than most
where<00:04:09.930> batteries<00:04:10.350> are<00:04:10.470> necessarily<00:04:11.010> smaller

00:04:11.480 --> 00:04:11.490 
where batteries are necessarily smaller

00:04:11.490 --> 00:04:13.820 
where batteries are necessarily smaller
but<00:04:11.910> not<00:04:12.120> all<00:04:12.330> haswell's<00:04:12.810> are<00:04:12.990> created<00:04:13.500> equal

00:04:13.820 --> 00:04:13.830 
but not all haswell's are created equal

00:04:13.830 --> 00:04:15.650 
but not all haswell's are created equal
the<00:04:14.100> cheaper<00:04:14.520> chips<00:04:14.730> will<00:04:14.970> have<00:04:15.120> the<00:04:15.240> basic

00:04:15.650 --> 00:04:15.660 
the cheaper chips will have the basic

00:04:15.660 --> 00:04:18.229 
the cheaper chips will have the basic
gt1<00:04:16.320> GPU<00:04:16.859> while<00:04:17.160> most<00:04:17.400> models<00:04:17.880> will<00:04:18.030> have<00:04:18.150> the

00:04:18.229 --> 00:04:18.239 
gt1 GPU while most models will have the

00:04:18.239 --> 00:04:21.410 
gt1 GPU while most models will have the
mid-range<00:04:18.660> gt2<00:04:19.410> GPU<00:04:19.980> most<00:04:20.400> PC<00:04:20.850> builders<00:04:21.239> and

00:04:21.410 --> 00:04:21.420 
mid-range gt2 GPU most PC builders and

00:04:21.420 --> 00:04:23.270 
mid-range gt2 GPU most PC builders and
overclockers<00:04:22.049> should<00:04:22.260> probably<00:04:22.830> look<00:04:22.979> at<00:04:23.160> one

00:04:23.270 --> 00:04:23.280 
overclockers should probably look at one

00:04:23.280 --> 00:04:24.530 
overclockers should probably look at one
of<00:04:23.310> these<00:04:23.520> models<00:04:23.970> since<00:04:24.120> they'll<00:04:24.360> be<00:04:24.450> running

00:04:24.530 --> 00:04:24.540 
of these models since they'll be running

00:04:24.540 --> 00:04:26.870 
of these models since they'll be running
more<00:04:24.780> powerful<00:04:25.290> dedicated<00:04:25.770> GPUs<00:04:26.160> anyway<00:04:26.520> for

00:04:26.870 --> 00:04:26.880 
more powerful dedicated GPUs anyway for

00:04:26.880 --> 00:04:28.230 
more powerful dedicated GPUs anyway for
mobile<00:04:27.300> users<00:04:27.510> thus<00:04:27.960> we

00:04:28.230 --> 00:04:28.240 
mobile users thus we

00:04:28.240 --> 00:04:30.809 
mobile users thus we
spot<00:04:28.509> will<00:04:28.720> be<00:04:28.840> the<00:04:28.960> gt3<00:04:29.620> and<00:04:29.740> above<00:04:29.979> with<00:04:30.400> 40

00:04:30.809 --> 00:04:30.819 
spot will be the gt3 and above with 40

00:04:30.819 --> 00:04:32.999 
spot will be the gt3 and above with 40
execution<00:04:31.539> units<00:04:31.930> until<00:04:32.349> targeted<00:04:32.889> the

00:04:32.999 --> 00:04:33.009 
execution units until targeted the

00:04:33.009 --> 00:04:35.460 
execution units until targeted the
performance<00:04:33.639> of<00:04:33.759> invidious<00:04:34.150> GT<00:04:34.539> 650m<00:04:34.900> the

00:04:35.460 --> 00:04:35.470 
performance of invidious GT 650m the

00:04:35.470 --> 00:04:37.680 
performance of invidious GT 650m the
top-of-the-line<00:04:36.039> gt3<00:04:36.819> II<00:04:36.970> will<00:04:37.330> even

00:04:37.680 --> 00:04:37.690 
top-of-the-line gt3 II will even

00:04:37.690 --> 00:04:39.450 
top-of-the-line gt3 II will even
integrate<00:04:38.020> some<00:04:38.410> deer<00:04:38.620> and<00:04:38.830> to<00:04:39.069> act<00:04:39.220> like<00:04:39.340> a

00:04:39.450 --> 00:04:39.460 
integrate some deer and to act like a

00:04:39.460 --> 00:04:40.800 
integrate some deer and to act like a
fourth<00:04:39.819> level<00:04:40.030> of<00:04:40.240> cash<00:04:40.479> in<00:04:40.690> the<00:04:40.720> chips

00:04:40.800 --> 00:04:40.810 
fourth level of cash in the chips

00:04:40.810 --> 00:04:42.870 
fourth level of cash in the chips
designed<00:04:41.199> for<00:04:41.560> all-in-one<00:04:42.039> desktop<00:04:42.490> PCs

00:04:42.870 --> 00:04:42.880 
designed for all-in-one desktop PCs

00:04:42.880 --> 00:04:45.480 
designed for all-in-one desktop PCs
taking<00:04:43.599> a<00:04:43.660> page<00:04:43.870> from<00:04:43.900> AMD<00:04:44.380> strategy<00:04:45.160> this

00:04:45.480 --> 00:04:45.490 
taking a page from AMD strategy this

00:04:45.490 --> 00:04:47.430 
taking a page from AMD strategy this
DRAM<00:04:45.940> should<00:04:46.210> act<00:04:46.389> like<00:04:46.509> a<00:04:46.599> unified<00:04:47.080> pool<00:04:47.319> of

00:04:47.430 --> 00:04:47.440 
DRAM should act like a unified pool of

00:04:47.440 --> 00:04:49.439 
DRAM should act like a unified pool of
memory<00:04:47.740> for<00:04:47.979> the<00:04:48.069> CPU<00:04:48.490> and<00:04:48.639> integrated<00:04:49.120> GPU

00:04:49.439 --> 00:04:49.449 
memory for the CPU and integrated GPU

00:04:49.449 --> 00:04:51.749 
memory for the CPU and integrated GPU
but<00:04:49.810> these<00:04:50.020> top-of-the-line<00:04:50.650> Haswell<00:04:51.220> GPUs

00:04:51.749 --> 00:04:51.759 
but these top-of-the-line Haswell GPUs

00:04:51.759 --> 00:04:54.629 
but these top-of-the-line Haswell GPUs
will<00:04:52.000> only<00:04:52.240> be<00:04:52.569> available<00:04:52.870> in<00:04:53.259> a<00:04:53.380> BGA<00:04:53.919> socket

00:04:54.629 --> 00:04:54.639 
will only be available in a BGA socket

00:04:54.639 --> 00:04:56.610 
will only be available in a BGA socket
ray<00:04:55.060> what<00:04:55.479> is<00:04:55.599> this<00:04:55.780> socket<00:04:56.050> thing<00:04:56.380> you<00:04:56.560> speak

00:04:56.610 --> 00:04:56.620 
ray what is this socket thing you speak

00:04:56.620 --> 00:04:58.710 
ray what is this socket thing you speak
of<00:04:56.979> the<00:04:57.340> socket<00:04:57.789> is<00:04:57.849> the<00:04:57.970> thing<00:04:58.150> that<00:04:58.300> connects

00:04:58.710 --> 00:04:58.720 
of the socket is the thing that connects

00:04:58.720 --> 00:05:00.960 
of the socket is the thing that connects
the<00:04:58.870> processor<00:04:59.440> to<00:04:59.590> the<00:04:59.680> circuit<00:05:00.039> board<00:05:00.190> a<00:05:00.460> BGA

00:05:00.960 --> 00:05:00.970 
the processor to the circuit board a BGA

00:05:00.970 --> 00:05:03.180 
the processor to the circuit board a BGA
socket<00:05:01.569> is<00:05:01.690> actually<00:05:02.110> soldered<00:05:02.409> onto<00:05:02.800> the

00:05:03.180 --> 00:05:03.190 
socket is actually soldered onto the

00:05:03.190 --> 00:05:04.710 
socket is actually soldered onto the
circuit<00:05:03.550> board<00:05:03.729> so<00:05:04.120> while<00:05:04.300> this<00:05:04.389> limits

00:05:04.710 --> 00:05:04.720 
circuit board so while this limits

00:05:04.720 --> 00:05:06.629 
circuit board so while this limits
customization<00:05:05.530> and<00:05:05.710> raises<00:05:06.130> the<00:05:06.250> cost<00:05:06.400> of

00:05:06.629 --> 00:05:06.639 
customization and raises the cost of

00:05:06.639 --> 00:05:08.189 
customization and raises the cost of
maintenance<00:05:07.000> in<00:05:07.270> the<00:05:07.300> future<00:05:07.389> it's<00:05:07.930> actually

00:05:08.189 --> 00:05:08.199 
maintenance in the future it's actually

00:05:08.199 --> 00:05:10.200 
maintenance in the future it's actually
a<00:05:08.590> good<00:05:08.860> thing<00:05:08.919> for<00:05:09.220> thin<00:05:09.729> and<00:05:09.909> light

00:05:10.200 --> 00:05:10.210 
a good thing for thin and light

00:05:10.210 --> 00:05:12.029 
a good thing for thin and light
computers<00:05:10.840> because<00:05:11.229> the<00:05:11.349> design<00:05:11.620> results

00:05:12.029 --> 00:05:12.039 
computers because the design results

00:05:12.039 --> 00:05:13.830 
computers because the design results
unless<00:05:12.159> he<00:05:12.550> and<00:05:12.759> more<00:05:13.030> precise<00:05:13.419> voltage

00:05:13.830 --> 00:05:13.840 
unless he and more precise voltage

00:05:13.840 --> 00:05:16.050 
unless he and more precise voltage
regulation<00:05:14.349> there<00:05:14.860> will<00:05:15.009> be<00:05:15.159> one<00:05:15.370> version<00:05:15.819> for

00:05:16.050 --> 00:05:16.060 
regulation there will be one version for

00:05:16.060 --> 00:05:18.450 
regulation there will be one version for
all<00:05:16.270> in<00:05:16.449> one<00:05:16.630> desktop<00:05:16.930> builds<00:05:17.680> one<00:05:18.130> version

00:05:18.450 --> 00:05:18.460 
all in one desktop builds one version

00:05:18.460 --> 00:05:20.670 
all in one desktop builds one version
for<00:05:18.639> ultrabook<00:05:19.120> style<00:05:19.360> laptops<00:05:19.900> and<00:05:20.229> one

00:05:20.670 --> 00:05:20.680 
for ultrabook style laptops and one

00:05:20.680 --> 00:05:23.129 
for ultrabook style laptops and one
extremely<00:05:21.370> efficient<00:05:21.940> ship<00:05:22.120> possibly<00:05:22.960> for

00:05:23.129 --> 00:05:23.139 
extremely efficient ship possibly for

00:05:23.139 --> 00:05:25.140 
extremely efficient ship possibly for
tablets<00:05:23.530> but<00:05:24.009> Intel<00:05:24.340> is<00:05:24.460> working<00:05:24.789> on<00:05:24.880> more

00:05:25.140 --> 00:05:25.150 
tablets but Intel is working on more

00:05:25.150 --> 00:05:27.390 
tablets but Intel is working on more
than<00:05:25.330> just<00:05:25.389> hardware<00:05:25.990> for<00:05:26.349> developers<00:05:26.919> until

00:05:27.390 --> 00:05:27.400 
than just hardware for developers until

00:05:27.400 --> 00:05:29.010 
than just hardware for developers until
release<00:05:27.669> some<00:05:27.849> software<00:05:28.300> extensions<00:05:28.810> to

00:05:29.010 --> 00:05:29.020 
release some software extensions to

00:05:29.020 --> 00:05:31.379 
release some software extensions to
entice<00:05:29.380> game<00:05:29.710> developers<00:05:30.280> to<00:05:30.460> optimize<00:05:31.030> games

00:05:31.379 --> 00:05:31.389 
entice game developers to optimize games

00:05:31.389 --> 00:05:34.170 
entice game developers to optimize games
for<00:05:31.659> has<00:05:31.840> well<00:05:32.050> integrated<00:05:32.560> GPUs<00:05:33.190> for<00:05:33.669> DirectX

00:05:34.170 --> 00:05:34.180 
for has well integrated GPUs for DirectX

00:05:34.180 --> 00:05:36.360 
for has well integrated GPUs for DirectX
Haswell<00:05:34.870> supports<00:05:35.289> order<00:05:35.650> independent

00:05:36.360 --> 00:05:36.370 
Haswell supports order independent

00:05:36.370 --> 00:05:38.219 
Haswell supports order independent
transparency<00:05:37.150> for<00:05:37.360> game<00:05:37.539> developers<00:05:38.050> to

00:05:38.219 --> 00:05:38.229 
transparency for game developers to

00:05:38.229 --> 00:05:40.320 
transparency for game developers to
design<00:05:38.500> more<00:05:38.710> complex<00:05:39.310> scenes<00:05:39.610> using<00:05:39.849> smoked

00:05:40.320 --> 00:05:40.330 
design more complex scenes using smoked

00:05:40.330 --> 00:05:42.600 
design more complex scenes using smoked
air<00:05:40.659> or<00:05:41.020> foliage<00:05:41.590> without<00:05:42.039> taxing<00:05:42.520> the

00:05:42.600 --> 00:05:42.610 
air or foliage without taxing the

00:05:42.610 --> 00:05:44.459 
air or foliage without taxing the
limited<00:05:42.940> memory<00:05:43.120> lastly<00:05:43.870> Haswell<00:05:44.259> has

00:05:44.459 --> 00:05:44.469 
limited memory lastly Haswell has

00:05:44.469 --> 00:05:46.339 
limited memory lastly Haswell has
hardware<00:05:45.009> graphic<00:05:45.430> support<00:05:45.820> for<00:05:46.000> direct3d

00:05:46.339 --> 00:05:46.349 
hardware graphic support for direct3d

00:05:46.349 --> 00:05:49.680 
hardware graphic support for direct3d
11.1<00:05:47.349> and<00:05:47.650> opengl<00:05:48.190> 4.0<00:05:48.699> but<00:05:49.090> what<00:05:49.270> if<00:05:49.300> i<00:05:49.479> just

00:05:49.680 --> 00:05:49.690 
11.1 and opengl 4.0 but what if i just

00:05:49.690 --> 00:05:51.870 
11.1 and opengl 4.0 but what if i just
want<00:05:49.870> a<00:05:49.960> computer<00:05:50.409> now<00:05:50.680> should<00:05:51.250> i<00:05:51.340> get<00:05:51.520> an<00:05:51.639> ID

00:05:51.870 --> 00:05:51.880 
want a computer now should i get an ID

00:05:51.880 --> 00:05:53.520 
want a computer now should i get an ID
bridge<00:05:52.210> system<00:05:52.419> or<00:05:52.930> wait<00:05:53.139> for<00:05:53.169> haswell

00:05:53.520 --> 00:05:53.530 
bridge system or wait for haswell

00:05:53.530 --> 00:05:56.010 
bridge system or wait for haswell
overall<00:05:54.370> Haswell<00:05:54.880> is<00:05:55.060> expected<00:05:55.539> to<00:05:55.630> have<00:05:55.780> up

00:05:56.010 --> 00:05:56.020 
overall Haswell is expected to have up

00:05:56.020 --> 00:05:58.020 
overall Haswell is expected to have up
to<00:05:56.169> a<00:05:56.229> 15-percent<00:05:57.039> performance<00:05:57.550> boost<00:05:57.759> and

00:05:58.020 --> 00:05:58.030 
to a 15-percent performance boost and

00:05:58.030 --> 00:05:59.909 
to a 15-percent performance boost and
you<00:05:58.330> don't<00:05:58.509> have<00:05:58.599> to<00:05:58.750> wait<00:05:58.900> too<00:05:59.080> long<00:05:59.259> on<00:05:59.530> june

00:05:59.909 --> 00:05:59.919 
you don't have to wait too long on june

00:05:59.919 --> 00:06:01.709 
you don't have to wait too long on june
third<00:06:00.250> intel<00:06:00.729> is<00:06:00.759> announcing<00:06:01.300> the<00:06:01.419> chips

00:06:01.709 --> 00:06:01.719 
third intel is announcing the chips

00:06:01.719 --> 00:06:03.809 
third intel is announcing the chips
designed<00:06:01.930> for<00:06:02.349> powerful<00:06:02.680> desktops<00:06:03.310> and<00:06:03.610> quad

00:06:03.809 --> 00:06:03.819 
designed for powerful desktops and quad

00:06:03.819 --> 00:06:05.820 
designed for powerful desktops and quad
core<00:06:04.090> notebooks<00:06:04.539> I<00:06:04.810> could<00:06:05.349> release<00:06:05.680> an

00:06:05.820 --> 00:06:05.830 
core notebooks I could release an

00:06:05.830 --> 00:06:07.680 
core notebooks I could release an
updated<00:06:06.310> chip<00:06:06.520> wars<00:06:06.729> episode<00:06:07.150> that<00:06:07.330> compares

00:06:07.680 --> 00:06:07.690 
updated chip wars episode that compares

00:06:07.690 --> 00:06:09.570 
updated chip wars episode that compares
Intel<00:06:08.139> and<00:06:08.349> AMD<00:06:08.469> ships<00:06:09.099> once<00:06:09.400> they're

00:06:09.570 --> 00:06:09.580 
Intel and AMD ships once they're

00:06:09.580 --> 00:06:11.129 
Intel and AMD ships once they're
released<00:06:09.699> let<00:06:10.360> me<00:06:10.479> know<00:06:10.599> by<00:06:10.780> hitting<00:06:10.810> that

00:06:11.129 --> 00:06:11.139 
released let me know by hitting that

00:06:11.139 --> 00:06:12.839 
released let me know by hitting that
like<00:06:11.319> and<00:06:11.530> subscribe<00:06:11.949> button<00:06:12.250> and<00:06:12.370> here's<00:06:12.789> a

00:06:12.839 --> 00:06:12.849 
like and subscribe button and here's a

00:06:12.849 --> 00:06:14.520 
like and subscribe button and here's a
customary<00:06:13.419> shout<00:06:13.719> out<00:06:13.870> to<00:06:13.990> all<00:06:14.020> the<00:06:14.169> latest

00:06:14.520 --> 00:06:14.530 
customary shout out to all the latest

00:06:14.530 --> 00:06:16.620 
customary shout out to all the latest
subscribers<00:06:15.190> I<00:06:15.430> always<00:06:15.880> try<00:06:16.090> to<00:06:16.150> make<00:06:16.240> videos

00:06:16.620 --> 00:06:16.630 
subscribers I always try to make videos

00:06:16.630 --> 00:06:18.120 
subscribers I always try to make videos
that<00:06:16.780> answer<00:06:16.810> any<00:06:17.319> questions<00:06:17.979> or<00:06:18.069> feedback

00:06:18.120 --> 00:06:18.130 
that answer any questions or feedback

00:06:18.130 --> 00:06:20.040 
that answer any questions or feedback
you<00:06:18.699> leave<00:06:18.849> below<00:06:19.120> in<00:06:19.270> the<00:06:19.360> comment<00:06:19.719> section

00:06:20.040 --> 00:06:20.050 
you leave below in the comment section

00:06:20.050 --> 00:06:22.140 
you leave below in the comment section
this<00:06:20.440> will<00:06:20.650> be<00:06:20.800> an<00:06:21.039> important<00:06:21.580> year<00:06:21.819> for<00:06:21.880> the

00:06:22.140 --> 00:06:22.150 
this will be an important year for the

00:06:22.150 --> 00:06:24.240 
this will be an important year for the
pc<00:06:22.539> industry<00:06:22.719> because<00:06:23.530> for<00:06:23.710> a<00:06:23.740> growing<00:06:23.979> number

00:06:24.240 --> 00:06:24.250 
pc industry because for a growing number

00:06:24.250 --> 00:06:26.969 
pc industry because for a growing number
of<00:06:24.430> people<00:06:24.520> are<00:06:25.300> based<00:06:25.810> mobile<00:06:26.139> devices<00:06:26.710> might

00:06:26.969 --> 00:06:26.979 
of people are based mobile devices might

00:06:26.979 --> 00:06:29.279 
of people are based mobile devices might
be<00:06:27.159> good<00:06:27.400> enough<00:06:27.669> AMD<00:06:28.389> got<00:06:28.569> a<00:06:28.599> lifeline<00:06:29.110> with

00:06:29.279 --> 00:06:29.289 
be good enough AMD got a lifeline with

00:06:29.289 --> 00:06:31.170 
be good enough AMD got a lifeline with
contracts<00:06:29.830> to<00:06:29.979> supply<00:06:30.099> the<00:06:30.340> next<00:06:30.729> generation

00:06:31.170 --> 00:06:31.180 
contracts to supply the next generation

00:06:31.180 --> 00:06:33.570 
contracts to supply the next generation
of<00:06:31.240> gaming<00:06:31.479> consoles<00:06:32.020> for<00:06:32.469> Intel<00:06:32.919> the<00:06:33.310> clock

00:06:33.570 --> 00:06:33.580 
of gaming consoles for Intel the clock

00:06:33.580 --> 00:06:35.420 
of gaming consoles for Intel the clock
is<00:06:33.819> definitely<00:06:34.030> ticking

00:06:35.420 --> 00:06:35.430 
is definitely ticking

00:06:35.430 --> 00:06:37.490 
is definitely ticking
you

